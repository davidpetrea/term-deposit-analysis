2023-06-16 10:08:37,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:08:37,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:08:37,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:08:37,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:08:39,540:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 10:08:40,076:INFO:PyCaret ClassificationExperiment
2023-06-16 10:08:40,076:INFO:Logging name: clf-default-name
2023-06-16 10:08:40,076:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:08:40,076:INFO:version 3.0.2
2023-06-16 10:08:40,076:INFO:Initializing setup()
2023-06-16 10:08:40,076:INFO:self.USI: 8c78
2023-06-16 10:08:40,076:INFO:self._variable_keys: {'target_param', 'y', 'logging_param', 'memory', 'idx', 'html_param', 'n_jobs_param', 'X_test', 'pipeline', 'fold_groups_param', 'USI', 'data', 'y_train', 'is_multiclass', 'gpu_param', 'gpu_n_jobs_param', 'fold_shuffle_param', '_available_plots', 'seed', 'X', 'exp_name_log', 'y_test', 'fold_generator', 'log_plots_param', 'fix_imbalance', '_ml_usecase', 'X_train', 'exp_id'}
2023-06-16 10:08:40,076:INFO:Checking environment
2023-06-16 10:08:40,076:INFO:python_version: 3.9.7
2023-06-16 10:08:40,077:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:08:40,077:INFO:machine: AMD64
2023-06-16 10:08:40,077:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:08:40,077:INFO:Memory: svmem(total=17120436224, available=4485386240, percent=73.8, used=12635049984, free=4485386240)
2023-06-16 10:08:40,077:INFO:Physical Core: 4
2023-06-16 10:08:40,077:INFO:Logical Core: 4
2023-06-16 10:08:40,078:INFO:Checking libraries
2023-06-16 10:08:40,078:INFO:System:
2023-06-16 10:08:40,078:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:08:40,078:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:08:40,078:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:08:40,078:INFO:PyCaret required dependencies:
2023-06-16 10:08:40,078:INFO:                 pip: 21.2.3
2023-06-16 10:08:40,078:INFO:          setuptools: 57.4.0
2023-06-16 10:08:40,078:INFO:             pycaret: 3.0.2
2023-06-16 10:08:40,078:INFO:             IPython: 7.28.0
2023-06-16 10:08:40,079:INFO:          ipywidgets: 8.0.6
2023-06-16 10:08:40,079:INFO:                tqdm: 4.64.0
2023-06-16 10:08:40,079:INFO:               numpy: 1.21.2
2023-06-16 10:08:40,079:INFO:              pandas: 1.3.5
2023-06-16 10:08:40,079:INFO:              jinja2: 3.1.2
2023-06-16 10:08:40,079:INFO:               scipy: 1.7.1
2023-06-16 10:08:40,079:INFO:              joblib: 1.2.0
2023-06-16 10:08:40,079:INFO:             sklearn: 1.1.0
2023-06-16 10:08:40,079:INFO:                pyod: 1.0.9
2023-06-16 10:08:40,079:INFO:            imblearn: 0.9.1
2023-06-16 10:08:40,079:INFO:   category_encoders: 2.6.1
2023-06-16 10:08:40,080:INFO:            lightgbm: 3.3.5
2023-06-16 10:08:40,080:INFO:               numba: 0.57.0
2023-06-16 10:08:40,080:INFO:            requests: 2.31.0
2023-06-16 10:08:40,080:INFO:          matplotlib: 3.4.3
2023-06-16 10:08:40,080:INFO:          scikitplot: 0.3.7
2023-06-16 10:08:40,080:INFO:         yellowbrick: 1.5
2023-06-16 10:08:40,080:INFO:              plotly: 5.8.0
2023-06-16 10:08:40,080:INFO:             kaleido: 0.2.1
2023-06-16 10:08:40,080:INFO:         statsmodels: 0.14.0
2023-06-16 10:08:40,080:INFO:              sktime: 0.17.0
2023-06-16 10:08:40,080:INFO:               tbats: 1.1.3
2023-06-16 10:08:40,080:INFO:            pmdarima: 2.0.3
2023-06-16 10:08:40,080:INFO:              psutil: 5.9.0
2023-06-16 10:08:40,080:INFO:PyCaret optional dependencies:
2023-06-16 10:08:40,105:INFO:                shap: Not installed
2023-06-16 10:08:40,105:INFO:           interpret: Not installed
2023-06-16 10:08:40,105:INFO:                umap: Not installed
2023-06-16 10:08:40,105:INFO:    pandas_profiling: Not installed
2023-06-16 10:08:40,106:INFO:  explainerdashboard: Not installed
2023-06-16 10:08:40,106:INFO:             autoviz: Not installed
2023-06-16 10:08:40,106:INFO:           fairlearn: Not installed
2023-06-16 10:08:40,106:INFO:             xgboost: Not installed
2023-06-16 10:08:40,106:INFO:            catboost: Not installed
2023-06-16 10:08:40,106:INFO:              kmodes: Not installed
2023-06-16 10:08:40,106:INFO:             mlxtend: Not installed
2023-06-16 10:08:40,106:INFO:       statsforecast: Not installed
2023-06-16 10:08:40,106:INFO:        tune_sklearn: Not installed
2023-06-16 10:08:40,106:INFO:                 ray: Not installed
2023-06-16 10:08:40,106:INFO:            hyperopt: Not installed
2023-06-16 10:08:40,106:INFO:              optuna: Not installed
2023-06-16 10:08:40,106:INFO:               skopt: Not installed
2023-06-16 10:08:40,106:INFO:              mlflow: Not installed
2023-06-16 10:08:40,106:INFO:              gradio: Not installed
2023-06-16 10:08:40,106:INFO:             fastapi: Not installed
2023-06-16 10:08:40,106:INFO:             uvicorn: Not installed
2023-06-16 10:08:40,106:INFO:              m2cgen: Not installed
2023-06-16 10:08:40,106:INFO:           evidently: Not installed
2023-06-16 10:08:40,107:INFO:               fugue: Not installed
2023-06-16 10:08:40,107:INFO:           streamlit: Not installed
2023-06-16 10:08:40,107:INFO:             prophet: Not installed
2023-06-16 10:08:40,107:INFO:None
2023-06-16 10:08:40,107:INFO:Set up data.
2023-06-16 10:08:40,173:INFO:Set up train/test split.
2023-06-16 10:08:40,199:INFO:Set up index.
2023-06-16 10:08:40,201:INFO:Set up folding strategy.
2023-06-16 10:08:40,201:INFO:Assigning column types.
2023-06-16 10:08:40,214:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:08:40,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,474:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,509:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:08:40,562:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,688:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:08:40,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,866:INFO:Preparing preprocessing pipeline...
2023-06-16 10:08:40,868:INFO:Set up simple imputation.
2023-06-16 10:08:40,881:INFO:Set up encoding of ordinal features.
2023-06-16 10:08:40,891:INFO:Set up encoding of categorical features.
2023-06-16 10:08:40,893:INFO:Set up column name cleaning.
2023-06-16 10:08:41,800:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:08:41,851:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'month',
                                                                    'day_of_week',
                                                                    'poutcome'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:08:41,851:INFO:Creating final display dataframe.
2023-06-16 10:08:42,837:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (41185, 55)
5   Transformed train set shape       (28829, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              8c78
2023-06-16 10:08:42,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:42,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:43,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:43,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:43,045:INFO:setup() successfully completed in 2.97s...............
2023-06-16 10:09:48,589:INFO:Initializing compare_models()
2023-06-16 10:09:48,589:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 10:09:48,590:INFO:Checking exceptions
2023-06-16 10:09:48,602:INFO:Preparing display monitor
2023-06-16 10:09:48,712:INFO:Initializing Logistic Regression
2023-06-16 10:09:48,712:INFO:Total runtime is 0.0 minutes
2023-06-16 10:09:48,717:INFO:SubProcess create_model() called ==================================
2023-06-16 10:09:48,718:INFO:Initializing create_model()
2023-06-16 10:09:48,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:09:48,718:INFO:Checking exceptions
2023-06-16 10:09:48,718:INFO:Importing libraries
2023-06-16 10:09:48,718:INFO:Copying training dataset
2023-06-16 10:09:48,753:INFO:Defining folds
2023-06-16 10:09:48,753:INFO:Declaring metric variables
2023-06-16 10:09:48,758:INFO:Importing untrained model
2023-06-16 10:09:48,763:INFO:Logistic Regression Imported successfully
2023-06-16 10:09:48,772:INFO:Starting cross validation
2023-06-16 10:09:48,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:10:04,728:INFO:Calculating mean and std
2023-06-16 10:10:04,731:INFO:Creating metrics dataframe
2023-06-16 10:10:04,768:INFO:Uploading results into container
2023-06-16 10:10:04,768:INFO:Uploading model into container now
2023-06-16 10:10:04,769:INFO:_master_model_container: 1
2023-06-16 10:10:04,769:INFO:_display_container: 2
2023-06-16 10:10:04,769:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 10:10:04,769:INFO:create_model() successfully completed......................................
2023-06-16 10:10:04,834:INFO:SubProcess create_model() end ==================================
2023-06-16 10:10:04,834:INFO:Creating metrics dataframe
2023-06-16 10:10:04,850:INFO:Initializing K Neighbors Classifier
2023-06-16 10:10:04,850:INFO:Total runtime is 0.26896678606669105 minutes
2023-06-16 10:10:04,854:INFO:SubProcess create_model() called ==================================
2023-06-16 10:10:04,855:INFO:Initializing create_model()
2023-06-16 10:10:04,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:10:04,855:INFO:Checking exceptions
2023-06-16 10:10:04,855:INFO:Importing libraries
2023-06-16 10:10:04,855:INFO:Copying training dataset
2023-06-16 10:10:04,873:INFO:Defining folds
2023-06-16 10:10:04,873:INFO:Declaring metric variables
2023-06-16 10:10:04,878:INFO:Importing untrained model
2023-06-16 10:10:04,882:INFO:K Neighbors Classifier Imported successfully
2023-06-16 10:10:04,892:INFO:Starting cross validation
2023-06-16 10:10:04,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:10:12,036:INFO:Calculating mean and std
2023-06-16 10:10:12,038:INFO:Creating metrics dataframe
2023-06-16 10:10:12,080:INFO:Uploading results into container
2023-06-16 10:10:12,081:INFO:Uploading model into container now
2023-06-16 10:10:12,081:INFO:_master_model_container: 2
2023-06-16 10:10:12,081:INFO:_display_container: 2
2023-06-16 10:10:12,082:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 10:10:12,082:INFO:create_model() successfully completed......................................
2023-06-16 10:10:12,152:INFO:SubProcess create_model() end ==================================
2023-06-16 10:10:12,152:INFO:Creating metrics dataframe
2023-06-16 10:10:12,171:INFO:Initializing Naive Bayes
2023-06-16 10:10:12,172:INFO:Total runtime is 0.3909999807675679 minutes
2023-06-16 10:10:12,177:INFO:SubProcess create_model() called ==================================
2023-06-16 10:10:12,177:INFO:Initializing create_model()
2023-06-16 10:10:12,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:10:12,177:INFO:Checking exceptions
2023-06-16 10:10:12,177:INFO:Importing libraries
2023-06-16 10:10:12,177:INFO:Copying training dataset
2023-06-16 10:10:12,208:INFO:Defining folds
2023-06-16 10:10:12,209:INFO:Declaring metric variables
2023-06-16 10:10:12,213:INFO:Importing untrained model
2023-06-16 10:10:12,218:INFO:Naive Bayes Imported successfully
2023-06-16 10:10:12,227:INFO:Starting cross validation
2023-06-16 10:10:12,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:10:15,105:INFO:Calculating mean and std
2023-06-16 10:10:15,106:INFO:Creating metrics dataframe
2023-06-16 10:10:15,148:INFO:Uploading results into container
2023-06-16 10:10:15,149:INFO:Uploading model into container now
2023-06-16 10:10:15,149:INFO:_master_model_container: 3
2023-06-16 10:10:15,149:INFO:_display_container: 2
2023-06-16 10:10:15,150:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-16 10:10:15,150:INFO:create_model() successfully completed......................................
2023-06-16 10:10:15,212:INFO:SubProcess create_model() end ==================================
2023-06-16 10:10:15,212:INFO:Creating metrics dataframe
2023-06-16 10:10:15,228:INFO:Initializing Decision Tree Classifier
2023-06-16 10:10:15,229:INFO:Total runtime is 0.4419586300849914 minutes
2023-06-16 10:10:15,233:INFO:SubProcess create_model() called ==================================
2023-06-16 10:10:15,233:INFO:Initializing create_model()
2023-06-16 10:10:15,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:10:15,233:INFO:Checking exceptions
2023-06-16 10:10:15,234:INFO:Importing libraries
2023-06-16 10:10:15,234:INFO:Copying training dataset
2023-06-16 10:10:15,250:INFO:Defining folds
2023-06-16 10:10:15,250:INFO:Declaring metric variables
2023-06-16 10:10:15,255:INFO:Importing untrained model
2023-06-16 10:10:15,260:INFO:Decision Tree Classifier Imported successfully
2023-06-16 10:10:15,274:INFO:Starting cross validation
2023-06-16 10:10:15,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:12:53,814:INFO:Calculating mean and std
2023-06-16 10:12:53,816:INFO:Creating metrics dataframe
2023-06-16 10:12:53,880:INFO:Uploading results into container
2023-06-16 10:12:53,881:INFO:Uploading model into container now
2023-06-16 10:12:53,881:INFO:_master_model_container: 4
2023-06-16 10:12:53,881:INFO:_display_container: 2
2023-06-16 10:12:53,882:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best')
2023-06-16 10:12:53,882:INFO:create_model() successfully completed......................................
2023-06-16 10:12:53,948:INFO:SubProcess create_model() end ==================================
2023-06-16 10:12:53,948:INFO:Creating metrics dataframe
2023-06-16 10:12:53,965:INFO:Initializing SVM - Linear Kernel
2023-06-16 10:12:53,966:INFO:Total runtime is 3.087575344244639 minutes
2023-06-16 10:12:53,971:INFO:SubProcess create_model() called ==================================
2023-06-16 10:12:53,971:INFO:Initializing create_model()
2023-06-16 10:12:53,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:12:53,972:INFO:Checking exceptions
2023-06-16 10:12:53,972:INFO:Importing libraries
2023-06-16 10:12:53,972:INFO:Copying training dataset
2023-06-16 10:12:53,994:INFO:Defining folds
2023-06-16 10:12:54,010:INFO:Declaring metric variables
2023-06-16 10:12:54,014:INFO:Importing untrained model
2023-06-16 10:12:54,040:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 10:12:54,050:INFO:Starting cross validation
2023-06-16 10:12:54,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:12:56,268:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:56,837:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:56,946:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:56,974:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:58,674:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:58,918:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:59,181:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:59,680:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:13:00,349:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:13:00,881:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:13:00,890:INFO:Calculating mean and std
2023-06-16 10:13:00,891:INFO:Creating metrics dataframe
2023-06-16 10:13:00,963:INFO:Uploading results into container
2023-06-16 10:13:00,963:INFO:Uploading model into container now
2023-06-16 10:13:00,964:INFO:_master_model_container: 5
2023-06-16 10:13:00,964:INFO:_display_container: 2
2023-06-16 10:13:00,964:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 10:13:00,964:INFO:create_model() successfully completed......................................
2023-06-16 10:13:01,026:INFO:SubProcess create_model() end ==================================
2023-06-16 10:13:01,026:INFO:Creating metrics dataframe
2023-06-16 10:13:01,043:INFO:Initializing Ridge Classifier
2023-06-16 10:13:01,044:INFO:Total runtime is 3.2055419723192853 minutes
2023-06-16 10:13:01,049:INFO:SubProcess create_model() called ==================================
2023-06-16 10:13:01,049:INFO:Initializing create_model()
2023-06-16 10:13:01,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:13:01,049:INFO:Checking exceptions
2023-06-16 10:13:01,050:INFO:Importing libraries
2023-06-16 10:13:01,050:INFO:Copying training dataset
2023-06-16 10:13:01,067:INFO:Defining folds
2023-06-16 10:13:01,067:INFO:Declaring metric variables
2023-06-16 10:13:01,083:INFO:Importing untrained model
2023-06-16 10:13:01,088:INFO:Ridge Classifier Imported successfully
2023-06-16 10:13:01,096:INFO:Starting cross validation
2023-06-16 10:13:01,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:13:02,000:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,002:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,016:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,030:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,786:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,816:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,008:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,013:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,550:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,626:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,635:INFO:Calculating mean and std
2023-06-16 10:13:03,637:INFO:Creating metrics dataframe
2023-06-16 10:13:03,705:INFO:Uploading results into container
2023-06-16 10:13:03,706:INFO:Uploading model into container now
2023-06-16 10:13:03,706:INFO:_master_model_container: 6
2023-06-16 10:13:03,706:INFO:_display_container: 2
2023-06-16 10:13:03,706:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=420, solver='auto', tol=0.001)
2023-06-16 10:13:03,706:INFO:create_model() successfully completed......................................
2023-06-16 10:13:03,768:INFO:SubProcess create_model() end ==================================
2023-06-16 10:13:03,768:INFO:Creating metrics dataframe
2023-06-16 10:13:03,785:INFO:Initializing Random Forest Classifier
2023-06-16 10:13:03,786:INFO:Total runtime is 3.251241958141327 minutes
2023-06-16 10:13:03,790:INFO:SubProcess create_model() called ==================================
2023-06-16 10:13:03,790:INFO:Initializing create_model()
2023-06-16 10:13:03,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:13:03,791:INFO:Checking exceptions
2023-06-16 10:13:03,791:INFO:Importing libraries
2023-06-16 10:13:03,791:INFO:Copying training dataset
2023-06-16 10:13:03,808:INFO:Defining folds
2023-06-16 10:13:03,808:INFO:Declaring metric variables
2023-06-16 10:13:03,812:INFO:Importing untrained model
2023-06-16 10:13:03,817:INFO:Random Forest Classifier Imported successfully
2023-06-16 10:13:03,827:INFO:Starting cross validation
2023-06-16 10:13:03,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:22:42,445:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 10:25:33,497:INFO:Calculating mean and std
2023-06-16 10:25:33,499:INFO:Creating metrics dataframe
2023-06-16 10:25:33,592:INFO:Uploading results into container
2023-06-16 10:25:33,593:INFO:Uploading model into container now
2023-06-16 10:25:33,593:INFO:_master_model_container: 7
2023-06-16 10:25:33,594:INFO:_display_container: 2
2023-06-16 10:25:33,594:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 10:25:33,594:INFO:create_model() successfully completed......................................
2023-06-16 10:25:33,666:INFO:SubProcess create_model() end ==================================
2023-06-16 10:25:33,666:INFO:Creating metrics dataframe
2023-06-16 10:25:33,687:INFO:Initializing Quadratic Discriminant Analysis
2023-06-16 10:25:33,687:INFO:Total runtime is 15.749579592545826 minutes
2023-06-16 10:25:33,691:INFO:SubProcess create_model() called ==================================
2023-06-16 10:25:33,692:INFO:Initializing create_model()
2023-06-16 10:25:33,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:25:33,692:INFO:Checking exceptions
2023-06-16 10:25:33,692:INFO:Importing libraries
2023-06-16 10:25:33,692:INFO:Copying training dataset
2023-06-16 10:25:33,711:INFO:Defining folds
2023-06-16 10:25:33,712:INFO:Declaring metric variables
2023-06-16 10:25:33,716:INFO:Importing untrained model
2023-06-16 10:25:33,721:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-16 10:25:33,737:INFO:Starting cross validation
2023-06-16 10:25:33,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:25:34,632:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:34,678:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:34,687:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:34,760:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:36,014:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:36,047:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:36,143:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:36,149:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:37,115:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:37,198:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:37,627:INFO:Calculating mean and std
2023-06-16 10:25:37,630:INFO:Creating metrics dataframe
2023-06-16 10:25:37,731:INFO:Uploading results into container
2023-06-16 10:25:37,732:INFO:Uploading model into container now
2023-06-16 10:25:37,732:INFO:_master_model_container: 8
2023-06-16 10:25:37,733:INFO:_display_container: 2
2023-06-16 10:25:37,733:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-16 10:25:37,733:INFO:create_model() successfully completed......................................
2023-06-16 10:25:37,816:INFO:SubProcess create_model() end ==================================
2023-06-16 10:25:37,816:INFO:Creating metrics dataframe
2023-06-16 10:25:37,838:INFO:Initializing Ada Boost Classifier
2023-06-16 10:25:37,838:INFO:Total runtime is 15.81877317825953 minutes
2023-06-16 10:25:37,844:INFO:SubProcess create_model() called ==================================
2023-06-16 10:25:37,844:INFO:Initializing create_model()
2023-06-16 10:25:37,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:25:37,844:INFO:Checking exceptions
2023-06-16 10:25:37,845:INFO:Importing libraries
2023-06-16 10:25:37,845:INFO:Copying training dataset
2023-06-16 10:25:37,880:INFO:Defining folds
2023-06-16 10:25:37,881:INFO:Declaring metric variables
2023-06-16 10:25:37,887:INFO:Importing untrained model
2023-06-16 10:25:37,892:INFO:Ada Boost Classifier Imported successfully
2023-06-16 10:25:37,904:INFO:Starting cross validation
2023-06-16 10:25:37,906:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:31:23,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:31:23,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:31:23,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:31:23,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:31:24,287:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 10:31:24,630:INFO:PyCaret ClassificationExperiment
2023-06-16 10:31:24,630:INFO:Logging name: clf-default-name
2023-06-16 10:31:24,630:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:31:24,630:INFO:version 3.0.2
2023-06-16 10:31:24,630:INFO:Initializing setup()
2023-06-16 10:31:24,631:INFO:self.USI: 5546
2023-06-16 10:31:24,631:INFO:self._variable_keys: {'n_jobs_param', 'y_test', 'pipeline', 'logging_param', '_ml_usecase', 'idx', 'exp_name_log', 'is_multiclass', 'seed', '_available_plots', 'exp_id', 'y', 'y_train', 'X_train', 'X_test', 'fold_generator', 'html_param', 'data', 'fold_groups_param', 'fold_shuffle_param', 'X', 'log_plots_param', 'fix_imbalance', 'gpu_n_jobs_param', 'USI', 'gpu_param', 'memory', 'target_param'}
2023-06-16 10:31:24,631:INFO:Checking environment
2023-06-16 10:31:24,631:INFO:python_version: 3.9.7
2023-06-16 10:31:24,631:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:31:24,631:INFO:machine: AMD64
2023-06-16 10:31:24,631:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:31:24,631:INFO:Memory: svmem(total=17120436224, available=6315499520, percent=63.1, used=10804936704, free=6315499520)
2023-06-16 10:31:24,631:INFO:Physical Core: 4
2023-06-16 10:31:24,631:INFO:Logical Core: 4
2023-06-16 10:31:24,631:INFO:Checking libraries
2023-06-16 10:31:24,631:INFO:System:
2023-06-16 10:31:24,631:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:31:24,632:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:31:24,632:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:31:24,632:INFO:PyCaret required dependencies:
2023-06-16 10:31:24,632:INFO:                 pip: 21.2.3
2023-06-16 10:31:24,632:INFO:          setuptools: 57.4.0
2023-06-16 10:31:24,632:INFO:             pycaret: 3.0.2
2023-06-16 10:31:24,632:INFO:             IPython: 7.28.0
2023-06-16 10:31:24,632:INFO:          ipywidgets: 8.0.6
2023-06-16 10:31:24,632:INFO:                tqdm: 4.64.0
2023-06-16 10:31:24,632:INFO:               numpy: 1.21.2
2023-06-16 10:31:24,632:INFO:              pandas: 1.3.5
2023-06-16 10:31:24,632:INFO:              jinja2: 3.1.2
2023-06-16 10:31:24,632:INFO:               scipy: 1.7.1
2023-06-16 10:31:24,632:INFO:              joblib: 1.2.0
2023-06-16 10:31:24,632:INFO:             sklearn: 1.1.0
2023-06-16 10:31:24,633:INFO:                pyod: 1.0.9
2023-06-16 10:31:24,633:INFO:            imblearn: 0.9.1
2023-06-16 10:31:24,633:INFO:   category_encoders: 2.6.1
2023-06-16 10:31:24,633:INFO:            lightgbm: 3.3.5
2023-06-16 10:31:24,633:INFO:               numba: 0.57.0
2023-06-16 10:31:24,633:INFO:            requests: 2.31.0
2023-06-16 10:31:24,633:INFO:          matplotlib: 3.4.3
2023-06-16 10:31:24,633:INFO:          scikitplot: 0.3.7
2023-06-16 10:31:24,633:INFO:         yellowbrick: 1.5
2023-06-16 10:31:24,633:INFO:              plotly: 5.8.0
2023-06-16 10:31:24,633:INFO:             kaleido: 0.2.1
2023-06-16 10:31:24,633:INFO:         statsmodels: 0.14.0
2023-06-16 10:31:24,633:INFO:              sktime: 0.17.0
2023-06-16 10:31:24,633:INFO:               tbats: 1.1.3
2023-06-16 10:31:24,633:INFO:            pmdarima: 2.0.3
2023-06-16 10:31:24,633:INFO:              psutil: 5.9.0
2023-06-16 10:31:24,633:INFO:PyCaret optional dependencies:
2023-06-16 10:31:24,678:INFO:                shap: Not installed
2023-06-16 10:31:24,678:INFO:           interpret: Not installed
2023-06-16 10:31:24,678:INFO:                umap: Not installed
2023-06-16 10:31:24,678:INFO:    pandas_profiling: Not installed
2023-06-16 10:31:24,678:INFO:  explainerdashboard: Not installed
2023-06-16 10:31:24,678:INFO:             autoviz: Not installed
2023-06-16 10:31:24,678:INFO:           fairlearn: Not installed
2023-06-16 10:31:24,678:INFO:             xgboost: Not installed
2023-06-16 10:31:24,679:INFO:            catboost: Not installed
2023-06-16 10:31:24,679:INFO:              kmodes: Not installed
2023-06-16 10:31:24,679:INFO:             mlxtend: Not installed
2023-06-16 10:31:24,679:INFO:       statsforecast: Not installed
2023-06-16 10:31:24,679:INFO:        tune_sklearn: Not installed
2023-06-16 10:31:24,679:INFO:                 ray: Not installed
2023-06-16 10:31:24,679:INFO:            hyperopt: Not installed
2023-06-16 10:31:24,679:INFO:              optuna: Not installed
2023-06-16 10:31:24,679:INFO:               skopt: Not installed
2023-06-16 10:31:24,679:INFO:              mlflow: Not installed
2023-06-16 10:31:24,680:INFO:              gradio: Not installed
2023-06-16 10:31:24,680:INFO:             fastapi: Not installed
2023-06-16 10:31:24,680:INFO:             uvicorn: Not installed
2023-06-16 10:31:24,680:INFO:              m2cgen: Not installed
2023-06-16 10:31:24,680:INFO:           evidently: Not installed
2023-06-16 10:31:24,680:INFO:               fugue: Not installed
2023-06-16 10:31:24,680:INFO:           streamlit: Not installed
2023-06-16 10:31:24,680:INFO:             prophet: Not installed
2023-06-16 10:31:24,681:INFO:None
2023-06-16 10:31:24,681:INFO:Set up data.
2023-06-16 10:31:24,806:INFO:Set up train/test split.
2023-06-16 10:31:24,835:INFO:Set up index.
2023-06-16 10:31:24,837:INFO:Set up folding strategy.
2023-06-16 10:31:24,837:INFO:Assigning column types.
2023-06-16 10:31:39,043:INFO:PyCaret ClassificationExperiment
2023-06-16 10:31:39,043:INFO:Logging name: clf-default-name
2023-06-16 10:31:39,043:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:31:39,043:INFO:version 3.0.2
2023-06-16 10:31:39,043:INFO:Initializing setup()
2023-06-16 10:31:39,043:INFO:self.USI: 77ff
2023-06-16 10:31:39,043:INFO:self._variable_keys: {'n_jobs_param', 'y_test', 'pipeline', 'logging_param', '_ml_usecase', 'idx', 'exp_name_log', 'is_multiclass', 'seed', '_available_plots', 'exp_id', 'y', 'y_train', 'X_train', 'X_test', 'fold_generator', 'html_param', 'data', 'fold_groups_param', 'fold_shuffle_param', 'X', 'log_plots_param', 'fix_imbalance', 'gpu_n_jobs_param', 'USI', 'gpu_param', 'memory', 'target_param'}
2023-06-16 10:31:39,043:INFO:Checking environment
2023-06-16 10:31:39,044:INFO:python_version: 3.9.7
2023-06-16 10:31:39,044:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:31:39,044:INFO:machine: AMD64
2023-06-16 10:31:39,044:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:31:39,044:INFO:Memory: svmem(total=17120436224, available=6380437504, percent=62.7, used=10739998720, free=6380437504)
2023-06-16 10:31:39,044:INFO:Physical Core: 4
2023-06-16 10:31:39,044:INFO:Logical Core: 4
2023-06-16 10:31:39,044:INFO:Checking libraries
2023-06-16 10:31:39,044:INFO:System:
2023-06-16 10:31:39,044:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:31:39,044:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:31:39,044:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:31:39,044:INFO:PyCaret required dependencies:
2023-06-16 10:31:39,044:INFO:                 pip: 21.2.3
2023-06-16 10:31:39,044:INFO:          setuptools: 57.4.0
2023-06-16 10:31:39,044:INFO:             pycaret: 3.0.2
2023-06-16 10:31:39,044:INFO:             IPython: 7.28.0
2023-06-16 10:31:39,044:INFO:          ipywidgets: 8.0.6
2023-06-16 10:31:39,044:INFO:                tqdm: 4.64.0
2023-06-16 10:31:39,045:INFO:               numpy: 1.21.2
2023-06-16 10:31:39,045:INFO:              pandas: 1.3.5
2023-06-16 10:31:39,045:INFO:              jinja2: 3.1.2
2023-06-16 10:31:39,045:INFO:               scipy: 1.7.1
2023-06-16 10:31:39,045:INFO:              joblib: 1.2.0
2023-06-16 10:31:39,045:INFO:             sklearn: 1.1.0
2023-06-16 10:31:39,045:INFO:                pyod: 1.0.9
2023-06-16 10:31:39,045:INFO:            imblearn: 0.9.1
2023-06-16 10:31:39,045:INFO:   category_encoders: 2.6.1
2023-06-16 10:31:39,045:INFO:            lightgbm: 3.3.5
2023-06-16 10:31:39,045:INFO:               numba: 0.57.0
2023-06-16 10:31:39,045:INFO:            requests: 2.31.0
2023-06-16 10:31:39,045:INFO:          matplotlib: 3.4.3
2023-06-16 10:31:39,045:INFO:          scikitplot: 0.3.7
2023-06-16 10:31:39,045:INFO:         yellowbrick: 1.5
2023-06-16 10:31:39,045:INFO:              plotly: 5.8.0
2023-06-16 10:31:39,045:INFO:             kaleido: 0.2.1
2023-06-16 10:31:39,045:INFO:         statsmodels: 0.14.0
2023-06-16 10:31:39,045:INFO:              sktime: 0.17.0
2023-06-16 10:31:39,045:INFO:               tbats: 1.1.3
2023-06-16 10:31:39,045:INFO:            pmdarima: 2.0.3
2023-06-16 10:31:39,046:INFO:              psutil: 5.9.0
2023-06-16 10:31:39,046:INFO:PyCaret optional dependencies:
2023-06-16 10:31:39,046:INFO:                shap: Not installed
2023-06-16 10:31:39,046:INFO:           interpret: Not installed
2023-06-16 10:31:39,046:INFO:                umap: Not installed
2023-06-16 10:31:39,046:INFO:    pandas_profiling: Not installed
2023-06-16 10:31:39,046:INFO:  explainerdashboard: Not installed
2023-06-16 10:31:39,046:INFO:             autoviz: Not installed
2023-06-16 10:31:39,046:INFO:           fairlearn: Not installed
2023-06-16 10:31:39,046:INFO:             xgboost: Not installed
2023-06-16 10:31:39,046:INFO:            catboost: Not installed
2023-06-16 10:31:39,046:INFO:              kmodes: Not installed
2023-06-16 10:31:39,046:INFO:             mlxtend: Not installed
2023-06-16 10:31:39,046:INFO:       statsforecast: Not installed
2023-06-16 10:31:39,046:INFO:        tune_sklearn: Not installed
2023-06-16 10:31:39,046:INFO:                 ray: Not installed
2023-06-16 10:31:39,046:INFO:            hyperopt: Not installed
2023-06-16 10:31:39,046:INFO:              optuna: Not installed
2023-06-16 10:31:39,046:INFO:               skopt: Not installed
2023-06-16 10:31:39,046:INFO:              mlflow: Not installed
2023-06-16 10:31:39,046:INFO:              gradio: Not installed
2023-06-16 10:31:39,047:INFO:             fastapi: Not installed
2023-06-16 10:31:39,047:INFO:             uvicorn: Not installed
2023-06-16 10:31:39,047:INFO:              m2cgen: Not installed
2023-06-16 10:31:39,047:INFO:           evidently: Not installed
2023-06-16 10:31:39,047:INFO:               fugue: Not installed
2023-06-16 10:31:39,047:INFO:           streamlit: Not installed
2023-06-16 10:31:39,047:INFO:             prophet: Not installed
2023-06-16 10:31:39,047:INFO:None
2023-06-16 10:31:39,047:INFO:Set up data.
2023-06-16 10:31:39,115:INFO:Set up train/test split.
2023-06-16 10:31:39,143:INFO:Set up index.
2023-06-16 10:31:39,145:INFO:Set up folding strategy.
2023-06-16 10:31:39,145:INFO:Assigning column types.
2023-06-16 10:31:39,158:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:31:39,240:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,243:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,414:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,446:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:31:39,499:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,640:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:31:39,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,839:INFO:Preparing preprocessing pipeline...
2023-06-16 10:31:39,841:INFO:Set up simple imputation.
2023-06-16 10:31:39,852:INFO:Set up encoding of ordinal features.
2023-06-16 10:31:39,861:INFO:Set up encoding of categorical features.
2023-06-16 10:31:39,861:INFO:Set up imbalanced handling.
2023-06-16 10:31:39,862:INFO:Set up column name cleaning.
2023-06-16 10:31:40,819:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:31:40,872:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:31:40,872:INFO:Creating final display dataframe.
2023-06-16 10:31:41,814:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              77ff
2023-06-16 10:31:41,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:41,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:42,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:42,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:42,022:INFO:setup() successfully completed in 3.05s...............
2023-06-16 10:32:47,287:INFO:PyCaret ClassificationExperiment
2023-06-16 10:32:47,288:INFO:Logging name: clf-default-name
2023-06-16 10:32:47,288:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:32:47,288:INFO:version 3.0.2
2023-06-16 10:32:47,288:INFO:Initializing setup()
2023-06-16 10:32:47,288:INFO:self.USI: af05
2023-06-16 10:32:47,288:INFO:self._variable_keys: {'n_jobs_param', 'y_test', 'pipeline', 'logging_param', '_ml_usecase', 'idx', 'exp_name_log', 'is_multiclass', 'seed', '_available_plots', 'exp_id', 'y', 'y_train', 'X_train', 'X_test', 'fold_generator', 'html_param', 'data', 'fold_groups_param', 'fold_shuffle_param', 'X', 'log_plots_param', 'fix_imbalance', 'gpu_n_jobs_param', 'USI', 'gpu_param', 'memory', 'target_param'}
2023-06-16 10:32:47,288:INFO:Checking environment
2023-06-16 10:32:47,288:INFO:python_version: 3.9.7
2023-06-16 10:32:47,288:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:32:47,289:INFO:machine: AMD64
2023-06-16 10:32:47,289:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:32:47,289:INFO:Memory: svmem(total=17120436224, available=6265946112, percent=63.4, used=10854490112, free=6265946112)
2023-06-16 10:32:47,289:INFO:Physical Core: 4
2023-06-16 10:32:47,289:INFO:Logical Core: 4
2023-06-16 10:32:47,289:INFO:Checking libraries
2023-06-16 10:32:47,289:INFO:System:
2023-06-16 10:32:47,289:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:32:47,289:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:32:47,289:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:32:47,289:INFO:PyCaret required dependencies:
2023-06-16 10:32:47,289:INFO:                 pip: 21.2.3
2023-06-16 10:32:47,289:INFO:          setuptools: 57.4.0
2023-06-16 10:32:47,289:INFO:             pycaret: 3.0.2
2023-06-16 10:32:47,289:INFO:             IPython: 7.28.0
2023-06-16 10:32:47,289:INFO:          ipywidgets: 8.0.6
2023-06-16 10:32:47,289:INFO:                tqdm: 4.64.0
2023-06-16 10:32:47,290:INFO:               numpy: 1.21.2
2023-06-16 10:32:47,290:INFO:              pandas: 1.3.5
2023-06-16 10:32:47,290:INFO:              jinja2: 3.1.2
2023-06-16 10:32:47,290:INFO:               scipy: 1.7.1
2023-06-16 10:32:47,290:INFO:              joblib: 1.2.0
2023-06-16 10:32:47,290:INFO:             sklearn: 1.1.0
2023-06-16 10:32:47,290:INFO:                pyod: 1.0.9
2023-06-16 10:32:47,290:INFO:            imblearn: 0.9.1
2023-06-16 10:32:47,290:INFO:   category_encoders: 2.6.1
2023-06-16 10:32:47,290:INFO:            lightgbm: 3.3.5
2023-06-16 10:32:47,290:INFO:               numba: 0.57.0
2023-06-16 10:32:47,290:INFO:            requests: 2.31.0
2023-06-16 10:32:47,290:INFO:          matplotlib: 3.4.3
2023-06-16 10:32:47,290:INFO:          scikitplot: 0.3.7
2023-06-16 10:32:47,290:INFO:         yellowbrick: 1.5
2023-06-16 10:32:47,290:INFO:              plotly: 5.8.0
2023-06-16 10:32:47,290:INFO:             kaleido: 0.2.1
2023-06-16 10:32:47,291:INFO:         statsmodels: 0.14.0
2023-06-16 10:32:47,291:INFO:              sktime: 0.17.0
2023-06-16 10:32:47,291:INFO:               tbats: 1.1.3
2023-06-16 10:32:47,291:INFO:            pmdarima: 2.0.3
2023-06-16 10:32:47,291:INFO:              psutil: 5.9.0
2023-06-16 10:32:47,291:INFO:PyCaret optional dependencies:
2023-06-16 10:32:47,291:INFO:                shap: Not installed
2023-06-16 10:32:47,291:INFO:           interpret: Not installed
2023-06-16 10:32:47,291:INFO:                umap: Not installed
2023-06-16 10:32:47,291:INFO:    pandas_profiling: Not installed
2023-06-16 10:32:47,291:INFO:  explainerdashboard: Not installed
2023-06-16 10:32:47,291:INFO:             autoviz: Not installed
2023-06-16 10:32:47,291:INFO:           fairlearn: Not installed
2023-06-16 10:32:47,291:INFO:             xgboost: Not installed
2023-06-16 10:32:47,291:INFO:            catboost: Not installed
2023-06-16 10:32:47,291:INFO:              kmodes: Not installed
2023-06-16 10:32:47,291:INFO:             mlxtend: Not installed
2023-06-16 10:32:47,291:INFO:       statsforecast: Not installed
2023-06-16 10:32:47,291:INFO:        tune_sklearn: Not installed
2023-06-16 10:32:47,291:INFO:                 ray: Not installed
2023-06-16 10:32:47,293:INFO:            hyperopt: Not installed
2023-06-16 10:32:47,293:INFO:              optuna: Not installed
2023-06-16 10:32:47,293:INFO:               skopt: Not installed
2023-06-16 10:32:47,293:INFO:              mlflow: Not installed
2023-06-16 10:32:47,293:INFO:              gradio: Not installed
2023-06-16 10:32:47,293:INFO:             fastapi: Not installed
2023-06-16 10:32:47,293:INFO:             uvicorn: Not installed
2023-06-16 10:32:47,293:INFO:              m2cgen: Not installed
2023-06-16 10:32:47,293:INFO:           evidently: Not installed
2023-06-16 10:32:47,293:INFO:               fugue: Not installed
2023-06-16 10:32:47,293:INFO:           streamlit: Not installed
2023-06-16 10:32:47,293:INFO:             prophet: Not installed
2023-06-16 10:32:47,293:INFO:None
2023-06-16 10:32:47,293:INFO:Set up data.
2023-06-16 10:32:47,358:INFO:Set up train/test split.
2023-06-16 10:32:47,383:INFO:Set up index.
2023-06-16 10:32:47,384:INFO:Set up folding strategy.
2023-06-16 10:32:47,384:INFO:Assigning column types.
2023-06-16 10:33:19,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:33:19,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:33:19,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:33:19,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:33:20,877:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 10:33:21,208:INFO:PyCaret ClassificationExperiment
2023-06-16 10:33:21,208:INFO:Logging name: clf-default-name
2023-06-16 10:33:21,208:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:33:21,208:INFO:version 3.0.2
2023-06-16 10:33:21,208:INFO:Initializing setup()
2023-06-16 10:33:21,208:INFO:self.USI: c5fd
2023-06-16 10:33:21,208:INFO:self._variable_keys: {'X', 'logging_param', '_available_plots', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'memory', 'X_train', 'target_param', 'y_test', 'X_test', 'gpu_n_jobs_param', 'log_plots_param', 'fold_groups_param', 'html_param', 'idx', 'USI', 'y_train', 'fold_generator', 'n_jobs_param', 'data', 'exp_id', 'seed', 'exp_name_log', '_ml_usecase', 'pipeline', 'gpu_param', 'y'}
2023-06-16 10:33:21,208:INFO:Checking environment
2023-06-16 10:33:21,208:INFO:python_version: 3.9.7
2023-06-16 10:33:21,208:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:33:21,209:INFO:machine: AMD64
2023-06-16 10:33:21,209:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:33:21,209:INFO:Memory: svmem(total=17120436224, available=6323027968, percent=63.1, used=10797408256, free=6323027968)
2023-06-16 10:33:21,209:INFO:Physical Core: 4
2023-06-16 10:33:21,209:INFO:Logical Core: 4
2023-06-16 10:33:21,209:INFO:Checking libraries
2023-06-16 10:33:21,209:INFO:System:
2023-06-16 10:33:21,209:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:33:21,209:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:33:21,209:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:33:21,209:INFO:PyCaret required dependencies:
2023-06-16 10:33:21,209:INFO:                 pip: 21.2.3
2023-06-16 10:33:21,209:INFO:          setuptools: 57.4.0
2023-06-16 10:33:21,209:INFO:             pycaret: 3.0.2
2023-06-16 10:33:21,209:INFO:             IPython: 7.28.0
2023-06-16 10:33:21,209:INFO:          ipywidgets: 8.0.6
2023-06-16 10:33:21,209:INFO:                tqdm: 4.64.0
2023-06-16 10:33:21,209:INFO:               numpy: 1.21.2
2023-06-16 10:33:21,210:INFO:              pandas: 1.3.5
2023-06-16 10:33:21,210:INFO:              jinja2: 3.1.2
2023-06-16 10:33:21,210:INFO:               scipy: 1.7.1
2023-06-16 10:33:21,210:INFO:              joblib: 1.2.0
2023-06-16 10:33:21,210:INFO:             sklearn: 1.1.0
2023-06-16 10:33:21,210:INFO:                pyod: 1.0.9
2023-06-16 10:33:21,210:INFO:            imblearn: 0.9.1
2023-06-16 10:33:21,210:INFO:   category_encoders: 2.6.1
2023-06-16 10:33:21,210:INFO:            lightgbm: 3.3.5
2023-06-16 10:33:21,210:INFO:               numba: 0.57.0
2023-06-16 10:33:21,210:INFO:            requests: 2.31.0
2023-06-16 10:33:21,210:INFO:          matplotlib: 3.4.3
2023-06-16 10:33:21,210:INFO:          scikitplot: 0.3.7
2023-06-16 10:33:21,210:INFO:         yellowbrick: 1.5
2023-06-16 10:33:21,210:INFO:              plotly: 5.8.0
2023-06-16 10:33:21,210:INFO:             kaleido: 0.2.1
2023-06-16 10:33:21,210:INFO:         statsmodels: 0.14.0
2023-06-16 10:33:21,210:INFO:              sktime: 0.17.0
2023-06-16 10:33:21,210:INFO:               tbats: 1.1.3
2023-06-16 10:33:21,210:INFO:            pmdarima: 2.0.3
2023-06-16 10:33:21,210:INFO:              psutil: 5.9.0
2023-06-16 10:33:21,210:INFO:PyCaret optional dependencies:
2023-06-16 10:33:21,232:INFO:                shap: Not installed
2023-06-16 10:33:21,232:INFO:           interpret: Not installed
2023-06-16 10:33:21,232:INFO:                umap: Not installed
2023-06-16 10:33:21,232:INFO:    pandas_profiling: Not installed
2023-06-16 10:33:21,232:INFO:  explainerdashboard: Not installed
2023-06-16 10:33:21,232:INFO:             autoviz: Not installed
2023-06-16 10:33:21,232:INFO:           fairlearn: Not installed
2023-06-16 10:33:21,232:INFO:             xgboost: Not installed
2023-06-16 10:33:21,232:INFO:            catboost: Not installed
2023-06-16 10:33:21,232:INFO:              kmodes: Not installed
2023-06-16 10:33:21,232:INFO:             mlxtend: Not installed
2023-06-16 10:33:21,232:INFO:       statsforecast: Not installed
2023-06-16 10:33:21,233:INFO:        tune_sklearn: Not installed
2023-06-16 10:33:21,233:INFO:                 ray: Not installed
2023-06-16 10:33:21,233:INFO:            hyperopt: Not installed
2023-06-16 10:33:21,233:INFO:              optuna: Not installed
2023-06-16 10:33:21,233:INFO:               skopt: Not installed
2023-06-16 10:33:21,233:INFO:              mlflow: Not installed
2023-06-16 10:33:21,233:INFO:              gradio: Not installed
2023-06-16 10:33:21,233:INFO:             fastapi: Not installed
2023-06-16 10:33:21,233:INFO:             uvicorn: Not installed
2023-06-16 10:33:21,233:INFO:              m2cgen: Not installed
2023-06-16 10:33:21,233:INFO:           evidently: Not installed
2023-06-16 10:33:21,233:INFO:               fugue: Not installed
2023-06-16 10:33:21,233:INFO:           streamlit: Not installed
2023-06-16 10:33:21,233:INFO:             prophet: Not installed
2023-06-16 10:33:21,233:INFO:None
2023-06-16 10:33:21,233:INFO:Set up data.
2023-06-16 10:33:21,292:INFO:Set up train/test split.
2023-06-16 10:33:21,318:INFO:Set up index.
2023-06-16 10:33:21,319:INFO:Set up folding strategy.
2023-06-16 10:33:21,319:INFO:Assigning column types.
2023-06-16 10:33:45,504:INFO:PyCaret ClassificationExperiment
2023-06-16 10:33:45,504:INFO:Logging name: clf-default-name
2023-06-16 10:33:45,505:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:33:45,505:INFO:version 3.0.2
2023-06-16 10:33:45,505:INFO:Initializing setup()
2023-06-16 10:33:45,505:INFO:self.USI: d532
2023-06-16 10:33:45,505:INFO:self._variable_keys: {'X', 'logging_param', '_available_plots', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'memory', 'X_train', 'target_param', 'y_test', 'X_test', 'gpu_n_jobs_param', 'log_plots_param', 'fold_groups_param', 'html_param', 'idx', 'USI', 'y_train', 'fold_generator', 'n_jobs_param', 'data', 'exp_id', 'seed', 'exp_name_log', '_ml_usecase', 'pipeline', 'gpu_param', 'y'}
2023-06-16 10:33:45,505:INFO:Checking environment
2023-06-16 10:33:45,505:INFO:python_version: 3.9.7
2023-06-16 10:33:45,505:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:33:45,505:INFO:machine: AMD64
2023-06-16 10:33:45,505:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:33:45,505:INFO:Memory: svmem(total=17120436224, available=6298517504, percent=63.2, used=10821918720, free=6298517504)
2023-06-16 10:33:45,505:INFO:Physical Core: 4
2023-06-16 10:33:45,505:INFO:Logical Core: 4
2023-06-16 10:33:45,505:INFO:Checking libraries
2023-06-16 10:33:45,505:INFO:System:
2023-06-16 10:33:45,506:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:33:45,506:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:33:45,506:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:33:45,506:INFO:PyCaret required dependencies:
2023-06-16 10:33:45,506:INFO:                 pip: 21.2.3
2023-06-16 10:33:45,506:INFO:          setuptools: 57.4.0
2023-06-16 10:33:45,506:INFO:             pycaret: 3.0.2
2023-06-16 10:33:45,506:INFO:             IPython: 7.28.0
2023-06-16 10:33:45,506:INFO:          ipywidgets: 8.0.6
2023-06-16 10:33:45,506:INFO:                tqdm: 4.64.0
2023-06-16 10:33:45,506:INFO:               numpy: 1.21.2
2023-06-16 10:33:45,506:INFO:              pandas: 1.3.5
2023-06-16 10:33:45,507:INFO:              jinja2: 3.1.2
2023-06-16 10:33:45,507:INFO:               scipy: 1.7.1
2023-06-16 10:33:45,507:INFO:              joblib: 1.2.0
2023-06-16 10:33:45,507:INFO:             sklearn: 1.1.0
2023-06-16 10:33:45,507:INFO:                pyod: 1.0.9
2023-06-16 10:33:45,507:INFO:            imblearn: 0.9.1
2023-06-16 10:33:45,507:INFO:   category_encoders: 2.6.1
2023-06-16 10:33:45,507:INFO:            lightgbm: 3.3.5
2023-06-16 10:33:45,507:INFO:               numba: 0.57.0
2023-06-16 10:33:45,507:INFO:            requests: 2.31.0
2023-06-16 10:33:45,507:INFO:          matplotlib: 3.4.3
2023-06-16 10:33:45,507:INFO:          scikitplot: 0.3.7
2023-06-16 10:33:45,507:INFO:         yellowbrick: 1.5
2023-06-16 10:33:45,507:INFO:              plotly: 5.8.0
2023-06-16 10:33:45,507:INFO:             kaleido: 0.2.1
2023-06-16 10:33:45,507:INFO:         statsmodels: 0.14.0
2023-06-16 10:33:45,507:INFO:              sktime: 0.17.0
2023-06-16 10:33:45,507:INFO:               tbats: 1.1.3
2023-06-16 10:33:45,507:INFO:            pmdarima: 2.0.3
2023-06-16 10:33:45,508:INFO:              psutil: 5.9.0
2023-06-16 10:33:45,508:INFO:PyCaret optional dependencies:
2023-06-16 10:33:45,508:INFO:                shap: Not installed
2023-06-16 10:33:45,508:INFO:           interpret: Not installed
2023-06-16 10:33:45,508:INFO:                umap: Not installed
2023-06-16 10:33:45,508:INFO:    pandas_profiling: Not installed
2023-06-16 10:33:45,508:INFO:  explainerdashboard: Not installed
2023-06-16 10:33:45,508:INFO:             autoviz: Not installed
2023-06-16 10:33:45,508:INFO:           fairlearn: Not installed
2023-06-16 10:33:45,509:INFO:             xgboost: Not installed
2023-06-16 10:33:45,509:INFO:            catboost: Not installed
2023-06-16 10:33:45,509:INFO:              kmodes: Not installed
2023-06-16 10:33:45,509:INFO:             mlxtend: Not installed
2023-06-16 10:33:45,509:INFO:       statsforecast: Not installed
2023-06-16 10:33:45,509:INFO:        tune_sklearn: Not installed
2023-06-16 10:33:45,509:INFO:                 ray: Not installed
2023-06-16 10:33:45,509:INFO:            hyperopt: Not installed
2023-06-16 10:33:45,509:INFO:              optuna: Not installed
2023-06-16 10:33:45,509:INFO:               skopt: Not installed
2023-06-16 10:33:45,509:INFO:              mlflow: Not installed
2023-06-16 10:33:45,509:INFO:              gradio: Not installed
2023-06-16 10:33:45,509:INFO:             fastapi: Not installed
2023-06-16 10:33:45,509:INFO:             uvicorn: Not installed
2023-06-16 10:33:45,509:INFO:              m2cgen: Not installed
2023-06-16 10:33:45,509:INFO:           evidently: Not installed
2023-06-16 10:33:45,509:INFO:               fugue: Not installed
2023-06-16 10:33:45,510:INFO:           streamlit: Not installed
2023-06-16 10:33:45,510:INFO:             prophet: Not installed
2023-06-16 10:33:45,510:INFO:None
2023-06-16 10:33:45,510:INFO:Set up data.
2023-06-16 10:33:45,570:INFO:Set up train/test split.
2023-06-16 10:33:45,593:INFO:Set up index.
2023-06-16 10:33:45,594:INFO:Set up folding strategy.
2023-06-16 10:33:45,594:INFO:Assigning column types.
2023-06-16 10:33:45,606:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:33:45,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:33:45,670:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:33:45,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:45,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:45,930:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:33:45,931:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:33:45,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:45,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:45,967:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:33:46,017:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:33:46,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,098:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:33:46,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,130:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:33:46,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,297:INFO:Preparing preprocessing pipeline...
2023-06-16 10:33:46,300:INFO:Set up simple imputation.
2023-06-16 10:33:46,310:INFO:Set up encoding of ordinal features.
2023-06-16 10:33:46,320:INFO:Set up encoding of categorical features.
2023-06-16 10:33:46,320:INFO:Set up imbalanced handling.
2023-06-16 10:33:46,322:INFO:Set up column name cleaning.
2023-06-16 10:33:46,880:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:33:46,930:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:33:46,930:INFO:Creating final display dataframe.
2023-06-16 10:33:47,698:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              d532
2023-06-16 10:33:47,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:47,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:47,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:47,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:47,937:INFO:setup() successfully completed in 2.51s...............
2023-06-16 10:34:21,792:INFO:PyCaret ClassificationExperiment
2023-06-16 10:34:21,792:INFO:Logging name: clf-default-name
2023-06-16 10:34:21,792:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:34:21,792:INFO:version 3.0.2
2023-06-16 10:34:21,792:INFO:Initializing setup()
2023-06-16 10:34:21,792:INFO:self.USI: 431e
2023-06-16 10:34:21,793:INFO:self._variable_keys: {'X', 'logging_param', '_available_plots', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'memory', 'X_train', 'target_param', 'y_test', 'X_test', 'gpu_n_jobs_param', 'log_plots_param', 'fold_groups_param', 'html_param', 'idx', 'USI', 'y_train', 'fold_generator', 'n_jobs_param', 'data', 'exp_id', 'seed', 'exp_name_log', '_ml_usecase', 'pipeline', 'gpu_param', 'y'}
2023-06-16 10:34:21,793:INFO:Checking environment
2023-06-16 10:34:21,793:INFO:python_version: 3.9.7
2023-06-16 10:34:21,793:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:34:21,793:INFO:machine: AMD64
2023-06-16 10:34:21,793:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:34:21,793:INFO:Memory: svmem(total=17120436224, available=6267981824, percent=63.4, used=10852454400, free=6267981824)
2023-06-16 10:34:21,793:INFO:Physical Core: 4
2023-06-16 10:34:21,793:INFO:Logical Core: 4
2023-06-16 10:34:21,793:INFO:Checking libraries
2023-06-16 10:34:21,793:INFO:System:
2023-06-16 10:34:21,793:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:34:21,793:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:34:21,793:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:34:21,793:INFO:PyCaret required dependencies:
2023-06-16 10:34:21,793:INFO:                 pip: 21.2.3
2023-06-16 10:34:21,794:INFO:          setuptools: 57.4.0
2023-06-16 10:34:21,794:INFO:             pycaret: 3.0.2
2023-06-16 10:34:21,794:INFO:             IPython: 7.28.0
2023-06-16 10:34:21,794:INFO:          ipywidgets: 8.0.6
2023-06-16 10:34:21,794:INFO:                tqdm: 4.64.0
2023-06-16 10:34:21,794:INFO:               numpy: 1.21.2
2023-06-16 10:34:21,794:INFO:              pandas: 1.3.5
2023-06-16 10:34:21,794:INFO:              jinja2: 3.1.2
2023-06-16 10:34:21,794:INFO:               scipy: 1.7.1
2023-06-16 10:34:21,794:INFO:              joblib: 1.2.0
2023-06-16 10:34:21,794:INFO:             sklearn: 1.1.0
2023-06-16 10:34:21,794:INFO:                pyod: 1.0.9
2023-06-16 10:34:21,794:INFO:            imblearn: 0.9.1
2023-06-16 10:34:21,794:INFO:   category_encoders: 2.6.1
2023-06-16 10:34:21,794:INFO:            lightgbm: 3.3.5
2023-06-16 10:34:21,794:INFO:               numba: 0.57.0
2023-06-16 10:34:21,794:INFO:            requests: 2.31.0
2023-06-16 10:34:21,794:INFO:          matplotlib: 3.4.3
2023-06-16 10:34:21,794:INFO:          scikitplot: 0.3.7
2023-06-16 10:34:21,795:INFO:         yellowbrick: 1.5
2023-06-16 10:34:21,795:INFO:              plotly: 5.8.0
2023-06-16 10:34:21,795:INFO:             kaleido: 0.2.1
2023-06-16 10:34:21,795:INFO:         statsmodels: 0.14.0
2023-06-16 10:34:21,795:INFO:              sktime: 0.17.0
2023-06-16 10:34:21,795:INFO:               tbats: 1.1.3
2023-06-16 10:34:21,795:INFO:            pmdarima: 2.0.3
2023-06-16 10:34:21,795:INFO:              psutil: 5.9.0
2023-06-16 10:34:21,795:INFO:PyCaret optional dependencies:
2023-06-16 10:34:21,795:INFO:                shap: Not installed
2023-06-16 10:34:21,795:INFO:           interpret: Not installed
2023-06-16 10:34:21,795:INFO:                umap: Not installed
2023-06-16 10:34:21,795:INFO:    pandas_profiling: Not installed
2023-06-16 10:34:21,795:INFO:  explainerdashboard: Not installed
2023-06-16 10:34:21,795:INFO:             autoviz: Not installed
2023-06-16 10:34:21,795:INFO:           fairlearn: Not installed
2023-06-16 10:34:21,795:INFO:             xgboost: Not installed
2023-06-16 10:34:21,795:INFO:            catboost: Not installed
2023-06-16 10:34:21,795:INFO:              kmodes: Not installed
2023-06-16 10:34:21,796:INFO:             mlxtend: Not installed
2023-06-16 10:34:21,796:INFO:       statsforecast: Not installed
2023-06-16 10:34:21,796:INFO:        tune_sklearn: Not installed
2023-06-16 10:34:21,796:INFO:                 ray: Not installed
2023-06-16 10:34:21,796:INFO:            hyperopt: Not installed
2023-06-16 10:34:21,796:INFO:              optuna: Not installed
2023-06-16 10:34:21,796:INFO:               skopt: Not installed
2023-06-16 10:34:21,796:INFO:              mlflow: Not installed
2023-06-16 10:34:21,796:INFO:              gradio: Not installed
2023-06-16 10:34:21,796:INFO:             fastapi: Not installed
2023-06-16 10:34:21,796:INFO:             uvicorn: Not installed
2023-06-16 10:34:21,796:INFO:              m2cgen: Not installed
2023-06-16 10:34:21,796:INFO:           evidently: Not installed
2023-06-16 10:34:21,796:INFO:               fugue: Not installed
2023-06-16 10:34:21,796:INFO:           streamlit: Not installed
2023-06-16 10:34:21,796:INFO:             prophet: Not installed
2023-06-16 10:34:21,796:INFO:None
2023-06-16 10:34:21,796:INFO:Set up GPU usage.
2023-06-16 10:34:21,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:21,796:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-06-16 10:34:21,796:INFO:Set up data.
2023-06-16 10:34:21,901:INFO:Set up train/test split.
2023-06-16 10:34:21,951:INFO:Set up index.
2023-06-16 10:34:21,952:INFO:Set up folding strategy.
2023-06-16 10:34:21,953:INFO:Assigning column types.
2023-06-16 10:34:21,972:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:34:21,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,038:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:34:22,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,040:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:34:22,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,206:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:34:28,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:34:28,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,561:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:34:28,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,616:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:34:28,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,818:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:34:28,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,974:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:34:28,974:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:29,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:29,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:29,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:29,391:INFO:Preparing preprocessing pipeline...
2023-06-16 10:34:29,393:INFO:Set up simple imputation.
2023-06-16 10:34:29,405:INFO:Set up encoding of ordinal features.
2023-06-16 10:34:29,414:INFO:Set up encoding of categorical features.
2023-06-16 10:34:29,415:INFO:Set up imbalanced handling.
2023-06-16 10:34:29,416:INFO:Set up column name cleaning.
2023-06-16 10:34:29,804:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:34:29,857:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:34:29,857:INFO:Creating final display dataframe.
2023-06-16 10:34:30,043:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU              True
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              431e
2023-06-16 10:34:30,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:30,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:30,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:30,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:30,656:INFO:setup() successfully completed in 8.94s...............
2023-06-16 10:35:25,958:INFO:Initializing compare_models()
2023-06-16 10:35:25,958:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 10:35:25,958:INFO:Checking exceptions
2023-06-16 10:35:25,971:INFO:Preparing display monitor
2023-06-16 10:35:26,038:INFO:Initializing Logistic Regression
2023-06-16 10:35:26,038:INFO:Total runtime is 0.0 minutes
2023-06-16 10:35:26,043:INFO:SubProcess create_model() called ==================================
2023-06-16 10:35:26,043:INFO:Initializing create_model()
2023-06-16 10:35:26,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000289B9BEDD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:35:26,044:INFO:Checking exceptions
2023-06-16 10:35:26,044:INFO:Importing libraries
2023-06-16 10:35:26,044:INFO:Copying training dataset
2023-06-16 10:35:26,064:INFO:Defining folds
2023-06-16 10:35:26,064:INFO:Declaring metric variables
2023-06-16 10:35:26,092:INFO:Importing untrained model
2023-06-16 10:35:26,098:INFO:Logistic Regression Imported successfully
2023-06-16 10:35:26,109:INFO:Starting cross validation
2023-06-16 10:35:26,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-06-16 10:35:56,178:INFO:Calculating mean and std
2023-06-16 10:35:56,180:INFO:Creating metrics dataframe
2023-06-16 10:35:56,271:INFO:Uploading results into container
2023-06-16 10:35:56,272:INFO:Uploading model into container now
2023-06-16 10:35:56,272:INFO:_master_model_container: 1
2023-06-16 10:35:56,272:INFO:_display_container: 2
2023-06-16 10:35:56,273:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 10:35:56,273:INFO:create_model() successfully completed......................................
2023-06-16 10:35:56,344:INFO:SubProcess create_model() end ==================================
2023-06-16 10:35:56,344:INFO:Creating metrics dataframe
2023-06-16 10:35:56,360:INFO:Initializing K Neighbors Classifier
2023-06-16 10:35:56,361:INFO:Total runtime is 0.5053819139798482 minutes
2023-06-16 10:35:56,365:INFO:SubProcess create_model() called ==================================
2023-06-16 10:35:56,365:INFO:Initializing create_model()
2023-06-16 10:35:56,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000289B9BEDD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:35:56,365:INFO:Checking exceptions
2023-06-16 10:35:56,365:INFO:Importing libraries
2023-06-16 10:35:56,366:INFO:Copying training dataset
2023-06-16 10:35:56,385:INFO:Defining folds
2023-06-16 10:35:56,385:INFO:Declaring metric variables
2023-06-16 10:35:56,390:INFO:Importing untrained model
2023-06-16 10:35:56,395:INFO:K Neighbors Classifier Imported successfully
2023-06-16 10:35:56,407:INFO:Starting cross validation
2023-06-16 10:35:56,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-06-16 10:36:10,040:INFO:Calculating mean and std
2023-06-16 10:36:10,042:INFO:Creating metrics dataframe
2023-06-16 10:36:10,133:INFO:Uploading results into container
2023-06-16 10:36:10,133:INFO:Uploading model into container now
2023-06-16 10:36:10,133:INFO:_master_model_container: 2
2023-06-16 10:36:10,134:INFO:_display_container: 2
2023-06-16 10:36:10,134:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 10:36:10,134:INFO:create_model() successfully completed......................................
2023-06-16 10:36:10,204:INFO:SubProcess create_model() end ==================================
2023-06-16 10:36:10,204:INFO:Creating metrics dataframe
2023-06-16 10:36:10,220:INFO:Initializing Naive Bayes
2023-06-16 10:36:10,220:INFO:Total runtime is 0.736357041200002 minutes
2023-06-16 10:36:10,224:INFO:SubProcess create_model() called ==================================
2023-06-16 10:36:10,225:INFO:Initializing create_model()
2023-06-16 10:36:10,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000289B9BEDD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:36:10,225:INFO:Checking exceptions
2023-06-16 10:36:10,225:INFO:Importing libraries
2023-06-16 10:36:10,225:INFO:Copying training dataset
2023-06-16 10:36:10,241:INFO:Defining folds
2023-06-16 10:36:10,242:INFO:Declaring metric variables
2023-06-16 10:36:10,246:INFO:Importing untrained model
2023-06-16 10:36:10,251:INFO:Naive Bayes Imported successfully
2023-06-16 10:36:10,265:INFO:Starting cross validation
2023-06-16 10:36:10,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-06-16 10:36:18,641:INFO:Calculating mean and std
2023-06-16 10:36:18,643:INFO:Creating metrics dataframe
2023-06-16 10:36:18,735:INFO:Uploading results into container
2023-06-16 10:36:18,736:INFO:Uploading model into container now
2023-06-16 10:36:18,736:INFO:_master_model_container: 3
2023-06-16 10:36:18,736:INFO:_display_container: 2
2023-06-16 10:36:18,737:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-16 10:36:18,737:INFO:create_model() successfully completed......................................
2023-06-16 10:36:18,806:INFO:SubProcess create_model() end ==================================
2023-06-16 10:36:18,806:INFO:Creating metrics dataframe
2023-06-16 10:36:18,822:INFO:Initializing Decision Tree Classifier
2023-06-16 10:36:18,823:INFO:Total runtime is 0.8797510941823323 minutes
2023-06-16 10:36:18,827:INFO:SubProcess create_model() called ==================================
2023-06-16 10:36:18,828:INFO:Initializing create_model()
2023-06-16 10:36:18,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000289B9BEDD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:36:18,828:INFO:Checking exceptions
2023-06-16 10:36:18,828:INFO:Importing libraries
2023-06-16 10:36:18,828:INFO:Copying training dataset
2023-06-16 10:36:18,844:INFO:Defining folds
2023-06-16 10:36:18,844:INFO:Declaring metric variables
2023-06-16 10:36:18,850:INFO:Importing untrained model
2023-06-16 10:36:18,854:INFO:Decision Tree Classifier Imported successfully
2023-06-16 10:36:18,864:INFO:Starting cross validation
2023-06-16 10:36:18,866:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-06-16 10:37:31,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:31,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:31,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:31,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,505:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 10:37:32,821:INFO:PyCaret ClassificationExperiment
2023-06-16 10:37:32,822:INFO:Logging name: clf-default-name
2023-06-16 10:37:32,822:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:37:32,822:INFO:version 3.0.2
2023-06-16 10:37:32,822:INFO:Initializing setup()
2023-06-16 10:37:32,822:INFO:self.USI: 40c9
2023-06-16 10:37:32,822:INFO:self._variable_keys: {'gpu_param', 'html_param', 'data', 'fold_generator', 'y', 'exp_name_log', '_available_plots', 'exp_id', 'fold_groups_param', 'USI', 'n_jobs_param', 'target_param', 'seed', 'fold_shuffle_param', 'pipeline', 'X_train', 'is_multiclass', 'log_plots_param', '_ml_usecase', 'y_train', 'X_test', 'memory', 'fix_imbalance', 'idx', 'X', 'gpu_n_jobs_param', 'y_test', 'logging_param'}
2023-06-16 10:37:32,822:INFO:Checking environment
2023-06-16 10:37:32,822:INFO:python_version: 3.9.7
2023-06-16 10:37:32,822:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:37:32,822:INFO:machine: AMD64
2023-06-16 10:37:32,822:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:37:32,822:INFO:Memory: svmem(total=17120436224, available=6435307520, percent=62.4, used=10685128704, free=6435307520)
2023-06-16 10:37:32,822:INFO:Physical Core: 4
2023-06-16 10:37:32,822:INFO:Logical Core: 4
2023-06-16 10:37:32,822:INFO:Checking libraries
2023-06-16 10:37:32,822:INFO:System:
2023-06-16 10:37:32,823:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:37:32,823:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:37:32,823:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:37:32,823:INFO:PyCaret required dependencies:
2023-06-16 10:37:32,823:INFO:                 pip: 21.2.3
2023-06-16 10:37:32,823:INFO:          setuptools: 57.4.0
2023-06-16 10:37:32,823:INFO:             pycaret: 3.0.2
2023-06-16 10:37:32,823:INFO:             IPython: 7.28.0
2023-06-16 10:37:32,823:INFO:          ipywidgets: 8.0.6
2023-06-16 10:37:32,823:INFO:                tqdm: 4.64.0
2023-06-16 10:37:32,823:INFO:               numpy: 1.21.2
2023-06-16 10:37:32,823:INFO:              pandas: 1.3.5
2023-06-16 10:37:32,823:INFO:              jinja2: 3.1.2
2023-06-16 10:37:32,823:INFO:               scipy: 1.7.1
2023-06-16 10:37:32,823:INFO:              joblib: 1.2.0
2023-06-16 10:37:32,823:INFO:             sklearn: 1.1.0
2023-06-16 10:37:32,823:INFO:                pyod: 1.0.9
2023-06-16 10:37:32,823:INFO:            imblearn: 0.9.1
2023-06-16 10:37:32,823:INFO:   category_encoders: 2.6.1
2023-06-16 10:37:32,823:INFO:            lightgbm: 3.3.5
2023-06-16 10:37:32,823:INFO:               numba: 0.57.0
2023-06-16 10:37:32,824:INFO:            requests: 2.31.0
2023-06-16 10:37:32,824:INFO:          matplotlib: 3.4.3
2023-06-16 10:37:32,824:INFO:          scikitplot: 0.3.7
2023-06-16 10:37:32,824:INFO:         yellowbrick: 1.5
2023-06-16 10:37:32,824:INFO:              plotly: 5.8.0
2023-06-16 10:37:32,824:INFO:             kaleido: 0.2.1
2023-06-16 10:37:32,824:INFO:         statsmodels: 0.14.0
2023-06-16 10:37:32,824:INFO:              sktime: 0.17.0
2023-06-16 10:37:32,824:INFO:               tbats: 1.1.3
2023-06-16 10:37:32,824:INFO:            pmdarima: 2.0.3
2023-06-16 10:37:32,824:INFO:              psutil: 5.9.0
2023-06-16 10:37:32,824:INFO:PyCaret optional dependencies:
2023-06-16 10:37:32,844:INFO:                shap: Not installed
2023-06-16 10:37:32,845:INFO:           interpret: Not installed
2023-06-16 10:37:32,845:INFO:                umap: Not installed
2023-06-16 10:37:32,845:INFO:    pandas_profiling: Not installed
2023-06-16 10:37:32,845:INFO:  explainerdashboard: Not installed
2023-06-16 10:37:32,845:INFO:             autoviz: Not installed
2023-06-16 10:37:32,845:INFO:           fairlearn: Not installed
2023-06-16 10:37:32,845:INFO:             xgboost: Not installed
2023-06-16 10:37:32,845:INFO:            catboost: Not installed
2023-06-16 10:37:32,845:INFO:              kmodes: Not installed
2023-06-16 10:37:32,845:INFO:             mlxtend: Not installed
2023-06-16 10:37:32,845:INFO:       statsforecast: Not installed
2023-06-16 10:37:32,845:INFO:        tune_sklearn: Not installed
2023-06-16 10:37:32,845:INFO:                 ray: Not installed
2023-06-16 10:37:32,845:INFO:            hyperopt: Not installed
2023-06-16 10:37:32,845:INFO:              optuna: Not installed
2023-06-16 10:37:32,845:INFO:               skopt: Not installed
2023-06-16 10:37:32,846:INFO:              mlflow: Not installed
2023-06-16 10:37:32,846:INFO:              gradio: Not installed
2023-06-16 10:37:32,846:INFO:             fastapi: Not installed
2023-06-16 10:37:32,846:INFO:             uvicorn: Not installed
2023-06-16 10:37:32,846:INFO:              m2cgen: Not installed
2023-06-16 10:37:32,846:INFO:           evidently: Not installed
2023-06-16 10:37:32,846:INFO:               fugue: Not installed
2023-06-16 10:37:32,846:INFO:           streamlit: Not installed
2023-06-16 10:37:32,846:INFO:             prophet: Not installed
2023-06-16 10:37:32,846:INFO:None
2023-06-16 10:37:32,846:INFO:Set up GPU usage.
2023-06-16 10:37:32,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,846:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-06-16 10:37:32,846:INFO:Set up data.
2023-06-16 10:37:32,906:INFO:Set up train/test split.
2023-06-16 10:37:32,932:INFO:Set up index.
2023-06-16 10:37:32,933:INFO:Set up folding strategy.
2023-06-16 10:37:32,933:INFO:Assigning column types.
2023-06-16 10:37:32,944:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:37:32,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,995:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:37:32,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:32,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,029:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:37:33,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:33,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,450:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:37:33,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,500:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:33,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,529:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,702:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:33,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,733:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,850:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:37:33,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:34,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:34,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:34,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:34,247:INFO:Preparing preprocessing pipeline...
2023-06-16 10:37:34,250:INFO:Set up simple imputation.
2023-06-16 10:37:34,262:INFO:Set up encoding of ordinal features.
2023-06-16 10:37:34,271:INFO:Set up encoding of categorical features.
2023-06-16 10:37:34,271:INFO:Set up imbalanced handling.
2023-06-16 10:37:34,273:INFO:Set up column name cleaning.
2023-06-16 10:37:34,646:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:37:34,697:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:37:34,698:INFO:Creating final display dataframe.
2023-06-16 10:37:34,880:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU              True
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              40c9
2023-06-16 10:37:34,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,986:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:35,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:35,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:35,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:35,307:INFO:setup() successfully completed in 2.57s...............
2023-06-16 10:37:42,475:INFO:PyCaret ClassificationExperiment
2023-06-16 10:37:42,475:INFO:Logging name: clf-default-name
2023-06-16 10:37:42,475:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:37:42,475:INFO:version 3.0.2
2023-06-16 10:37:42,475:INFO:Initializing setup()
2023-06-16 10:37:42,476:INFO:self.USI: c116
2023-06-16 10:37:42,476:INFO:self._variable_keys: {'gpu_param', 'html_param', 'data', 'fold_generator', 'y', 'exp_name_log', '_available_plots', 'exp_id', 'fold_groups_param', 'USI', 'n_jobs_param', 'target_param', 'seed', 'fold_shuffle_param', 'pipeline', 'X_train', 'is_multiclass', 'log_plots_param', '_ml_usecase', 'y_train', 'X_test', 'memory', 'fix_imbalance', 'idx', 'X', 'gpu_n_jobs_param', 'y_test', 'logging_param'}
2023-06-16 10:37:42,476:INFO:Checking environment
2023-06-16 10:37:42,476:INFO:python_version: 3.9.7
2023-06-16 10:37:42,476:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:37:42,476:INFO:machine: AMD64
2023-06-16 10:37:42,476:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:37:42,476:INFO:Memory: svmem(total=17120436224, available=6433972224, percent=62.4, used=10686464000, free=6433972224)
2023-06-16 10:37:42,476:INFO:Physical Core: 4
2023-06-16 10:37:42,476:INFO:Logical Core: 4
2023-06-16 10:37:42,476:INFO:Checking libraries
2023-06-16 10:37:42,476:INFO:System:
2023-06-16 10:37:42,477:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:37:42,477:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:37:42,477:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:37:42,477:INFO:PyCaret required dependencies:
2023-06-16 10:37:42,477:INFO:                 pip: 21.2.3
2023-06-16 10:37:42,477:INFO:          setuptools: 57.4.0
2023-06-16 10:37:42,478:INFO:             pycaret: 3.0.2
2023-06-16 10:37:42,478:INFO:             IPython: 7.28.0
2023-06-16 10:37:42,478:INFO:          ipywidgets: 8.0.6
2023-06-16 10:37:42,478:INFO:                tqdm: 4.64.0
2023-06-16 10:37:42,478:INFO:               numpy: 1.21.2
2023-06-16 10:37:42,478:INFO:              pandas: 1.3.5
2023-06-16 10:37:42,478:INFO:              jinja2: 3.1.2
2023-06-16 10:37:42,478:INFO:               scipy: 1.7.1
2023-06-16 10:37:42,478:INFO:              joblib: 1.2.0
2023-06-16 10:37:42,478:INFO:             sklearn: 1.1.0
2023-06-16 10:37:42,478:INFO:                pyod: 1.0.9
2023-06-16 10:37:42,478:INFO:            imblearn: 0.9.1
2023-06-16 10:37:42,478:INFO:   category_encoders: 2.6.1
2023-06-16 10:37:42,479:INFO:            lightgbm: 3.3.5
2023-06-16 10:37:42,479:INFO:               numba: 0.57.0
2023-06-16 10:37:42,479:INFO:            requests: 2.31.0
2023-06-16 10:37:42,479:INFO:          matplotlib: 3.4.3
2023-06-16 10:37:42,479:INFO:          scikitplot: 0.3.7
2023-06-16 10:37:42,479:INFO:         yellowbrick: 1.5
2023-06-16 10:37:42,479:INFO:              plotly: 5.8.0
2023-06-16 10:37:42,479:INFO:             kaleido: 0.2.1
2023-06-16 10:37:42,479:INFO:         statsmodels: 0.14.0
2023-06-16 10:37:42,479:INFO:              sktime: 0.17.0
2023-06-16 10:37:42,480:INFO:               tbats: 1.1.3
2023-06-16 10:37:42,480:INFO:            pmdarima: 2.0.3
2023-06-16 10:37:42,480:INFO:              psutil: 5.9.0
2023-06-16 10:37:42,480:INFO:PyCaret optional dependencies:
2023-06-16 10:37:42,480:INFO:                shap: Not installed
2023-06-16 10:37:42,480:INFO:           interpret: Not installed
2023-06-16 10:37:42,480:INFO:                umap: Not installed
2023-06-16 10:37:42,480:INFO:    pandas_profiling: Not installed
2023-06-16 10:37:42,480:INFO:  explainerdashboard: Not installed
2023-06-16 10:37:42,480:INFO:             autoviz: Not installed
2023-06-16 10:37:42,480:INFO:           fairlearn: Not installed
2023-06-16 10:37:42,481:INFO:             xgboost: Not installed
2023-06-16 10:37:42,481:INFO:            catboost: Not installed
2023-06-16 10:37:42,481:INFO:              kmodes: Not installed
2023-06-16 10:37:42,481:INFO:             mlxtend: Not installed
2023-06-16 10:37:42,481:INFO:       statsforecast: Not installed
2023-06-16 10:37:42,481:INFO:        tune_sklearn: Not installed
2023-06-16 10:37:42,482:INFO:                 ray: Not installed
2023-06-16 10:37:42,482:INFO:            hyperopt: Not installed
2023-06-16 10:37:42,482:INFO:              optuna: Not installed
2023-06-16 10:37:42,482:INFO:               skopt: Not installed
2023-06-16 10:37:42,482:INFO:              mlflow: Not installed
2023-06-16 10:37:42,482:INFO:              gradio: Not installed
2023-06-16 10:37:42,482:INFO:             fastapi: Not installed
2023-06-16 10:37:42,482:INFO:             uvicorn: Not installed
2023-06-16 10:37:42,482:INFO:              m2cgen: Not installed
2023-06-16 10:37:42,482:INFO:           evidently: Not installed
2023-06-16 10:37:42,482:INFO:               fugue: Not installed
2023-06-16 10:37:42,483:INFO:           streamlit: Not installed
2023-06-16 10:37:42,483:INFO:             prophet: Not installed
2023-06-16 10:37:42,483:INFO:None
2023-06-16 10:37:42,483:INFO:Set up data.
2023-06-16 10:37:42,563:INFO:Set up train/test split.
2023-06-16 10:37:42,593:INFO:Set up index.
2023-06-16 10:37:42,594:INFO:Set up folding strategy.
2023-06-16 10:37:42,594:INFO:Assigning column types.
2023-06-16 10:37:42,614:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:37:42,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,764:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,766:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,802:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:37:42,854:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,952:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,999:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:37:43,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,163:INFO:Preparing preprocessing pipeline...
2023-06-16 10:37:43,165:INFO:Set up simple imputation.
2023-06-16 10:37:43,176:INFO:Set up encoding of ordinal features.
2023-06-16 10:37:43,186:INFO:Set up encoding of categorical features.
2023-06-16 10:37:43,186:INFO:Set up imbalanced handling.
2023-06-16 10:37:43,187:INFO:Set up column name cleaning.
2023-06-16 10:37:43,593:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:37:43,643:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:37:43,643:INFO:Creating final display dataframe.
2023-06-16 10:37:43,838:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              c116
2023-06-16 10:37:43,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:44,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:44,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:44,081:INFO:setup() successfully completed in 1.7s...............
2023-06-16 10:37:48,025:INFO:Initializing compare_models()
2023-06-16 10:37:48,025:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 10:37:48,025:INFO:Checking exceptions
2023-06-16 10:37:48,035:INFO:Preparing display monitor
2023-06-16 10:37:48,139:INFO:Initializing Logistic Regression
2023-06-16 10:37:48,139:INFO:Total runtime is 0.0 minutes
2023-06-16 10:37:48,144:INFO:SubProcess create_model() called ==================================
2023-06-16 10:37:48,144:INFO:Initializing create_model()
2023-06-16 10:37:48,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:37:48,144:INFO:Checking exceptions
2023-06-16 10:37:48,144:INFO:Importing libraries
2023-06-16 10:37:48,145:INFO:Copying training dataset
2023-06-16 10:37:48,159:INFO:Defining folds
2023-06-16 10:37:48,159:INFO:Declaring metric variables
2023-06-16 10:37:48,163:INFO:Importing untrained model
2023-06-16 10:37:48,170:INFO:Logistic Regression Imported successfully
2023-06-16 10:37:48,186:INFO:Starting cross validation
2023-06-16 10:37:48,199:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:37:56,144:INFO:Calculating mean and std
2023-06-16 10:37:56,146:INFO:Creating metrics dataframe
2023-06-16 10:37:56,283:INFO:Uploading results into container
2023-06-16 10:37:56,284:INFO:Uploading model into container now
2023-06-16 10:37:56,284:INFO:_master_model_container: 1
2023-06-16 10:37:56,284:INFO:_display_container: 2
2023-06-16 10:37:56,285:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 10:37:56,285:INFO:create_model() successfully completed......................................
2023-06-16 10:37:56,362:INFO:SubProcess create_model() end ==================================
2023-06-16 10:37:56,362:INFO:Creating metrics dataframe
2023-06-16 10:37:56,384:INFO:Initializing K Neighbors Classifier
2023-06-16 10:37:56,385:INFO:Total runtime is 0.13743335803349813 minutes
2023-06-16 10:37:56,389:INFO:SubProcess create_model() called ==================================
2023-06-16 10:37:56,389:INFO:Initializing create_model()
2023-06-16 10:37:56,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:37:56,390:INFO:Checking exceptions
2023-06-16 10:37:56,390:INFO:Importing libraries
2023-06-16 10:37:56,390:INFO:Copying training dataset
2023-06-16 10:37:56,410:INFO:Defining folds
2023-06-16 10:37:56,411:INFO:Declaring metric variables
2023-06-16 10:37:56,416:INFO:Importing untrained model
2023-06-16 10:37:56,421:INFO:K Neighbors Classifier Imported successfully
2023-06-16 10:37:56,431:INFO:Starting cross validation
2023-06-16 10:37:56,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:04,757:INFO:Calculating mean and std
2023-06-16 10:38:04,759:INFO:Creating metrics dataframe
2023-06-16 10:38:04,891:INFO:Uploading results into container
2023-06-16 10:38:04,892:INFO:Uploading model into container now
2023-06-16 10:38:04,892:INFO:_master_model_container: 2
2023-06-16 10:38:04,892:INFO:_display_container: 2
2023-06-16 10:38:04,892:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 10:38:04,893:INFO:create_model() successfully completed......................................
2023-06-16 10:38:04,952:INFO:SubProcess create_model() end ==================================
2023-06-16 10:38:04,953:INFO:Creating metrics dataframe
2023-06-16 10:38:04,973:INFO:Initializing Naive Bayes
2023-06-16 10:38:04,973:INFO:Total runtime is 0.2805674990018209 minutes
2023-06-16 10:38:04,977:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:04,977:INFO:Initializing create_model()
2023-06-16 10:38:04,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:04,978:INFO:Checking exceptions
2023-06-16 10:38:04,978:INFO:Importing libraries
2023-06-16 10:38:04,978:INFO:Copying training dataset
2023-06-16 10:38:04,992:INFO:Defining folds
2023-06-16 10:38:04,992:INFO:Declaring metric variables
2023-06-16 10:38:04,997:INFO:Importing untrained model
2023-06-16 10:38:05,002:INFO:Naive Bayes Imported successfully
2023-06-16 10:38:05,038:INFO:Starting cross validation
2023-06-16 10:38:05,040:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:08,063:INFO:Calculating mean and std
2023-06-16 10:38:08,065:INFO:Creating metrics dataframe
2023-06-16 10:38:08,197:INFO:Uploading results into container
2023-06-16 10:38:08,198:INFO:Uploading model into container now
2023-06-16 10:38:08,198:INFO:_master_model_container: 3
2023-06-16 10:38:08,198:INFO:_display_container: 2
2023-06-16 10:38:08,199:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-16 10:38:08,199:INFO:create_model() successfully completed......................................
2023-06-16 10:38:08,261:INFO:SubProcess create_model() end ==================================
2023-06-16 10:38:08,261:INFO:Creating metrics dataframe
2023-06-16 10:38:08,283:INFO:Initializing Decision Tree Classifier
2023-06-16 10:38:08,283:INFO:Total runtime is 0.33573398987452185 minutes
2023-06-16 10:38:08,287:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:08,288:INFO:Initializing create_model()
2023-06-16 10:38:08,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:08,288:INFO:Checking exceptions
2023-06-16 10:38:08,288:INFO:Importing libraries
2023-06-16 10:38:08,288:INFO:Copying training dataset
2023-06-16 10:38:08,305:INFO:Defining folds
2023-06-16 10:38:08,306:INFO:Declaring metric variables
2023-06-16 10:38:08,310:INFO:Importing untrained model
2023-06-16 10:38:08,318:INFO:Decision Tree Classifier Imported successfully
2023-06-16 10:38:08,333:INFO:Starting cross validation
2023-06-16 10:38:08,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:10,460:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-16 10:38:10,477:WARNING:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 10:38:10,477:INFO:Initializing create_model()
2023-06-16 10:38:10,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:10,478:INFO:Checking exceptions
2023-06-16 10:38:10,478:INFO:Importing libraries
2023-06-16 10:38:10,478:INFO:Copying training dataset
2023-06-16 10:38:10,496:INFO:Defining folds
2023-06-16 10:38:10,496:INFO:Declaring metric variables
2023-06-16 10:38:10,500:INFO:Importing untrained model
2023-06-16 10:38:10,510:INFO:Decision Tree Classifier Imported successfully
2023-06-16 10:38:10,538:INFO:Starting cross validation
2023-06-16 10:38:10,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:16,407:ERROR:create_model() for dt raised an exception or returned all 0.0:
2023-06-16 10:38:16,409:ERROR:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 10:38:16,409:INFO:Initializing SVM - Linear Kernel
2023-06-16 10:38:16,409:INFO:Total runtime is 0.4711666663487752 minutes
2023-06-16 10:38:16,413:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:16,414:INFO:Initializing create_model()
2023-06-16 10:38:16,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:16,414:INFO:Checking exceptions
2023-06-16 10:38:16,414:INFO:Importing libraries
2023-06-16 10:38:16,414:INFO:Copying training dataset
2023-06-16 10:38:16,433:INFO:Defining folds
2023-06-16 10:38:16,433:INFO:Declaring metric variables
2023-06-16 10:38:16,438:INFO:Importing untrained model
2023-06-16 10:38:16,443:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 10:38:16,458:INFO:Starting cross validation
2023-06-16 10:38:16,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:24,353:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:24,416:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:24,529:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:25,117:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:28,244:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:28,656:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:29,219:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:29,568:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:32,050:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:32,824:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:32,834:INFO:Calculating mean and std
2023-06-16 10:38:32,835:INFO:Creating metrics dataframe
2023-06-16 10:38:32,995:INFO:Uploading results into container
2023-06-16 10:38:32,996:INFO:Uploading model into container now
2023-06-16 10:38:32,996:INFO:_master_model_container: 4
2023-06-16 10:38:32,996:INFO:_display_container: 2
2023-06-16 10:38:32,997:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 10:38:32,997:INFO:create_model() successfully completed......................................
2023-06-16 10:38:33,259:INFO:SubProcess create_model() end ==================================
2023-06-16 10:38:33,259:INFO:Creating metrics dataframe
2023-06-16 10:38:33,276:INFO:Initializing Ridge Classifier
2023-06-16 10:38:33,276:INFO:Total runtime is 0.7522833188374837 minutes
2023-06-16 10:38:33,280:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:33,281:INFO:Initializing create_model()
2023-06-16 10:38:33,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:33,282:INFO:Checking exceptions
2023-06-16 10:38:33,282:INFO:Importing libraries
2023-06-16 10:38:33,282:INFO:Copying training dataset
2023-06-16 10:38:33,331:INFO:Defining folds
2023-06-16 10:38:33,332:INFO:Declaring metric variables
2023-06-16 10:38:33,344:INFO:Importing untrained model
2023-06-16 10:38:33,352:INFO:Ridge Classifier Imported successfully
2023-06-16 10:38:33,364:INFO:Starting cross validation
2023-06-16 10:38:33,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:34,297:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:34,368:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:34,369:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:34,384:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:35,532:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:35,541:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:35,713:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:35,726:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:36,425:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:36,534:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:36,544:INFO:Calculating mean and std
2023-06-16 10:38:36,546:INFO:Creating metrics dataframe
2023-06-16 10:38:36,691:INFO:Uploading results into container
2023-06-16 10:38:36,691:INFO:Uploading model into container now
2023-06-16 10:38:36,692:INFO:_master_model_container: 5
2023-06-16 10:38:36,692:INFO:_display_container: 2
2023-06-16 10:38:36,692:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=420, solver='auto', tol=0.001)
2023-06-16 10:38:36,693:INFO:create_model() successfully completed......................................
2023-06-16 10:38:36,759:INFO:SubProcess create_model() end ==================================
2023-06-16 10:38:36,759:INFO:Creating metrics dataframe
2023-06-16 10:38:36,776:INFO:Initializing Random Forest Classifier
2023-06-16 10:38:36,777:INFO:Total runtime is 0.8106340050697326 minutes
2023-06-16 10:38:36,781:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:36,781:INFO:Initializing create_model()
2023-06-16 10:38:36,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:36,782:INFO:Checking exceptions
2023-06-16 10:38:36,782:INFO:Importing libraries
2023-06-16 10:38:36,782:INFO:Copying training dataset
2023-06-16 10:38:36,797:INFO:Defining folds
2023-06-16 10:38:36,798:INFO:Declaring metric variables
2023-06-16 10:38:36,802:INFO:Importing untrained model
2023-06-16 10:38:36,807:INFO:Random Forest Classifier Imported successfully
2023-06-16 10:38:36,816:INFO:Starting cross validation
2023-06-16 10:38:36,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:47:01,285:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 10:55:41,272:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 10:59:46,848:INFO:Calculating mean and std
2023-06-16 10:59:46,850:INFO:Creating metrics dataframe
2023-06-16 10:59:47,022:INFO:Uploading results into container
2023-06-16 10:59:47,023:INFO:Uploading model into container now
2023-06-16 10:59:47,023:INFO:_master_model_container: 6
2023-06-16 10:59:47,023:INFO:_display_container: 2
2023-06-16 10:59:47,024:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 10:59:47,024:INFO:create_model() successfully completed......................................
2023-06-16 10:59:47,103:INFO:SubProcess create_model() end ==================================
2023-06-16 10:59:47,103:INFO:Creating metrics dataframe
2023-06-16 10:59:47,121:INFO:Initializing Quadratic Discriminant Analysis
2023-06-16 10:59:47,121:INFO:Total runtime is 21.983034598827363 minutes
2023-06-16 10:59:47,126:INFO:SubProcess create_model() called ==================================
2023-06-16 10:59:47,126:INFO:Initializing create_model()
2023-06-16 10:59:47,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:59:47,126:INFO:Checking exceptions
2023-06-16 10:59:47,126:INFO:Importing libraries
2023-06-16 10:59:47,127:INFO:Copying training dataset
2023-06-16 10:59:47,143:INFO:Defining folds
2023-06-16 10:59:47,143:INFO:Declaring metric variables
2023-06-16 10:59:47,148:INFO:Importing untrained model
2023-06-16 10:59:47,153:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-16 10:59:47,163:INFO:Starting cross validation
2023-06-16 10:59:47,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:59:47,908:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:47,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:47,934:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:48,003:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:49,355:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:49,521:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:49,644:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:49,661:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:50,757:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:50,888:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:51,414:INFO:Calculating mean and std
2023-06-16 10:59:51,415:INFO:Creating metrics dataframe
2023-06-16 10:59:51,606:INFO:Uploading results into container
2023-06-16 10:59:51,607:INFO:Uploading model into container now
2023-06-16 10:59:51,608:INFO:_master_model_container: 7
2023-06-16 10:59:51,609:INFO:_display_container: 2
2023-06-16 10:59:51,612:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-16 10:59:51,612:INFO:create_model() successfully completed......................................
2023-06-16 10:59:51,679:INFO:SubProcess create_model() end ==================================
2023-06-16 10:59:51,679:INFO:Creating metrics dataframe
2023-06-16 10:59:51,696:INFO:Initializing Ada Boost Classifier
2023-06-16 10:59:51,697:INFO:Total runtime is 22.059301308790843 minutes
2023-06-16 10:59:51,702:INFO:SubProcess create_model() called ==================================
2023-06-16 10:59:51,702:INFO:Initializing create_model()
2023-06-16 10:59:51,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:59:51,702:INFO:Checking exceptions
2023-06-16 10:59:51,702:INFO:Importing libraries
2023-06-16 10:59:51,703:INFO:Copying training dataset
2023-06-16 10:59:51,720:INFO:Defining folds
2023-06-16 10:59:51,721:INFO:Declaring metric variables
2023-06-16 10:59:51,726:INFO:Importing untrained model
2023-06-16 10:59:51,731:INFO:Ada Boost Classifier Imported successfully
2023-06-16 10:59:51,746:INFO:Starting cross validation
2023-06-16 10:59:51,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:59:54,118:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-16 10:59:54,119:WARNING:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 10:59:54,119:INFO:Initializing create_model()
2023-06-16 10:59:54,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:59:54,120:INFO:Checking exceptions
2023-06-16 10:59:54,120:INFO:Importing libraries
2023-06-16 10:59:54,120:INFO:Copying training dataset
2023-06-16 10:59:54,139:INFO:Defining folds
2023-06-16 10:59:54,139:INFO:Declaring metric variables
2023-06-16 10:59:54,145:INFO:Importing untrained model
2023-06-16 10:59:54,151:INFO:Ada Boost Classifier Imported successfully
2023-06-16 10:59:54,161:INFO:Starting cross validation
2023-06-16 10:59:54,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:00,512:ERROR:create_model() for ada raised an exception or returned all 0.0:
2023-06-16 11:00:00,514:ERROR:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 11:00:00,514:INFO:Initializing Gradient Boosting Classifier
2023-06-16 11:00:00,515:INFO:Total runtime is 22.20626333554586 minutes
2023-06-16 11:00:00,519:INFO:SubProcess create_model() called ==================================
2023-06-16 11:00:00,519:INFO:Initializing create_model()
2023-06-16 11:00:00,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:00,519:INFO:Checking exceptions
2023-06-16 11:00:00,519:INFO:Importing libraries
2023-06-16 11:00:00,519:INFO:Copying training dataset
2023-06-16 11:00:00,539:INFO:Defining folds
2023-06-16 11:00:00,539:INFO:Declaring metric variables
2023-06-16 11:00:00,546:INFO:Importing untrained model
2023-06-16 11:00:00,551:INFO:Gradient Boosting Classifier Imported successfully
2023-06-16 11:00:00,581:INFO:Starting cross validation
2023-06-16 11:00:00,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:06,675:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-16 11:00:06,676:WARNING:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 11:00:06,676:INFO:Initializing create_model()
2023-06-16 11:00:06,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:06,676:INFO:Checking exceptions
2023-06-16 11:00:06,676:INFO:Importing libraries
2023-06-16 11:00:06,676:INFO:Copying training dataset
2023-06-16 11:00:06,696:INFO:Defining folds
2023-06-16 11:00:06,696:INFO:Declaring metric variables
2023-06-16 11:00:06,704:INFO:Importing untrained model
2023-06-16 11:00:06,709:INFO:Gradient Boosting Classifier Imported successfully
2023-06-16 11:00:06,720:INFO:Starting cross validation
2023-06-16 11:00:06,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:12,920:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2023-06-16 11:00:12,921:ERROR:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 11:00:12,922:INFO:Initializing Linear Discriminant Analysis
2023-06-16 11:00:12,922:INFO:Total runtime is 22.41304188569387 minutes
2023-06-16 11:00:12,926:INFO:SubProcess create_model() called ==================================
2023-06-16 11:00:12,926:INFO:Initializing create_model()
2023-06-16 11:00:12,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:12,926:INFO:Checking exceptions
2023-06-16 11:00:12,926:INFO:Importing libraries
2023-06-16 11:00:12,926:INFO:Copying training dataset
2023-06-16 11:00:12,946:INFO:Defining folds
2023-06-16 11:00:12,946:INFO:Declaring metric variables
2023-06-16 11:00:12,953:INFO:Importing untrained model
2023-06-16 11:00:12,964:INFO:Linear Discriminant Analysis Imported successfully
2023-06-16 11:00:12,974:INFO:Starting cross validation
2023-06-16 11:00:12,976:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:21,323:INFO:Calculating mean and std
2023-06-16 11:00:21,325:INFO:Creating metrics dataframe
2023-06-16 11:00:21,514:INFO:Uploading results into container
2023-06-16 11:00:21,515:INFO:Uploading model into container now
2023-06-16 11:00:21,516:INFO:_master_model_container: 8
2023-06-16 11:00:21,516:INFO:_display_container: 2
2023-06-16 11:00:21,516:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-16 11:00:21,518:INFO:create_model() successfully completed......................................
2023-06-16 11:00:21,850:INFO:SubProcess create_model() end ==================================
2023-06-16 11:00:21,850:INFO:Creating metrics dataframe
2023-06-16 11:00:21,869:INFO:Initializing Extra Trees Classifier
2023-06-16 11:00:21,870:INFO:Total runtime is 22.562175846099855 minutes
2023-06-16 11:00:21,874:INFO:SubProcess create_model() called ==================================
2023-06-16 11:00:21,874:INFO:Initializing create_model()
2023-06-16 11:00:21,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:21,875:INFO:Checking exceptions
2023-06-16 11:00:21,875:INFO:Importing libraries
2023-06-16 11:00:21,875:INFO:Copying training dataset
2023-06-16 11:00:21,892:INFO:Defining folds
2023-06-16 11:00:21,892:INFO:Declaring metric variables
2023-06-16 11:00:21,896:INFO:Importing untrained model
2023-06-16 11:00:21,902:INFO:Extra Trees Classifier Imported successfully
2023-06-16 11:00:21,912:INFO:Starting cross validation
2023-06-16 11:00:21,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:49,738:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 11:00:49,742:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-16 11:00:57,728:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 11:00:58,823:INFO:Calculating mean and std
2023-06-16 11:00:58,825:INFO:Creating metrics dataframe
2023-06-16 11:00:59,038:INFO:Uploading results into container
2023-06-16 11:00:59,039:INFO:Uploading model into container now
2023-06-16 11:00:59,040:INFO:_master_model_container: 9
2023-06-16 11:00:59,040:INFO:_display_container: 2
2023-06-16 11:00:59,040:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=420, verbose=0, warm_start=False)
2023-06-16 11:00:59,041:INFO:create_model() successfully completed......................................
2023-06-16 11:00:59,120:INFO:SubProcess create_model() end ==================================
2023-06-16 11:00:59,120:INFO:Creating metrics dataframe
2023-06-16 11:00:59,149:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 11:00:59,149:INFO:Total runtime is 23.183500532309214 minutes
2023-06-16 11:00:59,155:INFO:SubProcess create_model() called ==================================
2023-06-16 11:00:59,155:INFO:Initializing create_model()
2023-06-16 11:00:59,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:59,156:INFO:Checking exceptions
2023-06-16 11:00:59,156:INFO:Importing libraries
2023-06-16 11:00:59,156:INFO:Copying training dataset
2023-06-16 11:00:59,198:INFO:Defining folds
2023-06-16 11:00:59,198:INFO:Declaring metric variables
2023-06-16 11:00:59,205:INFO:Importing untrained model
2023-06-16 11:00:59,210:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:00:59,220:INFO:Starting cross validation
2023-06-16 11:00:59,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:01:06,579:INFO:Calculating mean and std
2023-06-16 11:01:06,581:INFO:Creating metrics dataframe
2023-06-16 11:01:06,797:INFO:Uploading results into container
2023-06-16 11:01:06,797:INFO:Uploading model into container now
2023-06-16 11:01:06,798:INFO:_master_model_container: 10
2023-06-16 11:01:06,798:INFO:_display_container: 2
2023-06-16 11:01:06,798:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:01:06,798:INFO:create_model() successfully completed......................................
2023-06-16 11:01:06,866:INFO:SubProcess create_model() end ==================================
2023-06-16 11:01:06,866:INFO:Creating metrics dataframe
2023-06-16 11:01:06,888:INFO:Initializing Dummy Classifier
2023-06-16 11:01:06,888:INFO:Total runtime is 23.31248385111491 minutes
2023-06-16 11:01:06,893:INFO:SubProcess create_model() called ==================================
2023-06-16 11:01:06,894:INFO:Initializing create_model()
2023-06-16 11:01:06,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:01:06,895:INFO:Checking exceptions
2023-06-16 11:01:06,895:INFO:Importing libraries
2023-06-16 11:01:06,895:INFO:Copying training dataset
2023-06-16 11:01:06,913:INFO:Defining folds
2023-06-16 11:01:06,913:INFO:Declaring metric variables
2023-06-16 11:01:06,918:INFO:Importing untrained model
2023-06-16 11:01:06,923:INFO:Dummy Classifier Imported successfully
2023-06-16 11:01:06,933:INFO:Starting cross validation
2023-06-16 11:01:06,935:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:01:07,705:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:07,810:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:07,845:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:07,865:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:08,886:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:08,904:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:08,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:08,919:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:09,846:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:09,889:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:10,024:INFO:Calculating mean and std
2023-06-16 11:01:10,026:INFO:Creating metrics dataframe
2023-06-16 11:01:10,253:INFO:Uploading results into container
2023-06-16 11:01:10,254:INFO:Uploading model into container now
2023-06-16 11:01:10,254:INFO:_master_model_container: 11
2023-06-16 11:01:10,254:INFO:_display_container: 2
2023-06-16 11:01:10,254:INFO:DummyClassifier(constant=None, random_state=420, strategy='prior')
2023-06-16 11:01:10,255:INFO:create_model() successfully completed......................................
2023-06-16 11:01:10,322:INFO:SubProcess create_model() end ==================================
2023-06-16 11:01:10,322:INFO:Creating metrics dataframe
2023-06-16 11:01:10,355:INFO:Initializing create_model()
2023-06-16 11:01:10,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:01:10,356:INFO:Checking exceptions
2023-06-16 11:01:10,359:INFO:Importing libraries
2023-06-16 11:01:10,359:INFO:Copying training dataset
2023-06-16 11:01:10,374:INFO:Defining folds
2023-06-16 11:01:10,374:INFO:Declaring metric variables
2023-06-16 11:01:10,375:INFO:Importing untrained model
2023-06-16 11:01:10,375:INFO:Declaring custom model
2023-06-16 11:01:10,376:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:01:10,377:INFO:Cross validation set to False
2023-06-16 11:01:10,378:INFO:Fitting Model
2023-06-16 11:01:11,534:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:01:11,534:INFO:create_model() successfully completed......................................
2023-06-16 11:01:11,655:INFO:_master_model_container: 11
2023-06-16 11:01:11,655:INFO:_display_container: 2
2023-06-16 11:01:11,655:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:01:11,655:INFO:compare_models() successfully completed......................................
2023-06-16 11:05:04,168:INFO:Initializing evaluate_model()
2023-06-16 11:05:04,168:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:05:04,203:INFO:Initializing plot_model()
2023-06-16 11:05:04,203:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:04,203:INFO:Checking exceptions
2023-06-16 11:05:04,209:INFO:Preloading libraries
2023-06-16 11:05:04,238:INFO:Copying training dataset
2023-06-16 11:05:04,239:INFO:Plot type: pipeline
2023-06-16 11:05:04,515:INFO:Visual Rendered Successfully
2023-06-16 11:05:04,602:INFO:plot_model() successfully completed......................................
2023-06-16 11:05:14,276:INFO:Initializing plot_model()
2023-06-16 11:05:14,276:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:14,276:INFO:Checking exceptions
2023-06-16 11:05:14,283:INFO:Preloading libraries
2023-06-16 11:05:14,294:INFO:Copying training dataset
2023-06-16 11:05:14,294:INFO:Plot type: parameter
2023-06-16 11:05:14,299:INFO:Visual Rendered Successfully
2023-06-16 11:05:14,382:INFO:plot_model() successfully completed......................................
2023-06-16 11:05:16,888:INFO:Initializing plot_model()
2023-06-16 11:05:16,889:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:16,889:INFO:Checking exceptions
2023-06-16 11:05:16,896:INFO:Preloading libraries
2023-06-16 11:05:16,904:INFO:Copying training dataset
2023-06-16 11:05:16,904:INFO:Plot type: auc
2023-06-16 11:05:17,086:INFO:Fitting Model
2023-06-16 11:05:17,087:INFO:Scoring test/hold-out set
2023-06-16 11:05:17,353:INFO:Visual Rendered Successfully
2023-06-16 11:05:17,430:INFO:plot_model() successfully completed......................................
2023-06-16 11:05:25,240:INFO:Initializing plot_model()
2023-06-16 11:05:25,240:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:25,240:INFO:Checking exceptions
2023-06-16 11:05:25,248:INFO:Preloading libraries
2023-06-16 11:05:25,257:INFO:Copying training dataset
2023-06-16 11:05:25,257:INFO:Plot type: confusion_matrix
2023-06-16 11:05:25,432:INFO:Fitting Model
2023-06-16 11:05:25,433:INFO:Scoring test/hold-out set
2023-06-16 11:05:25,603:INFO:Visual Rendered Successfully
2023-06-16 11:05:25,683:INFO:plot_model() successfully completed......................................
2023-06-16 11:05:28,239:INFO:Initializing plot_model()
2023-06-16 11:05:28,240:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:28,240:INFO:Checking exceptions
2023-06-16 11:05:28,246:INFO:Preloading libraries
2023-06-16 11:05:28,255:INFO:Copying training dataset
2023-06-16 11:05:28,255:INFO:Plot type: threshold
2023-06-16 11:05:28,424:INFO:Fitting Model
2023-06-16 11:06:02,385:INFO:Scoring test/hold-out set
2023-06-16 11:06:02,890:INFO:Visual Rendered Successfully
2023-06-16 11:06:02,970:INFO:plot_model() successfully completed......................................
2023-06-16 11:06:03,008:INFO:Initializing evaluate_model()
2023-06-16 11:06:03,008:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=['lr'], fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:06:03,041:INFO:Initializing plot_model()
2023-06-16 11:06:03,042:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=['lr'], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:03,042:INFO:Checking exceptions
2023-06-16 11:06:03,067:INFO:Initializing plot_model()
2023-06-16 11:06:03,067:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:03,068:INFO:Checking exceptions
2023-06-16 11:06:03,075:INFO:Preloading libraries
2023-06-16 11:06:03,091:INFO:Copying training dataset
2023-06-16 11:06:03,091:INFO:Plot type: pipeline
2023-06-16 11:06:03,327:INFO:Visual Rendered Successfully
2023-06-16 11:06:03,392:INFO:plot_model() successfully completed......................................
2023-06-16 11:06:14,983:INFO:Initializing evaluate_model()
2023-06-16 11:06:14,983:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:06:15,018:INFO:Initializing plot_model()
2023-06-16 11:06:15,018:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:15,018:INFO:Checking exceptions
2023-06-16 11:06:15,025:INFO:Preloading libraries
2023-06-16 11:06:15,050:INFO:Copying training dataset
2023-06-16 11:06:15,050:INFO:Plot type: pipeline
2023-06-16 11:06:15,264:INFO:Visual Rendered Successfully
2023-06-16 11:06:15,345:INFO:plot_model() successfully completed......................................
2023-06-16 11:06:17,264:INFO:Initializing plot_model()
2023-06-16 11:06:17,264:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:17,265:INFO:Checking exceptions
2023-06-16 11:06:17,270:INFO:Preloading libraries
2023-06-16 11:06:17,283:INFO:Copying training dataset
2023-06-16 11:06:17,283:INFO:Plot type: feature
2023-06-16 11:06:17,284:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 11:06:17,482:INFO:Visual Rendered Successfully
2023-06-16 11:06:17,546:INFO:plot_model() successfully completed......................................
2023-06-16 11:06:55,730:INFO:Initializing evaluate_model()
2023-06-16 11:06:55,730:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:06:55,760:INFO:Initializing plot_model()
2023-06-16 11:06:55,760:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=lr, feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:55,760:INFO:Checking exceptions
2023-06-16 11:07:09,256:INFO:Initializing evaluate_model()
2023-06-16 11:07:09,256:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:07:09,288:INFO:Initializing plot_model()
2023-06-16 11:07:09,289:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=lr, feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:07:09,289:INFO:Checking exceptions
2023-06-16 11:08:19,106:INFO:Initializing compare_models()
2023-06-16 11:08:19,107:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 11:08:19,107:INFO:Checking exceptions
2023-06-16 11:08:19,114:INFO:Preparing display monitor
2023-06-16 11:08:19,176:INFO:Initializing Logistic Regression
2023-06-16 11:08:19,177:INFO:Total runtime is 1.6657511393229165e-05 minutes
2023-06-16 11:08:19,185:INFO:SubProcess create_model() called ==================================
2023-06-16 11:08:19,186:INFO:Initializing create_model()
2023-06-16 11:08:19,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F821278A60>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:08:19,186:INFO:Checking exceptions
2023-06-16 11:08:19,186:INFO:Importing libraries
2023-06-16 11:08:19,186:INFO:Copying training dataset
2023-06-16 11:08:19,216:INFO:Defining folds
2023-06-16 11:08:19,217:INFO:Declaring metric variables
2023-06-16 11:08:19,234:INFO:Importing untrained model
2023-06-16 11:08:19,238:INFO:Logistic Regression Imported successfully
2023-06-16 11:08:19,253:INFO:Starting cross validation
2023-06-16 11:08:19,256:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:08:25,748:INFO:Calculating mean and std
2023-06-16 11:08:25,752:INFO:Creating metrics dataframe
2023-06-16 11:08:25,969:INFO:Uploading results into container
2023-06-16 11:08:25,970:INFO:Uploading model into container now
2023-06-16 11:08:25,970:INFO:_master_model_container: 12
2023-06-16 11:08:25,970:INFO:_display_container: 3
2023-06-16 11:08:25,971:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:08:25,971:INFO:create_model() successfully completed......................................
2023-06-16 11:08:26,080:INFO:SubProcess create_model() end ==================================
2023-06-16 11:08:26,080:INFO:Creating metrics dataframe
2023-06-16 11:08:26,096:INFO:Initializing SVM - Linear Kernel
2023-06-16 11:08:26,097:INFO:Total runtime is 0.11533967653910318 minutes
2023-06-16 11:08:26,101:INFO:SubProcess create_model() called ==================================
2023-06-16 11:08:26,102:INFO:Initializing create_model()
2023-06-16 11:08:26,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F821278A60>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:08:26,102:INFO:Checking exceptions
2023-06-16 11:08:26,102:INFO:Importing libraries
2023-06-16 11:08:26,102:INFO:Copying training dataset
2023-06-16 11:08:26,119:INFO:Defining folds
2023-06-16 11:08:26,119:INFO:Declaring metric variables
2023-06-16 11:08:26,124:INFO:Importing untrained model
2023-06-16 11:08:26,129:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:08:26,142:INFO:Starting cross validation
2023-06-16 11:08:26,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:08:26,724:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:26,730:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:26,742:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:26,802:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:27,530:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:27,554:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:27,568:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:27,605:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:28,241:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:28,437:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:28,770:INFO:Calculating mean and std
2023-06-16 11:08:28,774:INFO:Creating metrics dataframe
2023-06-16 11:08:29,048:INFO:Uploading results into container
2023-06-16 11:08:29,048:INFO:Uploading model into container now
2023-06-16 11:08:29,049:INFO:_master_model_container: 13
2023-06-16 11:08:29,049:INFO:_display_container: 3
2023-06-16 11:08:29,050:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:08:29,050:INFO:create_model() successfully completed......................................
2023-06-16 11:08:29,122:INFO:SubProcess create_model() end ==================================
2023-06-16 11:08:29,122:INFO:Creating metrics dataframe
2023-06-16 11:08:29,140:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 11:08:29,140:INFO:Total runtime is 0.16606504122416177 minutes
2023-06-16 11:08:29,144:INFO:SubProcess create_model() called ==================================
2023-06-16 11:08:29,144:INFO:Initializing create_model()
2023-06-16 11:08:29,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F821278A60>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:08:29,144:INFO:Checking exceptions
2023-06-16 11:08:29,145:INFO:Importing libraries
2023-06-16 11:08:29,145:INFO:Copying training dataset
2023-06-16 11:08:29,165:INFO:Defining folds
2023-06-16 11:08:29,166:INFO:Declaring metric variables
2023-06-16 11:08:29,170:INFO:Importing untrained model
2023-06-16 11:08:29,175:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:08:29,186:INFO:Starting cross validation
2023-06-16 11:08:29,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:08:32,237:INFO:Calculating mean and std
2023-06-16 11:08:32,239:INFO:Creating metrics dataframe
2023-06-16 11:08:32,451:INFO:Uploading results into container
2023-06-16 11:08:32,451:INFO:Uploading model into container now
2023-06-16 11:08:32,452:INFO:_master_model_container: 14
2023-06-16 11:08:32,452:INFO:_display_container: 3
2023-06-16 11:08:32,453:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:08:32,453:INFO:create_model() successfully completed......................................
2023-06-16 11:08:32,532:INFO:SubProcess create_model() end ==================================
2023-06-16 11:08:32,532:INFO:Creating metrics dataframe
2023-06-16 11:08:32,563:INFO:Initializing create_model()
2023-06-16 11:08:32,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:08:32,564:INFO:Checking exceptions
2023-06-16 11:08:32,568:INFO:Importing libraries
2023-06-16 11:08:32,568:INFO:Copying training dataset
2023-06-16 11:08:32,583:INFO:Defining folds
2023-06-16 11:08:32,583:INFO:Declaring metric variables
2023-06-16 11:08:32,583:INFO:Importing untrained model
2023-06-16 11:08:32,584:INFO:Declaring custom model
2023-06-16 11:08:32,585:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:08:32,587:INFO:Cross validation set to False
2023-06-16 11:08:32,587:INFO:Fitting Model
2023-06-16 11:08:33,137:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:08:33,138:INFO:create_model() successfully completed......................................
2023-06-16 11:08:33,246:INFO:_master_model_container: 14
2023-06-16 11:08:33,246:INFO:_display_container: 3
2023-06-16 11:08:33,247:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:08:33,247:INFO:compare_models() successfully completed......................................
2023-06-16 11:08:51,496:INFO:Initializing evaluate_model()
2023-06-16 11:08:51,497:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:08:51,531:INFO:Initializing plot_model()
2023-06-16 11:08:51,531:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:08:51,531:INFO:Checking exceptions
2023-06-16 11:08:51,537:INFO:Preloading libraries
2023-06-16 11:08:51,560:INFO:Copying training dataset
2023-06-16 11:08:51,560:INFO:Plot type: pipeline
2023-06-16 11:08:51,811:INFO:Visual Rendered Successfully
2023-06-16 11:08:51,910:INFO:plot_model() successfully completed......................................
2023-06-16 11:08:54,720:INFO:Initializing plot_model()
2023-06-16 11:08:54,720:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:08:54,720:INFO:Checking exceptions
2023-06-16 11:08:54,727:INFO:Preloading libraries
2023-06-16 11:08:54,738:INFO:Copying training dataset
2023-06-16 11:08:54,738:INFO:Plot type: auc
2023-06-16 11:08:54,925:INFO:Fitting Model
2023-06-16 11:08:54,927:INFO:Scoring test/hold-out set
2023-06-16 11:08:55,161:INFO:Visual Rendered Successfully
2023-06-16 11:08:55,246:INFO:plot_model() successfully completed......................................
2023-06-16 11:08:58,863:INFO:Initializing plot_model()
2023-06-16 11:08:58,863:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:08:58,863:INFO:Checking exceptions
2023-06-16 11:08:58,870:INFO:Preloading libraries
2023-06-16 11:08:58,878:INFO:Copying training dataset
2023-06-16 11:08:58,878:INFO:Plot type: dimension
2023-06-16 11:08:58,974:INFO:Fitting StandardScaler()
2023-06-16 11:08:59,092:INFO:Fitting PCA()
2023-06-16 11:08:59,400:INFO:Fitting & Transforming Model
2023-06-16 11:09:01,211:INFO:Visual Rendered Successfully
2023-06-16 11:09:01,298:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:04,872:INFO:Initializing plot_model()
2023-06-16 11:09:04,872:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:04,872:INFO:Checking exceptions
2023-06-16 11:09:07,008:INFO:Initializing plot_model()
2023-06-16 11:09:07,008:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:07,008:INFO:Checking exceptions
2023-06-16 11:09:07,015:INFO:Preloading libraries
2023-06-16 11:09:07,030:INFO:Copying training dataset
2023-06-16 11:09:07,030:INFO:Plot type: gain
2023-06-16 11:09:07,030:INFO:Generating predictions / predict_proba on X_test
2023-06-16 11:09:07,271:INFO:Visual Rendered Successfully
2023-06-16 11:09:07,339:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:09,912:INFO:Initializing plot_model()
2023-06-16 11:09:09,912:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:09,912:INFO:Checking exceptions
2023-06-16 11:09:09,919:INFO:Preloading libraries
2023-06-16 11:09:09,927:INFO:Copying training dataset
2023-06-16 11:09:09,927:INFO:Plot type: lift
2023-06-16 11:09:09,928:INFO:Generating predictions / predict_proba on X_test
2023-06-16 11:09:10,176:INFO:Visual Rendered Successfully
2023-06-16 11:09:10,239:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:11,864:INFO:Initializing plot_model()
2023-06-16 11:09:11,864:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:11,864:INFO:Checking exceptions
2023-06-16 11:09:11,871:INFO:Preloading libraries
2023-06-16 11:09:11,879:INFO:Copying training dataset
2023-06-16 11:09:11,880:INFO:Plot type: boundary
2023-06-16 11:09:11,984:INFO:Fitting StandardScaler()
2023-06-16 11:09:12,045:INFO:Fitting PCA()
2023-06-16 11:09:12,391:INFO:Fitting Model
2023-06-16 11:09:12,835:WARNING:c:\Program Files\Python39\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2023-06-16 11:09:14,368:INFO:Visual Rendered Successfully
2023-06-16 11:09:14,512:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:19,022:INFO:Initializing plot_model()
2023-06-16 11:09:19,023:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:19,023:INFO:Checking exceptions
2023-06-16 11:09:19,030:INFO:Preloading libraries
2023-06-16 11:09:19,040:INFO:Copying training dataset
2023-06-16 11:09:19,040:INFO:Plot type: feature_all
2023-06-16 11:09:19,101:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 11:09:19,453:INFO:Visual Rendered Successfully
2023-06-16 11:09:19,517:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:49,280:INFO:Initializing plot_model()
2023-06-16 11:09:49,280:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:49,280:INFO:Checking exceptions
2023-06-16 11:09:49,287:INFO:Preloading libraries
2023-06-16 11:09:49,296:INFO:Copying training dataset
2023-06-16 11:09:49,296:INFO:Plot type: feature
2023-06-16 11:09:49,297:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 11:09:49,489:INFO:Visual Rendered Successfully
2023-06-16 11:09:49,552:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:52,199:INFO:Initializing plot_model()
2023-06-16 11:09:52,200:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:52,200:INFO:Checking exceptions
2023-06-16 11:09:52,207:INFO:Preloading libraries
2023-06-16 11:09:52,215:INFO:Copying training dataset
2023-06-16 11:09:52,215:INFO:Plot type: dimension
2023-06-16 11:09:52,288:INFO:Fitting StandardScaler()
2023-06-16 11:09:52,395:INFO:Fitting PCA()
2023-06-16 11:09:52,699:INFO:Fitting & Transforming Model
2023-06-16 11:09:54,444:INFO:Visual Rendered Successfully
2023-06-16 11:09:54,531:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:55,295:INFO:Initializing plot_model()
2023-06-16 11:09:55,296:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:55,296:INFO:Checking exceptions
2023-06-16 11:09:55,304:INFO:Preloading libraries
2023-06-16 11:09:55,312:INFO:Copying training dataset
2023-06-16 11:09:55,312:INFO:Plot type: vc
2023-06-16 11:09:55,312:INFO:Determining param_name
2023-06-16 11:09:55,313:INFO:param_name: max_depth
2023-06-16 11:09:55,490:INFO:Fitting Model
2023-06-16 11:10:28,766:INFO:Visual Rendered Successfully
2023-06-16 11:10:28,871:INFO:plot_model() successfully completed......................................
2023-06-16 11:10:28,894:INFO:Initializing plot_model()
2023-06-16 11:10:28,895:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:10:28,895:INFO:Checking exceptions
2023-06-16 11:10:28,901:INFO:Preloading libraries
2023-06-16 11:10:28,912:INFO:Copying training dataset
2023-06-16 11:10:28,912:INFO:Plot type: auc
2023-06-16 11:10:29,093:INFO:Fitting Model
2023-06-16 11:10:29,095:INFO:Scoring test/hold-out set
2023-06-16 11:10:29,336:INFO:Visual Rendered Successfully
2023-06-16 11:10:29,403:INFO:plot_model() successfully completed......................................
2023-06-16 11:10:32,112:INFO:Initializing plot_model()
2023-06-16 11:10:32,113:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:10:32,113:INFO:Checking exceptions
2023-06-16 11:10:32,119:INFO:Preloading libraries
2023-06-16 11:10:32,161:INFO:Copying training dataset
2023-06-16 11:10:32,161:INFO:Plot type: threshold
2023-06-16 11:10:32,336:INFO:Fitting Model
2023-06-16 11:11:04,357:INFO:Scoring test/hold-out set
2023-06-16 11:11:04,602:INFO:Visual Rendered Successfully
2023-06-16 11:11:04,679:INFO:plot_model() successfully completed......................................
2023-06-16 11:12:06,396:INFO:Initializing compare_models()
2023-06-16 11:12:06,396:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 11:12:06,396:INFO:Checking exceptions
2023-06-16 11:12:06,403:INFO:Preparing display monitor
2023-06-16 11:12:06,459:INFO:Initializing Logistic Regression
2023-06-16 11:12:06,459:INFO:Total runtime is 0.0 minutes
2023-06-16 11:12:06,466:INFO:SubProcess create_model() called ==================================
2023-06-16 11:12:06,468:INFO:Initializing create_model()
2023-06-16 11:12:06,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F82E2C3280>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:06,468:INFO:Checking exceptions
2023-06-16 11:12:06,468:INFO:Importing libraries
2023-06-16 11:12:06,468:INFO:Copying training dataset
2023-06-16 11:12:06,492:INFO:Defining folds
2023-06-16 11:12:06,492:INFO:Declaring metric variables
2023-06-16 11:12:06,508:INFO:Importing untrained model
2023-06-16 11:12:06,513:INFO:Logistic Regression Imported successfully
2023-06-16 11:12:06,526:INFO:Starting cross validation
2023-06-16 11:12:06,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:12:09,152:INFO:Calculating mean and std
2023-06-16 11:12:09,154:INFO:Creating metrics dataframe
2023-06-16 11:12:09,389:INFO:Uploading results into container
2023-06-16 11:12:09,390:INFO:Uploading model into container now
2023-06-16 11:12:09,391:INFO:_master_model_container: 15
2023-06-16 11:12:09,392:INFO:_display_container: 4
2023-06-16 11:12:09,392:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:12:09,392:INFO:create_model() successfully completed......................................
2023-06-16 11:12:09,462:INFO:SubProcess create_model() end ==================================
2023-06-16 11:12:09,462:INFO:Creating metrics dataframe
2023-06-16 11:12:09,478:INFO:Initializing SVM - Linear Kernel
2023-06-16 11:12:09,478:INFO:Total runtime is 0.05031603177388509 minutes
2023-06-16 11:12:09,484:INFO:SubProcess create_model() called ==================================
2023-06-16 11:12:09,484:INFO:Initializing create_model()
2023-06-16 11:12:09,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F82E2C3280>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:09,484:INFO:Checking exceptions
2023-06-16 11:12:09,484:INFO:Importing libraries
2023-06-16 11:12:09,485:INFO:Copying training dataset
2023-06-16 11:12:09,502:INFO:Defining folds
2023-06-16 11:12:09,502:INFO:Declaring metric variables
2023-06-16 11:12:09,506:INFO:Importing untrained model
2023-06-16 11:12:09,512:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:12:09,529:INFO:Starting cross validation
2023-06-16 11:12:09,531:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:12:10,074:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,103:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,106:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,126:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,786:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,847:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,871:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,932:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:11,618:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:11,676:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:12,107:INFO:Calculating mean and std
2023-06-16 11:12:12,110:INFO:Creating metrics dataframe
2023-06-16 11:12:12,342:INFO:Uploading results into container
2023-06-16 11:12:12,343:INFO:Uploading model into container now
2023-06-16 11:12:12,343:INFO:_master_model_container: 16
2023-06-16 11:12:12,343:INFO:_display_container: 4
2023-06-16 11:12:12,343:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:12:12,344:INFO:create_model() successfully completed......................................
2023-06-16 11:12:12,413:INFO:SubProcess create_model() end ==================================
2023-06-16 11:12:12,413:INFO:Creating metrics dataframe
2023-06-16 11:12:12,434:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 11:12:12,434:INFO:Total runtime is 0.09958269198735556 minutes
2023-06-16 11:12:12,438:INFO:SubProcess create_model() called ==================================
2023-06-16 11:12:12,438:INFO:Initializing create_model()
2023-06-16 11:12:12,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F82E2C3280>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:12,438:INFO:Checking exceptions
2023-06-16 11:12:12,438:INFO:Importing libraries
2023-06-16 11:12:12,438:INFO:Copying training dataset
2023-06-16 11:12:12,455:INFO:Defining folds
2023-06-16 11:12:12,456:INFO:Declaring metric variables
2023-06-16 11:12:12,461:INFO:Importing untrained model
2023-06-16 11:12:12,466:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:12:12,476:INFO:Starting cross validation
2023-06-16 11:12:12,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:12:15,116:INFO:Calculating mean and std
2023-06-16 11:12:15,117:INFO:Creating metrics dataframe
2023-06-16 11:12:15,354:INFO:Uploading results into container
2023-06-16 11:12:15,355:INFO:Uploading model into container now
2023-06-16 11:12:15,355:INFO:_master_model_container: 17
2023-06-16 11:12:15,355:INFO:_display_container: 4
2023-06-16 11:12:15,356:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:12:15,356:INFO:create_model() successfully completed......................................
2023-06-16 11:12:15,445:INFO:SubProcess create_model() end ==================================
2023-06-16 11:12:15,445:INFO:Creating metrics dataframe
2023-06-16 11:12:15,482:INFO:Initializing create_model()
2023-06-16 11:12:15,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:15,483:INFO:Checking exceptions
2023-06-16 11:12:15,486:INFO:Importing libraries
2023-06-16 11:12:15,486:INFO:Copying training dataset
2023-06-16 11:12:15,505:INFO:Defining folds
2023-06-16 11:12:15,505:INFO:Declaring metric variables
2023-06-16 11:12:15,505:INFO:Importing untrained model
2023-06-16 11:12:15,506:INFO:Declaring custom model
2023-06-16 11:12:15,507:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:12:15,510:INFO:Cross validation set to False
2023-06-16 11:12:15,510:INFO:Fitting Model
2023-06-16 11:12:16,144:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:12:16,144:INFO:create_model() successfully completed......................................
2023-06-16 11:12:16,228:INFO:Initializing create_model()
2023-06-16 11:12:16,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:16,229:INFO:Checking exceptions
2023-06-16 11:12:16,232:INFO:Importing libraries
2023-06-16 11:12:16,232:INFO:Copying training dataset
2023-06-16 11:12:16,248:INFO:Defining folds
2023-06-16 11:12:16,248:INFO:Declaring metric variables
2023-06-16 11:12:16,248:INFO:Importing untrained model
2023-06-16 11:12:16,248:INFO:Declaring custom model
2023-06-16 11:12:16,249:INFO:Logistic Regression Imported successfully
2023-06-16 11:12:16,251:INFO:Cross validation set to False
2023-06-16 11:12:16,251:INFO:Fitting Model
2023-06-16 11:12:19,299:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:12:19,299:INFO:create_model() successfully completed......................................
2023-06-16 11:12:19,374:INFO:Initializing create_model()
2023-06-16 11:12:19,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:19,374:INFO:Checking exceptions
2023-06-16 11:12:19,379:INFO:Importing libraries
2023-06-16 11:12:19,379:INFO:Copying training dataset
2023-06-16 11:12:19,395:INFO:Defining folds
2023-06-16 11:12:19,395:INFO:Declaring metric variables
2023-06-16 11:12:19,395:INFO:Importing untrained model
2023-06-16 11:12:19,396:INFO:Declaring custom model
2023-06-16 11:12:19,396:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:12:19,398:INFO:Cross validation set to False
2023-06-16 11:12:19,398:INFO:Fitting Model
2023-06-16 11:12:22,998:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:12:22,998:INFO:create_model() successfully completed......................................
2023-06-16 11:12:23,099:INFO:_master_model_container: 17
2023-06-16 11:12:23,100:INFO:_display_container: 4
2023-06-16 11:12:23,101:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 11:12:23,101:INFO:compare_models() successfully completed......................................
2023-06-16 11:12:24,935:INFO:Initializing evaluate_model()
2023-06-16 11:12:24,935:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)], fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:12:24,970:INFO:Initializing plot_model()
2023-06-16 11:12:24,971:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:12:24,971:INFO:Checking exceptions
2023-06-16 11:13:18,705:INFO:Initializing evaluate_model()
2023-06-16 11:13:18,705:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:13:18,737:INFO:Initializing plot_model()
2023-06-16 11:13:18,738:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:18,738:INFO:Checking exceptions
2023-06-16 11:13:18,744:INFO:Preloading libraries
2023-06-16 11:13:18,766:INFO:Copying training dataset
2023-06-16 11:13:18,766:INFO:Plot type: pipeline
2023-06-16 11:13:19,033:INFO:Visual Rendered Successfully
2023-06-16 11:13:19,116:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:25,721:INFO:Initializing evaluate_model()
2023-06-16 11:13:25,721:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:13:25,752:INFO:Initializing plot_model()
2023-06-16 11:13:25,752:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:25,753:INFO:Checking exceptions
2023-06-16 11:13:25,759:INFO:Preloading libraries
2023-06-16 11:13:25,759:INFO:Copying training dataset
2023-06-16 11:13:25,760:INFO:Plot type: pipeline
2023-06-16 11:13:25,919:INFO:Visual Rendered Successfully
2023-06-16 11:13:25,988:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:30,199:INFO:Initializing evaluate_model()
2023-06-16 11:13:30,199:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:13:30,231:INFO:Initializing plot_model()
2023-06-16 11:13:30,231:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:30,231:INFO:Checking exceptions
2023-06-16 11:13:30,238:INFO:Preloading libraries
2023-06-16 11:13:30,238:INFO:Copying training dataset
2023-06-16 11:13:30,238:INFO:Plot type: pipeline
2023-06-16 11:13:30,427:INFO:Visual Rendered Successfully
2023-06-16 11:13:30,497:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:35,519:INFO:Initializing evaluate_model()
2023-06-16 11:13:35,519:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:13:35,552:INFO:Initializing plot_model()
2023-06-16 11:13:35,552:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:35,552:INFO:Checking exceptions
2023-06-16 11:13:35,557:INFO:Preloading libraries
2023-06-16 11:13:35,557:INFO:Copying training dataset
2023-06-16 11:13:35,557:INFO:Plot type: pipeline
2023-06-16 11:13:35,731:INFO:Visual Rendered Successfully
2023-06-16 11:13:35,841:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:37,694:INFO:Initializing plot_model()
2023-06-16 11:13:37,695:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:37,695:INFO:Checking exceptions
2023-06-16 11:13:37,702:INFO:Preloading libraries
2023-06-16 11:13:37,702:INFO:Copying training dataset
2023-06-16 11:13:37,702:INFO:Plot type: feature
2023-06-16 11:13:37,968:INFO:Visual Rendered Successfully
2023-06-16 11:13:38,048:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:50,488:INFO:Initializing plot_model()
2023-06-16 11:13:50,488:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:50,488:INFO:Checking exceptions
2023-06-16 11:13:50,495:INFO:Preloading libraries
2023-06-16 11:13:50,495:INFO:Copying training dataset
2023-06-16 11:13:50,495:INFO:Plot type: auc
2023-06-16 11:13:50,664:INFO:Fitting Model
2023-06-16 11:13:50,665:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 11:13:50,666:INFO:Scoring test/hold-out set
2023-06-16 11:13:50,860:INFO:Visual Rendered Successfully
2023-06-16 11:13:50,992:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:59,295:INFO:Initializing plot_model()
2023-06-16 11:13:59,295:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:59,296:INFO:Checking exceptions
2023-06-16 11:13:59,303:INFO:Preloading libraries
2023-06-16 11:13:59,303:INFO:Copying training dataset
2023-06-16 11:13:59,303:INFO:Plot type: rfe
2023-06-16 11:13:59,478:INFO:Fitting Model
2023-06-16 11:19:45,063:INFO:PyCaret ClassificationExperiment
2023-06-16 11:19:45,063:INFO:Logging name: clf-default-name
2023-06-16 11:19:45,063:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 11:19:45,063:INFO:version 3.0.2
2023-06-16 11:19:45,063:INFO:Initializing setup()
2023-06-16 11:19:45,063:INFO:self.USI: 18b4
2023-06-16 11:19:45,063:INFO:self._variable_keys: {'gpu_param', 'html_param', 'data', 'fold_generator', 'y', 'exp_name_log', '_available_plots', 'exp_id', 'fold_groups_param', 'USI', 'n_jobs_param', 'target_param', 'seed', 'fold_shuffle_param', 'pipeline', 'X_train', 'is_multiclass', 'log_plots_param', '_ml_usecase', 'y_train', 'X_test', 'memory', 'fix_imbalance', 'idx', 'X', 'gpu_n_jobs_param', 'y_test', 'logging_param'}
2023-06-16 11:19:45,063:INFO:Checking environment
2023-06-16 11:19:45,063:INFO:python_version: 3.9.7
2023-06-16 11:19:45,063:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 11:19:45,063:INFO:machine: AMD64
2023-06-16 11:19:45,063:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 11:19:45,064:INFO:Memory: svmem(total=17120436224, available=6131654656, percent=64.2, used=10988781568, free=6131654656)
2023-06-16 11:19:45,064:INFO:Physical Core: 4
2023-06-16 11:19:45,064:INFO:Logical Core: 4
2023-06-16 11:19:45,064:INFO:Checking libraries
2023-06-16 11:19:45,064:INFO:System:
2023-06-16 11:19:45,064:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 11:19:45,064:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 11:19:45,064:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 11:19:45,064:INFO:PyCaret required dependencies:
2023-06-16 11:19:45,064:INFO:                 pip: 21.2.3
2023-06-16 11:19:45,064:INFO:          setuptools: 57.4.0
2023-06-16 11:19:45,064:INFO:             pycaret: 3.0.2
2023-06-16 11:19:45,065:INFO:             IPython: 7.28.0
2023-06-16 11:19:45,065:INFO:          ipywidgets: 8.0.6
2023-06-16 11:19:45,065:INFO:                tqdm: 4.64.0
2023-06-16 11:19:45,065:INFO:               numpy: 1.21.2
2023-06-16 11:19:45,065:INFO:              pandas: 1.3.5
2023-06-16 11:19:45,065:INFO:              jinja2: 3.1.2
2023-06-16 11:19:45,065:INFO:               scipy: 1.7.1
2023-06-16 11:19:45,065:INFO:              joblib: 1.2.0
2023-06-16 11:19:45,065:INFO:             sklearn: 1.1.0
2023-06-16 11:19:45,066:INFO:                pyod: 1.0.9
2023-06-16 11:19:45,066:INFO:            imblearn: 0.9.1
2023-06-16 11:19:45,066:INFO:   category_encoders: 2.6.1
2023-06-16 11:19:45,066:INFO:            lightgbm: 3.3.5
2023-06-16 11:19:45,066:INFO:               numba: 0.57.0
2023-06-16 11:19:45,066:INFO:            requests: 2.31.0
2023-06-16 11:19:45,066:INFO:          matplotlib: 3.4.3
2023-06-16 11:19:45,066:INFO:          scikitplot: 0.3.7
2023-06-16 11:19:45,066:INFO:         yellowbrick: 1.5
2023-06-16 11:19:45,066:INFO:              plotly: 5.8.0
2023-06-16 11:19:45,066:INFO:             kaleido: 0.2.1
2023-06-16 11:19:45,066:INFO:         statsmodels: 0.14.0
2023-06-16 11:19:45,066:INFO:              sktime: 0.17.0
2023-06-16 11:19:45,066:INFO:               tbats: 1.1.3
2023-06-16 11:19:45,066:INFO:            pmdarima: 2.0.3
2023-06-16 11:19:45,066:INFO:              psutil: 5.9.0
2023-06-16 11:19:45,066:INFO:PyCaret optional dependencies:
2023-06-16 11:19:45,066:INFO:                shap: Not installed
2023-06-16 11:19:45,066:INFO:           interpret: Not installed
2023-06-16 11:19:45,067:INFO:                umap: Not installed
2023-06-16 11:19:45,067:INFO:    pandas_profiling: Not installed
2023-06-16 11:19:45,067:INFO:  explainerdashboard: Not installed
2023-06-16 11:19:45,067:INFO:             autoviz: Not installed
2023-06-16 11:19:45,067:INFO:           fairlearn: Not installed
2023-06-16 11:19:45,067:INFO:             xgboost: Not installed
2023-06-16 11:19:45,067:INFO:            catboost: Not installed
2023-06-16 11:19:45,067:INFO:              kmodes: Not installed
2023-06-16 11:19:45,067:INFO:             mlxtend: Not installed
2023-06-16 11:19:45,067:INFO:       statsforecast: Not installed
2023-06-16 11:19:45,067:INFO:        tune_sklearn: Not installed
2023-06-16 11:19:45,067:INFO:                 ray: Not installed
2023-06-16 11:19:45,067:INFO:            hyperopt: Not installed
2023-06-16 11:19:45,067:INFO:              optuna: Not installed
2023-06-16 11:19:45,067:INFO:               skopt: Not installed
2023-06-16 11:19:45,067:INFO:              mlflow: Not installed
2023-06-16 11:19:45,067:INFO:              gradio: Not installed
2023-06-16 11:19:45,067:INFO:             fastapi: Not installed
2023-06-16 11:19:45,067:INFO:             uvicorn: Not installed
2023-06-16 11:19:45,067:INFO:              m2cgen: Not installed
2023-06-16 11:19:45,067:INFO:           evidently: Not installed
2023-06-16 11:19:45,067:INFO:               fugue: Not installed
2023-06-16 11:19:45,067:INFO:           streamlit: Not installed
2023-06-16 11:19:45,068:INFO:             prophet: Not installed
2023-06-16 11:19:45,068:INFO:None
2023-06-16 11:19:45,068:INFO:Set up data.
2023-06-16 11:19:45,139:INFO:Set up train/test split.
2023-06-16 11:19:45,174:INFO:Set up index.
2023-06-16 11:19:45,175:INFO:Set up folding strategy.
2023-06-16 11:19:45,175:INFO:Assigning column types.
2023-06-16 11:19:45,189:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 11:19:45,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,253:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,379:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 11:19:45,436:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,529:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,561:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 11:19:45,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,728:INFO:Preparing preprocessing pipeline...
2023-06-16 11:19:45,730:INFO:Set up simple imputation.
2023-06-16 11:19:45,744:INFO:Set up encoding of ordinal features.
2023-06-16 11:19:45,764:INFO:Set up encoding of categorical features.
2023-06-16 11:19:45,764:INFO:Set up imbalanced handling.
2023-06-16 11:19:45,764:INFO:Set up feature selection.
2023-06-16 11:19:45,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,853:INFO:Set up column name cleaning.
2023-06-16 11:20:01,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:01,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:01,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:01,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:02,383:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 11:20:02,794:INFO:PyCaret ClassificationExperiment
2023-06-16 11:20:02,794:INFO:Logging name: clf-default-name
2023-06-16 11:20:02,794:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 11:20:02,794:INFO:version 3.0.2
2023-06-16 11:20:02,794:INFO:Initializing setup()
2023-06-16 11:20:02,794:INFO:self.USI: ef8e
2023-06-16 11:20:02,794:INFO:self._variable_keys: {'_ml_usecase', 'fold_shuffle_param', 'data', '_available_plots', 'y_train', 'fold_generator', 'logging_param', 'html_param', 'gpu_param', 'USI', 'seed', 'exp_id', 'X_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'X', 'n_jobs_param', 'y_test', 'y', 'X_test', 'pipeline', 'fix_imbalance', 'target_param', 'fold_groups_param', 'memory', 'exp_name_log', 'is_multiclass'}
2023-06-16 11:20:02,794:INFO:Checking environment
2023-06-16 11:20:02,794:INFO:python_version: 3.9.7
2023-06-16 11:20:02,794:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 11:20:02,794:INFO:machine: AMD64
2023-06-16 11:20:02,794:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 11:20:02,794:INFO:Memory: svmem(total=17120436224, available=6428368896, percent=62.5, used=10692067328, free=6428368896)
2023-06-16 11:20:02,794:INFO:Physical Core: 4
2023-06-16 11:20:02,794:INFO:Logical Core: 4
2023-06-16 11:20:02,795:INFO:Checking libraries
2023-06-16 11:20:02,795:INFO:System:
2023-06-16 11:20:02,795:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 11:20:02,795:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 11:20:02,795:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 11:20:02,795:INFO:PyCaret required dependencies:
2023-06-16 11:20:02,795:INFO:                 pip: 21.2.3
2023-06-16 11:20:02,795:INFO:          setuptools: 57.4.0
2023-06-16 11:20:02,795:INFO:             pycaret: 3.0.2
2023-06-16 11:20:02,795:INFO:             IPython: 7.28.0
2023-06-16 11:20:02,795:INFO:          ipywidgets: 8.0.6
2023-06-16 11:20:02,795:INFO:                tqdm: 4.64.0
2023-06-16 11:20:02,795:INFO:               numpy: 1.21.2
2023-06-16 11:20:02,795:INFO:              pandas: 1.3.5
2023-06-16 11:20:02,795:INFO:              jinja2: 3.1.2
2023-06-16 11:20:02,795:INFO:               scipy: 1.7.1
2023-06-16 11:20:02,795:INFO:              joblib: 1.2.0
2023-06-16 11:20:02,795:INFO:             sklearn: 1.1.0
2023-06-16 11:20:02,795:INFO:                pyod: 1.0.9
2023-06-16 11:20:02,795:INFO:            imblearn: 0.9.1
2023-06-16 11:20:02,796:INFO:   category_encoders: 2.6.1
2023-06-16 11:20:02,796:INFO:            lightgbm: 3.3.5
2023-06-16 11:20:02,796:INFO:               numba: 0.57.0
2023-06-16 11:20:02,796:INFO:            requests: 2.31.0
2023-06-16 11:20:02,796:INFO:          matplotlib: 3.4.3
2023-06-16 11:20:02,796:INFO:          scikitplot: 0.3.7
2023-06-16 11:20:02,796:INFO:         yellowbrick: 1.5
2023-06-16 11:20:02,796:INFO:              plotly: 5.8.0
2023-06-16 11:20:02,796:INFO:             kaleido: 0.2.1
2023-06-16 11:20:02,796:INFO:         statsmodels: 0.14.0
2023-06-16 11:20:02,796:INFO:              sktime: 0.17.0
2023-06-16 11:20:02,796:INFO:               tbats: 1.1.3
2023-06-16 11:20:02,796:INFO:            pmdarima: 2.0.3
2023-06-16 11:20:02,796:INFO:              psutil: 5.9.0
2023-06-16 11:20:02,796:INFO:PyCaret optional dependencies:
2023-06-16 11:20:02,820:INFO:                shap: Not installed
2023-06-16 11:20:02,820:INFO:           interpret: Not installed
2023-06-16 11:20:02,820:INFO:                umap: Not installed
2023-06-16 11:20:02,820:INFO:    pandas_profiling: Not installed
2023-06-16 11:20:02,820:INFO:  explainerdashboard: Not installed
2023-06-16 11:20:02,821:INFO:             autoviz: Not installed
2023-06-16 11:20:02,821:INFO:           fairlearn: Not installed
2023-06-16 11:20:02,821:INFO:             xgboost: Not installed
2023-06-16 11:20:02,821:INFO:            catboost: Not installed
2023-06-16 11:20:02,821:INFO:              kmodes: Not installed
2023-06-16 11:20:02,821:INFO:             mlxtend: Not installed
2023-06-16 11:20:02,821:INFO:       statsforecast: Not installed
2023-06-16 11:20:02,821:INFO:        tune_sklearn: Not installed
2023-06-16 11:20:02,821:INFO:                 ray: Not installed
2023-06-16 11:20:02,821:INFO:            hyperopt: Not installed
2023-06-16 11:20:02,821:INFO:              optuna: Not installed
2023-06-16 11:20:02,821:INFO:               skopt: Not installed
2023-06-16 11:20:02,821:INFO:              mlflow: Not installed
2023-06-16 11:20:02,821:INFO:              gradio: Not installed
2023-06-16 11:20:02,821:INFO:             fastapi: Not installed
2023-06-16 11:20:02,821:INFO:             uvicorn: Not installed
2023-06-16 11:20:02,821:INFO:              m2cgen: Not installed
2023-06-16 11:20:02,821:INFO:           evidently: Not installed
2023-06-16 11:20:02,821:INFO:               fugue: Not installed
2023-06-16 11:20:02,821:INFO:           streamlit: Not installed
2023-06-16 11:20:02,822:INFO:             prophet: Not installed
2023-06-16 11:20:02,822:INFO:None
2023-06-16 11:20:02,822:INFO:Set up data.
2023-06-16 11:20:02,879:INFO:Set up train/test split.
2023-06-16 11:20:02,905:INFO:Set up index.
2023-06-16 11:20:02,906:INFO:Set up folding strategy.
2023-06-16 11:20:02,906:INFO:Assigning column types.
2023-06-16 11:20:02,923:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 11:20:02,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:20:02,986:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,179:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,180:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,216:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 11:20:03,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,356:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,390:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 11:20:03,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,602:INFO:Preparing preprocessing pipeline...
2023-06-16 11:20:03,608:INFO:Set up simple imputation.
2023-06-16 11:20:03,624:INFO:Set up encoding of ordinal features.
2023-06-16 11:20:03,637:INFO:Set up encoding of categorical features.
2023-06-16 11:20:03,637:INFO:Set up imbalanced handling.
2023-06-16 11:20:03,637:INFO:Set up feature selection.
2023-06-16 11:20:03,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,739:INFO:Set up column name cleaning.
2023-06-16 11:20:29,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:29,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:29,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:29,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:30,045:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 11:20:30,440:INFO:PyCaret ClassificationExperiment
2023-06-16 11:20:30,440:INFO:Logging name: clf-default-name
2023-06-16 11:20:30,440:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 11:20:30,440:INFO:version 3.0.2
2023-06-16 11:20:30,440:INFO:Initializing setup()
2023-06-16 11:20:30,440:INFO:self.USI: 24e7
2023-06-16 11:20:30,440:INFO:self._variable_keys: {'USI', 'log_plots_param', 'idx', 'X_test', 'gpu_param', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'X_train', '_ml_usecase', 'fold_shuffle_param', 'html_param', 'exp_id', 'data', 'fix_imbalance', 'pipeline', 'exp_name_log', '_available_plots', 'y_test', 'y_train', 'is_multiclass', 'fold_generator', 'memory', 'logging_param', 'X', 'target_param'}
2023-06-16 11:20:30,440:INFO:Checking environment
2023-06-16 11:20:30,440:INFO:python_version: 3.9.7
2023-06-16 11:20:30,441:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 11:20:30,441:INFO:machine: AMD64
2023-06-16 11:20:30,441:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 11:20:30,441:INFO:Memory: svmem(total=17120436224, available=6447022080, percent=62.3, used=10673414144, free=6447022080)
2023-06-16 11:20:30,441:INFO:Physical Core: 4
2023-06-16 11:20:30,441:INFO:Logical Core: 4
2023-06-16 11:20:30,441:INFO:Checking libraries
2023-06-16 11:20:30,441:INFO:System:
2023-06-16 11:20:30,441:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 11:20:30,441:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 11:20:30,441:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 11:20:30,441:INFO:PyCaret required dependencies:
2023-06-16 11:20:30,441:INFO:                 pip: 21.2.3
2023-06-16 11:20:30,441:INFO:          setuptools: 57.4.0
2023-06-16 11:20:30,441:INFO:             pycaret: 3.0.2
2023-06-16 11:20:30,441:INFO:             IPython: 7.28.0
2023-06-16 11:20:30,441:INFO:          ipywidgets: 8.0.6
2023-06-16 11:20:30,441:INFO:                tqdm: 4.64.0
2023-06-16 11:20:30,442:INFO:               numpy: 1.21.2
2023-06-16 11:20:30,442:INFO:              pandas: 1.3.5
2023-06-16 11:20:30,442:INFO:              jinja2: 3.1.2
2023-06-16 11:20:30,442:INFO:               scipy: 1.7.1
2023-06-16 11:20:30,442:INFO:              joblib: 1.2.0
2023-06-16 11:20:30,442:INFO:             sklearn: 1.1.0
2023-06-16 11:20:30,442:INFO:                pyod: 1.0.9
2023-06-16 11:20:30,442:INFO:            imblearn: 0.9.1
2023-06-16 11:20:30,442:INFO:   category_encoders: 2.6.1
2023-06-16 11:20:30,442:INFO:            lightgbm: 3.3.5
2023-06-16 11:20:30,442:INFO:               numba: 0.57.0
2023-06-16 11:20:30,442:INFO:            requests: 2.31.0
2023-06-16 11:20:30,442:INFO:          matplotlib: 3.4.3
2023-06-16 11:20:30,442:INFO:          scikitplot: 0.3.7
2023-06-16 11:20:30,442:INFO:         yellowbrick: 1.5
2023-06-16 11:20:30,442:INFO:              plotly: 5.8.0
2023-06-16 11:20:30,442:INFO:             kaleido: 0.2.1
2023-06-16 11:20:30,442:INFO:         statsmodels: 0.14.0
2023-06-16 11:20:30,442:INFO:              sktime: 0.17.0
2023-06-16 11:20:30,442:INFO:               tbats: 1.1.3
2023-06-16 11:20:30,442:INFO:            pmdarima: 2.0.3
2023-06-16 11:20:30,442:INFO:              psutil: 5.9.0
2023-06-16 11:20:30,443:INFO:PyCaret optional dependencies:
2023-06-16 11:20:30,464:INFO:                shap: Not installed
2023-06-16 11:20:30,464:INFO:           interpret: Not installed
2023-06-16 11:20:30,464:INFO:                umap: Not installed
2023-06-16 11:20:30,464:INFO:    pandas_profiling: Not installed
2023-06-16 11:20:30,464:INFO:  explainerdashboard: Not installed
2023-06-16 11:20:30,464:INFO:             autoviz: Not installed
2023-06-16 11:20:30,464:INFO:           fairlearn: Not installed
2023-06-16 11:20:30,464:INFO:             xgboost: Not installed
2023-06-16 11:20:30,464:INFO:            catboost: Not installed
2023-06-16 11:20:30,464:INFO:              kmodes: Not installed
2023-06-16 11:20:30,464:INFO:             mlxtend: Not installed
2023-06-16 11:20:30,464:INFO:       statsforecast: Not installed
2023-06-16 11:20:30,464:INFO:        tune_sklearn: Not installed
2023-06-16 11:20:30,464:INFO:                 ray: Not installed
2023-06-16 11:20:30,464:INFO:            hyperopt: Not installed
2023-06-16 11:20:30,465:INFO:              optuna: Not installed
2023-06-16 11:20:30,465:INFO:               skopt: Not installed
2023-06-16 11:20:30,465:INFO:              mlflow: Not installed
2023-06-16 11:20:30,465:INFO:              gradio: Not installed
2023-06-16 11:20:30,465:INFO:             fastapi: Not installed
2023-06-16 11:20:30,465:INFO:             uvicorn: Not installed
2023-06-16 11:20:30,465:INFO:              m2cgen: Not installed
2023-06-16 11:20:30,465:INFO:           evidently: Not installed
2023-06-16 11:20:30,465:INFO:               fugue: Not installed
2023-06-16 11:20:30,465:INFO:           streamlit: Not installed
2023-06-16 11:20:30,465:INFO:             prophet: Not installed
2023-06-16 11:20:30,465:INFO:None
2023-06-16 11:20:30,465:INFO:Set up data.
2023-06-16 11:20:30,522:INFO:Set up train/test split.
2023-06-16 11:20:30,546:INFO:Set up index.
2023-06-16 11:20:30,547:INFO:Set up folding strategy.
2023-06-16 11:20:30,547:INFO:Assigning column types.
2023-06-16 11:20:30,558:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 11:20:30,607:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,761:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,793:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 11:20:30,844:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,931:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,964:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 11:20:31,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,129:INFO:Preparing preprocessing pipeline...
2023-06-16 11:20:31,131:INFO:Set up simple imputation.
2023-06-16 11:20:31,142:INFO:Set up encoding of ordinal features.
2023-06-16 11:20:31,151:INFO:Set up encoding of categorical features.
2023-06-16 11:20:31,151:INFO:Set up imbalanced handling.
2023-06-16 11:20:31,151:INFO:Set up feature selection.
2023-06-16 11:20:31,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,240:INFO:Set up column name cleaning.
2023-06-16 11:21:56,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:21:56,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:21:56,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:21:56,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:21:57,134:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 11:21:57,530:INFO:PyCaret ClassificationExperiment
2023-06-16 11:21:57,530:INFO:Logging name: clf-default-name
2023-06-16 11:21:57,530:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 11:21:57,530:INFO:version 3.0.2
2023-06-16 11:21:57,530:INFO:Initializing setup()
2023-06-16 11:21:57,530:INFO:self.USI: c49d
2023-06-16 11:21:57,531:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 11:21:57,531:INFO:Checking environment
2023-06-16 11:21:57,531:INFO:python_version: 3.9.7
2023-06-16 11:21:57,531:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 11:21:57,531:INFO:machine: AMD64
2023-06-16 11:21:57,531:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 11:21:57,531:INFO:Memory: svmem(total=17120436224, available=6402523136, percent=62.6, used=10717913088, free=6402523136)
2023-06-16 11:21:57,531:INFO:Physical Core: 4
2023-06-16 11:21:57,531:INFO:Logical Core: 4
2023-06-16 11:21:57,531:INFO:Checking libraries
2023-06-16 11:21:57,531:INFO:System:
2023-06-16 11:21:57,531:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 11:21:57,531:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 11:21:57,531:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 11:21:57,531:INFO:PyCaret required dependencies:
2023-06-16 11:21:57,531:INFO:                 pip: 21.2.3
2023-06-16 11:21:57,531:INFO:          setuptools: 57.4.0
2023-06-16 11:21:57,531:INFO:             pycaret: 3.0.2
2023-06-16 11:21:57,532:INFO:             IPython: 7.28.0
2023-06-16 11:21:57,532:INFO:          ipywidgets: 8.0.6
2023-06-16 11:21:57,532:INFO:                tqdm: 4.64.0
2023-06-16 11:21:57,532:INFO:               numpy: 1.21.2
2023-06-16 11:21:57,532:INFO:              pandas: 1.3.5
2023-06-16 11:21:57,532:INFO:              jinja2: 3.1.2
2023-06-16 11:21:57,532:INFO:               scipy: 1.7.1
2023-06-16 11:21:57,532:INFO:              joblib: 1.2.0
2023-06-16 11:21:57,532:INFO:             sklearn: 1.1.0
2023-06-16 11:21:57,532:INFO:                pyod: 1.0.9
2023-06-16 11:21:57,532:INFO:            imblearn: 0.9.1
2023-06-16 11:21:57,532:INFO:   category_encoders: 2.6.1
2023-06-16 11:21:57,532:INFO:            lightgbm: 3.3.5
2023-06-16 11:21:57,532:INFO:               numba: 0.57.0
2023-06-16 11:21:57,532:INFO:            requests: 2.31.0
2023-06-16 11:21:57,532:INFO:          matplotlib: 3.4.3
2023-06-16 11:21:57,532:INFO:          scikitplot: 0.3.7
2023-06-16 11:21:57,532:INFO:         yellowbrick: 1.5
2023-06-16 11:21:57,532:INFO:              plotly: 5.8.0
2023-06-16 11:21:57,532:INFO:             kaleido: 0.2.1
2023-06-16 11:21:57,533:INFO:         statsmodels: 0.14.0
2023-06-16 11:21:57,533:INFO:              sktime: 0.17.0
2023-06-16 11:21:57,533:INFO:               tbats: 1.1.3
2023-06-16 11:21:57,533:INFO:            pmdarima: 2.0.3
2023-06-16 11:21:57,533:INFO:              psutil: 5.9.0
2023-06-16 11:21:57,533:INFO:PyCaret optional dependencies:
2023-06-16 11:21:57,553:INFO:                shap: Not installed
2023-06-16 11:21:57,554:INFO:           interpret: Not installed
2023-06-16 11:21:57,554:INFO:                umap: Not installed
2023-06-16 11:21:57,554:INFO:    pandas_profiling: Not installed
2023-06-16 11:21:57,554:INFO:  explainerdashboard: Not installed
2023-06-16 11:21:57,554:INFO:             autoviz: Not installed
2023-06-16 11:21:57,554:INFO:           fairlearn: Not installed
2023-06-16 11:21:57,554:INFO:             xgboost: Not installed
2023-06-16 11:21:57,554:INFO:            catboost: Not installed
2023-06-16 11:21:57,554:INFO:              kmodes: Not installed
2023-06-16 11:21:57,554:INFO:             mlxtend: Not installed
2023-06-16 11:21:57,555:INFO:       statsforecast: Not installed
2023-06-16 11:21:57,555:INFO:        tune_sklearn: Not installed
2023-06-16 11:21:57,555:INFO:                 ray: Not installed
2023-06-16 11:21:57,555:INFO:            hyperopt: Not installed
2023-06-16 11:21:57,555:INFO:              optuna: Not installed
2023-06-16 11:21:57,555:INFO:               skopt: Not installed
2023-06-16 11:21:57,555:INFO:              mlflow: Not installed
2023-06-16 11:21:57,555:INFO:              gradio: Not installed
2023-06-16 11:21:57,555:INFO:             fastapi: Not installed
2023-06-16 11:21:57,555:INFO:             uvicorn: Not installed
2023-06-16 11:21:57,555:INFO:              m2cgen: Not installed
2023-06-16 11:21:57,555:INFO:           evidently: Not installed
2023-06-16 11:21:57,556:INFO:               fugue: Not installed
2023-06-16 11:21:57,556:INFO:           streamlit: Not installed
2023-06-16 11:21:57,556:INFO:             prophet: Not installed
2023-06-16 11:21:57,556:INFO:None
2023-06-16 11:21:57,556:INFO:Set up data.
2023-06-16 11:21:57,614:INFO:Set up train/test split.
2023-06-16 11:21:57,638:INFO:Set up index.
2023-06-16 11:21:57,639:INFO:Set up folding strategy.
2023-06-16 11:21:57,639:INFO:Assigning column types.
2023-06-16 11:21:57,650:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 11:21:57,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,707:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,883:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 11:21:57,941:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,027:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:21:58,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,060:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 11:21:58,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,232:INFO:Preparing preprocessing pipeline...
2023-06-16 11:21:58,234:INFO:Set up simple imputation.
2023-06-16 11:21:58,245:INFO:Set up encoding of ordinal features.
2023-06-16 11:21:58,255:INFO:Set up encoding of categorical features.
2023-06-16 11:21:58,255:INFO:Set up imbalanced handling.
2023-06-16 11:21:58,256:INFO:Set up column name cleaning.
2023-06-16 11:21:58,707:INFO:Finished creating preprocessing pipeline.
2023-06-16 11:21:58,785:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 11:21:58,785:INFO:Creating final display dataframe.
2023-06-16 11:21:58,972:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              c49d
2023-06-16 11:21:59,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:59,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:59,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:59,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:59,164:INFO:setup() successfully completed in 1.8s...............
2023-06-16 11:21:59,201:INFO:Initializing compare_models()
2023-06-16 11:21:59,201:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 11:21:59,201:INFO:Checking exceptions
2023-06-16 11:21:59,212:INFO:Preparing display monitor
2023-06-16 11:21:59,273:INFO:Initializing Logistic Regression
2023-06-16 11:21:59,273:INFO:Total runtime is 0.0 minutes
2023-06-16 11:21:59,278:INFO:SubProcess create_model() called ==================================
2023-06-16 11:21:59,278:INFO:Initializing create_model()
2023-06-16 11:21:59,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C6C3040>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:21:59,278:INFO:Checking exceptions
2023-06-16 11:21:59,278:INFO:Importing libraries
2023-06-16 11:21:59,278:INFO:Copying training dataset
2023-06-16 11:21:59,293:INFO:Defining folds
2023-06-16 11:21:59,294:INFO:Declaring metric variables
2023-06-16 11:21:59,298:INFO:Importing untrained model
2023-06-16 11:21:59,303:INFO:Logistic Regression Imported successfully
2023-06-16 11:21:59,312:INFO:Starting cross validation
2023-06-16 11:21:59,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:22:05,461:INFO:Calculating mean and std
2023-06-16 11:22:05,464:INFO:Creating metrics dataframe
2023-06-16 11:22:05,682:INFO:Uploading results into container
2023-06-16 11:22:05,683:INFO:Uploading model into container now
2023-06-16 11:22:05,683:INFO:_master_model_container: 1
2023-06-16 11:22:05,683:INFO:_display_container: 2
2023-06-16 11:22:05,684:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:22:05,684:INFO:create_model() successfully completed......................................
2023-06-16 11:22:05,748:INFO:SubProcess create_model() end ==================================
2023-06-16 11:22:05,749:INFO:Creating metrics dataframe
2023-06-16 11:22:05,765:INFO:Initializing SVM - Linear Kernel
2023-06-16 11:22:05,765:INFO:Total runtime is 0.10819985469182332 minutes
2023-06-16 11:22:05,772:INFO:SubProcess create_model() called ==================================
2023-06-16 11:22:05,772:INFO:Initializing create_model()
2023-06-16 11:22:05,772:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C6C3040>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:05,772:INFO:Checking exceptions
2023-06-16 11:22:05,772:INFO:Importing libraries
2023-06-16 11:22:05,772:INFO:Copying training dataset
2023-06-16 11:22:05,790:INFO:Defining folds
2023-06-16 11:22:05,790:INFO:Declaring metric variables
2023-06-16 11:22:05,795:INFO:Importing untrained model
2023-06-16 11:22:05,801:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:22:05,812:INFO:Starting cross validation
2023-06-16 11:22:05,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:22:06,346:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:06,347:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:06,385:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:06,386:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,044:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,070:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,088:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,296:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,915:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,995:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:08,533:INFO:Calculating mean and std
2023-06-16 11:22:08,534:INFO:Creating metrics dataframe
2023-06-16 11:22:08,805:INFO:Uploading results into container
2023-06-16 11:22:08,805:INFO:Uploading model into container now
2023-06-16 11:22:08,807:INFO:_master_model_container: 2
2023-06-16 11:22:08,807:INFO:_display_container: 2
2023-06-16 11:22:08,808:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:22:08,808:INFO:create_model() successfully completed......................................
2023-06-16 11:22:08,880:INFO:SubProcess create_model() end ==================================
2023-06-16 11:22:08,881:INFO:Creating metrics dataframe
2023-06-16 11:22:08,897:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 11:22:08,897:INFO:Total runtime is 0.16039984623591105 minutes
2023-06-16 11:22:08,901:INFO:SubProcess create_model() called ==================================
2023-06-16 11:22:08,901:INFO:Initializing create_model()
2023-06-16 11:22:08,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C6C3040>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:08,902:INFO:Checking exceptions
2023-06-16 11:22:08,902:INFO:Importing libraries
2023-06-16 11:22:08,902:INFO:Copying training dataset
2023-06-16 11:22:08,918:INFO:Defining folds
2023-06-16 11:22:08,918:INFO:Declaring metric variables
2023-06-16 11:22:08,923:INFO:Importing untrained model
2023-06-16 11:22:08,928:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:22:08,940:INFO:Starting cross validation
2023-06-16 11:22:08,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:22:11,830:INFO:Calculating mean and std
2023-06-16 11:22:11,832:INFO:Creating metrics dataframe
2023-06-16 11:22:12,049:INFO:Uploading results into container
2023-06-16 11:22:12,049:INFO:Uploading model into container now
2023-06-16 11:22:12,050:INFO:_master_model_container: 3
2023-06-16 11:22:12,051:INFO:_display_container: 2
2023-06-16 11:22:12,051:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:22:12,051:INFO:create_model() successfully completed......................................
2023-06-16 11:22:12,114:INFO:SubProcess create_model() end ==================================
2023-06-16 11:22:12,114:INFO:Creating metrics dataframe
2023-06-16 11:22:12,144:INFO:Initializing create_model()
2023-06-16 11:22:12,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:12,144:INFO:Checking exceptions
2023-06-16 11:22:12,147:INFO:Importing libraries
2023-06-16 11:22:12,147:INFO:Copying training dataset
2023-06-16 11:22:12,162:INFO:Defining folds
2023-06-16 11:22:12,163:INFO:Declaring metric variables
2023-06-16 11:22:12,163:INFO:Importing untrained model
2023-06-16 11:22:12,163:INFO:Declaring custom model
2023-06-16 11:22:12,164:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:22:12,166:INFO:Cross validation set to False
2023-06-16 11:22:12,166:INFO:Fitting Model
2023-06-16 11:22:12,733:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:22:12,733:INFO:create_model() successfully completed......................................
2023-06-16 11:22:12,815:INFO:Initializing create_model()
2023-06-16 11:22:12,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:12,815:INFO:Checking exceptions
2023-06-16 11:22:12,817:INFO:Importing libraries
2023-06-16 11:22:12,818:INFO:Copying training dataset
2023-06-16 11:22:12,833:INFO:Defining folds
2023-06-16 11:22:12,833:INFO:Declaring metric variables
2023-06-16 11:22:12,834:INFO:Importing untrained model
2023-06-16 11:22:12,834:INFO:Declaring custom model
2023-06-16 11:22:12,835:INFO:Logistic Regression Imported successfully
2023-06-16 11:22:12,836:INFO:Cross validation set to False
2023-06-16 11:22:12,836:INFO:Fitting Model
2023-06-16 11:22:13,407:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:22:13,407:INFO:create_model() successfully completed......................................
2023-06-16 11:22:13,520:INFO:Initializing create_model()
2023-06-16 11:22:13,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:13,520:INFO:Checking exceptions
2023-06-16 11:22:13,524:INFO:Importing libraries
2023-06-16 11:22:13,524:INFO:Copying training dataset
2023-06-16 11:22:13,561:INFO:Defining folds
2023-06-16 11:22:13,561:INFO:Declaring metric variables
2023-06-16 11:22:13,562:INFO:Importing untrained model
2023-06-16 11:22:13,562:INFO:Declaring custom model
2023-06-16 11:22:13,563:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:22:13,565:INFO:Cross validation set to False
2023-06-16 11:22:13,565:INFO:Fitting Model
2023-06-16 11:22:14,194:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:22:14,194:INFO:create_model() successfully completed......................................
2023-06-16 11:22:14,299:INFO:_master_model_container: 3
2023-06-16 11:22:14,299:INFO:_display_container: 2
2023-06-16 11:22:14,300:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 11:22:14,301:INFO:compare_models() successfully completed......................................
2023-06-16 11:22:14,345:INFO:Initializing evaluate_model()
2023-06-16 11:22:14,345:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:22:14,382:INFO:Initializing plot_model()
2023-06-16 11:22:14,383:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, system=True)
2023-06-16 11:22:14,383:INFO:Checking exceptions
2023-06-16 11:22:14,389:INFO:Preloading libraries
2023-06-16 11:22:14,390:INFO:Copying training dataset
2023-06-16 11:22:14,390:INFO:Plot type: pipeline
2023-06-16 11:22:14,626:INFO:Visual Rendered Successfully
2023-06-16 11:22:14,689:INFO:plot_model() successfully completed......................................
2023-06-16 14:18:42,659:INFO:PyCaret ClassificationExperiment
2023-06-16 14:18:42,660:INFO:Logging name: clf-default-name
2023-06-16 14:18:42,660:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:18:42,660:INFO:version 3.0.2
2023-06-16 14:18:42,660:INFO:Initializing setup()
2023-06-16 14:18:42,660:INFO:self.USI: 6dcc
2023-06-16 14:18:42,660:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:18:42,660:INFO:Checking environment
2023-06-16 14:18:42,660:INFO:python_version: 3.9.7
2023-06-16 14:18:42,660:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:18:42,660:INFO:machine: AMD64
2023-06-16 14:18:42,660:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:18:42,661:INFO:Memory: svmem(total=17120436224, available=5650096128, percent=67.0, used=11470340096, free=5650096128)
2023-06-16 14:18:42,661:INFO:Physical Core: 4
2023-06-16 14:18:42,661:INFO:Logical Core: 4
2023-06-16 14:18:42,661:INFO:Checking libraries
2023-06-16 14:18:42,661:INFO:System:
2023-06-16 14:18:42,661:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:18:42,661:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:18:42,661:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:18:42,661:INFO:PyCaret required dependencies:
2023-06-16 14:18:42,662:INFO:                 pip: 21.2.3
2023-06-16 14:18:42,662:INFO:          setuptools: 57.4.0
2023-06-16 14:18:42,662:INFO:             pycaret: 3.0.2
2023-06-16 14:18:42,662:INFO:             IPython: 7.28.0
2023-06-16 14:18:42,662:INFO:          ipywidgets: 8.0.6
2023-06-16 14:18:42,662:INFO:                tqdm: 4.64.0
2023-06-16 14:18:42,662:INFO:               numpy: 1.21.2
2023-06-16 14:18:42,662:INFO:              pandas: 1.3.5
2023-06-16 14:18:42,662:INFO:              jinja2: 3.1.2
2023-06-16 14:18:42,662:INFO:               scipy: 1.7.1
2023-06-16 14:18:42,662:INFO:              joblib: 1.2.0
2023-06-16 14:18:42,662:INFO:             sklearn: 1.1.0
2023-06-16 14:18:42,662:INFO:                pyod: 1.0.9
2023-06-16 14:18:42,662:INFO:            imblearn: 0.9.1
2023-06-16 14:18:42,662:INFO:   category_encoders: 2.6.1
2023-06-16 14:18:42,662:INFO:            lightgbm: 3.3.5
2023-06-16 14:18:42,662:INFO:               numba: 0.57.0
2023-06-16 14:18:42,662:INFO:            requests: 2.31.0
2023-06-16 14:18:42,662:INFO:          matplotlib: 3.4.3
2023-06-16 14:18:42,663:INFO:          scikitplot: 0.3.7
2023-06-16 14:18:42,663:INFO:         yellowbrick: 1.5
2023-06-16 14:18:42,663:INFO:              plotly: 5.8.0
2023-06-16 14:18:42,663:INFO:             kaleido: 0.2.1
2023-06-16 14:18:42,663:INFO:         statsmodels: 0.14.0
2023-06-16 14:18:42,663:INFO:              sktime: 0.17.0
2023-06-16 14:18:42,663:INFO:               tbats: 1.1.3
2023-06-16 14:18:42,663:INFO:            pmdarima: 2.0.3
2023-06-16 14:18:42,663:INFO:              psutil: 5.9.0
2023-06-16 14:18:42,663:INFO:PyCaret optional dependencies:
2023-06-16 14:18:42,663:INFO:                shap: Not installed
2023-06-16 14:18:42,663:INFO:           interpret: Not installed
2023-06-16 14:18:42,663:INFO:                umap: Not installed
2023-06-16 14:18:42,663:INFO:    pandas_profiling: Not installed
2023-06-16 14:18:42,663:INFO:  explainerdashboard: Not installed
2023-06-16 14:18:42,663:INFO:             autoviz: Not installed
2023-06-16 14:18:42,663:INFO:           fairlearn: Not installed
2023-06-16 14:18:42,663:INFO:             xgboost: Not installed
2023-06-16 14:18:42,663:INFO:            catboost: Not installed
2023-06-16 14:18:42,663:INFO:              kmodes: Not installed
2023-06-16 14:18:42,664:INFO:             mlxtend: Not installed
2023-06-16 14:18:42,664:INFO:       statsforecast: Not installed
2023-06-16 14:18:42,664:INFO:        tune_sklearn: Not installed
2023-06-16 14:18:42,664:INFO:                 ray: Not installed
2023-06-16 14:18:42,664:INFO:            hyperopt: Not installed
2023-06-16 14:18:42,664:INFO:              optuna: Not installed
2023-06-16 14:18:42,664:INFO:               skopt: Not installed
2023-06-16 14:18:42,664:INFO:              mlflow: Not installed
2023-06-16 14:18:42,664:INFO:              gradio: Not installed
2023-06-16 14:18:42,664:INFO:             fastapi: Not installed
2023-06-16 14:18:42,664:INFO:             uvicorn: Not installed
2023-06-16 14:18:42,664:INFO:              m2cgen: Not installed
2023-06-16 14:18:42,664:INFO:           evidently: Not installed
2023-06-16 14:18:42,664:INFO:               fugue: Not installed
2023-06-16 14:18:42,664:INFO:           streamlit: Not installed
2023-06-16 14:18:42,664:INFO:             prophet: Not installed
2023-06-16 14:18:42,664:INFO:None
2023-06-16 14:18:42,664:INFO:Set up data.
2023-06-16 14:18:42,741:INFO:Set up train/test split.
2023-06-16 14:18:42,823:INFO:Set up index.
2023-06-16 14:18:42,824:INFO:Set up folding strategy.
2023-06-16 14:18:42,824:INFO:Assigning column types.
2023-06-16 14:18:42,854:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:18:42,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:18:42,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:18:42,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:42,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:42,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:18:42,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:18:43,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,033:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:18:43,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:18:43,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:18:43,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,208:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:18:43,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,411:INFO:Preparing preprocessing pipeline...
2023-06-16 14:18:43,414:INFO:Set up simple imputation.
2023-06-16 14:18:43,429:INFO:Set up encoding of ordinal features.
2023-06-16 14:18:43,444:INFO:Set up encoding of categorical features.
2023-06-16 14:18:43,444:INFO:Set up imbalanced handling.
2023-06-16 14:18:43,445:INFO:Set up feature selection.
2023-06-16 14:18:43,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,675:INFO:Set up column name cleaning.
2023-06-16 14:20:30,267:INFO:PyCaret ClassificationExperiment
2023-06-16 14:20:30,267:INFO:Logging name: clf-default-name
2023-06-16 14:20:30,267:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:20:30,267:INFO:version 3.0.2
2023-06-16 14:20:30,267:INFO:Initializing setup()
2023-06-16 14:20:30,267:INFO:self.USI: 5312
2023-06-16 14:20:30,267:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:20:30,267:INFO:Checking environment
2023-06-16 14:20:30,267:INFO:python_version: 3.9.7
2023-06-16 14:20:30,267:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:20:30,268:INFO:machine: AMD64
2023-06-16 14:20:30,268:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:20:30,268:INFO:Memory: svmem(total=17120436224, available=5541523456, percent=67.6, used=11578912768, free=5541523456)
2023-06-16 14:20:30,268:INFO:Physical Core: 4
2023-06-16 14:20:30,268:INFO:Logical Core: 4
2023-06-16 14:20:30,268:INFO:Checking libraries
2023-06-16 14:20:30,268:INFO:System:
2023-06-16 14:20:30,268:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:20:30,268:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:20:30,268:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:20:30,268:INFO:PyCaret required dependencies:
2023-06-16 14:20:30,268:INFO:                 pip: 21.2.3
2023-06-16 14:20:30,268:INFO:          setuptools: 57.4.0
2023-06-16 14:20:30,268:INFO:             pycaret: 3.0.2
2023-06-16 14:20:30,268:INFO:             IPython: 7.28.0
2023-06-16 14:20:30,268:INFO:          ipywidgets: 8.0.6
2023-06-16 14:20:30,268:INFO:                tqdm: 4.64.0
2023-06-16 14:20:30,268:INFO:               numpy: 1.21.2
2023-06-16 14:20:30,268:INFO:              pandas: 1.3.5
2023-06-16 14:20:30,269:INFO:              jinja2: 3.1.2
2023-06-16 14:20:30,269:INFO:               scipy: 1.7.1
2023-06-16 14:20:30,269:INFO:              joblib: 1.2.0
2023-06-16 14:20:30,269:INFO:             sklearn: 1.1.0
2023-06-16 14:20:30,269:INFO:                pyod: 1.0.9
2023-06-16 14:20:30,269:INFO:            imblearn: 0.9.1
2023-06-16 14:20:30,269:INFO:   category_encoders: 2.6.1
2023-06-16 14:20:30,269:INFO:            lightgbm: 3.3.5
2023-06-16 14:20:30,269:INFO:               numba: 0.57.0
2023-06-16 14:20:30,269:INFO:            requests: 2.31.0
2023-06-16 14:20:30,269:INFO:          matplotlib: 3.4.3
2023-06-16 14:20:30,269:INFO:          scikitplot: 0.3.7
2023-06-16 14:20:30,269:INFO:         yellowbrick: 1.5
2023-06-16 14:20:30,269:INFO:              plotly: 5.8.0
2023-06-16 14:20:30,269:INFO:             kaleido: 0.2.1
2023-06-16 14:20:30,269:INFO:         statsmodels: 0.14.0
2023-06-16 14:20:30,269:INFO:              sktime: 0.17.0
2023-06-16 14:20:30,269:INFO:               tbats: 1.1.3
2023-06-16 14:20:30,269:INFO:            pmdarima: 2.0.3
2023-06-16 14:20:30,269:INFO:              psutil: 5.9.0
2023-06-16 14:20:30,269:INFO:PyCaret optional dependencies:
2023-06-16 14:20:30,269:INFO:                shap: Not installed
2023-06-16 14:20:30,270:INFO:           interpret: Not installed
2023-06-16 14:20:30,270:INFO:                umap: Not installed
2023-06-16 14:20:30,270:INFO:    pandas_profiling: Not installed
2023-06-16 14:20:30,270:INFO:  explainerdashboard: Not installed
2023-06-16 14:20:30,270:INFO:             autoviz: Not installed
2023-06-16 14:20:30,270:INFO:           fairlearn: Not installed
2023-06-16 14:20:30,270:INFO:             xgboost: Not installed
2023-06-16 14:20:30,270:INFO:            catboost: Not installed
2023-06-16 14:20:30,270:INFO:              kmodes: Not installed
2023-06-16 14:20:30,270:INFO:             mlxtend: Not installed
2023-06-16 14:20:30,270:INFO:       statsforecast: Not installed
2023-06-16 14:20:30,270:INFO:        tune_sklearn: Not installed
2023-06-16 14:20:30,270:INFO:                 ray: Not installed
2023-06-16 14:20:30,270:INFO:            hyperopt: Not installed
2023-06-16 14:20:30,271:INFO:              optuna: Not installed
2023-06-16 14:20:30,271:INFO:               skopt: Not installed
2023-06-16 14:20:30,271:INFO:              mlflow: Not installed
2023-06-16 14:20:30,271:INFO:              gradio: Not installed
2023-06-16 14:20:30,271:INFO:             fastapi: Not installed
2023-06-16 14:20:30,271:INFO:             uvicorn: Not installed
2023-06-16 14:20:30,271:INFO:              m2cgen: Not installed
2023-06-16 14:20:30,271:INFO:           evidently: Not installed
2023-06-16 14:20:30,271:INFO:               fugue: Not installed
2023-06-16 14:20:30,271:INFO:           streamlit: Not installed
2023-06-16 14:20:30,271:INFO:             prophet: Not installed
2023-06-16 14:20:30,271:INFO:None
2023-06-16 14:20:30,271:INFO:Set up data.
2023-06-16 14:20:30,340:INFO:Set up train/test split.
2023-06-16 14:20:30,369:INFO:Set up index.
2023-06-16 14:20:30,370:INFO:Set up folding strategy.
2023-06-16 14:20:30,370:INFO:Assigning column types.
2023-06-16 14:20:30,383:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:20:30,438:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,439:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,524:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,556:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:20:30,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,692:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,724:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:20:30,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,888:INFO:Preparing preprocessing pipeline...
2023-06-16 14:20:30,890:INFO:Set up simple imputation.
2023-06-16 14:20:30,901:INFO:Set up encoding of ordinal features.
2023-06-16 14:20:30,910:INFO:Set up encoding of categorical features.
2023-06-16 14:20:30,911:INFO:Set up removing multicollinearity.
2023-06-16 14:20:30,911:INFO:Set up imbalanced handling.
2023-06-16 14:20:30,912:INFO:Set up column name cleaning.
2023-06-16 14:20:31,749:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:20:31,798:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:20:31,798:INFO:Creating final display dataframe.
2023-06-16 14:20:32,734:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 38)
5   Transformed train set shape       (51162, 38)
6    Transformed test set shape       (12356, 38)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21               Fold Generator   StratifiedKFold
22                  Fold Number                10
23                     CPU Jobs                -1
24                      Use GPU             False
25               Log Experiment             False
26              Experiment Name  clf-default-name
27                          USI              5312
2023-06-16 14:20:32,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:32,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:32,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:32,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:32,933:INFO:setup() successfully completed in 2.86s...............
2023-06-16 14:23:34,453:INFO:PyCaret ClassificationExperiment
2023-06-16 14:23:34,453:INFO:Logging name: clf-default-name
2023-06-16 14:23:34,453:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:23:34,453:INFO:version 3.0.2
2023-06-16 14:23:34,453:INFO:Initializing setup()
2023-06-16 14:23:34,453:INFO:self.USI: b62b
2023-06-16 14:23:34,453:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:23:34,453:INFO:Checking environment
2023-06-16 14:23:34,454:INFO:python_version: 3.9.7
2023-06-16 14:23:34,454:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:23:34,454:INFO:machine: AMD64
2023-06-16 14:23:34,454:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:23:34,454:INFO:Memory: svmem(total=17120436224, available=4809228288, percent=71.9, used=12311207936, free=4809228288)
2023-06-16 14:23:34,454:INFO:Physical Core: 4
2023-06-16 14:23:34,454:INFO:Logical Core: 4
2023-06-16 14:23:34,454:INFO:Checking libraries
2023-06-16 14:23:34,454:INFO:System:
2023-06-16 14:23:34,454:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:23:34,454:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:23:34,454:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:23:34,454:INFO:PyCaret required dependencies:
2023-06-16 14:23:34,454:INFO:                 pip: 21.2.3
2023-06-16 14:23:34,454:INFO:          setuptools: 57.4.0
2023-06-16 14:23:34,454:INFO:             pycaret: 3.0.2
2023-06-16 14:23:34,454:INFO:             IPython: 7.28.0
2023-06-16 14:23:34,455:INFO:          ipywidgets: 8.0.6
2023-06-16 14:23:34,455:INFO:                tqdm: 4.64.0
2023-06-16 14:23:34,455:INFO:               numpy: 1.21.2
2023-06-16 14:23:34,455:INFO:              pandas: 1.3.5
2023-06-16 14:23:34,455:INFO:              jinja2: 3.1.2
2023-06-16 14:23:34,455:INFO:               scipy: 1.7.1
2023-06-16 14:23:34,455:INFO:              joblib: 1.2.0
2023-06-16 14:23:34,455:INFO:             sklearn: 1.1.0
2023-06-16 14:23:34,455:INFO:                pyod: 1.0.9
2023-06-16 14:23:34,455:INFO:            imblearn: 0.9.1
2023-06-16 14:23:34,455:INFO:   category_encoders: 2.6.1
2023-06-16 14:23:34,455:INFO:            lightgbm: 3.3.5
2023-06-16 14:23:34,455:INFO:               numba: 0.57.0
2023-06-16 14:23:34,455:INFO:            requests: 2.31.0
2023-06-16 14:23:34,455:INFO:          matplotlib: 3.4.3
2023-06-16 14:23:34,455:INFO:          scikitplot: 0.3.7
2023-06-16 14:23:34,455:INFO:         yellowbrick: 1.5
2023-06-16 14:23:34,455:INFO:              plotly: 5.8.0
2023-06-16 14:23:34,455:INFO:             kaleido: 0.2.1
2023-06-16 14:23:34,455:INFO:         statsmodels: 0.14.0
2023-06-16 14:23:34,456:INFO:              sktime: 0.17.0
2023-06-16 14:23:34,456:INFO:               tbats: 1.1.3
2023-06-16 14:23:34,456:INFO:            pmdarima: 2.0.3
2023-06-16 14:23:34,456:INFO:              psutil: 5.9.0
2023-06-16 14:23:34,456:INFO:PyCaret optional dependencies:
2023-06-16 14:23:34,456:INFO:                shap: Not installed
2023-06-16 14:23:34,456:INFO:           interpret: Not installed
2023-06-16 14:23:34,456:INFO:                umap: Not installed
2023-06-16 14:23:34,456:INFO:    pandas_profiling: Not installed
2023-06-16 14:23:34,456:INFO:  explainerdashboard: Not installed
2023-06-16 14:23:34,456:INFO:             autoviz: Not installed
2023-06-16 14:23:34,456:INFO:           fairlearn: Not installed
2023-06-16 14:23:34,456:INFO:             xgboost: Not installed
2023-06-16 14:23:34,456:INFO:            catboost: Not installed
2023-06-16 14:23:34,456:INFO:              kmodes: Not installed
2023-06-16 14:23:34,456:INFO:             mlxtend: Not installed
2023-06-16 14:23:34,456:INFO:       statsforecast: Not installed
2023-06-16 14:23:34,456:INFO:        tune_sklearn: Not installed
2023-06-16 14:23:34,456:INFO:                 ray: Not installed
2023-06-16 14:23:34,456:INFO:            hyperopt: Not installed
2023-06-16 14:23:34,456:INFO:              optuna: Not installed
2023-06-16 14:23:34,457:INFO:               skopt: Not installed
2023-06-16 14:23:34,457:INFO:              mlflow: Not installed
2023-06-16 14:23:34,457:INFO:              gradio: Not installed
2023-06-16 14:23:34,457:INFO:             fastapi: Not installed
2023-06-16 14:23:34,457:INFO:             uvicorn: Not installed
2023-06-16 14:23:34,457:INFO:              m2cgen: Not installed
2023-06-16 14:23:34,457:INFO:           evidently: Not installed
2023-06-16 14:23:34,457:INFO:               fugue: Not installed
2023-06-16 14:23:34,457:INFO:           streamlit: Not installed
2023-06-16 14:23:34,457:INFO:             prophet: Not installed
2023-06-16 14:23:34,457:INFO:None
2023-06-16 14:23:34,457:INFO:Set up data.
2023-06-16 14:23:34,518:INFO:Set up train/test split.
2023-06-16 14:23:34,550:INFO:Set up index.
2023-06-16 14:23:34,551:INFO:Set up folding strategy.
2023-06-16 14:23:34,551:INFO:Assigning column types.
2023-06-16 14:23:34,574:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:23:34,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,790:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,825:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:23:34,878:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,963:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,996:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:23:35,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:35,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:35,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:35,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:35,164:INFO:Preparing preprocessing pipeline...
2023-06-16 14:23:35,166:INFO:Set up simple imputation.
2023-06-16 14:23:35,178:INFO:Set up encoding of ordinal features.
2023-06-16 14:23:35,188:INFO:Set up encoding of categorical features.
2023-06-16 14:23:35,188:INFO:Set up removing multicollinearity.
2023-06-16 14:23:35,188:INFO:Set up imbalanced handling.
2023-06-16 14:23:35,189:INFO:Set up column name cleaning.
2023-06-16 14:23:35,985:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:23:36,033:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:23:36,033:INFO:Creating final display dataframe.
2023-06-16 14:23:37,094:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 36)
5   Transformed train set shape       (51162, 36)
6    Transformed test set shape       (12356, 36)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21               Fold Generator   StratifiedKFold
22                  Fold Number                10
23                     CPU Jobs                -1
24                      Use GPU             False
25               Log Experiment             False
26              Experiment Name  clf-default-name
27                          USI              b62b
2023-06-16 14:23:37,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:37,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:37,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:37,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:37,292:INFO:setup() successfully completed in 3.05s...............
2023-06-16 14:26:25,882:INFO:PyCaret ClassificationExperiment
2023-06-16 14:26:25,882:INFO:Logging name: clf-default-name
2023-06-16 14:26:25,882:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:26:25,882:INFO:version 3.0.2
2023-06-16 14:26:25,882:INFO:Initializing setup()
2023-06-16 14:26:25,882:INFO:self.USI: a15b
2023-06-16 14:26:25,882:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:26:25,883:INFO:Checking environment
2023-06-16 14:26:25,883:INFO:python_version: 3.9.7
2023-06-16 14:26:25,883:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:26:25,883:INFO:machine: AMD64
2023-06-16 14:26:25,883:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:26:25,883:INFO:Memory: svmem(total=17120436224, available=4542132224, percent=73.5, used=12578304000, free=4542132224)
2023-06-16 14:26:25,883:INFO:Physical Core: 4
2023-06-16 14:26:25,883:INFO:Logical Core: 4
2023-06-16 14:26:25,883:INFO:Checking libraries
2023-06-16 14:26:25,883:INFO:System:
2023-06-16 14:26:25,883:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:26:25,883:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:26:25,883:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:26:25,883:INFO:PyCaret required dependencies:
2023-06-16 14:26:25,883:INFO:                 pip: 21.2.3
2023-06-16 14:26:25,883:INFO:          setuptools: 57.4.0
2023-06-16 14:26:25,883:INFO:             pycaret: 3.0.2
2023-06-16 14:26:25,884:INFO:             IPython: 7.28.0
2023-06-16 14:26:25,884:INFO:          ipywidgets: 8.0.6
2023-06-16 14:26:25,884:INFO:                tqdm: 4.64.0
2023-06-16 14:26:25,884:INFO:               numpy: 1.21.2
2023-06-16 14:26:25,884:INFO:              pandas: 1.3.5
2023-06-16 14:26:25,884:INFO:              jinja2: 3.1.2
2023-06-16 14:26:25,884:INFO:               scipy: 1.7.1
2023-06-16 14:26:25,884:INFO:              joblib: 1.2.0
2023-06-16 14:26:25,884:INFO:             sklearn: 1.1.0
2023-06-16 14:26:25,884:INFO:                pyod: 1.0.9
2023-06-16 14:26:25,884:INFO:            imblearn: 0.9.1
2023-06-16 14:26:25,884:INFO:   category_encoders: 2.6.1
2023-06-16 14:26:25,884:INFO:            lightgbm: 3.3.5
2023-06-16 14:26:25,884:INFO:               numba: 0.57.0
2023-06-16 14:26:25,884:INFO:            requests: 2.31.0
2023-06-16 14:26:25,884:INFO:          matplotlib: 3.4.3
2023-06-16 14:26:25,884:INFO:          scikitplot: 0.3.7
2023-06-16 14:26:25,884:INFO:         yellowbrick: 1.5
2023-06-16 14:26:25,884:INFO:              plotly: 5.8.0
2023-06-16 14:26:25,884:INFO:             kaleido: 0.2.1
2023-06-16 14:26:25,884:INFO:         statsmodels: 0.14.0
2023-06-16 14:26:25,884:INFO:              sktime: 0.17.0
2023-06-16 14:26:25,885:INFO:               tbats: 1.1.3
2023-06-16 14:26:25,885:INFO:            pmdarima: 2.0.3
2023-06-16 14:26:25,885:INFO:              psutil: 5.9.0
2023-06-16 14:26:25,885:INFO:PyCaret optional dependencies:
2023-06-16 14:26:25,885:INFO:                shap: Not installed
2023-06-16 14:26:25,885:INFO:           interpret: Not installed
2023-06-16 14:26:25,885:INFO:                umap: Not installed
2023-06-16 14:26:25,885:INFO:    pandas_profiling: Not installed
2023-06-16 14:26:25,885:INFO:  explainerdashboard: Not installed
2023-06-16 14:26:25,885:INFO:             autoviz: Not installed
2023-06-16 14:26:25,885:INFO:           fairlearn: Not installed
2023-06-16 14:26:25,885:INFO:             xgboost: Not installed
2023-06-16 14:26:25,885:INFO:            catboost: Not installed
2023-06-16 14:26:25,885:INFO:              kmodes: Not installed
2023-06-16 14:26:25,885:INFO:             mlxtend: Not installed
2023-06-16 14:26:25,885:INFO:       statsforecast: Not installed
2023-06-16 14:26:25,885:INFO:        tune_sklearn: Not installed
2023-06-16 14:26:25,885:INFO:                 ray: Not installed
2023-06-16 14:26:25,885:INFO:            hyperopt: Not installed
2023-06-16 14:26:25,885:INFO:              optuna: Not installed
2023-06-16 14:26:25,885:INFO:               skopt: Not installed
2023-06-16 14:26:25,885:INFO:              mlflow: Not installed
2023-06-16 14:26:25,886:INFO:              gradio: Not installed
2023-06-16 14:26:25,886:INFO:             fastapi: Not installed
2023-06-16 14:26:25,886:INFO:             uvicorn: Not installed
2023-06-16 14:26:25,886:INFO:              m2cgen: Not installed
2023-06-16 14:26:25,886:INFO:           evidently: Not installed
2023-06-16 14:26:25,886:INFO:               fugue: Not installed
2023-06-16 14:26:25,886:INFO:           streamlit: Not installed
2023-06-16 14:26:25,886:INFO:             prophet: Not installed
2023-06-16 14:26:25,886:INFO:None
2023-06-16 14:26:25,886:INFO:Set up data.
2023-06-16 14:26:25,946:INFO:Set up train/test split.
2023-06-16 14:26:25,969:INFO:Set up index.
2023-06-16 14:26:25,970:INFO:Set up folding strategy.
2023-06-16 14:26:25,970:INFO:Assigning column types.
2023-06-16 14:26:25,980:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:26:26,030:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,031:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,112:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,155:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:26:26,216:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,339:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:26:26,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,505:INFO:Preparing preprocessing pipeline...
2023-06-16 14:26:26,507:INFO:Set up simple imputation.
2023-06-16 14:26:26,517:INFO:Set up encoding of ordinal features.
2023-06-16 14:26:26,526:INFO:Set up encoding of categorical features.
2023-06-16 14:26:26,526:INFO:Set up removing multicollinearity.
2023-06-16 14:26:26,526:INFO:Set up imbalanced handling.
2023-06-16 14:26:26,526:INFO:Set up feature selection.
2023-06-16 14:26:26,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,614:INFO:Set up column name cleaning.
2023-06-16 14:26:54,907:INFO:PyCaret ClassificationExperiment
2023-06-16 14:26:54,907:INFO:Logging name: clf-default-name
2023-06-16 14:26:54,907:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:26:54,907:INFO:version 3.0.2
2023-06-16 14:26:54,907:INFO:Initializing setup()
2023-06-16 14:26:54,907:INFO:self.USI: cec6
2023-06-16 14:26:54,907:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:26:54,907:INFO:Checking environment
2023-06-16 14:26:54,907:INFO:python_version: 3.9.7
2023-06-16 14:26:54,907:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:26:54,907:INFO:machine: AMD64
2023-06-16 14:26:54,907:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:26:54,907:INFO:Memory: svmem(total=17120436224, available=4395712512, percent=74.3, used=12724723712, free=4395712512)
2023-06-16 14:26:54,908:INFO:Physical Core: 4
2023-06-16 14:26:54,908:INFO:Logical Core: 4
2023-06-16 14:26:54,908:INFO:Checking libraries
2023-06-16 14:26:54,908:INFO:System:
2023-06-16 14:26:54,908:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:26:54,908:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:26:54,908:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:26:54,908:INFO:PyCaret required dependencies:
2023-06-16 14:26:54,908:INFO:                 pip: 21.2.3
2023-06-16 14:26:54,908:INFO:          setuptools: 57.4.0
2023-06-16 14:26:54,908:INFO:             pycaret: 3.0.2
2023-06-16 14:26:54,908:INFO:             IPython: 7.28.0
2023-06-16 14:26:54,908:INFO:          ipywidgets: 8.0.6
2023-06-16 14:26:54,908:INFO:                tqdm: 4.64.0
2023-06-16 14:26:54,908:INFO:               numpy: 1.21.2
2023-06-16 14:26:54,908:INFO:              pandas: 1.3.5
2023-06-16 14:26:54,908:INFO:              jinja2: 3.1.2
2023-06-16 14:26:54,908:INFO:               scipy: 1.7.1
2023-06-16 14:26:54,908:INFO:              joblib: 1.2.0
2023-06-16 14:26:54,908:INFO:             sklearn: 1.1.0
2023-06-16 14:26:54,908:INFO:                pyod: 1.0.9
2023-06-16 14:26:54,909:INFO:            imblearn: 0.9.1
2023-06-16 14:26:54,909:INFO:   category_encoders: 2.6.1
2023-06-16 14:26:54,909:INFO:            lightgbm: 3.3.5
2023-06-16 14:26:54,909:INFO:               numba: 0.57.0
2023-06-16 14:26:54,909:INFO:            requests: 2.31.0
2023-06-16 14:26:54,909:INFO:          matplotlib: 3.4.3
2023-06-16 14:26:54,909:INFO:          scikitplot: 0.3.7
2023-06-16 14:26:54,909:INFO:         yellowbrick: 1.5
2023-06-16 14:26:54,909:INFO:              plotly: 5.8.0
2023-06-16 14:26:54,909:INFO:             kaleido: 0.2.1
2023-06-16 14:26:54,909:INFO:         statsmodels: 0.14.0
2023-06-16 14:26:54,909:INFO:              sktime: 0.17.0
2023-06-16 14:26:54,909:INFO:               tbats: 1.1.3
2023-06-16 14:26:54,910:INFO:            pmdarima: 2.0.3
2023-06-16 14:26:54,910:INFO:              psutil: 5.9.0
2023-06-16 14:26:54,910:INFO:PyCaret optional dependencies:
2023-06-16 14:26:54,910:INFO:                shap: Not installed
2023-06-16 14:26:54,910:INFO:           interpret: Not installed
2023-06-16 14:26:54,910:INFO:                umap: Not installed
2023-06-16 14:26:54,910:INFO:    pandas_profiling: Not installed
2023-06-16 14:26:54,910:INFO:  explainerdashboard: Not installed
2023-06-16 14:26:54,910:INFO:             autoviz: Not installed
2023-06-16 14:26:54,910:INFO:           fairlearn: Not installed
2023-06-16 14:26:54,910:INFO:             xgboost: Not installed
2023-06-16 14:26:54,910:INFO:            catboost: Not installed
2023-06-16 14:26:54,910:INFO:              kmodes: Not installed
2023-06-16 14:26:54,910:INFO:             mlxtend: Not installed
2023-06-16 14:26:54,910:INFO:       statsforecast: Not installed
2023-06-16 14:26:54,910:INFO:        tune_sklearn: Not installed
2023-06-16 14:26:54,910:INFO:                 ray: Not installed
2023-06-16 14:26:54,911:INFO:            hyperopt: Not installed
2023-06-16 14:26:54,911:INFO:              optuna: Not installed
2023-06-16 14:26:54,911:INFO:               skopt: Not installed
2023-06-16 14:26:54,911:INFO:              mlflow: Not installed
2023-06-16 14:26:54,911:INFO:              gradio: Not installed
2023-06-16 14:26:54,911:INFO:             fastapi: Not installed
2023-06-16 14:26:54,911:INFO:             uvicorn: Not installed
2023-06-16 14:26:54,911:INFO:              m2cgen: Not installed
2023-06-16 14:26:54,911:INFO:           evidently: Not installed
2023-06-16 14:26:54,911:INFO:               fugue: Not installed
2023-06-16 14:26:54,911:INFO:           streamlit: Not installed
2023-06-16 14:26:54,911:INFO:             prophet: Not installed
2023-06-16 14:26:54,911:INFO:None
2023-06-16 14:26:54,911:INFO:Set up data.
2023-06-16 14:26:54,973:INFO:Set up train/test split.
2023-06-16 14:26:54,998:INFO:Set up index.
2023-06-16 14:26:54,999:INFO:Set up folding strategy.
2023-06-16 14:26:54,999:INFO:Assigning column types.
2023-06-16 14:26:55,012:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:26:55,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,155:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,188:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:26:55,239:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,327:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,361:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:26:55,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,532:INFO:Preparing preprocessing pipeline...
2023-06-16 14:26:55,534:INFO:Set up simple imputation.
2023-06-16 14:26:55,544:INFO:Set up encoding of ordinal features.
2023-06-16 14:26:55,555:INFO:Set up encoding of categorical features.
2023-06-16 14:26:55,555:INFO:Set up removing multicollinearity.
2023-06-16 14:26:55,555:INFO:Set up imbalanced handling.
2023-06-16 14:26:55,555:INFO:Set up feature selection.
2023-06-16 14:26:55,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,647:INFO:Set up column name cleaning.
2023-06-16 14:26:56,246:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:26:56,309:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=3,
                                                            score_func=<function f_classif at 0x000001CF6EB34B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:26:56,310:INFO:Creating final display dataframe.
2023-06-16 14:26:57,089:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape        (63518, 4)
5   Transformed train set shape        (51162, 4)
6    Transformed test set shape        (12356, 4)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected               0.2
25               Fold Generator   StratifiedKFold
26                  Fold Number                10
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              cec6
2023-06-16 14:26:57,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:57,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:57,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:57,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:57,284:INFO:setup() successfully completed in 2.57s...............
2023-06-16 14:27:16,729:INFO:Initializing compare_models()
2023-06-16 14:27:16,730:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 14:27:16,730:INFO:Checking exceptions
2023-06-16 14:27:16,740:INFO:Preparing display monitor
2023-06-16 14:27:16,859:INFO:Initializing Logistic Regression
2023-06-16 14:27:16,859:INFO:Total runtime is 1.668532689412435e-05 minutes
2023-06-16 14:27:16,865:INFO:SubProcess create_model() called ==================================
2023-06-16 14:27:16,865:INFO:Initializing create_model()
2023-06-16 14:27:16,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C7C3D30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:16,866:INFO:Checking exceptions
2023-06-16 14:27:16,866:INFO:Importing libraries
2023-06-16 14:27:16,866:INFO:Copying training dataset
2023-06-16 14:27:16,882:INFO:Defining folds
2023-06-16 14:27:16,883:INFO:Declaring metric variables
2023-06-16 14:27:16,919:INFO:Importing untrained model
2023-06-16 14:27:16,924:INFO:Logistic Regression Imported successfully
2023-06-16 14:27:16,934:INFO:Starting cross validation
2023-06-16 14:27:16,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:27:27,790:INFO:Calculating mean and std
2023-06-16 14:27:27,792:INFO:Creating metrics dataframe
2023-06-16 14:27:28,031:INFO:Uploading results into container
2023-06-16 14:27:28,032:INFO:Uploading model into container now
2023-06-16 14:27:28,033:INFO:_master_model_container: 1
2023-06-16 14:27:28,033:INFO:_display_container: 2
2023-06-16 14:27:28,033:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:27:28,033:INFO:create_model() successfully completed......................................
2023-06-16 14:27:28,465:INFO:SubProcess create_model() end ==================================
2023-06-16 14:27:28,465:INFO:Creating metrics dataframe
2023-06-16 14:27:28,482:INFO:Initializing SVM - Linear Kernel
2023-06-16 14:27:28,482:INFO:Total runtime is 0.19373352527618407 minutes
2023-06-16 14:27:28,486:INFO:SubProcess create_model() called ==================================
2023-06-16 14:27:28,487:INFO:Initializing create_model()
2023-06-16 14:27:28,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C7C3D30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:28,487:INFO:Checking exceptions
2023-06-16 14:27:28,487:INFO:Importing libraries
2023-06-16 14:27:28,487:INFO:Copying training dataset
2023-06-16 14:27:28,508:INFO:Defining folds
2023-06-16 14:27:28,509:INFO:Declaring metric variables
2023-06-16 14:27:28,513:INFO:Importing untrained model
2023-06-16 14:27:28,519:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 14:27:28,530:INFO:Starting cross validation
2023-06-16 14:27:28,532:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:27:29,816:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:29,890:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:29,953:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:29,959:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:31,220:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:31,307:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:31,399:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:31,400:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:32,486:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:32,560:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:32,685:INFO:Calculating mean and std
2023-06-16 14:27:32,686:INFO:Creating metrics dataframe
2023-06-16 14:27:32,966:INFO:Uploading results into container
2023-06-16 14:27:32,967:INFO:Uploading model into container now
2023-06-16 14:27:32,967:INFO:_master_model_container: 2
2023-06-16 14:27:32,967:INFO:_display_container: 2
2023-06-16 14:27:32,968:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 14:27:32,968:INFO:create_model() successfully completed......................................
2023-06-16 14:27:33,038:INFO:SubProcess create_model() end ==================================
2023-06-16 14:27:33,038:INFO:Creating metrics dataframe
2023-06-16 14:27:33,055:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 14:27:33,055:INFO:Total runtime is 0.26995001633961996 minutes
2023-06-16 14:27:33,059:INFO:SubProcess create_model() called ==================================
2023-06-16 14:27:33,059:INFO:Initializing create_model()
2023-06-16 14:27:33,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C7C3D30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:33,060:INFO:Checking exceptions
2023-06-16 14:27:33,060:INFO:Importing libraries
2023-06-16 14:27:33,060:INFO:Copying training dataset
2023-06-16 14:27:33,078:INFO:Defining folds
2023-06-16 14:27:33,079:INFO:Declaring metric variables
2023-06-16 14:27:33,083:INFO:Importing untrained model
2023-06-16 14:27:33,088:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:27:33,099:INFO:Starting cross validation
2023-06-16 14:27:33,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:27:38,623:INFO:Calculating mean and std
2023-06-16 14:27:38,625:INFO:Creating metrics dataframe
2023-06-16 14:27:38,893:INFO:Uploading results into container
2023-06-16 14:27:38,894:INFO:Uploading model into container now
2023-06-16 14:27:38,894:INFO:_master_model_container: 3
2023-06-16 14:27:38,895:INFO:_display_container: 2
2023-06-16 14:27:38,895:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:27:38,896:INFO:create_model() successfully completed......................................
2023-06-16 14:27:38,968:INFO:SubProcess create_model() end ==================================
2023-06-16 14:27:38,968:INFO:Creating metrics dataframe
2023-06-16 14:27:38,996:INFO:Initializing create_model()
2023-06-16 14:27:38,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:38,997:INFO:Checking exceptions
2023-06-16 14:27:39,001:INFO:Importing libraries
2023-06-16 14:27:39,001:INFO:Copying training dataset
2023-06-16 14:27:39,017:INFO:Defining folds
2023-06-16 14:27:39,017:INFO:Declaring metric variables
2023-06-16 14:27:39,018:INFO:Importing untrained model
2023-06-16 14:27:39,018:INFO:Declaring custom model
2023-06-16 14:27:39,019:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:27:39,021:INFO:Cross validation set to False
2023-06-16 14:27:39,022:INFO:Fitting Model
2023-06-16 14:27:39,991:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:27:39,991:INFO:create_model() successfully completed......................................
2023-06-16 14:27:40,085:INFO:Initializing create_model()
2023-06-16 14:27:40,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:40,086:INFO:Checking exceptions
2023-06-16 14:27:40,089:INFO:Importing libraries
2023-06-16 14:27:40,089:INFO:Copying training dataset
2023-06-16 14:27:40,107:INFO:Defining folds
2023-06-16 14:27:40,107:INFO:Declaring metric variables
2023-06-16 14:27:40,109:INFO:Importing untrained model
2023-06-16 14:27:40,109:INFO:Declaring custom model
2023-06-16 14:27:40,110:INFO:Logistic Regression Imported successfully
2023-06-16 14:27:40,113:INFO:Cross validation set to False
2023-06-16 14:27:40,113:INFO:Fitting Model
2023-06-16 14:27:40,900:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:27:40,900:INFO:create_model() successfully completed......................................
2023-06-16 14:27:40,995:INFO:Initializing create_model()
2023-06-16 14:27:40,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:40,996:INFO:Checking exceptions
2023-06-16 14:27:40,999:INFO:Importing libraries
2023-06-16 14:27:41,000:INFO:Copying training dataset
2023-06-16 14:27:41,017:INFO:Defining folds
2023-06-16 14:27:41,017:INFO:Declaring metric variables
2023-06-16 14:27:41,017:INFO:Importing untrained model
2023-06-16 14:27:41,017:INFO:Declaring custom model
2023-06-16 14:27:41,018:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 14:27:41,020:INFO:Cross validation set to False
2023-06-16 14:27:41,020:INFO:Fitting Model
2023-06-16 14:27:41,741:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 14:27:41,741:INFO:create_model() successfully completed......................................
2023-06-16 14:27:41,845:INFO:_master_model_container: 3
2023-06-16 14:27:41,845:INFO:_display_container: 2
2023-06-16 14:27:41,848:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 14:27:41,848:INFO:compare_models() successfully completed......................................
2023-06-16 14:27:46,601:INFO:Initializing evaluate_model()
2023-06-16 14:27:46,601:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:27:46,633:INFO:Initializing plot_model()
2023-06-16 14:27:46,635:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:46,635:INFO:Checking exceptions
2023-06-16 14:27:46,640:INFO:Preloading libraries
2023-06-16 14:27:46,641:INFO:Copying training dataset
2023-06-16 14:27:46,641:INFO:Plot type: pipeline
2023-06-16 14:27:46,884:INFO:Visual Rendered Successfully
2023-06-16 14:27:46,952:INFO:plot_model() successfully completed......................................
2023-06-16 14:27:49,372:INFO:Initializing plot_model()
2023-06-16 14:27:49,372:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:49,372:INFO:Checking exceptions
2023-06-16 14:27:49,378:INFO:Preloading libraries
2023-06-16 14:27:49,378:INFO:Copying training dataset
2023-06-16 14:27:49,378:INFO:Plot type: auc
2023-06-16 14:27:49,501:INFO:Fitting Model
2023-06-16 14:27:49,502:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:27:49,503:INFO:Scoring test/hold-out set
2023-06-16 14:27:49,716:INFO:Visual Rendered Successfully
2023-06-16 14:27:49,865:INFO:plot_model() successfully completed......................................
2023-06-16 14:27:54,485:INFO:Initializing plot_model()
2023-06-16 14:27:54,486:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:54,486:INFO:Checking exceptions
2023-06-16 14:27:54,492:INFO:Preloading libraries
2023-06-16 14:27:54,493:INFO:Copying training dataset
2023-06-16 14:27:54,493:INFO:Plot type: feature
2023-06-16 14:27:54,662:INFO:Visual Rendered Successfully
2023-06-16 14:27:54,749:INFO:plot_model() successfully completed......................................
2023-06-16 14:27:57,943:INFO:Initializing plot_model()
2023-06-16 14:27:57,943:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:57,943:INFO:Checking exceptions
2023-06-16 14:27:57,950:INFO:Preloading libraries
2023-06-16 14:27:57,950:INFO:Copying training dataset
2023-06-16 14:27:57,950:INFO:Plot type: auc
2023-06-16 14:27:58,070:INFO:Fitting Model
2023-06-16 14:27:58,071:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:27:58,072:INFO:Scoring test/hold-out set
2023-06-16 14:27:58,279:INFO:Visual Rendered Successfully
2023-06-16 14:27:58,358:INFO:plot_model() successfully completed......................................
2023-06-16 14:27:58,710:INFO:Initializing plot_model()
2023-06-16 14:27:58,710:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:58,711:INFO:Checking exceptions
2023-06-16 14:27:58,717:INFO:Preloading libraries
2023-06-16 14:27:58,718:INFO:Copying training dataset
2023-06-16 14:27:58,718:INFO:Plot type: confusion_matrix
2023-06-16 14:27:58,853:INFO:Fitting Model
2023-06-16 14:27:58,853:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:27:58,854:INFO:Scoring test/hold-out set
2023-06-16 14:27:58,959:INFO:Visual Rendered Successfully
2023-06-16 14:27:59,042:INFO:plot_model() successfully completed......................................
2023-06-16 14:28:00,859:INFO:Initializing plot_model()
2023-06-16 14:28:00,860:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:28:00,860:INFO:Checking exceptions
2023-06-16 14:28:00,866:INFO:Preloading libraries
2023-06-16 14:28:00,867:INFO:Copying training dataset
2023-06-16 14:28:00,867:INFO:Plot type: threshold
2023-06-16 14:28:00,985:INFO:Fitting Model
2023-06-16 14:28:04,023:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:28:04,057:INFO:Scoring test/hold-out set
2023-06-16 14:28:04,462:INFO:Visual Rendered Successfully
2023-06-16 14:28:04,542:INFO:plot_model() successfully completed......................................
2023-06-16 14:28:07,055:INFO:Initializing plot_model()
2023-06-16 14:28:07,055:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:28:07,055:INFO:Checking exceptions
2023-06-16 14:28:07,063:INFO:Preloading libraries
2023-06-16 14:28:07,063:INFO:Copying training dataset
2023-06-16 14:28:07,063:INFO:Plot type: class_report
2023-06-16 14:28:07,184:INFO:Fitting Model
2023-06-16 14:28:07,185:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:28:07,185:INFO:Scoring test/hold-out set
2023-06-16 14:28:07,393:INFO:Visual Rendered Successfully
2023-06-16 14:28:07,467:INFO:plot_model() successfully completed......................................
2023-06-16 14:28:15,848:INFO:Initializing plot_model()
2023-06-16 14:28:15,848:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:28:15,848:INFO:Checking exceptions
2023-06-16 14:28:15,855:INFO:Preloading libraries
2023-06-16 14:28:15,855:INFO:Copying training dataset
2023-06-16 14:28:15,855:INFO:Plot type: rfe
2023-06-16 14:28:15,986:INFO:Fitting Model
2023-06-16 14:28:18,219:INFO:Visual Rendered Successfully
2023-06-16 14:28:18,302:INFO:plot_model() successfully completed......................................
2023-06-16 14:28:25,983:INFO:Initializing plot_model()
2023-06-16 14:28:25,983:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:28:25,984:INFO:Checking exceptions
2023-06-16 14:28:25,991:INFO:Preloading libraries
2023-06-16 14:28:25,991:INFO:Copying training dataset
2023-06-16 14:28:25,991:INFO:Plot type: vc
2023-06-16 14:28:25,992:INFO:Determining param_name
2023-06-16 14:28:25,992:INFO:param_name: l1_ratio
2023-06-16 14:28:26,115:INFO:Fitting Model
2023-06-16 14:28:26,138:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,180:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,221:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,262:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,304:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,344:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,386:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,429:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,471:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,512:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,553:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,595:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,636:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,677:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,718:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,759:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,800:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,843:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,885:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,926:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,008:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,052:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,093:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,135:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,175:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,216:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,259:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,301:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,343:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,386:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,428:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,474:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,519:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,563:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,646:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,686:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,726:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,767:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,808:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,849:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,890:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,931:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,972:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,013:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,055:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,104:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,155:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,200:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,243:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,287:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,329:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,371:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,412:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,453:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,496:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,547:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,597:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,648:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,694:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,740:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,786:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,825:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,864:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,904:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,944:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,987:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,029:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,075:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,124:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,175:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,224:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,271:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,317:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,361:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,405:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,453:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,497:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,537:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,580:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,623:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,666:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,707:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,748:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,789:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,874:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,959:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,003:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,046:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,089:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,131:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,173:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,215:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,256:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,303:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,353:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,397:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,438:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,483:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,530:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,577:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,630:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,680:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,724:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,770:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,814:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,856:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,904:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,948:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,996:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,044:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,093:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,143:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,190:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,236:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,281:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,325:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,367:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,411:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,456:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,501:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,546:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,595:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,643:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,691:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,735:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,776:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,818:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,859:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,959:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,000:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,041:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,082:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,127:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,169:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,210:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,251:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,292:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,374:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,417:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,458:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,498:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,542:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,584:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,632:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,678:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,721:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,762:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,802:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,843:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,884:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,925:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,012:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,053:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,095:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,137:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,179:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,225:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,271:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,318:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,364:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,413:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,462:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,512:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,560:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,618:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,668:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,721:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,764:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,806:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,849:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,894:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,939:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,983:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,031:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,075:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,119:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,163:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,206:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,249:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,293:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,339:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,381:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,427:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,473:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,523:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,570:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,622:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,668:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,710:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,751:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,795:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,836:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,879:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,921:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,965:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,011:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,054:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,098:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,143:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,195:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,244:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,291:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,339:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,425:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,468:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,515:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,567:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,612:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,656:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,699:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,743:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,788:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,874:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,918:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,962:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,011:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,055:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,099:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,140:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,188:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,233:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,275:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,317:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,358:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,411:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,456:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,502:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,541:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,582:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,630:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,684:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,729:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,770:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,812:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,853:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,895:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,938:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,983:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,025:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,066:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,108:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,150:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,196:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,238:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,279:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,320:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,362:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,406:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,452:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,493:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,576:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,619:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,665:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,709:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,754:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,799:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,843:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,888:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,933:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,974:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,016:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,059:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,106:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,161:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,211:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,273:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,318:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,360:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,405:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,460:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,547:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,627:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,706:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,769:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,829:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,882:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,936:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,990:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,035:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,086:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,132:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,173:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,216:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,267:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,316:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,360:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,406:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,450:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,496:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,566:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,623:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,679:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,733:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,774:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,818:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,869:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,924:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,979:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,026:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,069:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,112:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,157:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,202:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,243:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,284:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,326:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,372:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,423:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,470:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,514:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,555:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,598:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,645:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,688:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,731:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,774:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,816:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,860:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,903:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,947:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,990:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,033:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,075:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,122:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,165:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,209:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,252:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,296:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,338:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,381:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,424:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,467:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,510:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,553:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,599:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,641:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,684:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,728:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,770:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,813:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,856:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,898:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,941:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,985:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,028:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,074:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,118:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,160:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,203:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,246:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,288:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,330:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,373:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,415:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,459:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,503:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,548:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,591:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,633:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,676:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,721:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,764:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,806:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,848:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,892:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,938:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,989:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,036:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,077:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,119:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,162:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,205:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,248:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,291:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,334:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,376:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,420:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,465:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,517:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,566:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,620:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,670:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,723:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,770:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,815:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,855:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,898:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,940:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,984:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,030:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,073:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,116:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,159:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,202:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,245:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,287:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,431:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,480:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,526:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,573:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,620:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,664:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,707:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,751:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,793:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,836:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,878:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,924:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,974:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,028:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,071:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,112:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,156:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,198:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,242:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,284:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,331:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,379:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,429:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,478:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,527:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,572:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,617:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,661:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,727:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,778:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,827:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,873:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,918:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,959:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,001:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,055:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,101:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,144:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,188:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,232:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,281:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,334:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,380:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,424:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,468:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,512:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,562:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,611:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,656:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,700:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,745:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,789:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,832:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,881:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,932:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,979:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,023:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,069:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,120:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,167:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,213:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,258:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,301:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,344:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,387:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,429:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,473:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,516:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,562:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,651:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,694:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,738:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,782:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,825:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,867:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,909:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,951:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,996:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,044:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,094:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,140:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,186:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,230:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,269:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,311:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,354:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,396:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,439:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,483:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,531:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,574:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,619:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,663:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,706:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,750:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,793:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,836:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,880:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,922:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,016:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,061:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,105:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,149:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,193:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,239:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,283:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,326:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,369:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,411:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,454:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,500:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,544:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,591:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,681:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,724:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,768:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,812:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,855:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,898:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,941:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,988:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,031:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,075:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,119:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,164:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,207:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,253:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,297:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,340:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,394:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,450:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,548:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,593:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,636:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,690:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,734:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,778:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,821:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,866:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,916:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,024:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,081:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,133:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,186:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,234:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,290:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,334:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,378:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,420:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,462:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,508:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,550:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,594:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,680:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,723:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,766:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,810:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,854:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,899:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,946:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,992:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,089:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,133:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,175:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,217:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,261:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,304:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,347:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,389:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,433:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,476:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,521:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,566:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,609:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,654:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,698:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,745:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,790:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,835:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,880:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,925:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,969:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,015:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,062:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,107:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,150:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,194:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,242:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,291:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,337:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,381:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,423:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,465:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,509:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,557:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,604:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,651:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,693:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,737:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,781:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,824:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,866:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,910:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,955:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,002:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,052:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,097:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,141:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,184:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,231:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,275:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,318:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,361:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,406:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,450:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,495:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,544:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,589:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,633:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,677:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,721:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,767:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,811:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,853:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,897:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,940:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,986:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,034:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,080:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,124:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,167:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,210:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,253:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,296:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,339:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,426:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,469:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,517:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,559:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,604:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,647:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,689:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,731:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,775:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,817:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,859:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,902:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,945:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,991:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,035:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,077:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,120:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,162:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,204:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,246:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,289:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,375:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,420:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,466:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,509:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,552:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,595:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,680:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,722:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,765:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,808:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,851:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,894:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,939:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,982:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,026:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,069:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,111:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,153:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,195:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,238:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,281:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,324:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,367:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,414:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,463:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,509:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,555:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,602:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,648:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,692:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,734:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,779:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,821:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,864:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,910:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,953:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,995:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,083:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,125:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,168:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,210:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,253:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,297:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,340:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,388:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,434:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,481:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,585:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,686:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,738:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,789:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,832:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,872:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,960:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,002:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,046:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,089:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,132:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,174:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,217:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,259:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,302:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,345:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,392:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,435:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,478:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,520:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,564:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,607:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,649:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,692:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,734:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,778:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,822:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,868:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,953:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,995:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,085:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,128:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,170:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,213:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,256:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,300:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,346:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,389:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,432:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,474:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,517:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,563:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,605:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,647:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,690:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,733:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,777:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,824:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,868:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,953:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,995:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,084:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,126:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,169:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,212:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,255:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,303:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,346:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,388:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,433:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,476:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,520:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,563:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,649:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,692:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,734:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,780:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,823:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,866:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,910:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,952:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,994:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,043:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,095:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,141:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,193:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,244:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,303:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,349:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,393:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,438:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,480:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,523:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,567:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,609:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,652:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,699:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,761:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,890:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,945:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,993:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,050:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,098:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,138:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,179:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,221:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,264:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,309:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,352:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,398:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,442:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,485:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,591:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,647:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,694:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,736:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,780:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,828:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,872:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,918:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,965:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,015:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,061:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,106:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,149:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,193:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,246:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,303:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,362:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,421:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,476:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,535:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,596:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,651:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,703:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,760:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,813:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,867:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,954:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,997:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,049:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,103:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,153:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,214:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,261:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,308:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,354:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,399:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,445:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,488:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,588:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,683:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,728:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,771:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,849:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,899:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,942:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,991:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,036:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,109:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,204:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,300:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,366:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,416:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,473:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,541:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,621:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,672:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,716:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,760:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,807:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,855:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,901:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,952:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,998:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,057:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,113:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,155:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,203:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,250:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,301:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,356:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,405:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,450:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,494:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,540:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,585:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,628:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,670:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,714:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,758:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,800:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,845:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,892:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,936:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,978:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,022:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,067:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,113:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,155:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,197:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,242:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,285:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,330:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,378:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,423:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,468:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,511:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,554:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,602:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,646:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,690:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,735:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,782:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,881:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,923:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,014:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,062:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,111:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,155:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,198:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,245:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,289:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,427:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,473:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,516:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,559:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,604:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,646:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,696:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,740:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,783:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,828:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,875:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,919:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,960:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,005:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,049:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,096:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,139:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,180:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,222:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,263:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,306:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,354:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,397:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,439:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,483:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,526:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,568:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,613:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,655:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,698:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,740:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,783:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,874:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,961:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,005:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,048:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,092:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,136:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,178:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,226:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,282:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,430:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,479:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,526:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,572:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,620:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,841:INFO:Visual Rendered Successfully
2023-06-16 14:29:11,912:INFO:plot_model() successfully completed......................................
2023-06-16 14:29:11,921:INFO:Initializing evaluate_model()
2023-06-16 14:29:11,921:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:29:11,958:INFO:Initializing plot_model()
2023-06-16 14:29:11,960:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:29:11,960:INFO:Checking exceptions
2023-06-16 14:29:11,977:INFO:Preloading libraries
2023-06-16 14:29:11,992:INFO:Copying training dataset
2023-06-16 14:29:11,992:INFO:Plot type: pipeline
2023-06-16 14:29:12,240:INFO:Visual Rendered Successfully
2023-06-16 14:29:12,310:INFO:plot_model() successfully completed......................................
2023-06-16 14:29:35,535:INFO:PyCaret ClassificationExperiment
2023-06-16 14:29:35,536:INFO:Logging name: clf-default-name
2023-06-16 14:29:35,536:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:29:35,536:INFO:version 3.0.2
2023-06-16 14:29:35,536:INFO:Initializing setup()
2023-06-16 14:29:35,536:INFO:self.USI: 41e6
2023-06-16 14:29:35,536:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:29:35,537:INFO:Checking environment
2023-06-16 14:29:35,537:INFO:python_version: 3.9.7
2023-06-16 14:29:35,537:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:29:35,537:INFO:machine: AMD64
2023-06-16 14:29:35,538:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:29:35,538:INFO:Memory: svmem(total=17120436224, available=4008894464, percent=76.6, used=13111541760, free=4008894464)
2023-06-16 14:29:35,538:INFO:Physical Core: 4
2023-06-16 14:29:35,538:INFO:Logical Core: 4
2023-06-16 14:29:35,538:INFO:Checking libraries
2023-06-16 14:29:35,538:INFO:System:
2023-06-16 14:29:35,538:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:29:35,538:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:29:35,538:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:29:35,538:INFO:PyCaret required dependencies:
2023-06-16 14:29:35,539:INFO:                 pip: 21.2.3
2023-06-16 14:29:35,539:INFO:          setuptools: 57.4.0
2023-06-16 14:29:35,539:INFO:             pycaret: 3.0.2
2023-06-16 14:29:35,539:INFO:             IPython: 7.28.0
2023-06-16 14:29:35,539:INFO:          ipywidgets: 8.0.6
2023-06-16 14:29:35,539:INFO:                tqdm: 4.64.0
2023-06-16 14:29:35,539:INFO:               numpy: 1.21.2
2023-06-16 14:29:35,539:INFO:              pandas: 1.3.5
2023-06-16 14:29:35,539:INFO:              jinja2: 3.1.2
2023-06-16 14:29:35,539:INFO:               scipy: 1.7.1
2023-06-16 14:29:35,539:INFO:              joblib: 1.2.0
2023-06-16 14:29:35,540:INFO:             sklearn: 1.1.0
2023-06-16 14:29:35,540:INFO:                pyod: 1.0.9
2023-06-16 14:29:35,540:INFO:            imblearn: 0.9.1
2023-06-16 14:29:35,540:INFO:   category_encoders: 2.6.1
2023-06-16 14:29:35,540:INFO:            lightgbm: 3.3.5
2023-06-16 14:29:35,540:INFO:               numba: 0.57.0
2023-06-16 14:29:35,540:INFO:            requests: 2.31.0
2023-06-16 14:29:35,540:INFO:          matplotlib: 3.4.3
2023-06-16 14:29:35,540:INFO:          scikitplot: 0.3.7
2023-06-16 14:29:35,540:INFO:         yellowbrick: 1.5
2023-06-16 14:29:35,540:INFO:              plotly: 5.8.0
2023-06-16 14:29:35,540:INFO:             kaleido: 0.2.1
2023-06-16 14:29:35,540:INFO:         statsmodels: 0.14.0
2023-06-16 14:29:35,541:INFO:              sktime: 0.17.0
2023-06-16 14:29:35,541:INFO:               tbats: 1.1.3
2023-06-16 14:29:35,541:INFO:            pmdarima: 2.0.3
2023-06-16 14:29:35,541:INFO:              psutil: 5.9.0
2023-06-16 14:29:35,542:INFO:PyCaret optional dependencies:
2023-06-16 14:29:35,542:INFO:                shap: Not installed
2023-06-16 14:29:35,542:INFO:           interpret: Not installed
2023-06-16 14:29:35,542:INFO:                umap: Not installed
2023-06-16 14:29:35,542:INFO:    pandas_profiling: Not installed
2023-06-16 14:29:35,542:INFO:  explainerdashboard: Not installed
2023-06-16 14:29:35,542:INFO:             autoviz: Not installed
2023-06-16 14:29:35,542:INFO:           fairlearn: Not installed
2023-06-16 14:29:35,542:INFO:             xgboost: Not installed
2023-06-16 14:29:35,543:INFO:            catboost: Not installed
2023-06-16 14:29:35,543:INFO:              kmodes: Not installed
2023-06-16 14:29:35,543:INFO:             mlxtend: Not installed
2023-06-16 14:29:35,543:INFO:       statsforecast: Not installed
2023-06-16 14:29:35,543:INFO:        tune_sklearn: Not installed
2023-06-16 14:29:35,543:INFO:                 ray: Not installed
2023-06-16 14:29:35,543:INFO:            hyperopt: Not installed
2023-06-16 14:29:35,543:INFO:              optuna: Not installed
2023-06-16 14:29:35,543:INFO:               skopt: Not installed
2023-06-16 14:29:35,544:INFO:              mlflow: Not installed
2023-06-16 14:29:35,544:INFO:              gradio: Not installed
2023-06-16 14:29:35,544:INFO:             fastapi: Not installed
2023-06-16 14:29:35,544:INFO:             uvicorn: Not installed
2023-06-16 14:29:35,544:INFO:              m2cgen: Not installed
2023-06-16 14:29:35,544:INFO:           evidently: Not installed
2023-06-16 14:29:35,544:INFO:               fugue: Not installed
2023-06-16 14:29:35,545:INFO:           streamlit: Not installed
2023-06-16 14:29:35,545:INFO:             prophet: Not installed
2023-06-16 14:29:35,545:INFO:None
2023-06-16 14:29:35,545:INFO:Set up data.
2023-06-16 14:29:35,603:INFO:Set up train/test split.
2023-06-16 14:29:35,634:INFO:Set up index.
2023-06-16 14:29:35,635:INFO:Set up folding strategy.
2023-06-16 14:29:35,635:INFO:Assigning column types.
2023-06-16 14:29:35,647:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:29:35,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,787:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,823:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:29:35,881:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:36,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,005:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:29:36,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,175:INFO:Preparing preprocessing pipeline...
2023-06-16 14:29:36,177:INFO:Set up simple imputation.
2023-06-16 14:29:36,188:INFO:Set up encoding of ordinal features.
2023-06-16 14:29:36,199:INFO:Set up encoding of categorical features.
2023-06-16 14:29:36,199:INFO:Set up removing multicollinearity.
2023-06-16 14:29:36,199:INFO:Set up imbalanced handling.
2023-06-16 14:29:36,199:INFO:Set up feature selection.
2023-06-16 14:29:36,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,288:INFO:Set up column name cleaning.
2023-06-16 14:29:36,939:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:29:36,992:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=10,
                                                            score_func=<function f_classif at 0x000001CF6EB34B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:29:36,993:INFO:Creating final display dataframe.
2023-06-16 14:29:37,782:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 11)
5   Transformed train set shape       (51162, 11)
6    Transformed test set shape       (12356, 11)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected               0.6
25               Fold Generator   StratifiedKFold
26                  Fold Number                10
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              41e6
2023-06-16 14:29:37,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:37,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:37,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:37,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:37,987:INFO:setup() successfully completed in 2.72s...............
2023-06-16 14:29:45,252:INFO:PyCaret ClassificationExperiment
2023-06-16 14:29:45,252:INFO:Logging name: clf-default-name
2023-06-16 14:29:45,252:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:29:45,252:INFO:version 3.0.2
2023-06-16 14:29:45,252:INFO:Initializing setup()
2023-06-16 14:29:45,253:INFO:self.USI: cced
2023-06-16 14:29:45,253:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:29:45,253:INFO:Checking environment
2023-06-16 14:29:45,253:INFO:python_version: 3.9.7
2023-06-16 14:29:45,253:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:29:45,253:INFO:machine: AMD64
2023-06-16 14:29:45,253:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:29:45,253:INFO:Memory: svmem(total=17120436224, available=4011737088, percent=76.6, used=13108699136, free=4011737088)
2023-06-16 14:29:45,253:INFO:Physical Core: 4
2023-06-16 14:29:45,253:INFO:Logical Core: 4
2023-06-16 14:29:45,253:INFO:Checking libraries
2023-06-16 14:29:45,253:INFO:System:
2023-06-16 14:29:45,253:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:29:45,253:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:29:45,253:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:29:45,253:INFO:PyCaret required dependencies:
2023-06-16 14:29:45,253:INFO:                 pip: 21.2.3
2023-06-16 14:29:45,254:INFO:          setuptools: 57.4.0
2023-06-16 14:29:45,254:INFO:             pycaret: 3.0.2
2023-06-16 14:29:45,254:INFO:             IPython: 7.28.0
2023-06-16 14:29:45,254:INFO:          ipywidgets: 8.0.6
2023-06-16 14:29:45,254:INFO:                tqdm: 4.64.0
2023-06-16 14:29:45,254:INFO:               numpy: 1.21.2
2023-06-16 14:29:45,254:INFO:              pandas: 1.3.5
2023-06-16 14:29:45,254:INFO:              jinja2: 3.1.2
2023-06-16 14:29:45,254:INFO:               scipy: 1.7.1
2023-06-16 14:29:45,254:INFO:              joblib: 1.2.0
2023-06-16 14:29:45,254:INFO:             sklearn: 1.1.0
2023-06-16 14:29:45,254:INFO:                pyod: 1.0.9
2023-06-16 14:29:45,254:INFO:            imblearn: 0.9.1
2023-06-16 14:29:45,254:INFO:   category_encoders: 2.6.1
2023-06-16 14:29:45,254:INFO:            lightgbm: 3.3.5
2023-06-16 14:29:45,254:INFO:               numba: 0.57.0
2023-06-16 14:29:45,254:INFO:            requests: 2.31.0
2023-06-16 14:29:45,254:INFO:          matplotlib: 3.4.3
2023-06-16 14:29:45,254:INFO:          scikitplot: 0.3.7
2023-06-16 14:29:45,254:INFO:         yellowbrick: 1.5
2023-06-16 14:29:45,254:INFO:              plotly: 5.8.0
2023-06-16 14:29:45,255:INFO:             kaleido: 0.2.1
2023-06-16 14:29:45,255:INFO:         statsmodels: 0.14.0
2023-06-16 14:29:45,255:INFO:              sktime: 0.17.0
2023-06-16 14:29:45,255:INFO:               tbats: 1.1.3
2023-06-16 14:29:45,255:INFO:            pmdarima: 2.0.3
2023-06-16 14:29:45,255:INFO:              psutil: 5.9.0
2023-06-16 14:29:45,255:INFO:PyCaret optional dependencies:
2023-06-16 14:29:45,255:INFO:                shap: Not installed
2023-06-16 14:29:45,255:INFO:           interpret: Not installed
2023-06-16 14:29:45,255:INFO:                umap: Not installed
2023-06-16 14:29:45,255:INFO:    pandas_profiling: Not installed
2023-06-16 14:29:45,255:INFO:  explainerdashboard: Not installed
2023-06-16 14:29:45,255:INFO:             autoviz: Not installed
2023-06-16 14:29:45,255:INFO:           fairlearn: Not installed
2023-06-16 14:29:45,255:INFO:             xgboost: Not installed
2023-06-16 14:29:45,255:INFO:            catboost: Not installed
2023-06-16 14:29:45,255:INFO:              kmodes: Not installed
2023-06-16 14:29:45,255:INFO:             mlxtend: Not installed
2023-06-16 14:29:45,255:INFO:       statsforecast: Not installed
2023-06-16 14:29:45,255:INFO:        tune_sklearn: Not installed
2023-06-16 14:29:45,256:INFO:                 ray: Not installed
2023-06-16 14:29:45,256:INFO:            hyperopt: Not installed
2023-06-16 14:29:45,256:INFO:              optuna: Not installed
2023-06-16 14:29:45,256:INFO:               skopt: Not installed
2023-06-16 14:29:45,256:INFO:              mlflow: Not installed
2023-06-16 14:29:45,256:INFO:              gradio: Not installed
2023-06-16 14:29:45,256:INFO:             fastapi: Not installed
2023-06-16 14:29:45,256:INFO:             uvicorn: Not installed
2023-06-16 14:29:45,256:INFO:              m2cgen: Not installed
2023-06-16 14:29:45,256:INFO:           evidently: Not installed
2023-06-16 14:29:45,256:INFO:               fugue: Not installed
2023-06-16 14:29:45,256:INFO:           streamlit: Not installed
2023-06-16 14:29:45,256:INFO:             prophet: Not installed
2023-06-16 14:29:45,256:INFO:None
2023-06-16 14:29:45,256:INFO:Set up data.
2023-06-16 14:29:45,312:INFO:Set up train/test split.
2023-06-16 14:29:45,334:INFO:Set up index.
2023-06-16 14:29:45,335:INFO:Set up folding strategy.
2023-06-16 14:29:45,335:INFO:Assigning column types.
2023-06-16 14:29:45,346:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:29:45,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,395:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,483:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,540:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:29:45,596:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,729:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:29:45,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,906:INFO:Preparing preprocessing pipeline...
2023-06-16 14:29:45,908:INFO:Set up simple imputation.
2023-06-16 14:29:45,921:INFO:Set up encoding of ordinal features.
2023-06-16 14:29:45,931:INFO:Set up encoding of categorical features.
2023-06-16 14:29:45,931:INFO:Set up removing multicollinearity.
2023-06-16 14:29:45,931:INFO:Set up imbalanced handling.
2023-06-16 14:29:45,931:INFO:Set up feature selection.
2023-06-16 14:29:46,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:46,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:46,017:INFO:Set up column name cleaning.
2023-06-16 14:29:46,506:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:29:46,556:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=11,
                                                            score_func=<function f_classif at 0x000001CF6EB34B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:29:46,556:INFO:Creating final display dataframe.
2023-06-16 14:29:47,332:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 12)
5   Transformed train set shape       (51162, 12)
6    Transformed test set shape       (12356, 12)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected               0.7
25               Fold Generator   StratifiedKFold
26                  Fold Number                10
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              cced
2023-06-16 14:29:47,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:47,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:47,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:47,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:47,590:INFO:setup() successfully completed in 2.54s...............
2023-06-16 14:30:16,655:INFO:Initializing compare_models()
2023-06-16 14:30:16,655:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 14:30:16,655:INFO:Checking exceptions
2023-06-16 14:30:16,664:INFO:Preparing display monitor
2023-06-16 14:30:16,723:INFO:Initializing Logistic Regression
2023-06-16 14:30:16,723:INFO:Total runtime is 0.0 minutes
2023-06-16 14:30:16,728:INFO:SubProcess create_model() called ==================================
2023-06-16 14:30:16,728:INFO:Initializing create_model()
2023-06-16 14:30:16,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF714D1DF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:16,728:INFO:Checking exceptions
2023-06-16 14:30:16,728:INFO:Importing libraries
2023-06-16 14:30:16,728:INFO:Copying training dataset
2023-06-16 14:30:16,747:INFO:Defining folds
2023-06-16 14:30:16,747:INFO:Declaring metric variables
2023-06-16 14:30:16,755:INFO:Importing untrained model
2023-06-16 14:30:16,762:INFO:Logistic Regression Imported successfully
2023-06-16 14:30:16,771:INFO:Starting cross validation
2023-06-16 14:30:16,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:30:21,821:INFO:Calculating mean and std
2023-06-16 14:30:21,823:INFO:Creating metrics dataframe
2023-06-16 14:30:22,099:INFO:Uploading results into container
2023-06-16 14:30:22,100:INFO:Uploading model into container now
2023-06-16 14:30:22,100:INFO:_master_model_container: 1
2023-06-16 14:30:22,101:INFO:_display_container: 2
2023-06-16 14:30:22,101:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:30:22,101:INFO:create_model() successfully completed......................................
2023-06-16 14:30:22,179:INFO:SubProcess create_model() end ==================================
2023-06-16 14:30:22,179:INFO:Creating metrics dataframe
2023-06-16 14:30:22,196:INFO:Initializing SVM - Linear Kernel
2023-06-16 14:30:22,196:INFO:Total runtime is 0.09121680657068888 minutes
2023-06-16 14:30:22,202:INFO:SubProcess create_model() called ==================================
2023-06-16 14:30:22,202:INFO:Initializing create_model()
2023-06-16 14:30:22,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF714D1DF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:22,202:INFO:Checking exceptions
2023-06-16 14:30:22,203:INFO:Importing libraries
2023-06-16 14:30:22,203:INFO:Copying training dataset
2023-06-16 14:30:22,221:INFO:Defining folds
2023-06-16 14:30:22,221:INFO:Declaring metric variables
2023-06-16 14:30:22,225:INFO:Importing untrained model
2023-06-16 14:30:22,230:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 14:30:22,239:INFO:Starting cross validation
2023-06-16 14:30:22,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:30:23,654:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:23,724:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:23,730:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:23,742:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:25,421:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:25,457:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:25,555:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:25,566:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:26,765:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:26,941:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:27,024:INFO:Calculating mean and std
2023-06-16 14:30:27,027:INFO:Creating metrics dataframe
2023-06-16 14:30:27,312:INFO:Uploading results into container
2023-06-16 14:30:27,312:INFO:Uploading model into container now
2023-06-16 14:30:27,313:INFO:_master_model_container: 2
2023-06-16 14:30:27,313:INFO:_display_container: 2
2023-06-16 14:30:27,313:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 14:30:27,313:INFO:create_model() successfully completed......................................
2023-06-16 14:30:27,382:INFO:SubProcess create_model() end ==================================
2023-06-16 14:30:27,383:INFO:Creating metrics dataframe
2023-06-16 14:30:27,405:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 14:30:27,406:INFO:Total runtime is 0.17804996569951376 minutes
2023-06-16 14:30:27,410:INFO:SubProcess create_model() called ==================================
2023-06-16 14:30:27,410:INFO:Initializing create_model()
2023-06-16 14:30:27,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF714D1DF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:27,410:INFO:Checking exceptions
2023-06-16 14:30:27,410:INFO:Importing libraries
2023-06-16 14:30:27,410:INFO:Copying training dataset
2023-06-16 14:30:27,428:INFO:Defining folds
2023-06-16 14:30:27,428:INFO:Declaring metric variables
2023-06-16 14:30:27,432:INFO:Importing untrained model
2023-06-16 14:30:27,437:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:30:27,446:INFO:Starting cross validation
2023-06-16 14:30:27,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:30:33,439:INFO:Calculating mean and std
2023-06-16 14:30:33,443:INFO:Creating metrics dataframe
2023-06-16 14:30:33,736:INFO:Uploading results into container
2023-06-16 14:30:33,737:INFO:Uploading model into container now
2023-06-16 14:30:33,737:INFO:_master_model_container: 3
2023-06-16 14:30:33,737:INFO:_display_container: 2
2023-06-16 14:30:33,737:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:30:33,738:INFO:create_model() successfully completed......................................
2023-06-16 14:30:33,806:INFO:SubProcess create_model() end ==================================
2023-06-16 14:30:33,806:INFO:Creating metrics dataframe
2023-06-16 14:30:33,839:INFO:Initializing create_model()
2023-06-16 14:30:33,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:33,841:INFO:Checking exceptions
2023-06-16 14:30:33,844:INFO:Importing libraries
2023-06-16 14:30:33,844:INFO:Copying training dataset
2023-06-16 14:30:33,859:INFO:Defining folds
2023-06-16 14:30:33,859:INFO:Declaring metric variables
2023-06-16 14:30:33,859:INFO:Importing untrained model
2023-06-16 14:30:33,859:INFO:Declaring custom model
2023-06-16 14:30:33,860:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:30:33,862:INFO:Cross validation set to False
2023-06-16 14:30:33,862:INFO:Fitting Model
2023-06-16 14:30:34,865:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:30:34,866:INFO:create_model() successfully completed......................................
2023-06-16 14:30:34,952:INFO:Initializing create_model()
2023-06-16 14:30:34,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:34,952:INFO:Checking exceptions
2023-06-16 14:30:34,955:INFO:Importing libraries
2023-06-16 14:30:34,955:INFO:Copying training dataset
2023-06-16 14:30:34,969:INFO:Defining folds
2023-06-16 14:30:34,969:INFO:Declaring metric variables
2023-06-16 14:30:34,970:INFO:Importing untrained model
2023-06-16 14:30:34,970:INFO:Declaring custom model
2023-06-16 14:30:34,972:INFO:Logistic Regression Imported successfully
2023-06-16 14:30:34,976:INFO:Cross validation set to False
2023-06-16 14:30:34,976:INFO:Fitting Model
2023-06-16 14:30:35,827:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:30:35,827:INFO:create_model() successfully completed......................................
2023-06-16 14:30:35,908:INFO:Initializing create_model()
2023-06-16 14:30:35,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:35,909:INFO:Checking exceptions
2023-06-16 14:30:35,913:INFO:Importing libraries
2023-06-16 14:30:35,913:INFO:Copying training dataset
2023-06-16 14:30:35,931:INFO:Defining folds
2023-06-16 14:30:35,931:INFO:Declaring metric variables
2023-06-16 14:30:35,932:INFO:Importing untrained model
2023-06-16 14:30:35,932:INFO:Declaring custom model
2023-06-16 14:30:35,934:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 14:30:35,937:INFO:Cross validation set to False
2023-06-16 14:30:35,937:INFO:Fitting Model
2023-06-16 14:30:36,944:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 14:30:36,944:INFO:create_model() successfully completed......................................
2023-06-16 14:30:37,053:INFO:_master_model_container: 3
2023-06-16 14:30:37,053:INFO:_display_container: 2
2023-06-16 14:30:37,055:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 14:30:37,055:INFO:compare_models() successfully completed......................................
2023-06-16 14:30:40,747:INFO:Initializing evaluate_model()
2023-06-16 14:30:40,747:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:30:40,781:INFO:Initializing plot_model()
2023-06-16 14:30:40,781:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:30:40,781:INFO:Checking exceptions
2023-06-16 14:30:40,789:INFO:Preloading libraries
2023-06-16 14:30:40,810:INFO:Copying training dataset
2023-06-16 14:30:40,810:INFO:Plot type: pipeline
2023-06-16 14:30:41,079:INFO:Visual Rendered Successfully
2023-06-16 14:30:41,159:INFO:plot_model() successfully completed......................................
2023-06-16 14:30:42,882:INFO:Initializing plot_model()
2023-06-16 14:30:42,882:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:30:42,882:INFO:Checking exceptions
2023-06-16 14:30:42,888:INFO:Preloading libraries
2023-06-16 14:30:42,896:INFO:Copying training dataset
2023-06-16 14:30:42,896:INFO:Plot type: auc
2023-06-16 14:30:43,025:INFO:Fitting Model
2023-06-16 14:30:43,027:INFO:Scoring test/hold-out set
2023-06-16 14:30:43,246:INFO:Visual Rendered Successfully
2023-06-16 14:30:43,359:INFO:plot_model() successfully completed......................................
2023-06-16 14:30:48,959:INFO:Initializing plot_model()
2023-06-16 14:30:48,960:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:30:48,960:INFO:Checking exceptions
2023-06-16 14:30:48,967:INFO:Preloading libraries
2023-06-16 14:30:48,978:INFO:Copying training dataset
2023-06-16 14:30:48,978:INFO:Plot type: feature
2023-06-16 14:30:48,978:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 14:30:49,158:INFO:Visual Rendered Successfully
2023-06-16 14:30:49,228:INFO:plot_model() successfully completed......................................
2023-06-16 14:31:13,235:INFO:Initializing compare_models()
2023-06-16 14:31:13,236:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, include=['lr', 'rf', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, 'include': ['lr', 'rf', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 14:31:13,236:INFO:Checking exceptions
2023-06-16 14:31:13,242:INFO:Preparing display monitor
2023-06-16 14:31:13,302:INFO:Initializing Logistic Regression
2023-06-16 14:31:13,302:INFO:Total runtime is 0.0 minutes
2023-06-16 14:31:13,316:INFO:SubProcess create_model() called ==================================
2023-06-16 14:31:13,317:INFO:Initializing create_model()
2023-06-16 14:31:13,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF716CEB20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:31:13,317:INFO:Checking exceptions
2023-06-16 14:31:13,317:INFO:Importing libraries
2023-06-16 14:31:13,317:INFO:Copying training dataset
2023-06-16 14:31:13,363:INFO:Defining folds
2023-06-16 14:31:13,363:INFO:Declaring metric variables
2023-06-16 14:31:13,373:INFO:Importing untrained model
2023-06-16 14:31:13,380:INFO:Logistic Regression Imported successfully
2023-06-16 14:31:13,404:INFO:Starting cross validation
2023-06-16 14:31:13,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:31:17,524:INFO:Calculating mean and std
2023-06-16 14:31:17,526:INFO:Creating metrics dataframe
2023-06-16 14:31:17,844:INFO:Uploading results into container
2023-06-16 14:31:17,844:INFO:Uploading model into container now
2023-06-16 14:31:17,845:INFO:_master_model_container: 4
2023-06-16 14:31:17,845:INFO:_display_container: 3
2023-06-16 14:31:17,845:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:31:17,845:INFO:create_model() successfully completed......................................
2023-06-16 14:31:17,915:INFO:SubProcess create_model() end ==================================
2023-06-16 14:31:17,915:INFO:Creating metrics dataframe
2023-06-16 14:31:17,934:INFO:Initializing Random Forest Classifier
2023-06-16 14:31:17,934:INFO:Total runtime is 0.07720061937967936 minutes
2023-06-16 14:31:17,939:INFO:SubProcess create_model() called ==================================
2023-06-16 14:31:17,939:INFO:Initializing create_model()
2023-06-16 14:31:17,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF716CEB20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:31:17,940:INFO:Checking exceptions
2023-06-16 14:31:17,940:INFO:Importing libraries
2023-06-16 14:31:17,942:INFO:Copying training dataset
2023-06-16 14:31:17,961:INFO:Defining folds
2023-06-16 14:31:17,962:INFO:Declaring metric variables
2023-06-16 14:31:17,968:INFO:Importing untrained model
2023-06-16 14:31:17,973:INFO:Random Forest Classifier Imported successfully
2023-06-16 14:31:17,982:INFO:Starting cross validation
2023-06-16 14:31:17,984:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:35:15,165:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 14:39:50,478:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-16 14:39:53,164:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 14:40:09,109:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 14:42:29,483:INFO:Calculating mean and std
2023-06-16 14:42:29,485:INFO:Creating metrics dataframe
2023-06-16 14:42:29,854:INFO:Uploading results into container
2023-06-16 14:42:29,855:INFO:Uploading model into container now
2023-06-16 14:42:29,856:INFO:_master_model_container: 5
2023-06-16 14:42:29,856:INFO:_display_container: 3
2023-06-16 14:42:29,858:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 14:42:29,858:INFO:create_model() successfully completed......................................
2023-06-16 14:42:29,939:INFO:SubProcess create_model() end ==================================
2023-06-16 14:42:29,939:INFO:Creating metrics dataframe
2023-06-16 14:42:29,956:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 14:42:29,956:INFO:Total runtime is 11.277557877699534 minutes
2023-06-16 14:42:29,960:INFO:SubProcess create_model() called ==================================
2023-06-16 14:42:29,960:INFO:Initializing create_model()
2023-06-16 14:42:29,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF716CEB20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:42:29,960:INFO:Checking exceptions
2023-06-16 14:42:29,961:INFO:Importing libraries
2023-06-16 14:42:29,961:INFO:Copying training dataset
2023-06-16 14:42:29,976:INFO:Defining folds
2023-06-16 14:42:29,977:INFO:Declaring metric variables
2023-06-16 14:42:29,981:INFO:Importing untrained model
2023-06-16 14:42:29,986:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:42:29,995:INFO:Starting cross validation
2023-06-16 14:42:29,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:42:33,364:INFO:Calculating mean and std
2023-06-16 14:42:33,365:INFO:Creating metrics dataframe
2023-06-16 14:42:33,718:INFO:Uploading results into container
2023-06-16 14:42:33,719:INFO:Uploading model into container now
2023-06-16 14:42:33,719:INFO:_master_model_container: 6
2023-06-16 14:42:33,719:INFO:_display_container: 3
2023-06-16 14:42:33,720:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:42:33,720:INFO:create_model() successfully completed......................................
2023-06-16 14:42:33,809:INFO:SubProcess create_model() end ==================================
2023-06-16 14:42:33,810:INFO:Creating metrics dataframe
2023-06-16 14:42:33,847:INFO:Initializing create_model()
2023-06-16 14:42:33,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:42:33,848:INFO:Checking exceptions
2023-06-16 14:42:33,852:INFO:Importing libraries
2023-06-16 14:42:33,852:INFO:Copying training dataset
2023-06-16 14:42:33,874:INFO:Defining folds
2023-06-16 14:42:33,874:INFO:Declaring metric variables
2023-06-16 14:42:33,874:INFO:Importing untrained model
2023-06-16 14:42:33,874:INFO:Declaring custom model
2023-06-16 14:42:33,875:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:42:33,878:INFO:Cross validation set to False
2023-06-16 14:42:33,878:INFO:Fitting Model
2023-06-16 14:42:34,638:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:42:34,638:INFO:create_model() successfully completed......................................
2023-06-16 14:42:34,732:INFO:Initializing create_model()
2023-06-16 14:42:34,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:42:34,732:INFO:Checking exceptions
2023-06-16 14:42:34,734:INFO:Importing libraries
2023-06-16 14:42:34,734:INFO:Copying training dataset
2023-06-16 14:42:34,754:INFO:Defining folds
2023-06-16 14:42:34,754:INFO:Declaring metric variables
2023-06-16 14:42:34,754:INFO:Importing untrained model
2023-06-16 14:42:34,754:INFO:Declaring custom model
2023-06-16 14:42:34,755:INFO:Random Forest Classifier Imported successfully
2023-06-16 14:42:34,757:INFO:Cross validation set to False
2023-06-16 14:42:34,757:INFO:Fitting Model
2023-06-16 14:44:06,456:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 14:44:06,456:INFO:create_model() successfully completed......................................
2023-06-16 14:44:06,535:INFO:Initializing create_model()
2023-06-16 14:44:06,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:44:06,535:INFO:Checking exceptions
2023-06-16 14:44:06,538:INFO:Importing libraries
2023-06-16 14:44:06,538:INFO:Copying training dataset
2023-06-16 14:44:06,554:INFO:Defining folds
2023-06-16 14:44:06,554:INFO:Declaring metric variables
2023-06-16 14:44:06,554:INFO:Importing untrained model
2023-06-16 14:44:06,554:INFO:Declaring custom model
2023-06-16 14:44:06,555:INFO:Logistic Regression Imported successfully
2023-06-16 14:44:06,557:INFO:Cross validation set to False
2023-06-16 14:44:06,557:INFO:Fitting Model
2023-06-16 14:44:07,331:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:44:07,331:INFO:create_model() successfully completed......................................
2023-06-16 14:44:07,480:INFO:_master_model_container: 6
2023-06-16 14:44:07,480:INFO:_display_container: 3
2023-06-16 14:44:07,482:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2023-06-16 14:44:07,482:INFO:compare_models() successfully completed......................................
2023-06-16 14:44:10,923:INFO:Initializing evaluate_model()
2023-06-16 14:44:10,924:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:44:10,958:INFO:Initializing plot_model()
2023-06-16 14:44:10,959:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:10,959:INFO:Checking exceptions
2023-06-16 14:44:10,965:INFO:Preloading libraries
2023-06-16 14:44:10,985:INFO:Copying training dataset
2023-06-16 14:44:10,985:INFO:Plot type: pipeline
2023-06-16 14:44:11,235:INFO:Visual Rendered Successfully
2023-06-16 14:44:11,304:INFO:plot_model() successfully completed......................................
2023-06-16 14:44:14,879:INFO:Initializing plot_model()
2023-06-16 14:44:14,879:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:14,879:INFO:Checking exceptions
2023-06-16 14:44:14,886:INFO:Preloading libraries
2023-06-16 14:44:14,897:INFO:Copying training dataset
2023-06-16 14:44:14,897:INFO:Plot type: auc
2023-06-16 14:44:15,029:INFO:Fitting Model
2023-06-16 14:44:15,030:INFO:Scoring test/hold-out set
2023-06-16 14:44:15,254:INFO:Visual Rendered Successfully
2023-06-16 14:44:15,349:INFO:plot_model() successfully completed......................................
2023-06-16 14:44:29,399:INFO:Initializing plot_model()
2023-06-16 14:44:29,399:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:29,399:INFO:Checking exceptions
2023-06-16 14:44:29,406:INFO:Preloading libraries
2023-06-16 14:44:29,439:INFO:Copying training dataset
2023-06-16 14:44:29,439:INFO:Plot type: feature
2023-06-16 14:44:29,439:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 14:44:29,619:INFO:Visual Rendered Successfully
2023-06-16 14:44:29,684:INFO:plot_model() successfully completed......................................
2023-06-16 14:44:45,051:INFO:Initializing evaluate_model()
2023-06-16 14:44:45,051:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:44:45,085:INFO:Initializing plot_model()
2023-06-16 14:44:45,085:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:45,085:INFO:Checking exceptions
2023-06-16 14:44:45,117:INFO:Preloading libraries
2023-06-16 14:44:45,151:INFO:Copying training dataset
2023-06-16 14:44:45,151:INFO:Plot type: pipeline
2023-06-16 14:44:45,330:INFO:Visual Rendered Successfully
2023-06-16 14:44:45,407:INFO:plot_model() successfully completed......................................
2023-06-16 14:44:48,413:INFO:Initializing plot_model()
2023-06-16 14:44:48,414:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:48,414:INFO:Checking exceptions
2023-06-16 14:44:48,444:INFO:Preloading libraries
2023-06-16 14:44:48,468:INFO:Copying training dataset
2023-06-16 14:44:48,468:INFO:Plot type: feature
2023-06-16 14:44:48,468:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 14:44:48,661:INFO:Visual Rendered Successfully
2023-06-16 14:44:48,727:INFO:plot_model() successfully completed......................................
2023-06-16 14:45:03,560:INFO:Initializing plot_model()
2023-06-16 14:45:03,561:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:45:03,561:INFO:Checking exceptions
2023-06-16 14:45:03,593:INFO:Preloading libraries
2023-06-16 14:45:03,616:INFO:Copying training dataset
2023-06-16 14:45:03,616:INFO:Plot type: feature_all
2023-06-16 14:45:03,653:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 14:45:03,869:INFO:Visual Rendered Successfully
2023-06-16 14:45:03,935:INFO:plot_model() successfully completed......................................
2023-06-16 14:45:14,728:INFO:Initializing plot_model()
2023-06-16 14:45:14,729:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:45:14,729:INFO:Checking exceptions
2023-06-16 14:45:14,796:INFO:Preloading libraries
2023-06-16 14:45:14,819:INFO:Copying training dataset
2023-06-16 14:45:14,819:INFO:Plot type: auc
2023-06-16 14:45:14,952:INFO:Fitting Model
2023-06-16 14:45:14,952:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 14:45:14,953:INFO:Scoring test/hold-out set
2023-06-16 14:45:15,261:INFO:Visual Rendered Successfully
2023-06-16 14:45:15,342:INFO:plot_model() successfully completed......................................
2023-06-16 14:45:25,447:INFO:Initializing plot_model()
2023-06-16 14:45:25,447:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:45:25,447:INFO:Checking exceptions
2023-06-16 14:45:25,476:INFO:Preloading libraries
2023-06-16 14:45:25,499:INFO:Copying training dataset
2023-06-16 14:45:25,499:INFO:Plot type: rfe
2023-06-16 14:45:25,637:INFO:Fitting Model
2023-06-16 14:51:11,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 14:51:11,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 14:51:11,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 14:51:11,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 14:51:12,220:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 14:51:12,746:INFO:PyCaret ClassificationExperiment
2023-06-16 14:51:12,746:INFO:Logging name: clf-default-name
2023-06-16 14:51:12,746:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:51:12,747:INFO:version 3.0.2
2023-06-16 14:51:12,747:INFO:Initializing setup()
2023-06-16 14:51:12,747:INFO:self.USI: ea5b
2023-06-16 14:51:12,747:INFO:self._variable_keys: {'data', 'X', 'gpu_param', 'exp_name_log', 'y_test', 'logging_param', 'log_plots_param', 'fold_shuffle_param', 'is_multiclass', 'y_train', 'y', 'X_test', 'pipeline', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', 'memory', 'fold_generator', '_available_plots', '_ml_usecase', 'fix_imbalance', 'X_train', 'seed', 'USI', 'target_param', 'n_jobs_param', 'idx'}
2023-06-16 14:51:12,747:INFO:Checking environment
2023-06-16 14:51:12,747:INFO:python_version: 3.9.7
2023-06-16 14:51:12,747:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:51:12,747:INFO:machine: AMD64
2023-06-16 14:51:12,747:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:51:12,747:INFO:Memory: svmem(total=17120436224, available=4845748224, percent=71.7, used=12274688000, free=4845748224)
2023-06-16 14:51:12,747:INFO:Physical Core: 4
2023-06-16 14:51:12,747:INFO:Logical Core: 4
2023-06-16 14:51:12,747:INFO:Checking libraries
2023-06-16 14:51:12,748:INFO:System:
2023-06-16 14:51:12,748:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:51:12,748:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:51:12,748:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:51:12,748:INFO:PyCaret required dependencies:
2023-06-16 14:51:12,748:INFO:                 pip: 21.2.3
2023-06-16 14:51:12,748:INFO:          setuptools: 57.4.0
2023-06-16 14:51:12,748:INFO:             pycaret: 3.0.2
2023-06-16 14:51:12,748:INFO:             IPython: 7.28.0
2023-06-16 14:51:12,748:INFO:          ipywidgets: 8.0.6
2023-06-16 14:51:12,748:INFO:                tqdm: 4.64.0
2023-06-16 14:51:12,748:INFO:               numpy: 1.21.2
2023-06-16 14:51:12,748:INFO:              pandas: 1.3.5
2023-06-16 14:51:12,748:INFO:              jinja2: 3.1.2
2023-06-16 14:51:12,748:INFO:               scipy: 1.7.1
2023-06-16 14:51:12,748:INFO:              joblib: 1.2.0
2023-06-16 14:51:12,749:INFO:             sklearn: 1.1.0
2023-06-16 14:51:12,749:INFO:                pyod: 1.0.9
2023-06-16 14:51:12,749:INFO:            imblearn: 0.9.1
2023-06-16 14:51:12,749:INFO:   category_encoders: 2.6.1
2023-06-16 14:51:12,749:INFO:            lightgbm: 3.3.5
2023-06-16 14:51:12,749:INFO:               numba: 0.57.0
2023-06-16 14:51:12,749:INFO:            requests: 2.31.0
2023-06-16 14:51:12,750:INFO:          matplotlib: 3.4.3
2023-06-16 14:51:12,750:INFO:          scikitplot: 0.3.7
2023-06-16 14:51:12,750:INFO:         yellowbrick: 1.5
2023-06-16 14:51:12,750:INFO:              plotly: 5.8.0
2023-06-16 14:51:12,750:INFO:             kaleido: 0.2.1
2023-06-16 14:51:12,750:INFO:         statsmodels: 0.14.0
2023-06-16 14:51:12,750:INFO:              sktime: 0.17.0
2023-06-16 14:51:12,750:INFO:               tbats: 1.1.3
2023-06-16 14:51:12,750:INFO:            pmdarima: 2.0.3
2023-06-16 14:51:12,750:INFO:              psutil: 5.9.0
2023-06-16 14:51:12,750:INFO:PyCaret optional dependencies:
2023-06-16 14:51:12,778:INFO:                shap: Not installed
2023-06-16 14:51:12,778:INFO:           interpret: Not installed
2023-06-16 14:51:12,778:INFO:                umap: Not installed
2023-06-16 14:51:12,778:INFO:    pandas_profiling: Not installed
2023-06-16 14:51:12,779:INFO:  explainerdashboard: Not installed
2023-06-16 14:51:12,779:INFO:             autoviz: Not installed
2023-06-16 14:51:12,779:INFO:           fairlearn: Not installed
2023-06-16 14:51:12,779:INFO:             xgboost: Not installed
2023-06-16 14:51:12,779:INFO:            catboost: Not installed
2023-06-16 14:51:12,779:INFO:              kmodes: Not installed
2023-06-16 14:51:12,779:INFO:             mlxtend: Not installed
2023-06-16 14:51:12,779:INFO:       statsforecast: Not installed
2023-06-16 14:51:12,779:INFO:        tune_sklearn: Not installed
2023-06-16 14:51:12,779:INFO:                 ray: Not installed
2023-06-16 14:51:12,779:INFO:            hyperopt: Not installed
2023-06-16 14:51:12,779:INFO:              optuna: Not installed
2023-06-16 14:51:12,779:INFO:               skopt: Not installed
2023-06-16 14:51:12,779:INFO:              mlflow: Not installed
2023-06-16 14:51:12,779:INFO:              gradio: Not installed
2023-06-16 14:51:12,779:INFO:             fastapi: Not installed
2023-06-16 14:51:12,779:INFO:             uvicorn: Not installed
2023-06-16 14:51:12,780:INFO:              m2cgen: Not installed
2023-06-16 14:51:12,780:INFO:           evidently: Not installed
2023-06-16 14:51:12,780:INFO:               fugue: Not installed
2023-06-16 14:51:12,780:INFO:           streamlit: Not installed
2023-06-16 14:51:12,780:INFO:             prophet: Not installed
2023-06-16 14:51:12,780:INFO:None
2023-06-16 14:51:12,780:INFO:Set up data.
2023-06-16 14:51:12,853:INFO:Set up train/test split.
2023-06-16 14:51:12,885:INFO:Set up index.
2023-06-16 14:51:12,886:INFO:Set up folding strategy.
2023-06-16 14:51:12,886:INFO:Assigning column types.
2023-06-16 14:51:12,900:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:51:12,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:51:12,961:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,114:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,115:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,154:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:51:13,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,289:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,320:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:51:13,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,497:INFO:Preparing preprocessing pipeline...
2023-06-16 14:51:13,499:INFO:Set up simple imputation.
2023-06-16 14:51:13,512:INFO:Set up encoding of ordinal features.
2023-06-16 14:51:13,522:INFO:Set up encoding of categorical features.
2023-06-16 14:51:13,522:INFO:Set up removing multicollinearity.
2023-06-16 14:51:13,522:INFO:Set up imbalanced handling.
2023-06-16 14:51:13,522:INFO:Set up feature selection.
2023-06-16 14:51:13,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,613:INFO:Set up column name cleaning.
2023-06-16 14:51:14,022:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:51:14,083:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=11,
                                                            score_func=<function f_classif at 0x000001C037544B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:51:14,084:INFO:Creating final display dataframe.
2023-06-16 14:51:14,231:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 12)
5   Transformed train set shape       (51162, 12)
6    Transformed test set shape       (12356, 12)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected               0.7
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              ea5b
2023-06-16 14:51:14,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:14,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:14,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:14,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:14,437:INFO:setup() successfully completed in 1.98s...............
2023-06-16 14:51:39,869:INFO:PyCaret ClassificationExperiment
2023-06-16 14:51:39,869:INFO:Logging name: clf-default-name
2023-06-16 14:51:39,869:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:51:39,869:INFO:version 3.0.2
2023-06-16 14:51:39,869:INFO:Initializing setup()
2023-06-16 14:51:39,869:INFO:self.USI: 1675
2023-06-16 14:51:39,871:INFO:self._variable_keys: {'data', 'X', 'gpu_param', 'exp_name_log', 'y_test', 'logging_param', 'log_plots_param', 'fold_shuffle_param', 'is_multiclass', 'y_train', 'y', 'X_test', 'pipeline', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', 'memory', 'fold_generator', '_available_plots', '_ml_usecase', 'fix_imbalance', 'X_train', 'seed', 'USI', 'target_param', 'n_jobs_param', 'idx'}
2023-06-16 14:51:39,871:INFO:Checking environment
2023-06-16 14:51:39,871:INFO:python_version: 3.9.7
2023-06-16 14:51:39,871:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:51:39,871:INFO:machine: AMD64
2023-06-16 14:51:39,871:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:51:39,871:INFO:Memory: svmem(total=17120436224, available=4755058688, percent=72.2, used=12365377536, free=4755058688)
2023-06-16 14:51:39,871:INFO:Physical Core: 4
2023-06-16 14:51:39,871:INFO:Logical Core: 4
2023-06-16 14:51:39,871:INFO:Checking libraries
2023-06-16 14:51:39,871:INFO:System:
2023-06-16 14:51:39,871:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:51:39,871:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:51:39,871:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:51:39,871:INFO:PyCaret required dependencies:
2023-06-16 14:51:39,871:INFO:                 pip: 21.2.3
2023-06-16 14:51:39,871:INFO:          setuptools: 57.4.0
2023-06-16 14:51:39,871:INFO:             pycaret: 3.0.2
2023-06-16 14:51:39,871:INFO:             IPython: 7.28.0
2023-06-16 14:51:39,871:INFO:          ipywidgets: 8.0.6
2023-06-16 14:51:39,871:INFO:                tqdm: 4.64.0
2023-06-16 14:51:39,871:INFO:               numpy: 1.21.2
2023-06-16 14:51:39,871:INFO:              pandas: 1.3.5
2023-06-16 14:51:39,871:INFO:              jinja2: 3.1.2
2023-06-16 14:51:39,871:INFO:               scipy: 1.7.1
2023-06-16 14:51:39,871:INFO:              joblib: 1.2.0
2023-06-16 14:51:39,871:INFO:             sklearn: 1.1.0
2023-06-16 14:51:39,871:INFO:                pyod: 1.0.9
2023-06-16 14:51:39,871:INFO:            imblearn: 0.9.1
2023-06-16 14:51:39,871:INFO:   category_encoders: 2.6.1
2023-06-16 14:51:39,871:INFO:            lightgbm: 3.3.5
2023-06-16 14:51:39,873:INFO:               numba: 0.57.0
2023-06-16 14:51:39,873:INFO:            requests: 2.31.0
2023-06-16 14:51:39,873:INFO:          matplotlib: 3.4.3
2023-06-16 14:51:39,873:INFO:          scikitplot: 0.3.7
2023-06-16 14:51:39,873:INFO:         yellowbrick: 1.5
2023-06-16 14:51:39,873:INFO:              plotly: 5.8.0
2023-06-16 14:51:39,873:INFO:             kaleido: 0.2.1
2023-06-16 14:51:39,873:INFO:         statsmodels: 0.14.0
2023-06-16 14:51:39,873:INFO:              sktime: 0.17.0
2023-06-16 14:51:39,873:INFO:               tbats: 1.1.3
2023-06-16 14:51:39,873:INFO:            pmdarima: 2.0.3
2023-06-16 14:51:39,873:INFO:              psutil: 5.9.0
2023-06-16 14:51:39,873:INFO:PyCaret optional dependencies:
2023-06-16 14:51:39,873:INFO:                shap: Not installed
2023-06-16 14:51:39,873:INFO:           interpret: Not installed
2023-06-16 14:51:39,873:INFO:                umap: Not installed
2023-06-16 14:51:39,873:INFO:    pandas_profiling: Not installed
2023-06-16 14:51:39,873:INFO:  explainerdashboard: Not installed
2023-06-16 14:51:39,873:INFO:             autoviz: Not installed
2023-06-16 14:51:39,873:INFO:           fairlearn: Not installed
2023-06-16 14:51:39,873:INFO:             xgboost: Not installed
2023-06-16 14:51:39,874:INFO:            catboost: Not installed
2023-06-16 14:51:39,874:INFO:              kmodes: Not installed
2023-06-16 14:51:39,874:INFO:             mlxtend: Not installed
2023-06-16 14:51:39,874:INFO:       statsforecast: Not installed
2023-06-16 14:51:39,874:INFO:        tune_sklearn: Not installed
2023-06-16 14:51:39,874:INFO:                 ray: Not installed
2023-06-16 14:51:39,874:INFO:            hyperopt: Not installed
2023-06-16 14:51:39,874:INFO:              optuna: Not installed
2023-06-16 14:51:39,874:INFO:               skopt: Not installed
2023-06-16 14:51:39,874:INFO:              mlflow: Not installed
2023-06-16 14:51:39,874:INFO:              gradio: Not installed
2023-06-16 14:51:39,874:INFO:             fastapi: Not installed
2023-06-16 14:51:39,874:INFO:             uvicorn: Not installed
2023-06-16 14:51:39,874:INFO:              m2cgen: Not installed
2023-06-16 14:51:39,874:INFO:           evidently: Not installed
2023-06-16 14:51:39,874:INFO:               fugue: Not installed
2023-06-16 14:51:39,874:INFO:           streamlit: Not installed
2023-06-16 14:51:39,874:INFO:             prophet: Not installed
2023-06-16 14:51:39,874:INFO:None
2023-06-16 14:51:39,874:INFO:Set up data.
2023-06-16 14:51:39,935:INFO:Set up train/test split.
2023-06-16 14:51:39,962:INFO:Set up index.
2023-06-16 14:51:39,963:INFO:Set up folding strategy.
2023-06-16 14:51:39,964:INFO:Assigning column types.
2023-06-16 14:51:39,977:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:51:40,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,159:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,194:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:51:40,248:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,333:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,365:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:51:40,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,532:INFO:Preparing preprocessing pipeline...
2023-06-16 14:51:40,534:INFO:Set up simple imputation.
2023-06-16 14:51:40,545:INFO:Set up encoding of ordinal features.
2023-06-16 14:51:40,554:INFO:Set up encoding of categorical features.
2023-06-16 14:51:40,554:INFO:Set up removing multicollinearity.
2023-06-16 14:51:40,554:INFO:Set up imbalanced handling.
2023-06-16 14:51:40,554:INFO:Set up feature selection.
2023-06-16 14:51:40,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,643:INFO:Set up column name cleaning.
2023-06-16 14:51:41,168:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:51:41,222:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001C037544B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:51:41,222:INFO:Creating final display dataframe.
2023-06-16 14:51:42,005:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              1675
2023-06-16 14:51:42,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:42,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:42,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:42,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:42,244:INFO:setup() successfully completed in 2.64s...............
2023-06-16 14:52:12,716:INFO:Initializing compare_models()
2023-06-16 14:52:12,716:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'rf', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'rf', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 14:52:12,716:INFO:Checking exceptions
2023-06-16 14:52:12,726:INFO:Preparing display monitor
2023-06-16 14:52:12,789:INFO:Initializing Logistic Regression
2023-06-16 14:52:12,789:INFO:Total runtime is 0.0 minutes
2023-06-16 14:52:12,794:INFO:SubProcess create_model() called ==================================
2023-06-16 14:52:12,794:INFO:Initializing create_model()
2023-06-16 14:52:12,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3AD9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:52:12,795:INFO:Checking exceptions
2023-06-16 14:52:12,795:INFO:Importing libraries
2023-06-16 14:52:12,795:INFO:Copying training dataset
2023-06-16 14:52:12,813:INFO:Defining folds
2023-06-16 14:52:12,814:INFO:Declaring metric variables
2023-06-16 14:52:12,818:INFO:Importing untrained model
2023-06-16 14:52:12,824:INFO:Logistic Regression Imported successfully
2023-06-16 14:52:12,833:INFO:Starting cross validation
2023-06-16 14:52:12,838:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:52:21,303:INFO:Calculating mean and std
2023-06-16 14:52:21,305:INFO:Creating metrics dataframe
2023-06-16 14:52:21,687:INFO:Uploading results into container
2023-06-16 14:52:21,687:INFO:Uploading model into container now
2023-06-16 14:52:21,688:INFO:_master_model_container: 1
2023-06-16 14:52:21,690:INFO:_display_container: 2
2023-06-16 14:52:21,691:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:52:21,691:INFO:create_model() successfully completed......................................
2023-06-16 14:52:21,811:INFO:SubProcess create_model() end ==================================
2023-06-16 14:52:21,811:INFO:Creating metrics dataframe
2023-06-16 14:52:21,826:INFO:Initializing Random Forest Classifier
2023-06-16 14:52:21,827:INFO:Total runtime is 0.1506347934405009 minutes
2023-06-16 14:52:21,831:INFO:SubProcess create_model() called ==================================
2023-06-16 14:52:21,831:INFO:Initializing create_model()
2023-06-16 14:52:21,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3AD9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:52:21,831:INFO:Checking exceptions
2023-06-16 14:52:21,832:INFO:Importing libraries
2023-06-16 14:52:21,832:INFO:Copying training dataset
2023-06-16 14:52:21,851:INFO:Defining folds
2023-06-16 14:52:21,851:INFO:Declaring metric variables
2023-06-16 14:52:21,857:INFO:Importing untrained model
2023-06-16 14:52:21,867:INFO:Random Forest Classifier Imported successfully
2023-06-16 14:52:21,877:INFO:Starting cross validation
2023-06-16 14:52:21,879:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:56:24,537:INFO:Calculating mean and std
2023-06-16 14:56:24,539:INFO:Creating metrics dataframe
2023-06-16 14:56:24,883:INFO:Uploading results into container
2023-06-16 14:56:24,884:INFO:Uploading model into container now
2023-06-16 14:56:24,884:INFO:_master_model_container: 2
2023-06-16 14:56:24,884:INFO:_display_container: 2
2023-06-16 14:56:24,885:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 14:56:24,885:INFO:create_model() successfully completed......................................
2023-06-16 14:56:24,952:INFO:SubProcess create_model() end ==================================
2023-06-16 14:56:24,952:INFO:Creating metrics dataframe
2023-06-16 14:56:24,968:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 14:56:24,968:INFO:Total runtime is 4.2029814918835955 minutes
2023-06-16 14:56:24,973:INFO:SubProcess create_model() called ==================================
2023-06-16 14:56:24,973:INFO:Initializing create_model()
2023-06-16 14:56:24,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3AD9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:56:24,974:INFO:Checking exceptions
2023-06-16 14:56:24,974:INFO:Importing libraries
2023-06-16 14:56:24,974:INFO:Copying training dataset
2023-06-16 14:56:24,990:INFO:Defining folds
2023-06-16 14:56:24,991:INFO:Declaring metric variables
2023-06-16 14:56:24,995:INFO:Importing untrained model
2023-06-16 14:56:25,001:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:56:25,010:INFO:Starting cross validation
2023-06-16 14:56:25,013:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:56:29,238:INFO:Calculating mean and std
2023-06-16 14:56:29,241:INFO:Creating metrics dataframe
2023-06-16 14:56:29,654:INFO:Uploading results into container
2023-06-16 14:56:29,655:INFO:Uploading model into container now
2023-06-16 14:56:29,655:INFO:_master_model_container: 3
2023-06-16 14:56:29,655:INFO:_display_container: 2
2023-06-16 14:56:29,656:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:56:29,656:INFO:create_model() successfully completed......................................
2023-06-16 14:56:29,721:INFO:SubProcess create_model() end ==================================
2023-06-16 14:56:29,721:INFO:Creating metrics dataframe
2023-06-16 14:56:29,749:INFO:Initializing create_model()
2023-06-16 14:56:29,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:56:29,750:INFO:Checking exceptions
2023-06-16 14:56:29,752:INFO:Importing libraries
2023-06-16 14:56:29,753:INFO:Copying training dataset
2023-06-16 14:56:29,767:INFO:Defining folds
2023-06-16 14:56:29,767:INFO:Declaring metric variables
2023-06-16 14:56:29,768:INFO:Importing untrained model
2023-06-16 14:56:29,768:INFO:Declaring custom model
2023-06-16 14:56:29,769:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:56:29,771:INFO:Cross validation set to False
2023-06-16 14:56:29,771:INFO:Fitting Model
2023-06-16 14:56:30,846:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:56:30,846:INFO:create_model() successfully completed......................................
2023-06-16 14:56:30,928:INFO:Initializing create_model()
2023-06-16 14:56:30,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:56:30,931:INFO:Checking exceptions
2023-06-16 14:56:30,935:INFO:Importing libraries
2023-06-16 14:56:30,935:INFO:Copying training dataset
2023-06-16 14:56:30,952:INFO:Defining folds
2023-06-16 14:56:30,952:INFO:Declaring metric variables
2023-06-16 14:56:30,952:INFO:Importing untrained model
2023-06-16 14:56:30,952:INFO:Declaring custom model
2023-06-16 14:56:30,953:INFO:Random Forest Classifier Imported successfully
2023-06-16 14:56:30,955:INFO:Cross validation set to False
2023-06-16 14:56:30,955:INFO:Fitting Model
2023-06-16 14:58:01,629:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 14:58:01,629:INFO:create_model() successfully completed......................................
2023-06-16 14:58:01,721:INFO:Initializing create_model()
2023-06-16 14:58:01,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:58:01,722:INFO:Checking exceptions
2023-06-16 14:58:01,725:INFO:Importing libraries
2023-06-16 14:58:01,727:INFO:Copying training dataset
2023-06-16 14:58:01,765:INFO:Defining folds
2023-06-16 14:58:01,765:INFO:Declaring metric variables
2023-06-16 14:58:01,765:INFO:Importing untrained model
2023-06-16 14:58:01,766:INFO:Declaring custom model
2023-06-16 14:58:01,766:INFO:Logistic Regression Imported successfully
2023-06-16 14:58:01,768:INFO:Cross validation set to False
2023-06-16 14:58:01,768:INFO:Fitting Model
2023-06-16 14:58:02,941:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:58:02,941:INFO:create_model() successfully completed......................................
2023-06-16 14:58:03,058:INFO:_master_model_container: 3
2023-06-16 14:58:03,058:INFO:_display_container: 2
2023-06-16 14:58:03,060:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2023-06-16 14:58:03,060:INFO:compare_models() successfully completed......................................
2023-06-16 15:03:46,180:INFO:Initializing compare_models()
2023-06-16 15:03:46,180:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'lightgbm', 'svm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'lightgbm', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 15:03:46,180:INFO:Checking exceptions
2023-06-16 15:03:46,187:INFO:Preparing display monitor
2023-06-16 15:03:46,249:INFO:Initializing Logistic Regression
2023-06-16 15:03:46,249:INFO:Total runtime is 0.0 minutes
2023-06-16 15:03:46,287:INFO:SubProcess create_model() called ==================================
2023-06-16 15:03:46,287:INFO:Initializing create_model()
2023-06-16 15:03:46,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3C2BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:46,288:INFO:Checking exceptions
2023-06-16 15:03:46,288:INFO:Importing libraries
2023-06-16 15:03:46,288:INFO:Copying training dataset
2023-06-16 15:03:46,306:INFO:Defining folds
2023-06-16 15:03:46,306:INFO:Declaring metric variables
2023-06-16 15:03:46,313:INFO:Importing untrained model
2023-06-16 15:03:46,318:INFO:Logistic Regression Imported successfully
2023-06-16 15:03:46,332:INFO:Starting cross validation
2023-06-16 15:03:46,334:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:03:52,507:INFO:Calculating mean and std
2023-06-16 15:03:52,509:INFO:Creating metrics dataframe
2023-06-16 15:03:52,874:INFO:Uploading results into container
2023-06-16 15:03:52,875:INFO:Uploading model into container now
2023-06-16 15:03:52,875:INFO:_master_model_container: 4
2023-06-16 15:03:52,876:INFO:_display_container: 3
2023-06-16 15:03:52,876:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 15:03:52,876:INFO:create_model() successfully completed......................................
2023-06-16 15:03:52,948:INFO:SubProcess create_model() end ==================================
2023-06-16 15:03:52,948:INFO:Creating metrics dataframe
2023-06-16 15:03:52,963:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 15:03:52,963:INFO:Total runtime is 0.11190064748128255 minutes
2023-06-16 15:03:52,968:INFO:SubProcess create_model() called ==================================
2023-06-16 15:03:52,969:INFO:Initializing create_model()
2023-06-16 15:03:52,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3C2BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:52,969:INFO:Checking exceptions
2023-06-16 15:03:52,969:INFO:Importing libraries
2023-06-16 15:03:52,969:INFO:Copying training dataset
2023-06-16 15:03:52,984:INFO:Defining folds
2023-06-16 15:03:52,985:INFO:Declaring metric variables
2023-06-16 15:03:52,990:INFO:Importing untrained model
2023-06-16 15:03:52,995:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:03:53,004:INFO:Starting cross validation
2023-06-16 15:03:53,009:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:03:55,557:INFO:Calculating mean and std
2023-06-16 15:03:55,559:INFO:Creating metrics dataframe
2023-06-16 15:03:55,920:INFO:Uploading results into container
2023-06-16 15:03:55,921:INFO:Uploading model into container now
2023-06-16 15:03:55,922:INFO:_master_model_container: 5
2023-06-16 15:03:55,922:INFO:_display_container: 3
2023-06-16 15:03:55,923:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 15:03:55,923:INFO:create_model() successfully completed......................................
2023-06-16 15:03:55,988:INFO:SubProcess create_model() end ==================================
2023-06-16 15:03:55,988:INFO:Creating metrics dataframe
2023-06-16 15:03:56,006:INFO:Initializing SVM - Linear Kernel
2023-06-16 15:03:56,006:INFO:Total runtime is 0.16261679331461587 minutes
2023-06-16 15:03:56,012:INFO:SubProcess create_model() called ==================================
2023-06-16 15:03:56,012:INFO:Initializing create_model()
2023-06-16 15:03:56,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3C2BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:56,012:INFO:Checking exceptions
2023-06-16 15:03:56,012:INFO:Importing libraries
2023-06-16 15:03:56,012:INFO:Copying training dataset
2023-06-16 15:03:56,030:INFO:Defining folds
2023-06-16 15:03:56,030:INFO:Declaring metric variables
2023-06-16 15:03:56,035:INFO:Importing untrained model
2023-06-16 15:03:56,039:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 15:03:56,049:INFO:Starting cross validation
2023-06-16 15:03:56,052:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:03:57,309:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:57,323:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:57,335:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:57,368:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:58,700:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:58,712:INFO:Calculating mean and std
2023-06-16 15:03:58,715:INFO:Creating metrics dataframe
2023-06-16 15:03:59,081:INFO:Uploading results into container
2023-06-16 15:03:59,082:INFO:Uploading model into container now
2023-06-16 15:03:59,082:INFO:_master_model_container: 6
2023-06-16 15:03:59,082:INFO:_display_container: 3
2023-06-16 15:03:59,083:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 15:03:59,083:INFO:create_model() successfully completed......................................
2023-06-16 15:03:59,147:INFO:SubProcess create_model() end ==================================
2023-06-16 15:03:59,147:INFO:Creating metrics dataframe
2023-06-16 15:03:59,176:INFO:Initializing create_model()
2023-06-16 15:03:59,176:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:59,176:INFO:Checking exceptions
2023-06-16 15:03:59,178:INFO:Importing libraries
2023-06-16 15:03:59,178:INFO:Copying training dataset
2023-06-16 15:03:59,192:INFO:Defining folds
2023-06-16 15:03:59,192:INFO:Declaring metric variables
2023-06-16 15:03:59,193:INFO:Importing untrained model
2023-06-16 15:03:59,193:INFO:Declaring custom model
2023-06-16 15:03:59,193:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:03:59,196:INFO:Cross validation set to False
2023-06-16 15:03:59,196:INFO:Fitting Model
2023-06-16 15:03:59,889:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 15:03:59,889:INFO:create_model() successfully completed......................................
2023-06-16 15:03:59,959:INFO:Initializing create_model()
2023-06-16 15:03:59,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:59,960:INFO:Checking exceptions
2023-06-16 15:03:59,963:INFO:Importing libraries
2023-06-16 15:03:59,963:INFO:Copying training dataset
2023-06-16 15:03:59,977:INFO:Defining folds
2023-06-16 15:03:59,977:INFO:Declaring metric variables
2023-06-16 15:03:59,977:INFO:Importing untrained model
2023-06-16 15:03:59,977:INFO:Declaring custom model
2023-06-16 15:03:59,978:INFO:Logistic Regression Imported successfully
2023-06-16 15:03:59,980:INFO:Cross validation set to False
2023-06-16 15:03:59,980:INFO:Fitting Model
2023-06-16 15:04:00,683:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 15:04:00,683:INFO:create_model() successfully completed......................................
2023-06-16 15:04:00,754:INFO:Initializing create_model()
2023-06-16 15:04:00,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:04:00,755:INFO:Checking exceptions
2023-06-16 15:04:00,758:INFO:Importing libraries
2023-06-16 15:04:00,758:INFO:Copying training dataset
2023-06-16 15:04:00,773:INFO:Defining folds
2023-06-16 15:04:00,773:INFO:Declaring metric variables
2023-06-16 15:04:00,774:INFO:Importing untrained model
2023-06-16 15:04:00,774:INFO:Declaring custom model
2023-06-16 15:04:00,775:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 15:04:00,777:INFO:Cross validation set to False
2023-06-16 15:04:00,777:INFO:Fitting Model
2023-06-16 15:04:01,847:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 15:04:01,847:INFO:create_model() successfully completed......................................
2023-06-16 15:04:01,980:INFO:_master_model_container: 6
2023-06-16 15:04:01,981:INFO:_display_container: 3
2023-06-16 15:04:01,983:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 15:04:01,983:INFO:compare_models() successfully completed......................................
2023-06-16 15:04:03,276:INFO:Initializing evaluate_model()
2023-06-16 15:04:03,276:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:04:03,312:INFO:Initializing plot_model()
2023-06-16 15:04:03,315:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:03,316:INFO:Checking exceptions
2023-06-16 15:04:03,322:INFO:Preloading libraries
2023-06-16 15:04:03,323:INFO:Copying training dataset
2023-06-16 15:04:03,323:INFO:Plot type: pipeline
2023-06-16 15:04:03,630:INFO:Visual Rendered Successfully
2023-06-16 15:04:03,698:INFO:plot_model() successfully completed......................................
2023-06-16 15:04:07,350:INFO:Initializing evaluate_model()
2023-06-16 15:04:07,350:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:04:07,382:INFO:Initializing plot_model()
2023-06-16 15:04:07,382:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:07,383:INFO:Checking exceptions
2023-06-16 15:04:07,389:INFO:Preloading libraries
2023-06-16 15:04:07,389:INFO:Copying training dataset
2023-06-16 15:04:07,389:INFO:Plot type: pipeline
2023-06-16 15:04:07,590:INFO:Visual Rendered Successfully
2023-06-16 15:04:07,705:INFO:plot_model() successfully completed......................................
2023-06-16 15:04:10,234:INFO:Initializing plot_model()
2023-06-16 15:04:10,234:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:10,234:INFO:Checking exceptions
2023-06-16 15:04:16,495:INFO:Initializing plot_model()
2023-06-16 15:04:16,495:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:16,495:INFO:Checking exceptions
2023-06-16 15:04:16,502:INFO:Preloading libraries
2023-06-16 15:04:16,502:INFO:Copying training dataset
2023-06-16 15:04:16,502:INFO:Plot type: feature
2023-06-16 15:04:16,727:INFO:Visual Rendered Successfully
2023-06-16 15:04:16,788:INFO:plot_model() successfully completed......................................
2023-06-16 15:04:21,825:INFO:Initializing evaluate_model()
2023-06-16 15:04:21,825:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:04:21,858:INFO:Initializing plot_model()
2023-06-16 15:04:21,860:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:21,861:INFO:Checking exceptions
2023-06-16 15:04:21,867:INFO:Preloading libraries
2023-06-16 15:04:21,910:INFO:Copying training dataset
2023-06-16 15:04:21,911:INFO:Plot type: pipeline
2023-06-16 15:04:22,214:INFO:Visual Rendered Successfully
2023-06-16 15:04:22,278:INFO:plot_model() successfully completed......................................
2023-06-16 15:04:24,045:INFO:Initializing plot_model()
2023-06-16 15:04:24,046:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:24,046:INFO:Checking exceptions
2023-06-16 15:04:24,053:INFO:Preloading libraries
2023-06-16 15:04:24,063:INFO:Copying training dataset
2023-06-16 15:04:24,063:INFO:Plot type: auc
2023-06-16 15:04:24,297:INFO:Fitting Model
2023-06-16 15:04:24,299:INFO:Scoring test/hold-out set
2023-06-16 15:04:24,610:INFO:Visual Rendered Successfully
2023-06-16 15:04:24,673:INFO:plot_model() successfully completed......................................
2023-06-16 15:17:38,987:INFO:Initializing plot_model()
2023-06-16 15:17:38,988:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:17:38,988:INFO:Checking exceptions
2023-06-16 15:17:38,995:INFO:Preloading libraries
2023-06-16 15:17:39,036:INFO:Copying training dataset
2023-06-16 15:17:39,037:INFO:Plot type: feature
2023-06-16 15:17:39,037:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 15:17:39,291:INFO:Visual Rendered Successfully
2023-06-16 15:17:39,434:INFO:plot_model() successfully completed......................................
2023-06-16 15:17:58,451:INFO:Initializing evaluate_model()
2023-06-16 15:17:58,451:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:17:58,482:INFO:Initializing plot_model()
2023-06-16 15:17:58,483:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:17:58,483:INFO:Checking exceptions
2023-06-16 15:17:58,491:INFO:Preloading libraries
2023-06-16 15:17:58,491:INFO:Copying training dataset
2023-06-16 15:17:58,491:INFO:Plot type: pipeline
2023-06-16 15:17:58,681:INFO:Visual Rendered Successfully
2023-06-16 15:17:58,752:INFO:plot_model() successfully completed......................................
2023-06-16 15:18:00,713:INFO:Initializing plot_model()
2023-06-16 15:18:00,713:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:18:00,713:INFO:Checking exceptions
2023-06-16 15:18:00,719:INFO:Preloading libraries
2023-06-16 15:18:00,719:INFO:Copying training dataset
2023-06-16 15:18:00,719:INFO:Plot type: feature
2023-06-16 15:18:00,936:INFO:Visual Rendered Successfully
2023-06-16 15:18:00,998:INFO:plot_model() successfully completed......................................
2023-06-16 15:18:14,168:INFO:Initializing plot_model()
2023-06-16 15:18:14,168:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:18:14,168:INFO:Checking exceptions
2023-06-16 15:18:14,174:INFO:Preloading libraries
2023-06-16 15:18:14,175:INFO:Copying training dataset
2023-06-16 15:18:14,175:INFO:Plot type: feature_all
2023-06-16 15:18:14,447:INFO:Visual Rendered Successfully
2023-06-16 15:18:14,511:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:23,681:INFO:Initializing plot_model()
2023-06-16 15:42:23,682:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:23,682:INFO:Checking exceptions
2023-06-16 15:42:23,689:INFO:Preloading libraries
2023-06-16 15:42:23,689:INFO:Copying training dataset
2023-06-16 15:42:23,689:INFO:Plot type: confusion_matrix
2023-06-16 15:42:23,938:INFO:Fitting Model
2023-06-16 15:42:23,939:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:23,940:INFO:Scoring test/hold-out set
2023-06-16 15:42:24,057:INFO:Visual Rendered Successfully
2023-06-16 15:42:24,166:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:25,438:INFO:Initializing plot_model()
2023-06-16 15:42:25,438:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:25,438:INFO:Checking exceptions
2023-06-16 15:42:25,445:INFO:Preloading libraries
2023-06-16 15:42:25,445:INFO:Copying training dataset
2023-06-16 15:42:25,445:INFO:Plot type: auc
2023-06-16 15:42:25,577:INFO:Fitting Model
2023-06-16 15:42:25,578:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:25,579:INFO:Scoring test/hold-out set
2023-06-16 15:42:25,761:INFO:Visual Rendered Successfully
2023-06-16 15:42:25,850:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:26,407:INFO:Initializing plot_model()
2023-06-16 15:42:26,407:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:26,407:INFO:Checking exceptions
2023-06-16 15:42:26,413:INFO:Preloading libraries
2023-06-16 15:42:26,413:INFO:Copying training dataset
2023-06-16 15:42:26,413:INFO:Plot type: parameter
2023-06-16 15:42:26,418:INFO:Visual Rendered Successfully
2023-06-16 15:42:26,497:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:41,126:INFO:Initializing plot_model()
2023-06-16 15:42:41,127:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:41,127:INFO:Checking exceptions
2023-06-16 15:42:41,134:INFO:Preloading libraries
2023-06-16 15:42:41,134:INFO:Copying training dataset
2023-06-16 15:42:41,134:INFO:Plot type: pr
2023-06-16 15:42:41,264:INFO:Fitting Model
2023-06-16 15:42:41,266:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:41,267:INFO:Scoring test/hold-out set
2023-06-16 15:42:41,410:INFO:Visual Rendered Successfully
2023-06-16 15:42:41,489:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:47,374:INFO:Initializing plot_model()
2023-06-16 15:42:47,374:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:47,374:INFO:Checking exceptions
2023-06-16 15:42:47,381:INFO:Preloading libraries
2023-06-16 15:42:47,382:INFO:Copying training dataset
2023-06-16 15:42:47,382:INFO:Plot type: error
2023-06-16 15:42:47,515:INFO:Fitting Model
2023-06-16 15:42:47,515:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:47,516:INFO:Scoring test/hold-out set
2023-06-16 15:42:47,665:INFO:Visual Rendered Successfully
2023-06-16 15:42:47,742:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:53,007:INFO:Initializing plot_model()
2023-06-16 15:42:53,007:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:53,007:INFO:Checking exceptions
2023-06-16 15:42:53,014:INFO:Preloading libraries
2023-06-16 15:42:53,014:INFO:Copying training dataset
2023-06-16 15:42:53,014:INFO:Plot type: class_report
2023-06-16 15:42:53,147:INFO:Fitting Model
2023-06-16 15:42:53,147:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:53,148:INFO:Scoring test/hold-out set
2023-06-16 15:42:53,408:INFO:Visual Rendered Successfully
2023-06-16 15:42:53,574:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:57,950:INFO:Initializing plot_model()
2023-06-16 15:42:57,950:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:57,951:INFO:Checking exceptions
2023-06-16 15:42:57,958:INFO:Preloading libraries
2023-06-16 15:42:57,958:INFO:Copying training dataset
2023-06-16 15:42:57,958:INFO:Plot type: learning
2023-06-16 15:42:58,104:INFO:Fitting Model
2023-06-16 15:43:04,170:INFO:Visual Rendered Successfully
2023-06-16 15:43:04,249:INFO:plot_model() successfully completed......................................
2023-06-16 15:43:09,967:INFO:Initializing plot_model()
2023-06-16 15:43:09,967:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:43:09,967:INFO:Checking exceptions
2023-06-16 15:43:09,974:INFO:Preloading libraries
2023-06-16 15:43:09,974:INFO:Copying training dataset
2023-06-16 15:43:09,974:INFO:Plot type: pipeline
2023-06-16 15:43:10,141:INFO:Visual Rendered Successfully
2023-06-16 15:43:10,204:INFO:plot_model() successfully completed......................................
2023-06-16 15:44:50,608:INFO:Initializing evaluate_model()
2023-06-16 15:44:50,608:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:44:50,641:INFO:Initializing plot_model()
2023-06-16 15:44:50,641:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:44:50,642:INFO:Checking exceptions
2023-06-16 15:44:50,647:INFO:Preloading libraries
2023-06-16 15:44:50,667:INFO:Copying training dataset
2023-06-16 15:44:50,667:INFO:Plot type: pipeline
2023-06-16 15:44:50,881:INFO:Visual Rendered Successfully
2023-06-16 15:44:50,970:INFO:plot_model() successfully completed......................................
2023-06-16 15:44:51,915:INFO:Initializing plot_model()
2023-06-16 15:44:51,915:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:44:51,915:INFO:Checking exceptions
2023-06-16 15:44:51,921:INFO:Preloading libraries
2023-06-16 15:44:51,930:INFO:Copying training dataset
2023-06-16 15:44:51,930:INFO:Plot type: parameter
2023-06-16 15:44:51,936:INFO:Visual Rendered Successfully
2023-06-16 15:44:52,016:INFO:plot_model() successfully completed......................................
2023-06-16 15:48:30,454:INFO:Initializing stack_models()
2023-06-16 15:48:30,454:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator_list=[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-06-16 15:48:30,454:INFO:Checking exceptions
2023-06-16 15:48:30,461:INFO:Defining meta model
2023-06-16 15:48:30,511:INFO:Getting model names
2023-06-16 15:48:30,512:INFO:[('Light Gradient Boosting Machine', LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)), ('Logistic Regression', LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)), ('SVM - Linear Kernel', SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False))]
2023-06-16 15:48:30,518:INFO:SubProcess create_model() called ==================================
2023-06-16 15:48:30,557:INFO:Initializing create_model()
2023-06-16 15:48:30,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=StackingClassifier(cv=5,
                   estimators=[('Light Gradient Boosting Machine',
                                LGBMClassifier(boosting_type='gbdt',
                                               class_weight=None,
                                               colsample_bytree=1.0,
                                               importance_type='split',
                                               learning_rate=0.1, max_depth=-1,
                                               min_child_samples=20,
                                               min_child_weight=0.001,
                                               min_split_gain=0.0,
                                               n_estimators=100, n_jobs=-1,
                                               num_leaves=31, objective=None,
                                               random_state=420, reg_alpha=0.0,
                                               re...
                                              validation_fraction=0.1,
                                              verbose=0, warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=420,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03B31BDF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:48:30,557:INFO:Checking exceptions
2023-06-16 15:48:30,557:INFO:Importing libraries
2023-06-16 15:48:30,557:INFO:Copying training dataset
2023-06-16 15:48:30,594:INFO:Defining folds
2023-06-16 15:48:30,594:INFO:Declaring metric variables
2023-06-16 15:48:30,599:INFO:Importing untrained model
2023-06-16 15:48:30,599:INFO:Declaring custom model
2023-06-16 15:48:30,606:INFO:Stacking Classifier Imported successfully
2023-06-16 15:48:30,638:INFO:Starting cross validation
2023-06-16 15:48:30,640:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:48:53,957:INFO:Calculating mean and std
2023-06-16 15:48:53,958:INFO:Creating metrics dataframe
2023-06-16 15:48:53,968:INFO:Finalizing model
2023-06-16 15:48:58,928:INFO:Uploading results into container
2023-06-16 15:48:58,929:INFO:Uploading model into container now
2023-06-16 15:48:58,930:INFO:_master_model_container: 7
2023-06-16 15:48:58,930:INFO:_display_container: 4
2023-06-16 15:48:58,938:INFO:StackingClassifier(cv=5,
                   estimators=[('Light Gradient Boosting Machine',
                                LGBMClassifier(boosting_type='gbdt',
                                               class_weight=None,
                                               colsample_bytree=1.0,
                                               importance_type='split',
                                               learning_rate=0.1, max_depth=-1,
                                               min_child_samples=20,
                                               min_child_weight=0.001,
                                               min_split_gain=0.0,
                                               n_estimators=100, n_jobs=-1,
                                               num_leaves=31, objective=None,
                                               random_state=420, reg_alpha=0.0,
                                               re...
                                              validation_fraction=0.1,
                                              verbose=0, warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=420,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-06-16 15:48:58,938:INFO:create_model() successfully completed......................................
2023-06-16 15:48:59,032:INFO:SubProcess create_model() end ==================================
2023-06-16 15:48:59,047:INFO:_master_model_container: 7
2023-06-16 15:48:59,047:INFO:_display_container: 4
2023-06-16 15:48:59,052:INFO:StackingClassifier(cv=5,
                   estimators=[('Light Gradient Boosting Machine',
                                LGBMClassifier(boosting_type='gbdt',
                                               class_weight=None,
                                               colsample_bytree=1.0,
                                               importance_type='split',
                                               learning_rate=0.1, max_depth=-1,
                                               min_child_samples=20,
                                               min_child_weight=0.001,
                                               min_split_gain=0.0,
                                               n_estimators=100, n_jobs=-1,
                                               num_leaves=31, objective=None,
                                               random_state=420, reg_alpha=0.0,
                                               re...
                                              validation_fraction=0.1,
                                              verbose=0, warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=420,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-06-16 15:48:59,052:INFO:stack_models() successfully completed......................................
2023-06-16 15:51:46,106:ERROR:
'explainerdashboard' is a soft dependency and not included in the pycaret installation. Please run: `pip install explainerdashboard` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-16 15:54:35,296:INFO:Initializing create_model()
2023-06-16 15:54:35,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:35,297:INFO:Checking exceptions
2023-06-16 15:54:35,299:INFO:Importing libraries
2023-06-16 15:54:35,300:INFO:Copying training dataset
2023-06-16 15:54:35,319:INFO:Defining folds
2023-06-16 15:54:35,320:INFO:Declaring metric variables
2023-06-16 15:54:35,320:INFO:Importing untrained model
2023-06-16 15:54:35,320:INFO:Declaring custom model
2023-06-16 15:54:35,321:INFO:Logistic Regression Imported successfully
2023-06-16 15:54:35,322:INFO:Starting cross validation
2023-06-16 15:54:35,324:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:43,962:INFO:Calculating mean and std
2023-06-16 15:54:43,963:INFO:Creating metrics dataframe
2023-06-16 15:54:43,966:INFO:Finalizing model
2023-06-16 15:54:44,786:INFO:Uploading results into container
2023-06-16 15:54:44,787:INFO:_master_model_container: 7
2023-06-16 15:54:44,787:INFO:_display_container: 5
2023-06-16 15:54:44,787:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 15:54:44,787:INFO:create_model() successfully completed......................................
2023-06-16 15:54:44,874:INFO:Initializing create_model()
2023-06-16 15:54:44,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:44,875:INFO:Checking exceptions
2023-06-16 15:54:44,878:INFO:Importing libraries
2023-06-16 15:54:44,878:INFO:Copying training dataset
2023-06-16 15:54:44,893:INFO:Defining folds
2023-06-16 15:54:44,894:INFO:Declaring metric variables
2023-06-16 15:54:44,894:INFO:Importing untrained model
2023-06-16 15:54:44,894:INFO:Declaring custom model
2023-06-16 15:54:44,895:INFO:Random Forest Classifier Imported successfully
2023-06-16 15:54:44,896:INFO:Starting cross validation
2023-06-16 15:54:44,898:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:48,077:INFO:Calculating mean and std
2023-06-16 15:54:48,078:INFO:Creating metrics dataframe
2023-06-16 15:54:48,080:INFO:Finalizing model
2023-06-16 15:54:49,015:INFO:Uploading results into container
2023-06-16 15:54:49,016:INFO:_master_model_container: 7
2023-06-16 15:54:49,016:INFO:_display_container: 6
2023-06-16 15:54:49,016:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 15:54:49,016:INFO:create_model() successfully completed......................................
2023-06-16 15:54:49,095:INFO:Initializing create_model()
2023-06-16 15:54:49,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:49,096:INFO:Checking exceptions
2023-06-16 15:54:49,099:INFO:Importing libraries
2023-06-16 15:54:49,099:INFO:Copying training dataset
2023-06-16 15:54:49,115:INFO:Defining folds
2023-06-16 15:54:49,115:INFO:Declaring metric variables
2023-06-16 15:54:49,116:INFO:Importing untrained model
2023-06-16 15:54:49,116:INFO:Declaring custom model
2023-06-16 15:54:49,117:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:54:49,117:INFO:Starting cross validation
2023-06-16 15:54:49,119:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:51,449:INFO:Calculating mean and std
2023-06-16 15:54:51,450:INFO:Creating metrics dataframe
2023-06-16 15:54:51,452:INFO:Finalizing model
2023-06-16 15:54:52,219:INFO:Uploading results into container
2023-06-16 15:54:52,220:INFO:_master_model_container: 7
2023-06-16 15:54:52,221:INFO:_display_container: 7
2023-06-16 15:54:52,221:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 15:54:52,222:INFO:create_model() successfully completed......................................
2023-06-16 15:54:52,297:INFO:Initializing create_model()
2023-06-16 15:54:52,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:52,298:INFO:Checking exceptions
2023-06-16 15:54:52,303:INFO:Importing libraries
2023-06-16 15:54:52,303:INFO:Copying training dataset
2023-06-16 15:54:52,319:INFO:Defining folds
2023-06-16 15:54:52,319:INFO:Declaring metric variables
2023-06-16 15:54:52,320:INFO:Importing untrained model
2023-06-16 15:54:52,320:INFO:Declaring custom model
2023-06-16 15:54:52,320:INFO:Logistic Regression Imported successfully
2023-06-16 15:54:52,321:INFO:Starting cross validation
2023-06-16 15:54:52,323:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:54,937:INFO:Calculating mean and std
2023-06-16 15:54:54,937:INFO:Creating metrics dataframe
2023-06-16 15:54:54,940:INFO:Finalizing model
2023-06-16 15:54:55,718:INFO:Uploading results into container
2023-06-16 15:54:55,719:INFO:_master_model_container: 7
2023-06-16 15:54:55,719:INFO:_display_container: 8
2023-06-16 15:54:55,720:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 15:54:55,720:INFO:create_model() successfully completed......................................
2023-06-16 15:54:55,798:INFO:Initializing create_model()
2023-06-16 15:54:55,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:55,798:INFO:Checking exceptions
2023-06-16 15:54:55,801:INFO:Importing libraries
2023-06-16 15:54:55,801:INFO:Copying training dataset
2023-06-16 15:54:55,819:INFO:Defining folds
2023-06-16 15:54:55,819:INFO:Declaring metric variables
2023-06-16 15:54:55,819:INFO:Importing untrained model
2023-06-16 15:54:55,820:INFO:Declaring custom model
2023-06-16 15:54:55,822:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:54:55,823:INFO:Starting cross validation
2023-06-16 15:54:55,825:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:58,095:INFO:Calculating mean and std
2023-06-16 15:54:58,096:INFO:Creating metrics dataframe
2023-06-16 15:54:58,098:INFO:Finalizing model
2023-06-16 15:54:58,894:INFO:Uploading results into container
2023-06-16 15:54:58,895:INFO:_master_model_container: 7
2023-06-16 15:54:58,895:INFO:_display_container: 9
2023-06-16 15:54:58,896:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 15:54:58,896:INFO:create_model() successfully completed......................................
2023-06-16 15:54:58,977:INFO:Initializing create_model()
2023-06-16 15:54:58,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:58,977:INFO:Checking exceptions
2023-06-16 15:54:58,983:INFO:Importing libraries
2023-06-16 15:54:58,983:INFO:Copying training dataset
2023-06-16 15:54:58,998:INFO:Defining folds
2023-06-16 15:54:58,999:INFO:Declaring metric variables
2023-06-16 15:54:58,999:INFO:Importing untrained model
2023-06-16 15:54:58,999:INFO:Declaring custom model
2023-06-16 15:54:59,001:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 15:54:59,001:INFO:Starting cross validation
2023-06-16 15:54:59,004:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:59,574:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:54:59,583:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:54:59,589:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:54:59,598:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:55:00,578:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:55:00,973:INFO:Calculating mean and std
2023-06-16 15:55:00,974:INFO:Creating metrics dataframe
2023-06-16 15:55:00,976:INFO:Finalizing model
2023-06-16 15:55:01,737:INFO:Uploading results into container
2023-06-16 15:55:01,738:INFO:_master_model_container: 7
2023-06-16 15:55:01,738:INFO:_display_container: 10
2023-06-16 15:55:01,739:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 15:55:01,739:INFO:create_model() successfully completed......................................
2023-06-16 15:55:01,846:WARNING:c:\Program Files\Python39\lib\site-packages\pandas\core\internals\blocks.py:937: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.asarray(value)

2023-06-16 16:45:31,945:INFO:Initializing evaluate_model()
2023-06-16 16:45:31,945:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 16:45:31,976:INFO:Initializing plot_model()
2023-06-16 16:45:31,976:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 16:45:31,976:INFO:Checking exceptions
2023-06-16 16:45:31,982:INFO:Preloading libraries
2023-06-16 16:45:32,053:INFO:Copying training dataset
2023-06-16 16:45:32,053:INFO:Plot type: pipeline
2023-06-16 16:45:32,286:INFO:Visual Rendered Successfully
2023-06-16 16:45:32,383:INFO:plot_model() successfully completed......................................
2023-06-16 16:45:51,710:INFO:Initializing plot_model()
2023-06-16 16:45:51,711:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 16:45:51,711:INFO:Checking exceptions
2023-06-16 16:45:51,718:INFO:Preloading libraries
2023-06-16 16:45:51,731:INFO:Copying training dataset
2023-06-16 16:45:51,731:INFO:Plot type: auc
2023-06-16 16:45:51,871:INFO:Fitting Model
2023-06-16 16:45:51,873:INFO:Scoring test/hold-out set
2023-06-16 16:45:52,110:INFO:Visual Rendered Successfully
2023-06-16 16:45:52,189:INFO:plot_model() successfully completed......................................
2023-06-16 16:52:04,288:INFO:Initializing plot_model()
2023-06-16 16:52:04,289:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 16:52:04,289:INFO:Checking exceptions
2023-06-16 16:52:04,296:INFO:Preloading libraries
2023-06-16 16:52:04,313:INFO:Copying training dataset
2023-06-16 16:52:04,313:INFO:Plot type: pr
2023-06-16 16:52:04,452:INFO:Fitting Model
2023-06-16 16:52:04,454:INFO:Scoring test/hold-out set
2023-06-16 16:52:04,646:INFO:Visual Rendered Successfully
2023-06-16 16:52:04,718:INFO:plot_model() successfully completed......................................
2023-06-16 16:52:41,865:INFO:Initializing plot_model()
2023-06-16 16:52:41,865:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 16:52:41,866:INFO:Checking exceptions
2023-06-16 16:52:41,871:INFO:Preloading libraries
2023-06-16 16:52:41,896:INFO:Copying training dataset
2023-06-16 16:52:41,896:INFO:Plot type: auc
2023-06-16 16:52:42,035:INFO:Fitting Model
2023-06-16 16:52:42,037:INFO:Scoring test/hold-out set
2023-06-16 16:52:42,255:INFO:Visual Rendered Successfully
2023-06-16 16:52:42,352:INFO:plot_model() successfully completed......................................
2023-06-16 17:06:25,006:INFO:Initializing plot_model()
2023-06-16 17:06:25,007:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:06:25,007:INFO:Checking exceptions
2023-06-16 17:06:25,014:INFO:Preloading libraries
2023-06-16 17:06:25,025:INFO:Copying training dataset
2023-06-16 17:06:25,025:INFO:Plot type: confusion_matrix
2023-06-16 17:06:29,995:INFO:Fitting Model
2023-06-16 17:06:29,996:INFO:Scoring test/hold-out set
2023-06-16 17:06:30,187:INFO:Visual Rendered Successfully
2023-06-16 17:06:30,300:INFO:plot_model() successfully completed......................................
2023-06-16 17:06:42,554:INFO:Initializing plot_model()
2023-06-16 17:06:42,554:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:06:42,554:INFO:Checking exceptions
2023-06-16 17:06:42,560:INFO:Preloading libraries
2023-06-16 17:06:42,574:INFO:Copying training dataset
2023-06-16 17:06:42,574:INFO:Plot type: threshold
2023-06-16 17:06:42,732:INFO:Fitting Model
2023-06-16 17:07:41,943:INFO:Scoring test/hold-out set
2023-06-16 17:07:42,559:INFO:Visual Rendered Successfully
2023-06-16 17:07:42,660:INFO:plot_model() successfully completed......................................
2023-06-16 17:07:42,670:INFO:Initializing optimize_threshold()
2023-06-16 17:07:42,671:INFO:optimize_threshold(return_data=False, plot_kwargs=None, shgo_kwargs={}, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), optimize=Accuracy, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>)
2023-06-16 17:07:42,671:INFO:Importing libraries
2023-06-16 17:07:42,671:INFO:Checking exceptions
2023-06-16 17:07:42,671:INFO:defining variables
2023-06-16 17:07:42,671:INFO:starting optimization
2023-06-16 17:07:42,768:INFO:Initializing create_model()
2023-06-16 17:07:42,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:07:42,769:INFO:Checking exceptions
2023-06-16 17:07:42,771:INFO:Importing libraries
2023-06-16 17:07:42,771:INFO:Copying training dataset
2023-06-16 17:07:42,819:INFO:Defining folds
2023-06-16 17:07:42,819:INFO:Declaring metric variables
2023-06-16 17:07:42,819:INFO:Importing untrained model
2023-06-16 17:07:42,819:INFO:Declaring custom model
2023-06-16 17:07:42,820:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:07:42,821:INFO:Starting cross validation
2023-06-16 17:07:42,823:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:07:54,595:INFO:Calculating mean and std
2023-06-16 17:07:54,595:INFO:Creating metrics dataframe
2023-06-16 17:07:54,598:INFO:Finalizing model
2023-06-16 17:07:56,048:INFO:Uploading results into container
2023-06-16 17:07:56,048:INFO:Uploading model into container now
2023-06-16 17:07:56,049:INFO:_master_model_container: 8
2023-06-16 17:07:56,049:INFO:_display_container: 11
2023-06-16 17:07:56,051:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.0,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:07:56,051:INFO:create_model() successfully completed......................................
2023-06-16 17:07:56,135:INFO:Initializing create_model()
2023-06-16 17:07:56,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:07:56,136:INFO:Checking exceptions
2023-06-16 17:07:56,138:INFO:Importing libraries
2023-06-16 17:07:56,139:INFO:Copying training dataset
2023-06-16 17:07:56,155:INFO:Defining folds
2023-06-16 17:07:56,155:INFO:Declaring metric variables
2023-06-16 17:07:56,155:INFO:Importing untrained model
2023-06-16 17:07:56,155:INFO:Declaring custom model
2023-06-16 17:07:56,158:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:07:56,158:INFO:Starting cross validation
2023-06-16 17:07:56,160:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:00,645:INFO:Calculating mean and std
2023-06-16 17:08:00,646:INFO:Creating metrics dataframe
2023-06-16 17:08:00,649:INFO:Finalizing model
2023-06-16 17:08:02,154:INFO:Uploading results into container
2023-06-16 17:08:02,155:INFO:Uploading model into container now
2023-06-16 17:08:02,155:INFO:_master_model_container: 9
2023-06-16 17:08:02,155:INFO:_display_container: 11
2023-06-16 17:08:02,157:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.5,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:02,157:INFO:create_model() successfully completed......................................
2023-06-16 17:08:02,239:INFO:Initializing create_model()
2023-06-16 17:08:02,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.75, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:02,240:INFO:Checking exceptions
2023-06-16 17:08:02,242:INFO:Importing libraries
2023-06-16 17:08:02,242:INFO:Copying training dataset
2023-06-16 17:08:02,262:INFO:Defining folds
2023-06-16 17:08:02,262:INFO:Declaring metric variables
2023-06-16 17:08:02,263:INFO:Importing untrained model
2023-06-16 17:08:02,263:INFO:Declaring custom model
2023-06-16 17:08:02,264:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:02,264:INFO:Starting cross validation
2023-06-16 17:08:02,266:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:06,578:INFO:Calculating mean and std
2023-06-16 17:08:06,579:INFO:Creating metrics dataframe
2023-06-16 17:08:06,582:INFO:Finalizing model
2023-06-16 17:08:07,987:INFO:Uploading results into container
2023-06-16 17:08:07,987:INFO:Uploading model into container now
2023-06-16 17:08:07,988:INFO:_master_model_container: 10
2023-06-16 17:08:07,988:INFO:_display_container: 11
2023-06-16 17:08:07,992:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.75,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:07,992:INFO:create_model() successfully completed......................................
2023-06-16 17:08:08,069:INFO:Initializing create_model()
2023-06-16 17:08:08,069:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:08,069:INFO:Checking exceptions
2023-06-16 17:08:08,072:INFO:Importing libraries
2023-06-16 17:08:08,072:INFO:Copying training dataset
2023-06-16 17:08:08,088:INFO:Defining folds
2023-06-16 17:08:08,088:INFO:Declaring metric variables
2023-06-16 17:08:08,089:INFO:Importing untrained model
2023-06-16 17:08:08,089:INFO:Declaring custom model
2023-06-16 17:08:08,090:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:08,090:INFO:Starting cross validation
2023-06-16 17:08:08,092:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:13,031:INFO:Calculating mean and std
2023-06-16 17:08:13,032:INFO:Creating metrics dataframe
2023-06-16 17:08:13,035:INFO:Finalizing model
2023-06-16 17:08:15,731:INFO:Uploading results into container
2023-06-16 17:08:15,732:INFO:Uploading model into container now
2023-06-16 17:08:15,732:INFO:_master_model_container: 11
2023-06-16 17:08:15,732:INFO:_display_container: 11
2023-06-16 17:08:15,734:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.25,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:15,734:INFO:create_model() successfully completed......................................
2023-06-16 17:08:15,876:INFO:Initializing create_model()
2023-06-16 17:08:15,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:15,876:INFO:Checking exceptions
2023-06-16 17:08:15,885:INFO:Importing libraries
2023-06-16 17:08:15,885:INFO:Copying training dataset
2023-06-16 17:08:15,917:INFO:Defining folds
2023-06-16 17:08:15,917:INFO:Declaring metric variables
2023-06-16 17:08:15,918:INFO:Importing untrained model
2023-06-16 17:08:15,918:INFO:Declaring custom model
2023-06-16 17:08:15,921:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:15,922:INFO:Starting cross validation
2023-06-16 17:08:15,924:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:21,805:INFO:Calculating mean and std
2023-06-16 17:08:21,805:INFO:Creating metrics dataframe
2023-06-16 17:08:21,808:INFO:Finalizing model
2023-06-16 17:08:23,066:INFO:Uploading results into container
2023-06-16 17:08:23,067:INFO:Uploading model into container now
2023-06-16 17:08:23,067:INFO:_master_model_container: 12
2023-06-16 17:08:23,067:INFO:_display_container: 11
2023-06-16 17:08:23,069:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:23,069:INFO:create_model() successfully completed......................................
2023-06-16 17:08:23,137:INFO:Initializing create_model()
2023-06-16 17:08:23,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:23,137:INFO:Checking exceptions
2023-06-16 17:08:23,139:INFO:Importing libraries
2023-06-16 17:08:23,139:INFO:Copying training dataset
2023-06-16 17:08:23,156:INFO:Defining folds
2023-06-16 17:08:23,156:INFO:Declaring metric variables
2023-06-16 17:08:23,156:INFO:Importing untrained model
2023-06-16 17:08:23,156:INFO:Declaring custom model
2023-06-16 17:08:23,157:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:23,158:INFO:Starting cross validation
2023-06-16 17:08:23,160:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:27,276:INFO:Calculating mean and std
2023-06-16 17:08:27,277:INFO:Creating metrics dataframe
2023-06-16 17:08:27,279:INFO:Finalizing model
2023-06-16 17:08:28,456:INFO:Uploading results into container
2023-06-16 17:08:28,457:INFO:Uploading model into container now
2023-06-16 17:08:28,457:INFO:_master_model_container: 13
2023-06-16 17:08:28,457:INFO:_display_container: 11
2023-06-16 17:08:28,459:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:28,459:INFO:create_model() successfully completed......................................
2023-06-16 17:08:28,531:INFO:Initializing create_model()
2023-06-16 17:08:28,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:28,532:INFO:Checking exceptions
2023-06-16 17:08:28,533:INFO:Importing libraries
2023-06-16 17:08:28,533:INFO:Copying training dataset
2023-06-16 17:08:28,547:INFO:Defining folds
2023-06-16 17:08:28,547:INFO:Declaring metric variables
2023-06-16 17:08:28,548:INFO:Importing untrained model
2023-06-16 17:08:28,548:INFO:Declaring custom model
2023-06-16 17:08:28,549:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:28,549:INFO:Starting cross validation
2023-06-16 17:08:28,551:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:32,529:INFO:Calculating mean and std
2023-06-16 17:08:32,529:INFO:Creating metrics dataframe
2023-06-16 17:08:32,532:INFO:Finalizing model
2023-06-16 17:08:33,696:INFO:Uploading results into container
2023-06-16 17:08:33,697:INFO:Uploading model into container now
2023-06-16 17:08:33,697:INFO:_master_model_container: 14
2023-06-16 17:08:33,697:INFO:_display_container: 11
2023-06-16 17:08:33,699:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:33,699:INFO:create_model() successfully completed......................................
2023-06-16 17:08:33,769:INFO:Initializing create_model()
2023-06-16 17:08:33,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:33,769:INFO:Checking exceptions
2023-06-16 17:08:33,771:INFO:Importing libraries
2023-06-16 17:08:33,772:INFO:Copying training dataset
2023-06-16 17:08:33,786:INFO:Defining folds
2023-06-16 17:08:33,786:INFO:Declaring metric variables
2023-06-16 17:08:33,786:INFO:Importing untrained model
2023-06-16 17:08:33,787:INFO:Declaring custom model
2023-06-16 17:08:33,787:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:33,788:INFO:Starting cross validation
2023-06-16 17:08:33,790:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:37,574:INFO:Calculating mean and std
2023-06-16 17:08:37,575:INFO:Creating metrics dataframe
2023-06-16 17:08:37,578:INFO:Finalizing model
2023-06-16 17:08:40,644:INFO:Uploading results into container
2023-06-16 17:08:40,645:INFO:Uploading model into container now
2023-06-16 17:08:40,645:INFO:_master_model_container: 15
2023-06-16 17:08:40,645:INFO:_display_container: 11
2023-06-16 17:08:40,647:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:40,647:INFO:create_model() successfully completed......................................
2023-06-16 17:08:40,722:INFO:Initializing create_model()
2023-06-16 17:08:40,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.1875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:40,722:INFO:Checking exceptions
2023-06-16 17:08:40,724:INFO:Importing libraries
2023-06-16 17:08:40,724:INFO:Copying training dataset
2023-06-16 17:08:40,740:INFO:Defining folds
2023-06-16 17:08:40,740:INFO:Declaring metric variables
2023-06-16 17:08:40,740:INFO:Importing untrained model
2023-06-16 17:08:40,740:INFO:Declaring custom model
2023-06-16 17:08:40,741:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:40,742:INFO:Starting cross validation
2023-06-16 17:08:40,744:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:45,508:INFO:Calculating mean and std
2023-06-16 17:08:45,508:INFO:Creating metrics dataframe
2023-06-16 17:08:45,512:INFO:Finalizing model
2023-06-16 17:08:47,977:INFO:Uploading results into container
2023-06-16 17:08:47,978:INFO:Uploading model into container now
2023-06-16 17:08:47,978:INFO:_master_model_container: 16
2023-06-16 17:08:47,978:INFO:_display_container: 11
2023-06-16 17:08:47,980:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.1875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:47,980:INFO:create_model() successfully completed......................................
2023-06-16 17:08:48,051:INFO:Initializing create_model()
2023-06-16 17:08:48,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.6875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:48,051:INFO:Checking exceptions
2023-06-16 17:08:48,053:INFO:Importing libraries
2023-06-16 17:08:48,054:INFO:Copying training dataset
2023-06-16 17:08:48,070:INFO:Defining folds
2023-06-16 17:08:48,070:INFO:Declaring metric variables
2023-06-16 17:08:48,070:INFO:Importing untrained model
2023-06-16 17:08:48,070:INFO:Declaring custom model
2023-06-16 17:08:48,071:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:48,072:INFO:Starting cross validation
2023-06-16 17:08:48,074:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:51,587:INFO:Calculating mean and std
2023-06-16 17:08:51,588:INFO:Creating metrics dataframe
2023-06-16 17:08:51,590:INFO:Finalizing model
2023-06-16 17:08:52,751:INFO:Uploading results into container
2023-06-16 17:08:52,751:INFO:Uploading model into container now
2023-06-16 17:08:52,752:INFO:_master_model_container: 17
2023-06-16 17:08:52,752:INFO:_display_container: 11
2023-06-16 17:08:52,753:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.6875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:52,753:INFO:create_model() successfully completed......................................
2023-06-16 17:08:52,824:INFO:Initializing create_model()
2023-06-16 17:08:52,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.9375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:52,824:INFO:Checking exceptions
2023-06-16 17:08:52,825:INFO:Importing libraries
2023-06-16 17:08:52,826:INFO:Copying training dataset
2023-06-16 17:08:52,839:INFO:Defining folds
2023-06-16 17:08:52,839:INFO:Declaring metric variables
2023-06-16 17:08:52,840:INFO:Importing untrained model
2023-06-16 17:08:52,840:INFO:Declaring custom model
2023-06-16 17:08:52,841:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:52,842:INFO:Starting cross validation
2023-06-16 17:08:52,844:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:56,933:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:08:56,942:INFO:Calculating mean and std
2023-06-16 17:08:56,942:INFO:Creating metrics dataframe
2023-06-16 17:08:56,945:INFO:Finalizing model
2023-06-16 17:08:58,126:INFO:Uploading results into container
2023-06-16 17:08:58,127:INFO:Uploading model into container now
2023-06-16 17:08:58,127:INFO:_master_model_container: 18
2023-06-16 17:08:58,127:INFO:_display_container: 11
2023-06-16 17:08:58,129:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.9375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:58,129:INFO:create_model() successfully completed......................................
2023-06-16 17:08:58,198:INFO:Initializing create_model()
2023-06-16 17:08:58,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.4375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:58,198:INFO:Checking exceptions
2023-06-16 17:08:58,200:INFO:Importing libraries
2023-06-16 17:08:58,200:INFO:Copying training dataset
2023-06-16 17:08:58,214:INFO:Defining folds
2023-06-16 17:08:58,214:INFO:Declaring metric variables
2023-06-16 17:08:58,215:INFO:Importing untrained model
2023-06-16 17:08:58,215:INFO:Declaring custom model
2023-06-16 17:08:58,216:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:58,217:INFO:Starting cross validation
2023-06-16 17:08:58,218:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:01,957:INFO:Calculating mean and std
2023-06-16 17:09:01,957:INFO:Creating metrics dataframe
2023-06-16 17:09:01,960:INFO:Finalizing model
2023-06-16 17:09:03,226:INFO:Uploading results into container
2023-06-16 17:09:03,227:INFO:Uploading model into container now
2023-06-16 17:09:03,227:INFO:_master_model_container: 19
2023-06-16 17:09:03,227:INFO:_display_container: 11
2023-06-16 17:09:03,229:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.4375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:03,230:INFO:create_model() successfully completed......................................
2023-06-16 17:09:03,298:INFO:Initializing create_model()
2023-06-16 17:09:03,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.3125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:03,298:INFO:Checking exceptions
2023-06-16 17:09:03,300:INFO:Importing libraries
2023-06-16 17:09:03,300:INFO:Copying training dataset
2023-06-16 17:09:03,316:INFO:Defining folds
2023-06-16 17:09:03,316:INFO:Declaring metric variables
2023-06-16 17:09:03,316:INFO:Importing untrained model
2023-06-16 17:09:03,316:INFO:Declaring custom model
2023-06-16 17:09:03,317:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:03,317:INFO:Starting cross validation
2023-06-16 17:09:03,319:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:07,222:INFO:Calculating mean and std
2023-06-16 17:09:07,222:INFO:Creating metrics dataframe
2023-06-16 17:09:07,225:INFO:Finalizing model
2023-06-16 17:09:08,513:INFO:Uploading results into container
2023-06-16 17:09:08,514:INFO:Uploading model into container now
2023-06-16 17:09:08,514:INFO:_master_model_container: 20
2023-06-16 17:09:08,514:INFO:_display_container: 11
2023-06-16 17:09:08,516:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.3125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:08,516:INFO:create_model() successfully completed......................................
2023-06-16 17:09:08,611:INFO:Initializing create_model()
2023-06-16 17:09:08,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.8125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:08,611:INFO:Checking exceptions
2023-06-16 17:09:08,614:INFO:Importing libraries
2023-06-16 17:09:08,614:INFO:Copying training dataset
2023-06-16 17:09:08,639:INFO:Defining folds
2023-06-16 17:09:08,639:INFO:Declaring metric variables
2023-06-16 17:09:08,640:INFO:Importing untrained model
2023-06-16 17:09:08,640:INFO:Declaring custom model
2023-06-16 17:09:08,641:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:08,644:INFO:Starting cross validation
2023-06-16 17:09:08,646:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:12,676:INFO:Calculating mean and std
2023-06-16 17:09:12,677:INFO:Creating metrics dataframe
2023-06-16 17:09:12,680:INFO:Finalizing model
2023-06-16 17:09:14,315:INFO:Uploading results into container
2023-06-16 17:09:14,315:INFO:Uploading model into container now
2023-06-16 17:09:14,316:INFO:_master_model_container: 21
2023-06-16 17:09:14,316:INFO:_display_container: 11
2023-06-16 17:09:14,317:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.8125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:14,317:INFO:create_model() successfully completed......................................
2023-06-16 17:09:14,398:INFO:Initializing create_model()
2023-06-16 17:09:14,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:14,398:INFO:Checking exceptions
2023-06-16 17:09:14,401:INFO:Importing libraries
2023-06-16 17:09:14,401:INFO:Copying training dataset
2023-06-16 17:09:14,415:INFO:Defining folds
2023-06-16 17:09:14,416:INFO:Declaring metric variables
2023-06-16 17:09:14,416:INFO:Importing untrained model
2023-06-16 17:09:14,416:INFO:Declaring custom model
2023-06-16 17:09:14,418:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:14,418:INFO:Starting cross validation
2023-06-16 17:09:14,421:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:18,661:INFO:Calculating mean and std
2023-06-16 17:09:18,662:INFO:Creating metrics dataframe
2023-06-16 17:09:18,664:INFO:Finalizing model
2023-06-16 17:09:20,141:INFO:Uploading results into container
2023-06-16 17:09:20,141:INFO:Uploading model into container now
2023-06-16 17:09:20,142:INFO:_master_model_container: 22
2023-06-16 17:09:20,142:INFO:_display_container: 11
2023-06-16 17:09:20,143:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.5625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:20,143:INFO:create_model() successfully completed......................................
2023-06-16 17:09:20,226:INFO:Initializing create_model()
2023-06-16 17:09:20,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:20,226:INFO:Checking exceptions
2023-06-16 17:09:20,228:INFO:Importing libraries
2023-06-16 17:09:20,228:INFO:Copying training dataset
2023-06-16 17:09:20,247:INFO:Defining folds
2023-06-16 17:09:20,248:INFO:Declaring metric variables
2023-06-16 17:09:20,248:INFO:Importing untrained model
2023-06-16 17:09:20,248:INFO:Declaring custom model
2023-06-16 17:09:20,249:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:20,250:INFO:Starting cross validation
2023-06-16 17:09:20,252:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:24,995:INFO:Calculating mean and std
2023-06-16 17:09:24,996:INFO:Creating metrics dataframe
2023-06-16 17:09:24,999:INFO:Finalizing model
2023-06-16 17:09:26,502:INFO:Uploading results into container
2023-06-16 17:09:26,503:INFO:Uploading model into container now
2023-06-16 17:09:26,503:INFO:_master_model_container: 23
2023-06-16 17:09:26,503:INFO:_display_container: 11
2023-06-16 17:09:26,505:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.0625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:26,505:INFO:create_model() successfully completed......................................
2023-06-16 17:09:26,582:INFO:Initializing create_model()
2023-06-16 17:09:26,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.09375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:26,582:INFO:Checking exceptions
2023-06-16 17:09:26,584:INFO:Importing libraries
2023-06-16 17:09:26,585:INFO:Copying training dataset
2023-06-16 17:09:26,598:INFO:Defining folds
2023-06-16 17:09:26,598:INFO:Declaring metric variables
2023-06-16 17:09:26,599:INFO:Importing untrained model
2023-06-16 17:09:26,599:INFO:Declaring custom model
2023-06-16 17:09:26,600:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:26,600:INFO:Starting cross validation
2023-06-16 17:09:26,602:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:30,815:INFO:Calculating mean and std
2023-06-16 17:09:30,815:INFO:Creating metrics dataframe
2023-06-16 17:09:30,818:INFO:Finalizing model
2023-06-16 17:09:32,357:INFO:Uploading results into container
2023-06-16 17:09:32,357:INFO:Uploading model into container now
2023-06-16 17:09:32,358:INFO:_master_model_container: 24
2023-06-16 17:09:32,358:INFO:_display_container: 11
2023-06-16 17:09:32,360:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.09375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:32,360:INFO:create_model() successfully completed......................................
2023-06-16 17:09:32,448:INFO:Initializing create_model()
2023-06-16 17:09:32,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.59375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:32,449:INFO:Checking exceptions
2023-06-16 17:09:32,451:INFO:Importing libraries
2023-06-16 17:09:32,451:INFO:Copying training dataset
2023-06-16 17:09:32,467:INFO:Defining folds
2023-06-16 17:09:32,467:INFO:Declaring metric variables
2023-06-16 17:09:32,467:INFO:Importing untrained model
2023-06-16 17:09:32,467:INFO:Declaring custom model
2023-06-16 17:09:32,468:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:32,469:INFO:Starting cross validation
2023-06-16 17:09:32,471:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:36,520:INFO:Calculating mean and std
2023-06-16 17:09:36,520:INFO:Creating metrics dataframe
2023-06-16 17:09:36,523:INFO:Finalizing model
2023-06-16 17:09:38,216:INFO:Uploading results into container
2023-06-16 17:09:38,216:INFO:Uploading model into container now
2023-06-16 17:09:38,216:INFO:_master_model_container: 25
2023-06-16 17:09:38,217:INFO:_display_container: 11
2023-06-16 17:09:38,218:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.59375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:38,218:INFO:create_model() successfully completed......................................
2023-06-16 17:09:38,326:INFO:Initializing create_model()
2023-06-16 17:09:38,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.84375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:38,326:INFO:Checking exceptions
2023-06-16 17:09:38,331:INFO:Importing libraries
2023-06-16 17:09:38,332:INFO:Copying training dataset
2023-06-16 17:09:38,371:INFO:Defining folds
2023-06-16 17:09:38,372:INFO:Declaring metric variables
2023-06-16 17:09:38,374:INFO:Importing untrained model
2023-06-16 17:09:38,374:INFO:Declaring custom model
2023-06-16 17:09:38,376:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:38,378:INFO:Starting cross validation
2023-06-16 17:09:38,386:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:44,018:INFO:Calculating mean and std
2023-06-16 17:09:44,018:INFO:Creating metrics dataframe
2023-06-16 17:09:44,021:INFO:Finalizing model
2023-06-16 17:09:46,101:INFO:Uploading results into container
2023-06-16 17:09:46,101:INFO:Uploading model into container now
2023-06-16 17:09:46,102:INFO:_master_model_container: 26
2023-06-16 17:09:46,102:INFO:_display_container: 11
2023-06-16 17:09:46,104:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.84375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:46,104:INFO:create_model() successfully completed......................................
2023-06-16 17:09:46,188:INFO:Initializing create_model()
2023-06-16 17:09:46,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.34375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:46,188:INFO:Checking exceptions
2023-06-16 17:09:46,191:INFO:Importing libraries
2023-06-16 17:09:46,191:INFO:Copying training dataset
2023-06-16 17:09:46,207:INFO:Defining folds
2023-06-16 17:09:46,208:INFO:Declaring metric variables
2023-06-16 17:09:46,208:INFO:Importing untrained model
2023-06-16 17:09:46,208:INFO:Declaring custom model
2023-06-16 17:09:46,210:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:46,212:INFO:Starting cross validation
2023-06-16 17:09:46,214:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:50,913:INFO:Calculating mean and std
2023-06-16 17:09:50,913:INFO:Creating metrics dataframe
2023-06-16 17:09:50,916:INFO:Finalizing model
2023-06-16 17:09:52,314:INFO:Uploading results into container
2023-06-16 17:09:52,314:INFO:Uploading model into container now
2023-06-16 17:09:52,315:INFO:_master_model_container: 27
2023-06-16 17:09:52,315:INFO:_display_container: 11
2023-06-16 17:09:52,317:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.34375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:52,317:INFO:create_model() successfully completed......................................
2023-06-16 17:09:52,389:INFO:Initializing create_model()
2023-06-16 17:09:52,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.46875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:52,390:INFO:Checking exceptions
2023-06-16 17:09:52,391:INFO:Importing libraries
2023-06-16 17:09:52,391:INFO:Copying training dataset
2023-06-16 17:09:52,407:INFO:Defining folds
2023-06-16 17:09:52,407:INFO:Declaring metric variables
2023-06-16 17:09:52,407:INFO:Importing untrained model
2023-06-16 17:09:52,407:INFO:Declaring custom model
2023-06-16 17:09:52,408:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:52,409:INFO:Starting cross validation
2023-06-16 17:09:52,412:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:56,800:INFO:Calculating mean and std
2023-06-16 17:09:56,801:INFO:Creating metrics dataframe
2023-06-16 17:09:56,804:INFO:Finalizing model
2023-06-16 17:09:58,233:INFO:Uploading results into container
2023-06-16 17:09:58,234:INFO:Uploading model into container now
2023-06-16 17:09:58,234:INFO:_master_model_container: 28
2023-06-16 17:09:58,234:INFO:_display_container: 11
2023-06-16 17:09:58,236:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.46875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:58,236:INFO:create_model() successfully completed......................................
2023-06-16 17:09:58,329:INFO:Initializing create_model()
2023-06-16 17:09:58,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.96875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:58,329:INFO:Checking exceptions
2023-06-16 17:09:58,332:INFO:Importing libraries
2023-06-16 17:09:58,333:INFO:Copying training dataset
2023-06-16 17:09:58,350:INFO:Defining folds
2023-06-16 17:09:58,350:INFO:Declaring metric variables
2023-06-16 17:09:58,351:INFO:Importing untrained model
2023-06-16 17:09:58,351:INFO:Declaring custom model
2023-06-16 17:09:58,351:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:58,352:INFO:Starting cross validation
2023-06-16 17:09:58,354:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:00,843:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:00,844:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:00,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:01,036:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:03,266:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:03,273:INFO:Calculating mean and std
2023-06-16 17:10:03,274:INFO:Creating metrics dataframe
2023-06-16 17:10:03,277:INFO:Finalizing model
2023-06-16 17:10:04,694:INFO:Uploading results into container
2023-06-16 17:10:04,695:INFO:Uploading model into container now
2023-06-16 17:10:04,695:INFO:_master_model_container: 29
2023-06-16 17:10:04,695:INFO:_display_container: 11
2023-06-16 17:10:04,697:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.96875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:04,697:INFO:create_model() successfully completed......................................
2023-06-16 17:10:04,813:INFO:Initializing create_model()
2023-06-16 17:10:04,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.71875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:04,813:INFO:Checking exceptions
2023-06-16 17:10:04,815:INFO:Importing libraries
2023-06-16 17:10:04,815:INFO:Copying training dataset
2023-06-16 17:10:04,830:INFO:Defining folds
2023-06-16 17:10:04,830:INFO:Declaring metric variables
2023-06-16 17:10:04,831:INFO:Importing untrained model
2023-06-16 17:10:04,831:INFO:Declaring custom model
2023-06-16 17:10:04,832:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:04,832:INFO:Starting cross validation
2023-06-16 17:10:04,834:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:08,783:INFO:Calculating mean and std
2023-06-16 17:10:08,783:INFO:Creating metrics dataframe
2023-06-16 17:10:08,794:INFO:Finalizing model
2023-06-16 17:10:10,543:INFO:Uploading results into container
2023-06-16 17:10:10,543:INFO:Uploading model into container now
2023-06-16 17:10:10,544:INFO:_master_model_container: 30
2023-06-16 17:10:10,544:INFO:_display_container: 11
2023-06-16 17:10:10,547:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.71875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:10,547:INFO:create_model() successfully completed......................................
2023-06-16 17:10:10,628:INFO:Initializing create_model()
2023-06-16 17:10:10,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.21875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:10,629:INFO:Checking exceptions
2023-06-16 17:10:10,631:INFO:Importing libraries
2023-06-16 17:10:10,631:INFO:Copying training dataset
2023-06-16 17:10:10,648:INFO:Defining folds
2023-06-16 17:10:10,648:INFO:Declaring metric variables
2023-06-16 17:10:10,648:INFO:Importing untrained model
2023-06-16 17:10:10,648:INFO:Declaring custom model
2023-06-16 17:10:10,649:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:10,650:INFO:Starting cross validation
2023-06-16 17:10:10,652:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:14,469:INFO:Calculating mean and std
2023-06-16 17:10:14,469:INFO:Creating metrics dataframe
2023-06-16 17:10:14,473:INFO:Finalizing model
2023-06-16 17:10:15,953:INFO:Uploading results into container
2023-06-16 17:10:15,953:INFO:Uploading model into container now
2023-06-16 17:10:15,954:INFO:_master_model_container: 31
2023-06-16 17:10:15,954:INFO:_display_container: 11
2023-06-16 17:10:15,955:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.21875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:15,955:INFO:create_model() successfully completed......................................
2023-06-16 17:10:16,034:INFO:Initializing create_model()
2023-06-16 17:10:16,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.15625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:16,035:INFO:Checking exceptions
2023-06-16 17:10:16,036:INFO:Importing libraries
2023-06-16 17:10:16,036:INFO:Copying training dataset
2023-06-16 17:10:16,051:INFO:Defining folds
2023-06-16 17:10:16,051:INFO:Declaring metric variables
2023-06-16 17:10:16,052:INFO:Importing untrained model
2023-06-16 17:10:16,052:INFO:Declaring custom model
2023-06-16 17:10:16,052:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:16,054:INFO:Starting cross validation
2023-06-16 17:10:16,055:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:19,792:INFO:Calculating mean and std
2023-06-16 17:10:19,792:INFO:Creating metrics dataframe
2023-06-16 17:10:19,795:INFO:Finalizing model
2023-06-16 17:10:21,067:INFO:Uploading results into container
2023-06-16 17:10:21,068:INFO:Uploading model into container now
2023-06-16 17:10:21,069:INFO:_master_model_container: 32
2023-06-16 17:10:21,069:INFO:_display_container: 11
2023-06-16 17:10:21,070:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.15625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:21,071:INFO:create_model() successfully completed......................................
2023-06-16 17:10:21,142:INFO:Initializing create_model()
2023-06-16 17:10:21,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.65625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:21,142:INFO:Checking exceptions
2023-06-16 17:10:21,145:INFO:Importing libraries
2023-06-16 17:10:21,145:INFO:Copying training dataset
2023-06-16 17:10:21,158:INFO:Defining folds
2023-06-16 17:10:21,158:INFO:Declaring metric variables
2023-06-16 17:10:21,159:INFO:Importing untrained model
2023-06-16 17:10:21,159:INFO:Declaring custom model
2023-06-16 17:10:21,159:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:21,159:INFO:Starting cross validation
2023-06-16 17:10:21,162:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:25,346:INFO:Calculating mean and std
2023-06-16 17:10:25,346:INFO:Creating metrics dataframe
2023-06-16 17:10:25,350:INFO:Finalizing model
2023-06-16 17:10:26,721:INFO:Uploading results into container
2023-06-16 17:10:26,722:INFO:Uploading model into container now
2023-06-16 17:10:26,722:INFO:_master_model_container: 33
2023-06-16 17:10:26,722:INFO:_display_container: 11
2023-06-16 17:10:26,725:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.65625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:26,725:INFO:create_model() successfully completed......................................
2023-06-16 17:10:26,796:INFO:Initializing create_model()
2023-06-16 17:10:26,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.90625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:26,796:INFO:Checking exceptions
2023-06-16 17:10:26,798:INFO:Importing libraries
2023-06-16 17:10:26,798:INFO:Copying training dataset
2023-06-16 17:10:26,813:INFO:Defining folds
2023-06-16 17:10:26,813:INFO:Declaring metric variables
2023-06-16 17:10:26,813:INFO:Importing untrained model
2023-06-16 17:10:26,814:INFO:Declaring custom model
2023-06-16 17:10:26,814:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:26,815:INFO:Starting cross validation
2023-06-16 17:10:26,817:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:30,680:INFO:Calculating mean and std
2023-06-16 17:10:30,681:INFO:Creating metrics dataframe
2023-06-16 17:10:30,685:INFO:Finalizing model
2023-06-16 17:10:32,143:INFO:Uploading results into container
2023-06-16 17:10:32,143:INFO:Uploading model into container now
2023-06-16 17:10:32,144:INFO:_master_model_container: 34
2023-06-16 17:10:32,144:INFO:_display_container: 11
2023-06-16 17:10:32,146:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.90625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:32,146:INFO:create_model() successfully completed......................................
2023-06-16 17:10:32,229:INFO:Initializing create_model()
2023-06-16 17:10:32,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.40625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:32,229:INFO:Checking exceptions
2023-06-16 17:10:32,233:INFO:Importing libraries
2023-06-16 17:10:32,233:INFO:Copying training dataset
2023-06-16 17:10:32,247:INFO:Defining folds
2023-06-16 17:10:32,247:INFO:Declaring metric variables
2023-06-16 17:10:32,248:INFO:Importing untrained model
2023-06-16 17:10:32,248:INFO:Declaring custom model
2023-06-16 17:10:32,250:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:32,251:INFO:Starting cross validation
2023-06-16 17:10:32,254:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:36,039:INFO:Calculating mean and std
2023-06-16 17:10:36,039:INFO:Creating metrics dataframe
2023-06-16 17:10:36,042:INFO:Finalizing model
2023-06-16 17:10:37,482:INFO:Uploading results into container
2023-06-16 17:10:37,482:INFO:Uploading model into container now
2023-06-16 17:10:37,482:INFO:_master_model_container: 35
2023-06-16 17:10:37,483:INFO:_display_container: 11
2023-06-16 17:10:37,484:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.40625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:37,484:INFO:create_model() successfully completed......................................
2023-06-16 17:10:37,560:INFO:Initializing create_model()
2023-06-16 17:10:37,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.28125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:37,560:INFO:Checking exceptions
2023-06-16 17:10:37,563:INFO:Importing libraries
2023-06-16 17:10:37,563:INFO:Copying training dataset
2023-06-16 17:10:37,577:INFO:Defining folds
2023-06-16 17:10:37,577:INFO:Declaring metric variables
2023-06-16 17:10:37,579:INFO:Importing untrained model
2023-06-16 17:10:37,579:INFO:Declaring custom model
2023-06-16 17:10:37,579:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:37,581:INFO:Starting cross validation
2023-06-16 17:10:37,582:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:42,757:INFO:Calculating mean and std
2023-06-16 17:10:42,758:INFO:Creating metrics dataframe
2023-06-16 17:10:42,762:INFO:Finalizing model
2023-06-16 17:10:44,290:INFO:Uploading results into container
2023-06-16 17:10:44,291:INFO:Uploading model into container now
2023-06-16 17:10:44,291:INFO:_master_model_container: 36
2023-06-16 17:10:44,291:INFO:_display_container: 11
2023-06-16 17:10:44,293:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.28125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:44,293:INFO:create_model() successfully completed......................................
2023-06-16 17:10:44,368:INFO:Initializing create_model()
2023-06-16 17:10:44,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.78125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:44,368:INFO:Checking exceptions
2023-06-16 17:10:44,370:INFO:Importing libraries
2023-06-16 17:10:44,370:INFO:Copying training dataset
2023-06-16 17:10:44,386:INFO:Defining folds
2023-06-16 17:10:44,387:INFO:Declaring metric variables
2023-06-16 17:10:44,387:INFO:Importing untrained model
2023-06-16 17:10:44,387:INFO:Declaring custom model
2023-06-16 17:10:44,388:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:44,388:INFO:Starting cross validation
2023-06-16 17:10:44,390:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:48,447:INFO:Calculating mean and std
2023-06-16 17:10:48,447:INFO:Creating metrics dataframe
2023-06-16 17:10:48,450:INFO:Finalizing model
2023-06-16 17:10:49,833:INFO:Uploading results into container
2023-06-16 17:10:49,834:INFO:Uploading model into container now
2023-06-16 17:10:49,834:INFO:_master_model_container: 37
2023-06-16 17:10:49,834:INFO:_display_container: 11
2023-06-16 17:10:49,836:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.78125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:49,836:INFO:create_model() successfully completed......................................
2023-06-16 17:10:49,910:INFO:Initializing create_model()
2023-06-16 17:10:49,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.53125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:49,910:INFO:Checking exceptions
2023-06-16 17:10:49,912:INFO:Importing libraries
2023-06-16 17:10:49,913:INFO:Copying training dataset
2023-06-16 17:10:49,937:INFO:Defining folds
2023-06-16 17:10:49,937:INFO:Declaring metric variables
2023-06-16 17:10:49,937:INFO:Importing untrained model
2023-06-16 17:10:49,937:INFO:Declaring custom model
2023-06-16 17:10:49,940:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:49,941:INFO:Starting cross validation
2023-06-16 17:10:49,943:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:55,090:INFO:Calculating mean and std
2023-06-16 17:10:55,090:INFO:Creating metrics dataframe
2023-06-16 17:10:55,093:INFO:Finalizing model
2023-06-16 17:10:56,602:INFO:Uploading results into container
2023-06-16 17:10:56,603:INFO:Uploading model into container now
2023-06-16 17:10:56,603:INFO:_master_model_container: 38
2023-06-16 17:10:56,603:INFO:_display_container: 11
2023-06-16 17:10:56,605:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.53125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:56,605:INFO:create_model() successfully completed......................................
2023-06-16 17:10:56,677:INFO:Initializing create_model()
2023-06-16 17:10:56,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.03125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:56,677:INFO:Checking exceptions
2023-06-16 17:10:56,679:INFO:Importing libraries
2023-06-16 17:10:56,679:INFO:Copying training dataset
2023-06-16 17:10:56,692:INFO:Defining folds
2023-06-16 17:10:56,692:INFO:Declaring metric variables
2023-06-16 17:10:56,693:INFO:Importing untrained model
2023-06-16 17:10:56,693:INFO:Declaring custom model
2023-06-16 17:10:56,694:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:56,694:INFO:Starting cross validation
2023-06-16 17:10:56,696:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:00,870:INFO:Calculating mean and std
2023-06-16 17:11:00,870:INFO:Creating metrics dataframe
2023-06-16 17:11:00,873:INFO:Finalizing model
2023-06-16 17:11:02,280:INFO:Uploading results into container
2023-06-16 17:11:02,280:INFO:Uploading model into container now
2023-06-16 17:11:02,281:INFO:_master_model_container: 39
2023-06-16 17:11:02,281:INFO:_display_container: 11
2023-06-16 17:11:02,282:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.03125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:02,283:INFO:create_model() successfully completed......................................
2023-06-16 17:11:02,378:INFO:Initializing create_model()
2023-06-16 17:11:02,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.046875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:02,379:INFO:Checking exceptions
2023-06-16 17:11:02,384:INFO:Importing libraries
2023-06-16 17:11:02,384:INFO:Copying training dataset
2023-06-16 17:11:02,406:INFO:Defining folds
2023-06-16 17:11:02,406:INFO:Declaring metric variables
2023-06-16 17:11:02,407:INFO:Importing untrained model
2023-06-16 17:11:02,407:INFO:Declaring custom model
2023-06-16 17:11:02,409:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:02,410:INFO:Starting cross validation
2023-06-16 17:11:02,412:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:06,177:INFO:Calculating mean and std
2023-06-16 17:11:06,177:INFO:Creating metrics dataframe
2023-06-16 17:11:06,180:INFO:Finalizing model
2023-06-16 17:11:07,519:INFO:Uploading results into container
2023-06-16 17:11:07,519:INFO:Uploading model into container now
2023-06-16 17:11:07,520:INFO:_master_model_container: 40
2023-06-16 17:11:07,520:INFO:_display_container: 11
2023-06-16 17:11:07,521:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.046875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:07,521:INFO:create_model() successfully completed......................................
2023-06-16 17:11:07,592:INFO:Initializing create_model()
2023-06-16 17:11:07,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.546875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:07,592:INFO:Checking exceptions
2023-06-16 17:11:07,594:INFO:Importing libraries
2023-06-16 17:11:07,594:INFO:Copying training dataset
2023-06-16 17:11:07,608:INFO:Defining folds
2023-06-16 17:11:07,608:INFO:Declaring metric variables
2023-06-16 17:11:07,608:INFO:Importing untrained model
2023-06-16 17:11:07,608:INFO:Declaring custom model
2023-06-16 17:11:07,609:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:07,610:INFO:Starting cross validation
2023-06-16 17:11:07,612:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:11,273:INFO:Calculating mean and std
2023-06-16 17:11:11,273:INFO:Creating metrics dataframe
2023-06-16 17:11:11,277:INFO:Finalizing model
2023-06-16 17:11:12,555:INFO:Uploading results into container
2023-06-16 17:11:12,556:INFO:Uploading model into container now
2023-06-16 17:11:12,557:INFO:_master_model_container: 41
2023-06-16 17:11:12,557:INFO:_display_container: 11
2023-06-16 17:11:12,558:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.546875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:12,558:INFO:create_model() successfully completed......................................
2023-06-16 17:11:12,627:INFO:Initializing create_model()
2023-06-16 17:11:12,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.796875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:12,627:INFO:Checking exceptions
2023-06-16 17:11:12,629:INFO:Importing libraries
2023-06-16 17:11:12,629:INFO:Copying training dataset
2023-06-16 17:11:12,642:INFO:Defining folds
2023-06-16 17:11:12,642:INFO:Declaring metric variables
2023-06-16 17:11:12,642:INFO:Importing untrained model
2023-06-16 17:11:12,642:INFO:Declaring custom model
2023-06-16 17:11:12,643:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:12,644:INFO:Starting cross validation
2023-06-16 17:11:12,645:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:16,509:INFO:Calculating mean and std
2023-06-16 17:11:16,510:INFO:Creating metrics dataframe
2023-06-16 17:11:16,513:INFO:Finalizing model
2023-06-16 17:11:17,952:INFO:Uploading results into container
2023-06-16 17:11:17,952:INFO:Uploading model into container now
2023-06-16 17:11:17,952:INFO:_master_model_container: 42
2023-06-16 17:11:17,953:INFO:_display_container: 11
2023-06-16 17:11:17,954:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.796875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:17,954:INFO:create_model() successfully completed......................................
2023-06-16 17:11:18,023:INFO:Initializing create_model()
2023-06-16 17:11:18,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.296875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:18,023:INFO:Checking exceptions
2023-06-16 17:11:18,026:INFO:Importing libraries
2023-06-16 17:11:18,026:INFO:Copying training dataset
2023-06-16 17:11:18,041:INFO:Defining folds
2023-06-16 17:11:18,041:INFO:Declaring metric variables
2023-06-16 17:11:18,042:INFO:Importing untrained model
2023-06-16 17:11:18,042:INFO:Declaring custom model
2023-06-16 17:11:18,042:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:18,043:INFO:Starting cross validation
2023-06-16 17:11:18,045:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:21,670:INFO:Calculating mean and std
2023-06-16 17:11:21,670:INFO:Creating metrics dataframe
2023-06-16 17:11:21,673:INFO:Finalizing model
2023-06-16 17:11:23,033:INFO:Uploading results into container
2023-06-16 17:11:23,033:INFO:Uploading model into container now
2023-06-16 17:11:23,034:INFO:_master_model_container: 43
2023-06-16 17:11:23,034:INFO:_display_container: 11
2023-06-16 17:11:23,036:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.296875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:23,036:INFO:create_model() successfully completed......................................
2023-06-16 17:11:23,113:INFO:Initializing create_model()
2023-06-16 17:11:23,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.421875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:23,113:INFO:Checking exceptions
2023-06-16 17:11:23,115:INFO:Importing libraries
2023-06-16 17:11:23,115:INFO:Copying training dataset
2023-06-16 17:11:23,130:INFO:Defining folds
2023-06-16 17:11:23,130:INFO:Declaring metric variables
2023-06-16 17:11:23,130:INFO:Importing untrained model
2023-06-16 17:11:23,130:INFO:Declaring custom model
2023-06-16 17:11:23,132:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:23,133:INFO:Starting cross validation
2023-06-16 17:11:23,135:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:27,135:INFO:Calculating mean and std
2023-06-16 17:11:27,136:INFO:Creating metrics dataframe
2023-06-16 17:11:27,138:INFO:Finalizing model
2023-06-16 17:11:28,401:INFO:Uploading results into container
2023-06-16 17:11:28,402:INFO:Uploading model into container now
2023-06-16 17:11:28,402:INFO:_master_model_container: 44
2023-06-16 17:11:28,402:INFO:_display_container: 11
2023-06-16 17:11:28,404:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.421875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:28,404:INFO:create_model() successfully completed......................................
2023-06-16 17:11:28,476:INFO:Initializing create_model()
2023-06-16 17:11:28,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.921875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:28,476:INFO:Checking exceptions
2023-06-16 17:11:28,478:INFO:Importing libraries
2023-06-16 17:11:28,478:INFO:Copying training dataset
2023-06-16 17:11:28,490:INFO:Defining folds
2023-06-16 17:11:28,491:INFO:Declaring metric variables
2023-06-16 17:11:28,491:INFO:Importing untrained model
2023-06-16 17:11:28,491:INFO:Declaring custom model
2023-06-16 17:11:28,493:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:28,493:INFO:Starting cross validation
2023-06-16 17:11:28,495:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:32,567:INFO:Calculating mean and std
2023-06-16 17:11:32,568:INFO:Creating metrics dataframe
2023-06-16 17:11:32,570:INFO:Finalizing model
2023-06-16 17:11:34,106:INFO:Uploading results into container
2023-06-16 17:11:34,107:INFO:Uploading model into container now
2023-06-16 17:11:34,107:INFO:_master_model_container: 45
2023-06-16 17:11:34,107:INFO:_display_container: 11
2023-06-16 17:11:34,109:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.921875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:34,109:INFO:create_model() successfully completed......................................
2023-06-16 17:11:34,180:INFO:Initializing create_model()
2023-06-16 17:11:34,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.671875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:34,180:INFO:Checking exceptions
2023-06-16 17:11:34,182:INFO:Importing libraries
2023-06-16 17:11:34,182:INFO:Copying training dataset
2023-06-16 17:11:34,196:INFO:Defining folds
2023-06-16 17:11:34,196:INFO:Declaring metric variables
2023-06-16 17:11:34,196:INFO:Importing untrained model
2023-06-16 17:11:34,196:INFO:Declaring custom model
2023-06-16 17:11:34,197:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:34,198:INFO:Starting cross validation
2023-06-16 17:11:34,200:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:38,563:INFO:Calculating mean and std
2023-06-16 17:11:38,564:INFO:Creating metrics dataframe
2023-06-16 17:11:38,567:INFO:Finalizing model
2023-06-16 17:11:40,098:INFO:Uploading results into container
2023-06-16 17:11:40,099:INFO:Uploading model into container now
2023-06-16 17:11:40,099:INFO:_master_model_container: 46
2023-06-16 17:11:40,100:INFO:_display_container: 11
2023-06-16 17:11:40,101:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.671875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:40,101:INFO:create_model() successfully completed......................................
2023-06-16 17:11:40,192:INFO:Initializing create_model()
2023-06-16 17:11:40,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.171875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:40,192:INFO:Checking exceptions
2023-06-16 17:11:40,195:INFO:Importing libraries
2023-06-16 17:11:40,195:INFO:Copying training dataset
2023-06-16 17:11:40,212:INFO:Defining folds
2023-06-16 17:11:40,213:INFO:Declaring metric variables
2023-06-16 17:11:40,213:INFO:Importing untrained model
2023-06-16 17:11:40,213:INFO:Declaring custom model
2023-06-16 17:11:40,216:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:40,217:INFO:Starting cross validation
2023-06-16 17:11:40,219:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:45,014:INFO:Calculating mean and std
2023-06-16 17:11:45,015:INFO:Creating metrics dataframe
2023-06-16 17:11:45,018:INFO:Finalizing model
2023-06-16 17:11:46,557:INFO:Uploading results into container
2023-06-16 17:11:46,558:INFO:Uploading model into container now
2023-06-16 17:11:46,558:INFO:_master_model_container: 47
2023-06-16 17:11:46,558:INFO:_display_container: 11
2023-06-16 17:11:46,560:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.171875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:46,560:INFO:create_model() successfully completed......................................
2023-06-16 17:11:46,644:INFO:Initializing create_model()
2023-06-16 17:11:46,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:46,644:INFO:Checking exceptions
2023-06-16 17:11:46,646:INFO:Importing libraries
2023-06-16 17:11:46,646:INFO:Copying training dataset
2023-06-16 17:11:46,661:INFO:Defining folds
2023-06-16 17:11:46,661:INFO:Declaring metric variables
2023-06-16 17:11:46,661:INFO:Importing untrained model
2023-06-16 17:11:46,661:INFO:Declaring custom model
2023-06-16 17:11:46,662:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:46,663:INFO:Starting cross validation
2023-06-16 17:11:46,665:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:50,819:INFO:Calculating mean and std
2023-06-16 17:11:50,819:INFO:Creating metrics dataframe
2023-06-16 17:11:50,822:INFO:Finalizing model
2023-06-16 17:11:52,225:INFO:Uploading results into container
2023-06-16 17:11:52,225:INFO:Uploading model into container now
2023-06-16 17:11:52,225:INFO:_master_model_container: 48
2023-06-16 17:11:52,226:INFO:_display_container: 11
2023-06-16 17:11:52,227:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.234375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:52,227:INFO:create_model() successfully completed......................................
2023-06-16 17:11:52,304:INFO:Initializing create_model()
2023-06-16 17:11:52,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:52,304:INFO:Checking exceptions
2023-06-16 17:11:52,306:INFO:Importing libraries
2023-06-16 17:11:52,306:INFO:Copying training dataset
2023-06-16 17:11:52,321:INFO:Defining folds
2023-06-16 17:11:52,321:INFO:Declaring metric variables
2023-06-16 17:11:52,321:INFO:Importing untrained model
2023-06-16 17:11:52,322:INFO:Declaring custom model
2023-06-16 17:11:52,322:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:52,325:INFO:Starting cross validation
2023-06-16 17:11:52,326:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:56,758:INFO:Calculating mean and std
2023-06-16 17:11:56,759:INFO:Creating metrics dataframe
2023-06-16 17:11:56,761:INFO:Finalizing model
2023-06-16 17:11:58,130:INFO:Uploading results into container
2023-06-16 17:11:58,130:INFO:Uploading model into container now
2023-06-16 17:11:58,131:INFO:_master_model_container: 49
2023-06-16 17:11:58,131:INFO:_display_container: 11
2023-06-16 17:11:58,132:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.734375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:58,132:INFO:create_model() successfully completed......................................
2023-06-16 17:11:58,205:INFO:Initializing create_model()
2023-06-16 17:11:58,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.984375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:58,205:INFO:Checking exceptions
2023-06-16 17:11:58,207:INFO:Importing libraries
2023-06-16 17:11:58,207:INFO:Copying training dataset
2023-06-16 17:11:58,221:INFO:Defining folds
2023-06-16 17:11:58,221:INFO:Declaring metric variables
2023-06-16 17:11:58,222:INFO:Importing untrained model
2023-06-16 17:11:58,222:INFO:Declaring custom model
2023-06-16 17:11:58,222:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:58,223:INFO:Starting cross validation
2023-06-16 17:11:58,225:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:59,883:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:11:59,913:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:11:59,932:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:11:59,968:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:12:02,253:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:12:02,299:INFO:Calculating mean and std
2023-06-16 17:12:02,299:INFO:Creating metrics dataframe
2023-06-16 17:12:02,302:INFO:Finalizing model
2023-06-16 17:12:03,961:INFO:Uploading results into container
2023-06-16 17:12:03,962:INFO:Uploading model into container now
2023-06-16 17:12:03,962:INFO:_master_model_container: 50
2023-06-16 17:12:03,962:INFO:_display_container: 11
2023-06-16 17:12:03,963:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.984375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:03,964:INFO:create_model() successfully completed......................................
2023-06-16 17:12:04,037:INFO:Initializing create_model()
2023-06-16 17:12:04,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.484375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:04,037:INFO:Checking exceptions
2023-06-16 17:12:04,038:INFO:Importing libraries
2023-06-16 17:12:04,038:INFO:Copying training dataset
2023-06-16 17:12:04,052:INFO:Defining folds
2023-06-16 17:12:04,052:INFO:Declaring metric variables
2023-06-16 17:12:04,053:INFO:Importing untrained model
2023-06-16 17:12:04,053:INFO:Declaring custom model
2023-06-16 17:12:04,054:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:04,054:INFO:Starting cross validation
2023-06-16 17:12:04,056:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:08,080:INFO:Calculating mean and std
2023-06-16 17:12:08,081:INFO:Creating metrics dataframe
2023-06-16 17:12:08,083:INFO:Finalizing model
2023-06-16 17:12:09,757:INFO:Uploading results into container
2023-06-16 17:12:09,757:INFO:Uploading model into container now
2023-06-16 17:12:09,758:INFO:_master_model_container: 51
2023-06-16 17:12:09,758:INFO:_display_container: 11
2023-06-16 17:12:09,759:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.484375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:09,759:INFO:create_model() successfully completed......................................
2023-06-16 17:12:09,831:INFO:Initializing create_model()
2023-06-16 17:12:09,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.359375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:09,831:INFO:Checking exceptions
2023-06-16 17:12:09,834:INFO:Importing libraries
2023-06-16 17:12:09,834:INFO:Copying training dataset
2023-06-16 17:12:09,848:INFO:Defining folds
2023-06-16 17:12:09,848:INFO:Declaring metric variables
2023-06-16 17:12:09,849:INFO:Importing untrained model
2023-06-16 17:12:09,849:INFO:Declaring custom model
2023-06-16 17:12:09,850:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:09,850:INFO:Starting cross validation
2023-06-16 17:12:09,852:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:14,122:INFO:Calculating mean and std
2023-06-16 17:12:14,123:INFO:Creating metrics dataframe
2023-06-16 17:12:14,126:INFO:Finalizing model
2023-06-16 17:12:15,563:INFO:Uploading results into container
2023-06-16 17:12:15,564:INFO:Uploading model into container now
2023-06-16 17:12:15,564:INFO:_master_model_container: 52
2023-06-16 17:12:15,564:INFO:_display_container: 11
2023-06-16 17:12:15,566:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.359375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:15,566:INFO:create_model() successfully completed......................................
2023-06-16 17:12:15,647:INFO:Initializing create_model()
2023-06-16 17:12:15,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.859375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:15,648:INFO:Checking exceptions
2023-06-16 17:12:15,650:INFO:Importing libraries
2023-06-16 17:12:15,651:INFO:Copying training dataset
2023-06-16 17:12:15,665:INFO:Defining folds
2023-06-16 17:12:15,665:INFO:Declaring metric variables
2023-06-16 17:12:15,666:INFO:Importing untrained model
2023-06-16 17:12:15,666:INFO:Declaring custom model
2023-06-16 17:12:15,667:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:15,667:INFO:Starting cross validation
2023-06-16 17:12:15,669:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:19,840:INFO:Calculating mean and std
2023-06-16 17:12:19,840:INFO:Creating metrics dataframe
2023-06-16 17:12:19,843:INFO:Finalizing model
2023-06-16 17:12:21,257:INFO:Uploading results into container
2023-06-16 17:12:21,257:INFO:Uploading model into container now
2023-06-16 17:12:21,258:INFO:_master_model_container: 53
2023-06-16 17:12:21,258:INFO:_display_container: 11
2023-06-16 17:12:21,259:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.859375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:21,259:INFO:create_model() successfully completed......................................
2023-06-16 17:12:21,332:INFO:Initializing create_model()
2023-06-16 17:12:21,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.609375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:21,332:INFO:Checking exceptions
2023-06-16 17:12:21,334:INFO:Importing libraries
2023-06-16 17:12:21,334:INFO:Copying training dataset
2023-06-16 17:12:21,348:INFO:Defining folds
2023-06-16 17:12:21,348:INFO:Declaring metric variables
2023-06-16 17:12:21,348:INFO:Importing untrained model
2023-06-16 17:12:21,349:INFO:Declaring custom model
2023-06-16 17:12:21,349:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:21,350:INFO:Starting cross validation
2023-06-16 17:12:21,352:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:25,753:INFO:Calculating mean and std
2023-06-16 17:12:25,754:INFO:Creating metrics dataframe
2023-06-16 17:12:25,757:INFO:Finalizing model
2023-06-16 17:12:27,186:INFO:Uploading results into container
2023-06-16 17:12:27,186:INFO:Uploading model into container now
2023-06-16 17:12:27,187:INFO:_master_model_container: 54
2023-06-16 17:12:27,187:INFO:_display_container: 11
2023-06-16 17:12:27,188:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.609375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:27,188:INFO:create_model() successfully completed......................................
2023-06-16 17:12:27,260:INFO:Initializing create_model()
2023-06-16 17:12:27,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.109375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:27,260:INFO:Checking exceptions
2023-06-16 17:12:27,262:INFO:Importing libraries
2023-06-16 17:12:27,262:INFO:Copying training dataset
2023-06-16 17:12:27,277:INFO:Defining folds
2023-06-16 17:12:27,278:INFO:Declaring metric variables
2023-06-16 17:12:27,278:INFO:Importing untrained model
2023-06-16 17:12:27,278:INFO:Declaring custom model
2023-06-16 17:12:27,279:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:27,279:INFO:Starting cross validation
2023-06-16 17:12:27,281:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:31,759:INFO:Calculating mean and std
2023-06-16 17:12:31,760:INFO:Creating metrics dataframe
2023-06-16 17:12:31,762:INFO:Finalizing model
2023-06-16 17:12:33,353:INFO:Uploading results into container
2023-06-16 17:12:33,353:INFO:Uploading model into container now
2023-06-16 17:12:33,354:INFO:_master_model_container: 55
2023-06-16 17:12:33,354:INFO:_display_container: 11
2023-06-16 17:12:33,356:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.109375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:33,356:INFO:create_model() successfully completed......................................
2023-06-16 17:12:33,433:INFO:Initializing create_model()
2023-06-16 17:12:33,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.078125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:33,434:INFO:Checking exceptions
2023-06-16 17:12:33,435:INFO:Importing libraries
2023-06-16 17:12:33,435:INFO:Copying training dataset
2023-06-16 17:12:33,449:INFO:Defining folds
2023-06-16 17:12:33,449:INFO:Declaring metric variables
2023-06-16 17:12:33,450:INFO:Importing untrained model
2023-06-16 17:12:33,450:INFO:Declaring custom model
2023-06-16 17:12:33,452:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:33,452:INFO:Starting cross validation
2023-06-16 17:12:33,454:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:37,753:INFO:Calculating mean and std
2023-06-16 17:12:37,754:INFO:Creating metrics dataframe
2023-06-16 17:12:37,757:INFO:Finalizing model
2023-06-16 17:12:39,726:INFO:Uploading results into container
2023-06-16 17:12:39,727:INFO:Uploading model into container now
2023-06-16 17:12:39,727:INFO:_master_model_container: 56
2023-06-16 17:12:39,728:INFO:_display_container: 11
2023-06-16 17:12:39,730:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.078125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:39,730:INFO:create_model() successfully completed......................................
2023-06-16 17:12:39,821:INFO:Initializing create_model()
2023-06-16 17:12:39,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.578125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:39,821:INFO:Checking exceptions
2023-06-16 17:12:39,826:INFO:Importing libraries
2023-06-16 17:12:39,826:INFO:Copying training dataset
2023-06-16 17:12:39,843:INFO:Defining folds
2023-06-16 17:12:39,843:INFO:Declaring metric variables
2023-06-16 17:12:39,843:INFO:Importing untrained model
2023-06-16 17:12:39,843:INFO:Declaring custom model
2023-06-16 17:12:39,845:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:39,845:INFO:Starting cross validation
2023-06-16 17:12:39,847:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:44,440:INFO:Calculating mean and std
2023-06-16 17:12:44,441:INFO:Creating metrics dataframe
2023-06-16 17:12:44,444:INFO:Finalizing model
2023-06-16 17:12:46,232:INFO:Uploading results into container
2023-06-16 17:12:46,232:INFO:Uploading model into container now
2023-06-16 17:12:46,233:INFO:_master_model_container: 57
2023-06-16 17:12:46,233:INFO:_display_container: 11
2023-06-16 17:12:46,234:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.578125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:46,234:INFO:create_model() successfully completed......................................
2023-06-16 17:12:46,315:INFO:Initializing create_model()
2023-06-16 17:12:46,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.828125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:46,316:INFO:Checking exceptions
2023-06-16 17:12:46,318:INFO:Importing libraries
2023-06-16 17:12:46,318:INFO:Copying training dataset
2023-06-16 17:12:46,332:INFO:Defining folds
2023-06-16 17:12:46,332:INFO:Declaring metric variables
2023-06-16 17:12:46,333:INFO:Importing untrained model
2023-06-16 17:12:46,333:INFO:Declaring custom model
2023-06-16 17:12:46,334:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:46,335:INFO:Starting cross validation
2023-06-16 17:12:46,336:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:51,265:INFO:Calculating mean and std
2023-06-16 17:12:51,266:INFO:Creating metrics dataframe
2023-06-16 17:12:51,270:INFO:Finalizing model
2023-06-16 17:12:52,815:INFO:Uploading results into container
2023-06-16 17:12:52,815:INFO:Uploading model into container now
2023-06-16 17:12:52,816:INFO:_master_model_container: 58
2023-06-16 17:12:52,816:INFO:_display_container: 11
2023-06-16 17:12:52,818:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.828125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:52,818:INFO:create_model() successfully completed......................................
2023-06-16 17:12:52,926:INFO:Initializing create_model()
2023-06-16 17:12:52,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.328125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:52,927:INFO:Checking exceptions
2023-06-16 17:12:52,931:INFO:Importing libraries
2023-06-16 17:12:52,931:INFO:Copying training dataset
2023-06-16 17:12:52,979:INFO:Defining folds
2023-06-16 17:12:52,980:INFO:Declaring metric variables
2023-06-16 17:12:52,980:INFO:Importing untrained model
2023-06-16 17:12:52,981:INFO:Declaring custom model
2023-06-16 17:12:52,982:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:52,982:INFO:Starting cross validation
2023-06-16 17:12:52,985:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:57,488:INFO:Calculating mean and std
2023-06-16 17:12:57,488:INFO:Creating metrics dataframe
2023-06-16 17:12:57,491:INFO:Finalizing model
2023-06-16 17:12:58,883:INFO:Uploading results into container
2023-06-16 17:12:58,883:INFO:Uploading model into container now
2023-06-16 17:12:58,884:INFO:_master_model_container: 59
2023-06-16 17:12:58,884:INFO:_display_container: 11
2023-06-16 17:12:58,885:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.328125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:58,885:INFO:create_model() successfully completed......................................
2023-06-16 17:12:58,959:INFO:Initializing create_model()
2023-06-16 17:12:58,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.453125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:58,959:INFO:Checking exceptions
2023-06-16 17:12:58,961:INFO:Importing libraries
2023-06-16 17:12:58,961:INFO:Copying training dataset
2023-06-16 17:12:58,977:INFO:Defining folds
2023-06-16 17:12:58,977:INFO:Declaring metric variables
2023-06-16 17:12:58,978:INFO:Importing untrained model
2023-06-16 17:12:58,978:INFO:Declaring custom model
2023-06-16 17:12:58,978:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:58,979:INFO:Starting cross validation
2023-06-16 17:12:58,981:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:03,948:INFO:Calculating mean and std
2023-06-16 17:13:03,950:INFO:Creating metrics dataframe
2023-06-16 17:13:03,954:INFO:Finalizing model
2023-06-16 17:13:05,551:INFO:Uploading results into container
2023-06-16 17:13:05,551:INFO:Uploading model into container now
2023-06-16 17:13:05,552:INFO:_master_model_container: 60
2023-06-16 17:13:05,552:INFO:_display_container: 11
2023-06-16 17:13:05,553:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.453125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:05,553:INFO:create_model() successfully completed......................................
2023-06-16 17:13:05,621:INFO:Initializing create_model()
2023-06-16 17:13:05,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.953125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:05,622:INFO:Checking exceptions
2023-06-16 17:13:05,623:INFO:Importing libraries
2023-06-16 17:13:05,623:INFO:Copying training dataset
2023-06-16 17:13:05,636:INFO:Defining folds
2023-06-16 17:13:05,637:INFO:Declaring metric variables
2023-06-16 17:13:05,637:INFO:Importing untrained model
2023-06-16 17:13:05,637:INFO:Declaring custom model
2023-06-16 17:13:05,638:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:05,638:INFO:Starting cross validation
2023-06-16 17:13:05,640:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:07,515:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:07,533:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:07,538:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:07,678:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:10,407:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:10,617:INFO:Calculating mean and std
2023-06-16 17:13:10,618:INFO:Creating metrics dataframe
2023-06-16 17:13:10,620:INFO:Finalizing model
2023-06-16 17:13:12,073:INFO:Uploading results into container
2023-06-16 17:13:12,074:INFO:Uploading model into container now
2023-06-16 17:13:12,074:INFO:_master_model_container: 61
2023-06-16 17:13:12,074:INFO:_display_container: 11
2023-06-16 17:13:12,077:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.953125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:12,077:INFO:create_model() successfully completed......................................
2023-06-16 17:13:12,157:INFO:Initializing create_model()
2023-06-16 17:13:12,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.703125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:12,157:INFO:Checking exceptions
2023-06-16 17:13:12,159:INFO:Importing libraries
2023-06-16 17:13:12,159:INFO:Copying training dataset
2023-06-16 17:13:12,174:INFO:Defining folds
2023-06-16 17:13:12,174:INFO:Declaring metric variables
2023-06-16 17:13:12,174:INFO:Importing untrained model
2023-06-16 17:13:12,174:INFO:Declaring custom model
2023-06-16 17:13:12,175:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:12,176:INFO:Starting cross validation
2023-06-16 17:13:12,179:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:16,643:INFO:Calculating mean and std
2023-06-16 17:13:16,643:INFO:Creating metrics dataframe
2023-06-16 17:13:16,646:INFO:Finalizing model
2023-06-16 17:13:18,269:INFO:Uploading results into container
2023-06-16 17:13:18,269:INFO:Uploading model into container now
2023-06-16 17:13:18,270:INFO:_master_model_container: 62
2023-06-16 17:13:18,270:INFO:_display_container: 11
2023-06-16 17:13:18,272:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.703125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:18,272:INFO:create_model() successfully completed......................................
2023-06-16 17:13:18,340:INFO:Initializing create_model()
2023-06-16 17:13:18,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.203125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:18,341:INFO:Checking exceptions
2023-06-16 17:13:18,343:INFO:Importing libraries
2023-06-16 17:13:18,343:INFO:Copying training dataset
2023-06-16 17:13:18,356:INFO:Defining folds
2023-06-16 17:13:18,356:INFO:Declaring metric variables
2023-06-16 17:13:18,356:INFO:Importing untrained model
2023-06-16 17:13:18,357:INFO:Declaring custom model
2023-06-16 17:13:18,357:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:18,358:INFO:Starting cross validation
2023-06-16 17:13:18,360:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:22,068:INFO:Calculating mean and std
2023-06-16 17:13:22,068:INFO:Creating metrics dataframe
2023-06-16 17:13:22,071:INFO:Finalizing model
2023-06-16 17:13:23,482:INFO:Uploading results into container
2023-06-16 17:13:23,483:INFO:Uploading model into container now
2023-06-16 17:13:23,483:INFO:_master_model_container: 63
2023-06-16 17:13:23,483:INFO:_display_container: 11
2023-06-16 17:13:23,485:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.203125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:23,486:INFO:create_model() successfully completed......................................
2023-06-16 17:13:23,575:INFO:Initializing create_model()
2023-06-16 17:13:23,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.140625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:23,575:INFO:Checking exceptions
2023-06-16 17:13:23,577:INFO:Importing libraries
2023-06-16 17:13:23,577:INFO:Copying training dataset
2023-06-16 17:13:23,595:INFO:Defining folds
2023-06-16 17:13:23,596:INFO:Declaring metric variables
2023-06-16 17:13:23,596:INFO:Importing untrained model
2023-06-16 17:13:23,596:INFO:Declaring custom model
2023-06-16 17:13:23,597:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:23,597:INFO:Starting cross validation
2023-06-16 17:13:23,600:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:27,692:INFO:Calculating mean and std
2023-06-16 17:13:27,693:INFO:Creating metrics dataframe
2023-06-16 17:13:27,695:INFO:Finalizing model
2023-06-16 17:13:29,141:INFO:Uploading results into container
2023-06-16 17:13:29,142:INFO:Uploading model into container now
2023-06-16 17:13:29,142:INFO:_master_model_container: 64
2023-06-16 17:13:29,142:INFO:_display_container: 11
2023-06-16 17:13:29,144:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.140625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:29,144:INFO:create_model() successfully completed......................................
2023-06-16 17:13:29,213:INFO:Initializing create_model()
2023-06-16 17:13:29,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.640625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:29,214:INFO:Checking exceptions
2023-06-16 17:13:29,215:INFO:Importing libraries
2023-06-16 17:13:29,215:INFO:Copying training dataset
2023-06-16 17:13:29,228:INFO:Defining folds
2023-06-16 17:13:29,229:INFO:Declaring metric variables
2023-06-16 17:13:29,229:INFO:Importing untrained model
2023-06-16 17:13:29,229:INFO:Declaring custom model
2023-06-16 17:13:29,230:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:29,231:INFO:Starting cross validation
2023-06-16 17:13:29,233:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:33,325:INFO:Calculating mean and std
2023-06-16 17:13:33,326:INFO:Creating metrics dataframe
2023-06-16 17:13:33,329:INFO:Finalizing model
2023-06-16 17:13:34,691:INFO:Uploading results into container
2023-06-16 17:13:34,692:INFO:Uploading model into container now
2023-06-16 17:13:34,692:INFO:_master_model_container: 65
2023-06-16 17:13:34,692:INFO:_display_container: 11
2023-06-16 17:13:34,694:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.640625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:34,694:INFO:create_model() successfully completed......................................
2023-06-16 17:13:34,765:INFO:Initializing create_model()
2023-06-16 17:13:34,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.890625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:34,765:INFO:Checking exceptions
2023-06-16 17:13:34,767:INFO:Importing libraries
2023-06-16 17:13:34,767:INFO:Copying training dataset
2023-06-16 17:13:34,781:INFO:Defining folds
2023-06-16 17:13:34,781:INFO:Declaring metric variables
2023-06-16 17:13:34,782:INFO:Importing untrained model
2023-06-16 17:13:34,782:INFO:Declaring custom model
2023-06-16 17:13:34,783:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:34,783:INFO:Starting cross validation
2023-06-16 17:13:34,785:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:38,730:INFO:Calculating mean and std
2023-06-16 17:13:38,731:INFO:Creating metrics dataframe
2023-06-16 17:13:38,734:INFO:Finalizing model
2023-06-16 17:13:40,388:INFO:Uploading results into container
2023-06-16 17:13:40,388:INFO:Uploading model into container now
2023-06-16 17:13:40,389:INFO:_master_model_container: 66
2023-06-16 17:13:40,389:INFO:_display_container: 11
2023-06-16 17:13:40,390:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.890625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:40,391:INFO:create_model() successfully completed......................................
2023-06-16 17:13:40,460:INFO:Initializing create_model()
2023-06-16 17:13:40,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.390625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:40,460:INFO:Checking exceptions
2023-06-16 17:13:40,462:INFO:Importing libraries
2023-06-16 17:13:40,462:INFO:Copying training dataset
2023-06-16 17:13:40,475:INFO:Defining folds
2023-06-16 17:13:40,475:INFO:Declaring metric variables
2023-06-16 17:13:40,475:INFO:Importing untrained model
2023-06-16 17:13:40,475:INFO:Declaring custom model
2023-06-16 17:13:40,476:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:40,477:INFO:Starting cross validation
2023-06-16 17:13:40,479:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:44,339:INFO:Calculating mean and std
2023-06-16 17:13:44,340:INFO:Creating metrics dataframe
2023-06-16 17:13:44,343:INFO:Finalizing model
2023-06-16 17:13:45,788:INFO:Uploading results into container
2023-06-16 17:13:45,788:INFO:Uploading model into container now
2023-06-16 17:13:45,789:INFO:_master_model_container: 67
2023-06-16 17:13:45,789:INFO:_display_container: 11
2023-06-16 17:13:45,790:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.390625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:45,791:INFO:create_model() successfully completed......................................
2023-06-16 17:13:45,867:INFO:Initializing create_model()
2023-06-16 17:13:45,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.265625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:45,867:INFO:Checking exceptions
2023-06-16 17:13:45,869:INFO:Importing libraries
2023-06-16 17:13:45,869:INFO:Copying training dataset
2023-06-16 17:13:45,884:INFO:Defining folds
2023-06-16 17:13:45,884:INFO:Declaring metric variables
2023-06-16 17:13:45,885:INFO:Importing untrained model
2023-06-16 17:13:45,885:INFO:Declaring custom model
2023-06-16 17:13:45,886:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:45,886:INFO:Starting cross validation
2023-06-16 17:13:45,888:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:51,055:INFO:Calculating mean and std
2023-06-16 17:13:51,056:INFO:Creating metrics dataframe
2023-06-16 17:13:51,059:INFO:Finalizing model
2023-06-16 17:13:52,805:INFO:Uploading results into container
2023-06-16 17:13:52,806:INFO:Uploading model into container now
2023-06-16 17:13:52,806:INFO:_master_model_container: 68
2023-06-16 17:13:52,806:INFO:_display_container: 11
2023-06-16 17:13:52,808:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.265625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:52,808:INFO:create_model() successfully completed......................................
2023-06-16 17:13:52,893:INFO:Initializing create_model()
2023-06-16 17:13:52,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.765625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:52,893:INFO:Checking exceptions
2023-06-16 17:13:52,895:INFO:Importing libraries
2023-06-16 17:13:52,895:INFO:Copying training dataset
2023-06-16 17:13:52,912:INFO:Defining folds
2023-06-16 17:13:52,912:INFO:Declaring metric variables
2023-06-16 17:13:52,912:INFO:Importing untrained model
2023-06-16 17:13:52,912:INFO:Declaring custom model
2023-06-16 17:13:52,913:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:52,914:INFO:Starting cross validation
2023-06-16 17:13:52,915:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:58,954:INFO:Calculating mean and std
2023-06-16 17:13:58,954:INFO:Creating metrics dataframe
2023-06-16 17:13:58,957:INFO:Finalizing model
2023-06-16 17:14:00,752:INFO:Uploading results into container
2023-06-16 17:14:00,753:INFO:Uploading model into container now
2023-06-16 17:14:00,753:INFO:_master_model_container: 69
2023-06-16 17:14:00,753:INFO:_display_container: 11
2023-06-16 17:14:00,755:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.765625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:00,755:INFO:create_model() successfully completed......................................
2023-06-16 17:14:00,834:INFO:Initializing create_model()
2023-06-16 17:14:00,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.515625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:00,834:INFO:Checking exceptions
2023-06-16 17:14:00,836:INFO:Importing libraries
2023-06-16 17:14:00,836:INFO:Copying training dataset
2023-06-16 17:14:00,853:INFO:Defining folds
2023-06-16 17:14:00,853:INFO:Declaring metric variables
2023-06-16 17:14:00,853:INFO:Importing untrained model
2023-06-16 17:14:00,853:INFO:Declaring custom model
2023-06-16 17:14:00,854:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:00,855:INFO:Starting cross validation
2023-06-16 17:14:00,857:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:05,411:INFO:Calculating mean and std
2023-06-16 17:14:05,411:INFO:Creating metrics dataframe
2023-06-16 17:14:05,415:INFO:Finalizing model
2023-06-16 17:14:06,926:INFO:Uploading results into container
2023-06-16 17:14:06,927:INFO:Uploading model into container now
2023-06-16 17:14:06,927:INFO:_master_model_container: 70
2023-06-16 17:14:06,927:INFO:_display_container: 11
2023-06-16 17:14:06,928:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.515625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:06,929:INFO:create_model() successfully completed......................................
2023-06-16 17:14:07,002:INFO:Initializing create_model()
2023-06-16 17:14:07,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.015625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:07,002:INFO:Checking exceptions
2023-06-16 17:14:07,004:INFO:Importing libraries
2023-06-16 17:14:07,004:INFO:Copying training dataset
2023-06-16 17:14:07,019:INFO:Defining folds
2023-06-16 17:14:07,019:INFO:Declaring metric variables
2023-06-16 17:14:07,019:INFO:Importing untrained model
2023-06-16 17:14:07,019:INFO:Declaring custom model
2023-06-16 17:14:07,020:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:07,021:INFO:Starting cross validation
2023-06-16 17:14:07,023:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:11,890:INFO:Calculating mean and std
2023-06-16 17:14:11,891:INFO:Creating metrics dataframe
2023-06-16 17:14:11,894:INFO:Finalizing model
2023-06-16 17:14:13,399:INFO:Uploading results into container
2023-06-16 17:14:13,399:INFO:Uploading model into container now
2023-06-16 17:14:13,400:INFO:_master_model_container: 71
2023-06-16 17:14:13,400:INFO:_display_container: 11
2023-06-16 17:14:13,402:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.015625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:13,402:INFO:create_model() successfully completed......................................
2023-06-16 17:14:13,478:INFO:Initializing create_model()
2023-06-16 17:14:13,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:13,479:INFO:Checking exceptions
2023-06-16 17:14:13,481:INFO:Importing libraries
2023-06-16 17:14:13,481:INFO:Copying training dataset
2023-06-16 17:14:13,495:INFO:Defining folds
2023-06-16 17:14:13,496:INFO:Declaring metric variables
2023-06-16 17:14:13,496:INFO:Importing untrained model
2023-06-16 17:14:13,496:INFO:Declaring custom model
2023-06-16 17:14:13,497:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:13,497:INFO:Starting cross validation
2023-06-16 17:14:13,499:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:18,043:INFO:Calculating mean and std
2023-06-16 17:14:18,044:INFO:Creating metrics dataframe
2023-06-16 17:14:18,047:INFO:Finalizing model
2023-06-16 17:14:19,579:INFO:Uploading results into container
2023-06-16 17:14:19,580:INFO:Uploading model into container now
2023-06-16 17:14:19,580:INFO:_master_model_container: 72
2023-06-16 17:14:19,580:INFO:_display_container: 11
2023-06-16 17:14:19,582:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.0234375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:19,582:INFO:create_model() successfully completed......................................
2023-06-16 17:14:19,657:INFO:Initializing create_model()
2023-06-16 17:14:19,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:19,658:INFO:Checking exceptions
2023-06-16 17:14:19,659:INFO:Importing libraries
2023-06-16 17:14:19,659:INFO:Copying training dataset
2023-06-16 17:14:19,674:INFO:Defining folds
2023-06-16 17:14:19,674:INFO:Declaring metric variables
2023-06-16 17:14:19,675:INFO:Importing untrained model
2023-06-16 17:14:19,675:INFO:Declaring custom model
2023-06-16 17:14:19,676:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:19,676:INFO:Starting cross validation
2023-06-16 17:14:19,680:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:24,791:INFO:Calculating mean and std
2023-06-16 17:14:24,792:INFO:Creating metrics dataframe
2023-06-16 17:14:24,794:INFO:Finalizing model
2023-06-16 17:14:26,313:INFO:Uploading results into container
2023-06-16 17:14:26,313:INFO:Uploading model into container now
2023-06-16 17:14:26,314:INFO:_master_model_container: 73
2023-06-16 17:14:26,314:INFO:_display_container: 11
2023-06-16 17:14:26,315:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.5234375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:26,315:INFO:create_model() successfully completed......................................
2023-06-16 17:14:26,390:INFO:Initializing create_model()
2023-06-16 17:14:26,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.7734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:26,390:INFO:Checking exceptions
2023-06-16 17:14:26,392:INFO:Importing libraries
2023-06-16 17:14:26,392:INFO:Copying training dataset
2023-06-16 17:14:26,406:INFO:Defining folds
2023-06-16 17:14:26,406:INFO:Declaring metric variables
2023-06-16 17:14:26,407:INFO:Importing untrained model
2023-06-16 17:14:26,407:INFO:Declaring custom model
2023-06-16 17:14:26,408:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:26,408:INFO:Starting cross validation
2023-06-16 17:14:26,410:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:31,007:INFO:Calculating mean and std
2023-06-16 17:14:31,007:INFO:Creating metrics dataframe
2023-06-16 17:14:31,010:INFO:Finalizing model
2023-06-16 17:14:32,639:INFO:Uploading results into container
2023-06-16 17:14:32,640:INFO:Uploading model into container now
2023-06-16 17:14:32,640:INFO:_master_model_container: 74
2023-06-16 17:14:32,640:INFO:_display_container: 11
2023-06-16 17:14:32,642:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.7734375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:32,642:INFO:create_model() successfully completed......................................
2023-06-16 17:14:32,722:INFO:Initializing create_model()
2023-06-16 17:14:32,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.2734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:32,723:INFO:Checking exceptions
2023-06-16 17:14:32,727:INFO:Importing libraries
2023-06-16 17:14:32,727:INFO:Copying training dataset
2023-06-16 17:14:32,743:INFO:Defining folds
2023-06-16 17:14:32,743:INFO:Declaring metric variables
2023-06-16 17:14:32,743:INFO:Importing untrained model
2023-06-16 17:14:32,743:INFO:Declaring custom model
2023-06-16 17:14:32,744:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:32,745:INFO:Starting cross validation
2023-06-16 17:14:32,746:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:37,423:INFO:Calculating mean and std
2023-06-16 17:14:37,424:INFO:Creating metrics dataframe
2023-06-16 17:14:37,426:INFO:Finalizing model
2023-06-16 17:18:29,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:18:29,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:18:29,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:18:29,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:18:31,745:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 17:18:46,129:INFO:PyCaret ClassificationExperiment
2023-06-16 17:18:46,130:INFO:Logging name: clf-default-name
2023-06-16 17:18:46,130:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 17:18:46,130:INFO:version 3.0.2
2023-06-16 17:18:46,130:INFO:Initializing setup()
2023-06-16 17:18:46,130:INFO:self.USI: cbf7
2023-06-16 17:18:46,130:INFO:self._variable_keys: {'log_plots_param', 'X', 'memory', '_ml_usecase', 'fold_groups_param', 'fix_imbalance', 'n_jobs_param', 'gpu_param', '_available_plots', 'html_param', 'USI', 'target_param', 'y', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'is_multiclass', 'X_test', 'X_train', 'idx', 'data', 'logging_param', 'y_test', 'fold_shuffle_param', 'y_train', 'seed', 'pipeline', 'fold_generator'}
2023-06-16 17:18:46,130:INFO:Checking environment
2023-06-16 17:18:46,130:INFO:python_version: 3.9.7
2023-06-16 17:18:46,130:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 17:18:46,130:INFO:machine: AMD64
2023-06-16 17:18:46,131:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 17:18:46,131:INFO:Memory: svmem(total=17120436224, available=3071438848, percent=82.1, used=14048997376, free=3071438848)
2023-06-16 17:18:46,131:INFO:Physical Core: 4
2023-06-16 17:18:46,131:INFO:Logical Core: 4
2023-06-16 17:18:46,131:INFO:Checking libraries
2023-06-16 17:18:46,131:INFO:System:
2023-06-16 17:18:46,131:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 17:18:46,131:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 17:18:46,131:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 17:18:46,131:INFO:PyCaret required dependencies:
2023-06-16 17:18:46,131:INFO:                 pip: 21.2.3
2023-06-16 17:18:46,131:INFO:          setuptools: 57.4.0
2023-06-16 17:18:46,131:INFO:             pycaret: 3.0.2
2023-06-16 17:18:46,131:INFO:             IPython: 7.28.0
2023-06-16 17:18:46,131:INFO:          ipywidgets: 8.0.6
2023-06-16 17:18:46,131:INFO:                tqdm: 4.64.0
2023-06-16 17:18:46,132:INFO:               numpy: 1.21.2
2023-06-16 17:18:46,132:INFO:              pandas: 1.3.5
2023-06-16 17:18:46,132:INFO:              jinja2: 3.1.2
2023-06-16 17:18:46,132:INFO:               scipy: 1.7.1
2023-06-16 17:18:46,132:INFO:              joblib: 1.2.0
2023-06-16 17:18:46,132:INFO:             sklearn: 1.1.0
2023-06-16 17:18:46,132:INFO:                pyod: 1.0.9
2023-06-16 17:18:46,132:INFO:            imblearn: 0.9.1
2023-06-16 17:18:46,132:INFO:   category_encoders: 2.6.1
2023-06-16 17:18:46,132:INFO:            lightgbm: 3.3.5
2023-06-16 17:18:46,132:INFO:               numba: 0.57.0
2023-06-16 17:18:46,132:INFO:            requests: 2.31.0
2023-06-16 17:18:46,132:INFO:          matplotlib: 3.4.3
2023-06-16 17:18:46,132:INFO:          scikitplot: 0.3.7
2023-06-16 17:18:46,132:INFO:         yellowbrick: 1.5
2023-06-16 17:18:46,132:INFO:              plotly: 5.8.0
2023-06-16 17:18:46,132:INFO:             kaleido: 0.2.1
2023-06-16 17:18:46,132:INFO:         statsmodels: 0.14.0
2023-06-16 17:18:46,132:INFO:              sktime: 0.17.0
2023-06-16 17:18:46,132:INFO:               tbats: 1.1.3
2023-06-16 17:18:46,132:INFO:            pmdarima: 2.0.3
2023-06-16 17:18:46,132:INFO:              psutil: 5.9.0
2023-06-16 17:18:46,133:INFO:PyCaret optional dependencies:
2023-06-16 17:18:46,157:INFO:                shap: Not installed
2023-06-16 17:18:46,157:INFO:           interpret: Not installed
2023-06-16 17:18:46,157:INFO:                umap: Not installed
2023-06-16 17:18:46,157:INFO:    pandas_profiling: Not installed
2023-06-16 17:18:46,157:INFO:  explainerdashboard: Not installed
2023-06-16 17:18:46,157:INFO:             autoviz: Not installed
2023-06-16 17:18:46,157:INFO:           fairlearn: Not installed
2023-06-16 17:18:46,157:INFO:             xgboost: Not installed
2023-06-16 17:18:46,157:INFO:            catboost: Not installed
2023-06-16 17:18:46,157:INFO:              kmodes: Not installed
2023-06-16 17:18:46,157:INFO:             mlxtend: Not installed
2023-06-16 17:18:46,158:INFO:       statsforecast: Not installed
2023-06-16 17:18:46,158:INFO:        tune_sklearn: Not installed
2023-06-16 17:18:46,158:INFO:                 ray: Not installed
2023-06-16 17:18:46,158:INFO:            hyperopt: Not installed
2023-06-16 17:18:46,158:INFO:              optuna: Not installed
2023-06-16 17:18:46,158:INFO:               skopt: Not installed
2023-06-16 17:18:46,158:INFO:              mlflow: Not installed
2023-06-16 17:18:46,158:INFO:              gradio: Not installed
2023-06-16 17:18:46,158:INFO:             fastapi: Not installed
2023-06-16 17:18:46,158:INFO:             uvicorn: Not installed
2023-06-16 17:18:46,158:INFO:              m2cgen: Not installed
2023-06-16 17:18:46,158:INFO:           evidently: Not installed
2023-06-16 17:18:46,158:INFO:               fugue: Not installed
2023-06-16 17:18:46,158:INFO:           streamlit: Not installed
2023-06-16 17:18:46,158:INFO:             prophet: Not installed
2023-06-16 17:18:46,158:INFO:None
2023-06-16 17:18:46,158:INFO:Set up data.
2023-06-16 17:18:46,225:INFO:Set up train/test split.
2023-06-16 17:18:46,252:INFO:Set up index.
2023-06-16 17:18:46,253:INFO:Set up folding strategy.
2023-06-16 17:18:46,253:INFO:Assigning column types.
2023-06-16 17:18:46,268:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 17:18:46,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,490:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,524:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 17:18:46,579:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,682:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,718:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 17:18:46,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,902:INFO:Preparing preprocessing pipeline...
2023-06-16 17:18:46,904:INFO:Set up simple imputation.
2023-06-16 17:18:46,920:INFO:Set up encoding of ordinal features.
2023-06-16 17:18:46,930:INFO:Set up encoding of categorical features.
2023-06-16 17:18:46,930:INFO:Set up removing multicollinearity.
2023-06-16 17:18:46,931:INFO:Set up imbalanced handling.
2023-06-16 17:18:46,931:INFO:Set up feature selection.
2023-06-16 17:18:47,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:47,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:47,026:INFO:Set up column name cleaning.
2023-06-16 17:18:47,592:INFO:Finished creating preprocessing pipeline.
2023-06-16 17:18:47,658:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001FAB1EEB1F0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 17:18:47,658:INFO:Creating final display dataframe.
2023-06-16 17:18:47,842:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              cbf7
2023-06-16 17:18:47,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:47,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:48,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:48,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:48,051:INFO:setup() successfully completed in 2.7s...............
2023-06-16 17:19:08,833:INFO:Initializing create_model()
2023-06-16 17:19:08,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FAB42D2FD0>, estimator=Pipeline(memory=None,
         steps=[('transform',
                 DataFrameTransformer(float_dtype=<class 'numpy.float32'>,
                                      int_dtype=<class 'numpy.int64'>,
                                      treat_int_as_categorical=False)),
                ('net',
                 <class 'skorch.classifier.NeuralNetClassifier'>[uninitialized](
  module=<class '__main__.Net'>,
))],
         verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:19:08,834:INFO:Checking exceptions
2023-06-16 17:19:08,894:INFO:Importing libraries
2023-06-16 17:19:08,894:INFO:Copying training dataset
2023-06-16 17:19:08,910:INFO:Defining folds
2023-06-16 17:19:08,910:INFO:Declaring metric variables
2023-06-16 17:19:08,917:INFO:Importing untrained model
2023-06-16 17:19:08,918:INFO:Declaring custom model
2023-06-16 17:19:08,923:INFO:NeuralNetClassifier Imported successfully
2023-06-16 17:19:08,933:INFO:Starting cross validation
2023-06-16 17:19:08,935:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:19:50,399:INFO:PyCaret ClassificationExperiment
2023-06-16 17:19:50,399:INFO:Logging name: clf-default-name
2023-06-16 17:19:50,399:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 17:19:50,399:INFO:version 3.0.2
2023-06-16 17:19:50,399:INFO:Initializing setup()
2023-06-16 17:19:50,399:INFO:self.USI: 1027
2023-06-16 17:19:50,399:INFO:self._variable_keys: {'log_plots_param', 'X', 'memory', '_ml_usecase', 'fold_groups_param', 'fix_imbalance', 'n_jobs_param', 'gpu_param', '_available_plots', 'html_param', 'USI', 'target_param', 'y', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'is_multiclass', 'X_test', 'X_train', 'idx', 'data', 'logging_param', 'y_test', 'fold_shuffle_param', 'y_train', 'seed', 'pipeline', 'fold_generator'}
2023-06-16 17:19:50,399:INFO:Checking environment
2023-06-16 17:19:50,399:INFO:python_version: 3.9.7
2023-06-16 17:19:50,399:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 17:19:50,399:INFO:machine: AMD64
2023-06-16 17:19:50,400:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 17:19:50,400:INFO:Memory: svmem(total=17120436224, available=2492178432, percent=85.4, used=14628257792, free=2492178432)
2023-06-16 17:19:50,400:INFO:Physical Core: 4
2023-06-16 17:19:50,400:INFO:Logical Core: 4
2023-06-16 17:19:50,400:INFO:Checking libraries
2023-06-16 17:19:50,400:INFO:System:
2023-06-16 17:19:50,400:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 17:19:50,400:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 17:19:50,400:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 17:19:50,400:INFO:PyCaret required dependencies:
2023-06-16 17:19:50,400:INFO:                 pip: 21.2.3
2023-06-16 17:19:50,400:INFO:          setuptools: 57.4.0
2023-06-16 17:19:50,400:INFO:             pycaret: 3.0.2
2023-06-16 17:19:50,400:INFO:             IPython: 7.28.0
2023-06-16 17:19:50,400:INFO:          ipywidgets: 8.0.6
2023-06-16 17:19:50,400:INFO:                tqdm: 4.64.0
2023-06-16 17:19:50,400:INFO:               numpy: 1.21.2
2023-06-16 17:19:50,400:INFO:              pandas: 1.3.5
2023-06-16 17:19:50,400:INFO:              jinja2: 3.1.2
2023-06-16 17:19:50,401:INFO:               scipy: 1.7.1
2023-06-16 17:19:50,401:INFO:              joblib: 1.2.0
2023-06-16 17:19:50,401:INFO:             sklearn: 1.1.0
2023-06-16 17:19:50,401:INFO:                pyod: 1.0.9
2023-06-16 17:19:50,401:INFO:            imblearn: 0.9.1
2023-06-16 17:19:50,401:INFO:   category_encoders: 2.6.1
2023-06-16 17:19:50,401:INFO:            lightgbm: 3.3.5
2023-06-16 17:19:50,401:INFO:               numba: 0.57.0
2023-06-16 17:19:50,401:INFO:            requests: 2.31.0
2023-06-16 17:19:50,401:INFO:          matplotlib: 3.4.3
2023-06-16 17:19:50,401:INFO:          scikitplot: 0.3.7
2023-06-16 17:19:50,401:INFO:         yellowbrick: 1.5
2023-06-16 17:19:50,401:INFO:              plotly: 5.8.0
2023-06-16 17:19:50,401:INFO:             kaleido: 0.2.1
2023-06-16 17:19:50,401:INFO:         statsmodels: 0.14.0
2023-06-16 17:19:50,401:INFO:              sktime: 0.17.0
2023-06-16 17:19:50,401:INFO:               tbats: 1.1.3
2023-06-16 17:19:50,402:INFO:            pmdarima: 2.0.3
2023-06-16 17:19:50,402:INFO:              psutil: 5.9.0
2023-06-16 17:19:50,402:INFO:PyCaret optional dependencies:
2023-06-16 17:19:50,402:INFO:                shap: Not installed
2023-06-16 17:19:50,402:INFO:           interpret: Not installed
2023-06-16 17:19:50,402:INFO:                umap: Not installed
2023-06-16 17:19:50,402:INFO:    pandas_profiling: Not installed
2023-06-16 17:19:50,402:INFO:  explainerdashboard: Not installed
2023-06-16 17:19:50,402:INFO:             autoviz: Not installed
2023-06-16 17:19:50,402:INFO:           fairlearn: Not installed
2023-06-16 17:19:50,402:INFO:             xgboost: Not installed
2023-06-16 17:19:50,402:INFO:            catboost: Not installed
2023-06-16 17:19:50,402:INFO:              kmodes: Not installed
2023-06-16 17:19:50,402:INFO:             mlxtend: Not installed
2023-06-16 17:19:50,402:INFO:       statsforecast: Not installed
2023-06-16 17:19:50,402:INFO:        tune_sklearn: Not installed
2023-06-16 17:19:50,402:INFO:                 ray: Not installed
2023-06-16 17:19:50,402:INFO:            hyperopt: Not installed
2023-06-16 17:19:50,403:INFO:              optuna: Not installed
2023-06-16 17:19:50,403:INFO:               skopt: Not installed
2023-06-16 17:19:50,403:INFO:              mlflow: Not installed
2023-06-16 17:19:50,403:INFO:              gradio: Not installed
2023-06-16 17:19:50,403:INFO:             fastapi: Not installed
2023-06-16 17:19:50,403:INFO:             uvicorn: Not installed
2023-06-16 17:19:50,403:INFO:              m2cgen: Not installed
2023-06-16 17:19:50,403:INFO:           evidently: Not installed
2023-06-16 17:19:50,403:INFO:               fugue: Not installed
2023-06-16 17:19:50,403:INFO:           streamlit: Not installed
2023-06-16 17:19:50,403:INFO:             prophet: Not installed
2023-06-16 17:19:50,403:INFO:None
2023-06-16 17:19:50,403:INFO:Set up data.
2023-06-16 17:19:50,465:INFO:Set up train/test split.
2023-06-16 17:19:50,493:INFO:Set up index.
2023-06-16 17:19:50,494:INFO:Set up folding strategy.
2023-06-16 17:19:50,494:INFO:Assigning column types.
2023-06-16 17:19:50,507:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 17:19:50,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,567:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,706:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 17:19:50,772:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,908:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,963:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 17:19:51,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,253:INFO:Preparing preprocessing pipeline...
2023-06-16 17:19:51,256:INFO:Set up simple imputation.
2023-06-16 17:19:51,277:INFO:Set up encoding of ordinal features.
2023-06-16 17:19:51,290:INFO:Set up encoding of categorical features.
2023-06-16 17:19:51,290:INFO:Set up removing multicollinearity.
2023-06-16 17:19:51,290:INFO:Set up imbalanced handling.
2023-06-16 17:19:51,290:INFO:Set up feature selection.
2023-06-16 17:19:51,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,407:INFO:Set up column name cleaning.
2023-06-16 17:19:51,813:INFO:Finished creating preprocessing pipeline.
2023-06-16 17:19:51,866:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001FAB1EEB1F0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 17:19:51,866:INFO:Creating final display dataframe.
2023-06-16 17:19:52,075:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              1027
2023-06-16 17:19:52,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:52,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:52,300:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:52,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:52,301:INFO:setup() successfully completed in 2.6s...............
2023-06-16 17:19:55,015:INFO:Initializing create_model()
2023-06-16 17:19:55,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FAA9D30490>, estimator=Pipeline(memory=None,
         steps=[('transform',
                 DataFrameTransformer(float_dtype=<class 'numpy.float32'>,
                                      int_dtype=<class 'numpy.int64'>,
                                      treat_int_as_categorical=False)),
                ('net',
                 <class 'skorch.classifier.NeuralNetClassifier'>[uninitialized](
  module=<class '__main__.Net'>,
))],
         verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:19:55,015:INFO:Checking exceptions
2023-06-16 17:19:55,061:INFO:Importing libraries
2023-06-16 17:19:55,061:INFO:Copying training dataset
2023-06-16 17:19:55,077:INFO:Defining folds
2023-06-16 17:19:55,077:INFO:Declaring metric variables
2023-06-16 17:19:55,081:INFO:Importing untrained model
2023-06-16 17:19:55,081:INFO:Declaring custom model
2023-06-16 17:19:55,098:INFO:NeuralNetClassifier Imported successfully
2023-06-16 17:19:55,108:INFO:Starting cross validation
2023-06-16 17:19:55,111:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:21:51,547:INFO:Initializing create_model()
2023-06-16 17:21:51,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FAA9D30490>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:21:51,548:INFO:Checking exceptions
2023-06-16 17:21:51,597:INFO:Importing libraries
2023-06-16 17:21:51,597:INFO:Copying training dataset
2023-06-16 17:21:51,616:INFO:Defining folds
2023-06-16 17:21:51,616:INFO:Declaring metric variables
2023-06-16 17:21:51,623:INFO:Importing untrained model
2023-06-16 17:21:51,629:INFO:Logistic Regression Imported successfully
2023-06-16 17:21:51,639:INFO:Starting cross validation
2023-06-16 17:21:51,643:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:21:55,564:INFO:Calculating mean and std
2023-06-16 17:21:55,566:INFO:Creating metrics dataframe
2023-06-16 17:21:55,574:INFO:Finalizing model
2023-06-16 17:21:56,795:INFO:Uploading results into container
2023-06-16 17:21:56,797:INFO:Uploading model into container now
2023-06-16 17:21:56,815:INFO:_master_model_container: 1
2023-06-16 17:21:56,815:INFO:_display_container: 2
2023-06-16 17:21:56,816:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:21:56,816:INFO:create_model() successfully completed......................................
2023-06-16 17:22:14,070:INFO:Initializing create_model()
2023-06-16 17:22:14,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FAA9D30490>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:22:14,071:INFO:Checking exceptions
2023-06-16 17:22:14,117:INFO:Importing libraries
2023-06-16 17:22:14,117:INFO:Copying training dataset
2023-06-16 17:22:14,133:INFO:Defining folds
2023-06-16 17:22:14,133:INFO:Declaring metric variables
2023-06-16 17:22:14,141:INFO:Importing untrained model
2023-06-16 17:22:14,148:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:22:14,157:INFO:Starting cross validation
2023-06-16 17:22:14,160:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:22:14,708:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:14,775:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:14,783:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:14,806:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:16,228:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:17,769:INFO:Calculating mean and std
2023-06-16 17:22:17,771:INFO:Creating metrics dataframe
2023-06-16 17:22:17,779:INFO:Finalizing model
2023-06-16 17:22:18,971:INFO:Uploading results into container
2023-06-16 17:22:18,972:INFO:Uploading model into container now
2023-06-16 17:22:18,988:INFO:_master_model_container: 2
2023-06-16 17:22:18,989:INFO:_display_container: 3
2023-06-16 17:22:18,990:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:22:18,990:INFO:create_model() successfully completed......................................
2023-06-16 17:26:39,445:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:27:32,811:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:28:10,538:INFO:Initializing plot_model()
2023-06-16 17:28:10,539:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:28:10,539:INFO:Checking exceptions
2023-06-16 17:28:10,546:INFO:Preloading libraries
2023-06-16 17:28:10,555:INFO:Copying training dataset
2023-06-16 17:28:10,556:INFO:Plot type: auc
2023-06-16 17:28:10,695:INFO:Fitting Model
2023-06-16 17:28:10,696:INFO:Scoring test/hold-out set
2023-06-16 17:28:10,929:INFO:Visual Rendered Successfully
2023-06-16 17:28:11,074:INFO:plot_model() successfully completed......................................
2023-06-16 17:28:34,794:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:29:09,499:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:36:10,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:36:45,975:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:38:04,663:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:38:37,884:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:38:37,919:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:39:24,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:39:59,280:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:39:59,317:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:40:52,665:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:42:02,669:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:42:02,718:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:42:43,508:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:46:05,691:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:48:24,989:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:49:03,384:INFO:Initializing plot_model()
2023-06-16 17:49:03,385:INFO:plot_model(plot=ks, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:03,385:INFO:Checking exceptions
2023-06-16 17:49:03,392:INFO:Preloading libraries
2023-06-16 17:49:03,402:INFO:Copying training dataset
2023-06-16 17:49:03,402:INFO:Plot type: ks
2023-06-16 17:49:03,435:INFO:Generating predictions / predict_proba on X_test
2023-06-16 17:49:03,983:INFO:Visual Rendered Successfully
2023-06-16 17:49:04,114:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:12,941:INFO:Initializing plot_model()
2023-06-16 17:49:12,941:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:12,941:INFO:Checking exceptions
2023-06-16 17:49:18,677:INFO:Initializing plot_model()
2023-06-16 17:49:18,677:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:18,677:INFO:Checking exceptions
2023-06-16 17:49:18,684:INFO:Preloading libraries
2023-06-16 17:49:18,696:INFO:Copying training dataset
2023-06-16 17:49:18,696:INFO:Plot type: gain
2023-06-16 17:49:18,697:INFO:Generating predictions / predict_proba on X_test
2023-06-16 17:49:18,972:INFO:Visual Rendered Successfully
2023-06-16 17:49:19,048:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:24,509:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:49:24,561:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:49:25,694:INFO:Initializing plot_model()
2023-06-16 17:49:25,694:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:25,695:INFO:Checking exceptions
2023-06-16 17:49:25,701:INFO:Preloading libraries
2023-06-16 17:49:25,712:INFO:Copying training dataset
2023-06-16 17:49:25,712:INFO:Plot type: lift
2023-06-16 17:49:25,713:INFO:Generating predictions / predict_proba on X_test
2023-06-16 17:49:25,960:INFO:Visual Rendered Successfully
2023-06-16 17:49:26,028:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:28,614:INFO:Initializing plot_model()
2023-06-16 17:49:28,615:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:28,615:INFO:Checking exceptions
2023-06-16 17:49:28,622:INFO:Preloading libraries
2023-06-16 17:49:28,635:INFO:Copying training dataset
2023-06-16 17:49:28,635:INFO:Plot type: boundary
2023-06-16 17:49:28,779:INFO:Fitting StandardScaler()
2023-06-16 17:49:28,799:INFO:Fitting PCA()
2023-06-16 17:49:29,003:INFO:Fitting Model
2023-06-16 17:49:29,383:WARNING:c:\Program Files\Python39\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2023-06-16 17:49:30,793:INFO:Visual Rendered Successfully
2023-06-16 17:49:31,007:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:31,028:INFO:Initializing plot_model()
2023-06-16 17:49:31,028:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:31,029:INFO:Checking exceptions
2023-06-16 17:49:31,035:INFO:Preloading libraries
2023-06-16 17:49:31,042:INFO:Copying training dataset
2023-06-16 17:49:31,043:INFO:Plot type: feature_all
2023-06-16 17:49:31,084:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 17:49:31,294:INFO:Visual Rendered Successfully
2023-06-16 17:49:31,366:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:33,230:INFO:Initializing plot_model()
2023-06-16 17:49:33,231:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:33,231:INFO:Checking exceptions
2023-06-16 17:49:33,237:INFO:Preloading libraries
2023-06-16 17:49:33,248:INFO:Copying training dataset
2023-06-16 17:49:33,249:INFO:Plot type: boundary
2023-06-16 17:49:33,324:INFO:Fitting StandardScaler()
2023-06-16 17:49:33,344:INFO:Fitting PCA()
2023-06-16 17:49:33,518:INFO:Fitting Model
2023-06-16 17:49:33,918:WARNING:c:\Program Files\Python39\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2023-06-16 17:49:35,240:INFO:Visual Rendered Successfully
2023-06-16 17:49:35,445:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:51,430:INFO:Initializing plot_model()
2023-06-16 17:49:51,431:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:51,431:INFO:Checking exceptions
2023-06-16 17:49:51,439:INFO:Preloading libraries
2023-06-16 17:49:51,450:INFO:Copying training dataset
2023-06-16 17:49:51,451:INFO:Plot type: feature_all
2023-06-16 17:49:51,491:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 17:49:51,688:INFO:Visual Rendered Successfully
2023-06-16 17:49:51,756:INFO:plot_model() successfully completed......................................
2023-06-16 17:52:04,852:INFO:Initializing compare_models()
2023-06-16 17:52:04,852:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'svm', 'knn'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'svm', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:52:04,852:INFO:Checking exceptions
2023-06-16 17:52:04,859:INFO:Preparing display monitor
2023-06-16 17:52:04,918:INFO:Initializing Logistic Regression
2023-06-16 17:52:04,918:INFO:Total runtime is 0.0 minutes
2023-06-16 17:52:04,924:INFO:SubProcess create_model() called ==================================
2023-06-16 17:52:04,924:INFO:Initializing create_model()
2023-06-16 17:52:04,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F3C0F40>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:04,924:INFO:Checking exceptions
2023-06-16 17:52:04,924:INFO:Importing libraries
2023-06-16 17:52:04,924:INFO:Copying training dataset
2023-06-16 17:52:04,940:INFO:Defining folds
2023-06-16 17:52:04,940:INFO:Declaring metric variables
2023-06-16 17:52:04,945:INFO:Importing untrained model
2023-06-16 17:52:04,955:INFO:Logistic Regression Imported successfully
2023-06-16 17:52:04,978:INFO:Starting cross validation
2023-06-16 17:52:04,982:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:52:09,901:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:09,907:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:09,985:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:09,997:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:11,570:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:13,503:INFO:Calculating mean and std
2023-06-16 17:52:13,505:INFO:Creating metrics dataframe
2023-06-16 17:52:14,314:INFO:Uploading results into container
2023-06-16 17:52:14,314:INFO:Uploading model into container now
2023-06-16 17:52:14,315:INFO:_master_model_container: 75
2023-06-16 17:52:14,315:INFO:_display_container: 11
2023-06-16 17:52:14,315:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:52:14,315:INFO:create_model() successfully completed......................................
2023-06-16 17:52:14,391:INFO:SubProcess create_model() end ==================================
2023-06-16 17:52:14,391:INFO:Creating metrics dataframe
2023-06-16 17:52:14,407:INFO:Initializing SVM - Linear Kernel
2023-06-16 17:52:14,407:INFO:Total runtime is 0.15815068085988362 minutes
2023-06-16 17:52:14,411:INFO:SubProcess create_model() called ==================================
2023-06-16 17:52:14,412:INFO:Initializing create_model()
2023-06-16 17:52:14,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F3C0F40>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:14,412:INFO:Checking exceptions
2023-06-16 17:52:14,412:INFO:Importing libraries
2023-06-16 17:52:14,412:INFO:Copying training dataset
2023-06-16 17:52:14,427:INFO:Defining folds
2023-06-16 17:52:14,427:INFO:Declaring metric variables
2023-06-16 17:52:14,433:INFO:Importing untrained model
2023-06-16 17:52:14,438:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:52:14,448:INFO:Starting cross validation
2023-06-16 17:52:14,450:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:52:14,479:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:14,488:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:14,497:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:14,512:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:15,473:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:15,474:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:15,489:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:15,543:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:16,754:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:17,434:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:18,738:INFO:Calculating mean and std
2023-06-16 17:52:18,740:INFO:Creating metrics dataframe
2023-06-16 17:52:19,499:INFO:Uploading results into container
2023-06-16 17:52:19,499:INFO:Uploading model into container now
2023-06-16 17:52:19,500:INFO:_master_model_container: 76
2023-06-16 17:52:19,500:INFO:_display_container: 11
2023-06-16 17:52:19,500:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:52:19,501:INFO:create_model() successfully completed......................................
2023-06-16 17:52:19,573:INFO:SubProcess create_model() end ==================================
2023-06-16 17:52:19,573:INFO:Creating metrics dataframe
2023-06-16 17:52:19,590:INFO:Initializing K Neighbors Classifier
2023-06-16 17:52:19,590:INFO:Total runtime is 0.2445409417152405 minutes
2023-06-16 17:52:19,596:INFO:SubProcess create_model() called ==================================
2023-06-16 17:52:19,596:INFO:Initializing create_model()
2023-06-16 17:52:19,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F3C0F40>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:19,596:INFO:Checking exceptions
2023-06-16 17:52:19,596:INFO:Importing libraries
2023-06-16 17:52:19,597:INFO:Copying training dataset
2023-06-16 17:52:19,614:INFO:Defining folds
2023-06-16 17:52:19,614:INFO:Declaring metric variables
2023-06-16 17:52:19,620:INFO:Importing untrained model
2023-06-16 17:52:19,624:INFO:K Neighbors Classifier Imported successfully
2023-06-16 17:52:19,634:INFO:Starting cross validation
2023-06-16 17:52:19,638:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:52:19,664:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:19,672:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:19,681:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:19,698:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:23,998:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:26,166:INFO:Calculating mean and std
2023-06-16 17:52:26,168:INFO:Creating metrics dataframe
2023-06-16 17:52:26,918:INFO:Uploading results into container
2023-06-16 17:52:26,919:INFO:Uploading model into container now
2023-06-16 17:52:26,919:INFO:_master_model_container: 77
2023-06-16 17:52:26,920:INFO:_display_container: 11
2023-06-16 17:52:26,920:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 17:52:26,921:INFO:create_model() successfully completed......................................
2023-06-16 17:52:26,993:INFO:SubProcess create_model() end ==================================
2023-06-16 17:52:26,993:INFO:Creating metrics dataframe
2023-06-16 17:52:27,021:INFO:Initializing create_model()
2023-06-16 17:52:27,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:27,021:INFO:Checking exceptions
2023-06-16 17:52:27,024:INFO:Importing libraries
2023-06-16 17:52:27,024:INFO:Copying training dataset
2023-06-16 17:52:27,038:INFO:Defining folds
2023-06-16 17:52:27,038:INFO:Declaring metric variables
2023-06-16 17:52:27,039:INFO:Importing untrained model
2023-06-16 17:52:27,039:INFO:Declaring custom model
2023-06-16 17:52:27,040:INFO:K Neighbors Classifier Imported successfully
2023-06-16 17:52:27,042:INFO:Cross validation set to False
2023-06-16 17:52:27,042:INFO:Fitting Model
2023-06-16 17:52:28,353:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 17:52:28,353:INFO:create_model() successfully completed......................................
2023-06-16 17:52:28,430:INFO:Initializing create_model()
2023-06-16 17:52:28,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:28,433:INFO:Checking exceptions
2023-06-16 17:52:28,436:INFO:Importing libraries
2023-06-16 17:52:28,436:INFO:Copying training dataset
2023-06-16 17:52:28,454:INFO:Defining folds
2023-06-16 17:52:28,454:INFO:Declaring metric variables
2023-06-16 17:52:28,455:INFO:Importing untrained model
2023-06-16 17:52:28,455:INFO:Declaring custom model
2023-06-16 17:52:28,456:INFO:Logistic Regression Imported successfully
2023-06-16 17:52:28,458:INFO:Cross validation set to False
2023-06-16 17:52:28,459:INFO:Fitting Model
2023-06-16 17:52:29,510:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:52:29,511:INFO:create_model() successfully completed......................................
2023-06-16 17:52:29,659:INFO:Initializing create_model()
2023-06-16 17:52:29,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:29,660:INFO:Checking exceptions
2023-06-16 17:52:29,663:INFO:Importing libraries
2023-06-16 17:52:29,663:INFO:Copying training dataset
2023-06-16 17:52:29,679:INFO:Defining folds
2023-06-16 17:52:29,679:INFO:Declaring metric variables
2023-06-16 17:52:29,680:INFO:Importing untrained model
2023-06-16 17:52:29,681:INFO:Declaring custom model
2023-06-16 17:52:29,681:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:52:29,683:INFO:Cross validation set to False
2023-06-16 17:52:29,684:INFO:Fitting Model
2023-06-16 17:52:30,633:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:52:30,633:INFO:create_model() successfully completed......................................
2023-06-16 17:52:30,750:INFO:_master_model_container: 77
2023-06-16 17:52:30,750:INFO:_display_container: 11
2023-06-16 17:52:30,751:INFO:[KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 17:52:30,752:INFO:compare_models() successfully completed......................................
2023-06-16 17:52:34,840:INFO:Initializing evaluate_model()
2023-06-16 17:52:34,841:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:52:34,874:INFO:Initializing plot_model()
2023-06-16 17:52:34,874:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:52:34,874:INFO:Checking exceptions
2023-06-16 17:52:34,880:INFO:Preloading libraries
2023-06-16 17:52:34,883:INFO:Copying training dataset
2023-06-16 17:52:34,883:INFO:Plot type: pipeline
2023-06-16 17:52:35,142:INFO:Visual Rendered Successfully
2023-06-16 17:52:35,803:INFO:plot_model() successfully completed......................................
2023-06-16 17:52:39,254:INFO:Initializing plot_model()
2023-06-16 17:52:39,254:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:52:39,254:INFO:Checking exceptions
2023-06-16 17:52:39,262:INFO:Preloading libraries
2023-06-16 17:52:39,264:INFO:Copying training dataset
2023-06-16 17:52:39,265:INFO:Plot type: auc
2023-06-16 17:52:39,407:INFO:Fitting Model
2023-06-16 17:52:39,408:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2023-06-16 17:52:39,410:INFO:Scoring test/hold-out set
2023-06-16 17:52:41,505:INFO:Visual Rendered Successfully
2023-06-16 17:52:41,586:INFO:plot_model() successfully completed......................................
2023-06-16 17:52:56,120:INFO:Initializing evaluate_model()
2023-06-16 17:52:56,120:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:52:56,151:INFO:Initializing plot_model()
2023-06-16 17:52:56,151:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:52:56,152:INFO:Checking exceptions
2023-06-16 17:52:56,159:INFO:Preloading libraries
2023-06-16 17:52:56,159:INFO:Copying training dataset
2023-06-16 17:52:56,159:INFO:Plot type: pipeline
2023-06-16 17:52:56,344:INFO:Visual Rendered Successfully
2023-06-16 17:52:56,420:INFO:plot_model() successfully completed......................................
2023-06-16 17:52:58,982:INFO:Initializing plot_model()
2023-06-16 17:52:58,982:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:52:58,982:INFO:Checking exceptions
2023-06-16 17:52:58,988:INFO:Preloading libraries
2023-06-16 17:52:58,989:INFO:Copying training dataset
2023-06-16 17:52:58,989:INFO:Plot type: auc
2023-06-16 17:52:59,128:INFO:Fitting Model
2023-06-16 17:52:59,129:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 17:52:59,130:INFO:Scoring test/hold-out set
2023-06-16 17:52:59,309:INFO:Visual Rendered Successfully
2023-06-16 17:52:59,389:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:11,745:INFO:Initializing evaluate_model()
2023-06-16 17:53:11,745:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:53:11,778:INFO:Initializing plot_model()
2023-06-16 17:53:11,778:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:11,778:INFO:Checking exceptions
2023-06-16 17:53:11,784:INFO:Preloading libraries
2023-06-16 17:53:11,785:INFO:Copying training dataset
2023-06-16 17:53:11,785:INFO:Plot type: pipeline
2023-06-16 17:53:11,967:INFO:Visual Rendered Successfully
2023-06-16 17:53:12,041:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:14,006:INFO:Initializing plot_model()
2023-06-16 17:53:14,006:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:14,006:INFO:Checking exceptions
2023-06-16 17:53:17,671:INFO:Initializing plot_model()
2023-06-16 17:53:17,672:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:17,672:INFO:Checking exceptions
2023-06-16 17:53:17,679:INFO:Preloading libraries
2023-06-16 17:53:17,679:INFO:Copying training dataset
2023-06-16 17:53:17,679:INFO:Plot type: parameter
2023-06-16 17:53:17,684:INFO:Visual Rendered Successfully
2023-06-16 17:53:17,754:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:18,373:INFO:Initializing plot_model()
2023-06-16 17:53:18,374:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:18,374:INFO:Checking exceptions
2023-06-16 17:53:21,080:INFO:Initializing evaluate_model()
2023-06-16 17:53:21,080:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:53:21,113:INFO:Initializing plot_model()
2023-06-16 17:53:21,113:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:21,113:INFO:Checking exceptions
2023-06-16 17:53:21,119:INFO:Preloading libraries
2023-06-16 17:53:21,119:INFO:Copying training dataset
2023-06-16 17:53:21,120:INFO:Plot type: pipeline
2023-06-16 17:53:21,303:INFO:Visual Rendered Successfully
2023-06-16 17:53:21,380:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:34,128:INFO:Initializing plot_model()
2023-06-16 17:53:34,128:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:34,128:INFO:Checking exceptions
2023-06-16 17:53:34,134:INFO:Preloading libraries
2023-06-16 17:53:34,134:INFO:Copying training dataset
2023-06-16 17:53:34,134:INFO:Plot type: feature
2023-06-16 17:53:34,408:INFO:Visual Rendered Successfully
2023-06-16 17:53:34,476:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:36,464:INFO:Initializing plot_model()
2023-06-16 17:53:36,464:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:36,465:INFO:Checking exceptions
2023-06-16 17:53:48,387:INFO:Initializing compare_models()
2023-06-16 17:53:48,387:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'svm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:53:48,387:INFO:Checking exceptions
2023-06-16 17:53:48,394:INFO:Preparing display monitor
2023-06-16 17:53:48,451:INFO:Initializing Logistic Regression
2023-06-16 17:53:48,451:INFO:Total runtime is 0.0 minutes
2023-06-16 17:53:48,455:INFO:SubProcess create_model() called ==================================
2023-06-16 17:53:48,456:INFO:Initializing create_model()
2023-06-16 17:53:48,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F815970>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:53:48,456:INFO:Checking exceptions
2023-06-16 17:53:48,456:INFO:Importing libraries
2023-06-16 17:53:48,456:INFO:Copying training dataset
2023-06-16 17:53:48,478:INFO:Defining folds
2023-06-16 17:53:48,478:INFO:Declaring metric variables
2023-06-16 17:53:48,483:INFO:Importing untrained model
2023-06-16 17:53:48,489:INFO:Logistic Regression Imported successfully
2023-06-16 17:53:48,504:INFO:Starting cross validation
2023-06-16 17:53:48,507:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:53:48,543:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:48,554:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:48,568:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:48,579:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:50,367:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:52,160:INFO:Calculating mean and std
2023-06-16 17:53:52,161:INFO:Creating metrics dataframe
2023-06-16 17:53:52,983:INFO:Uploading results into container
2023-06-16 17:53:52,983:INFO:Uploading model into container now
2023-06-16 17:53:52,984:INFO:_master_model_container: 78
2023-06-16 17:53:52,984:INFO:_display_container: 12
2023-06-16 17:53:52,985:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:53:52,985:INFO:create_model() successfully completed......................................
2023-06-16 17:53:53,058:INFO:SubProcess create_model() end ==================================
2023-06-16 17:53:53,058:INFO:Creating metrics dataframe
2023-06-16 17:53:53,074:INFO:Initializing SVM - Linear Kernel
2023-06-16 17:53:53,074:INFO:Total runtime is 0.0770500143369039 minutes
2023-06-16 17:53:53,078:INFO:SubProcess create_model() called ==================================
2023-06-16 17:53:53,078:INFO:Initializing create_model()
2023-06-16 17:53:53,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F815970>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:53:53,078:INFO:Checking exceptions
2023-06-16 17:53:53,079:INFO:Importing libraries
2023-06-16 17:53:53,079:INFO:Copying training dataset
2023-06-16 17:53:53,095:INFO:Defining folds
2023-06-16 17:53:53,095:INFO:Declaring metric variables
2023-06-16 17:53:53,099:INFO:Importing untrained model
2023-06-16 17:53:53,105:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:53:53,113:INFO:Starting cross validation
2023-06-16 17:53:53,115:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:53:53,144:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:53,151:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:53,159:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:53,174:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:53,516:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:53,560:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:53,602:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:53,632:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:54,427:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:54,970:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:56,386:INFO:Calculating mean and std
2023-06-16 17:53:56,388:INFO:Creating metrics dataframe
2023-06-16 17:53:57,197:INFO:Uploading results into container
2023-06-16 17:53:57,197:INFO:Uploading model into container now
2023-06-16 17:53:57,198:INFO:_master_model_container: 79
2023-06-16 17:53:57,198:INFO:_display_container: 12
2023-06-16 17:53:57,199:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:53:57,199:INFO:create_model() successfully completed......................................
2023-06-16 17:53:57,270:INFO:SubProcess create_model() end ==================================
2023-06-16 17:53:57,270:INFO:Creating metrics dataframe
2023-06-16 17:53:57,307:INFO:Initializing create_model()
2023-06-16 17:53:57,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:53:57,307:INFO:Checking exceptions
2023-06-16 17:53:57,309:INFO:Importing libraries
2023-06-16 17:53:57,309:INFO:Copying training dataset
2023-06-16 17:53:57,324:INFO:Defining folds
2023-06-16 17:53:57,325:INFO:Declaring metric variables
2023-06-16 17:53:57,325:INFO:Importing untrained model
2023-06-16 17:53:57,325:INFO:Declaring custom model
2023-06-16 17:53:57,326:INFO:Logistic Regression Imported successfully
2023-06-16 17:53:57,329:INFO:Cross validation set to False
2023-06-16 17:53:57,329:INFO:Fitting Model
2023-06-16 17:53:58,374:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:53:58,374:INFO:create_model() successfully completed......................................
2023-06-16 17:53:58,470:INFO:Initializing create_model()
2023-06-16 17:53:58,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:53:58,470:INFO:Checking exceptions
2023-06-16 17:53:58,472:INFO:Importing libraries
2023-06-16 17:53:58,473:INFO:Copying training dataset
2023-06-16 17:53:58,488:INFO:Defining folds
2023-06-16 17:53:58,488:INFO:Declaring metric variables
2023-06-16 17:53:58,489:INFO:Importing untrained model
2023-06-16 17:53:58,489:INFO:Declaring custom model
2023-06-16 17:53:58,489:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:53:58,491:INFO:Cross validation set to False
2023-06-16 17:53:58,491:INFO:Fitting Model
2023-06-16 17:53:59,500:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:53:59,500:INFO:create_model() successfully completed......................................
2023-06-16 17:53:59,613:INFO:_master_model_container: 79
2023-06-16 17:53:59,614:INFO:_display_container: 12
2023-06-16 17:53:59,615:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 17:53:59,615:INFO:compare_models() successfully completed......................................
2023-06-16 17:54:05,622:INFO:Initializing evaluate_model()
2023-06-16 17:54:05,623:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:54:05,656:INFO:Initializing plot_model()
2023-06-16 17:54:05,656:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:54:05,657:INFO:Checking exceptions
2023-06-16 17:54:05,663:INFO:Preloading libraries
2023-06-16 17:54:05,663:INFO:Copying training dataset
2023-06-16 17:54:05,663:INFO:Plot type: pipeline
2023-06-16 17:54:05,973:INFO:Visual Rendered Successfully
2023-06-16 17:54:06,061:INFO:plot_model() successfully completed......................................
2023-06-16 17:54:07,333:INFO:Initializing plot_model()
2023-06-16 17:54:07,333:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:54:07,334:INFO:Checking exceptions
2023-06-16 17:54:37,079:INFO:Initializing compare_models()
2023-06-16 17:54:37,079:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'svm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:54:37,079:INFO:Checking exceptions
2023-06-16 17:54:37,086:INFO:Preparing display monitor
2023-06-16 17:54:37,139:INFO:Initializing Logistic Regression
2023-06-16 17:54:37,139:INFO:Total runtime is 0.0 minutes
2023-06-16 17:54:37,144:INFO:SubProcess create_model() called ==================================
2023-06-16 17:54:37,144:INFO:Initializing create_model()
2023-06-16 17:54:37,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03B520910>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:54:37,145:INFO:Checking exceptions
2023-06-16 17:54:37,145:INFO:Importing libraries
2023-06-16 17:54:37,145:INFO:Copying training dataset
2023-06-16 17:54:37,173:INFO:Defining folds
2023-06-16 17:54:37,173:INFO:Declaring metric variables
2023-06-16 17:54:37,178:INFO:Importing untrained model
2023-06-16 17:54:37,183:INFO:Logistic Regression Imported successfully
2023-06-16 17:54:37,197:INFO:Starting cross validation
2023-06-16 17:54:37,200:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:54:37,234:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:37,243:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:37,260:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:37,271:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:39,208:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:41,686:INFO:Calculating mean and std
2023-06-16 17:54:41,688:INFO:Creating metrics dataframe
2023-06-16 17:54:42,485:INFO:Uploading results into container
2023-06-16 17:54:42,486:INFO:Uploading model into container now
2023-06-16 17:54:42,486:INFO:_master_model_container: 80
2023-06-16 17:54:42,487:INFO:_display_container: 13
2023-06-16 17:54:42,487:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:54:42,487:INFO:create_model() successfully completed......................................
2023-06-16 17:54:42,574:INFO:SubProcess create_model() end ==================================
2023-06-16 17:54:42,575:INFO:Creating metrics dataframe
2023-06-16 17:54:42,592:INFO:Initializing SVM - Linear Kernel
2023-06-16 17:54:42,592:INFO:Total runtime is 0.09088394641876221 minutes
2023-06-16 17:54:42,596:INFO:SubProcess create_model() called ==================================
2023-06-16 17:54:42,597:INFO:Initializing create_model()
2023-06-16 17:54:42,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03B520910>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:54:42,597:INFO:Checking exceptions
2023-06-16 17:54:42,597:INFO:Importing libraries
2023-06-16 17:54:42,597:INFO:Copying training dataset
2023-06-16 17:54:42,612:INFO:Defining folds
2023-06-16 17:54:42,613:INFO:Declaring metric variables
2023-06-16 17:54:42,618:INFO:Importing untrained model
2023-06-16 17:54:42,622:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:54:42,632:INFO:Starting cross validation
2023-06-16 17:54:42,635:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:54:42,663:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:42,672:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:42,679:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:42,696:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:43,138:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:43,140:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:43,151:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:43,191:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:44,264:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:45,137:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:46,911:INFO:Calculating mean and std
2023-06-16 17:54:46,913:INFO:Creating metrics dataframe
2023-06-16 17:54:47,877:INFO:Uploading results into container
2023-06-16 17:54:47,878:INFO:Uploading model into container now
2023-06-16 17:54:47,878:INFO:_master_model_container: 81
2023-06-16 17:54:47,879:INFO:_display_container: 13
2023-06-16 17:54:47,879:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:54:47,880:INFO:create_model() successfully completed......................................
2023-06-16 17:54:47,975:INFO:SubProcess create_model() end ==================================
2023-06-16 17:54:47,975:INFO:Creating metrics dataframe
2023-06-16 17:54:48,010:INFO:Initializing create_model()
2023-06-16 17:54:48,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:54:48,011:INFO:Checking exceptions
2023-06-16 17:54:48,013:INFO:Importing libraries
2023-06-16 17:54:48,014:INFO:Copying training dataset
2023-06-16 17:54:48,029:INFO:Defining folds
2023-06-16 17:54:48,029:INFO:Declaring metric variables
2023-06-16 17:54:48,029:INFO:Importing untrained model
2023-06-16 17:54:48,029:INFO:Declaring custom model
2023-06-16 17:54:48,030:INFO:Logistic Regression Imported successfully
2023-06-16 17:54:48,032:INFO:Cross validation set to False
2023-06-16 17:54:48,032:INFO:Fitting Model
2023-06-16 17:54:49,144:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:54:49,144:INFO:create_model() successfully completed......................................
2023-06-16 17:54:49,244:INFO:Initializing create_model()
2023-06-16 17:54:49,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:54:49,245:INFO:Checking exceptions
2023-06-16 17:54:49,249:INFO:Importing libraries
2023-06-16 17:54:49,249:INFO:Copying training dataset
2023-06-16 17:54:49,267:INFO:Defining folds
2023-06-16 17:54:49,267:INFO:Declaring metric variables
2023-06-16 17:54:49,268:INFO:Importing untrained model
2023-06-16 17:54:49,268:INFO:Declaring custom model
2023-06-16 17:54:49,269:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:54:49,272:INFO:Cross validation set to False
2023-06-16 17:54:49,272:INFO:Fitting Model
2023-06-16 17:54:50,472:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:54:50,472:INFO:create_model() successfully completed......................................
2023-06-16 17:54:50,581:INFO:_master_model_container: 81
2023-06-16 17:54:50,581:INFO:_display_container: 13
2023-06-16 17:54:50,582:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 17:54:50,582:INFO:compare_models() successfully completed......................................
2023-06-16 17:54:54,729:INFO:Initializing evaluate_model()
2023-06-16 17:54:54,730:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:54:54,762:INFO:Initializing plot_model()
2023-06-16 17:54:54,762:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:54:54,762:INFO:Checking exceptions
2023-06-16 17:54:54,769:INFO:Preloading libraries
2023-06-16 17:54:54,769:INFO:Copying training dataset
2023-06-16 17:54:54,769:INFO:Plot type: pipeline
2023-06-16 17:54:55,165:INFO:Visual Rendered Successfully
2023-06-16 17:54:55,242:INFO:plot_model() successfully completed......................................
2023-06-16 17:54:56,973:INFO:Initializing plot_model()
2023-06-16 17:54:56,973:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:54:56,974:INFO:Checking exceptions
2023-06-16 17:54:56,981:INFO:Preloading libraries
2023-06-16 17:54:56,981:INFO:Copying training dataset
2023-06-16 17:54:56,981:INFO:Plot type: auc
2023-06-16 17:54:57,123:INFO:Fitting Model
2023-06-16 17:54:57,132:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 17:54:57,132:INFO:Scoring test/hold-out set
2023-06-16 17:54:57,313:INFO:Visual Rendered Successfully
2023-06-16 17:54:57,426:INFO:plot_model() successfully completed......................................
2023-06-16 17:55:21,382:INFO:Initializing evaluate_model()
2023-06-16 17:55:21,382:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-06-16 17:55:21,415:INFO:Initializing plot_model()
2023-06-16 17:55:21,416:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:21,416:INFO:Checking exceptions
2023-06-16 17:55:21,422:INFO:Preloading libraries
2023-06-16 17:55:21,422:INFO:Copying training dataset
2023-06-16 17:55:21,422:INFO:Plot type: pipeline
2023-06-16 17:55:21,629:INFO:Visual Rendered Successfully
2023-06-16 17:55:21,712:INFO:plot_model() successfully completed......................................
2023-06-16 17:55:22,979:INFO:Initializing plot_model()
2023-06-16 17:55:22,980:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:22,980:INFO:Checking exceptions
2023-06-16 17:55:22,986:INFO:Preloading libraries
2023-06-16 17:55:22,987:INFO:Copying training dataset
2023-06-16 17:55:22,987:INFO:Plot type: auc
2023-06-16 17:55:23,125:INFO:Fitting Model
2023-06-16 17:55:23,126:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 17:55:23,127:INFO:Scoring test/hold-out set
2023-06-16 17:55:23,305:INFO:Visual Rendered Successfully
2023-06-16 17:55:23,392:INFO:plot_model() successfully completed......................................
2023-06-16 17:55:31,489:INFO:Initializing evaluate_model()
2023-06-16 17:55:31,489:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-06-16 17:55:31,521:INFO:Initializing plot_model()
2023-06-16 17:55:31,521:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:31,521:INFO:Checking exceptions
2023-06-16 17:55:31,527:INFO:Preloading libraries
2023-06-16 17:55:31,527:INFO:Copying training dataset
2023-06-16 17:55:31,527:INFO:Plot type: pipeline
2023-06-16 17:55:31,806:INFO:Visual Rendered Successfully
2023-06-16 17:55:31,884:INFO:plot_model() successfully completed......................................
2023-06-16 17:55:32,835:INFO:Initializing plot_model()
2023-06-16 17:55:32,835:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:32,835:INFO:Checking exceptions
2023-06-16 17:55:36,894:INFO:Initializing plot_model()
2023-06-16 17:55:36,894:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:36,894:INFO:Checking exceptions
2023-06-16 17:55:45,034:INFO:Initializing compare_models()
2023-06-16 17:55:45,035:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'dc'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'dc'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:55:45,035:INFO:Checking exceptions
2023-06-16 17:56:52,817:INFO:Initializing compare_models()
2023-06-16 17:56:52,817:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:56:52,817:INFO:Checking exceptions
2023-06-16 17:56:52,823:INFO:Preparing display monitor
2023-06-16 17:56:52,881:INFO:Initializing Logistic Regression
2023-06-16 17:56:52,881:INFO:Total runtime is 0.0 minutes
2023-06-16 17:56:52,886:INFO:SubProcess create_model() called ==================================
2023-06-16 17:56:52,887:INFO:Initializing create_model()
2023-06-16 17:56:52,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F81D940>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:56:52,887:INFO:Checking exceptions
2023-06-16 17:56:52,887:INFO:Importing libraries
2023-06-16 17:56:52,887:INFO:Copying training dataset
2023-06-16 17:56:52,916:INFO:Defining folds
2023-06-16 17:56:52,919:INFO:Declaring metric variables
2023-06-16 17:56:52,925:INFO:Importing untrained model
2023-06-16 17:56:52,931:INFO:Logistic Regression Imported successfully
2023-06-16 17:56:52,943:INFO:Starting cross validation
2023-06-16 17:56:52,946:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:56:52,982:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:52,991:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:53,000:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:53,009:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:54,609:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:56,675:INFO:Calculating mean and std
2023-06-16 17:56:56,676:INFO:Creating metrics dataframe
2023-06-16 17:56:57,484:INFO:Uploading results into container
2023-06-16 17:56:57,485:INFO:Uploading model into container now
2023-06-16 17:56:57,486:INFO:_master_model_container: 82
2023-06-16 17:56:57,486:INFO:_display_container: 14
2023-06-16 17:56:57,487:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:56:57,487:INFO:create_model() successfully completed......................................
2023-06-16 17:56:57,562:INFO:SubProcess create_model() end ==================================
2023-06-16 17:56:57,562:INFO:Creating metrics dataframe
2023-06-16 17:56:57,589:INFO:Initializing create_model()
2023-06-16 17:56:57,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:56:57,590:INFO:Checking exceptions
2023-06-16 17:56:57,592:INFO:Importing libraries
2023-06-16 17:56:57,592:INFO:Copying training dataset
2023-06-16 17:56:57,606:INFO:Defining folds
2023-06-16 17:56:57,606:INFO:Declaring metric variables
2023-06-16 17:56:57,607:INFO:Importing untrained model
2023-06-16 17:56:57,607:INFO:Declaring custom model
2023-06-16 17:56:57,607:INFO:Logistic Regression Imported successfully
2023-06-16 17:56:57,609:INFO:Cross validation set to False
2023-06-16 17:56:57,609:INFO:Fitting Model
2023-06-16 17:56:59,088:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:56:59,088:INFO:create_model() successfully completed......................................
2023-06-16 17:56:59,207:INFO:_master_model_container: 82
2023-06-16 17:56:59,207:INFO:_display_container: 14
2023-06-16 17:56:59,208:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:56:59,208:INFO:compare_models() successfully completed......................................
2023-06-16 17:58:06,173:INFO:Initializing compare_models()
2023-06-16 17:58:06,173:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:58:06,173:INFO:Checking exceptions
2023-06-16 17:58:06,179:INFO:Preparing display monitor
2023-06-16 17:58:06,242:INFO:Initializing Logistic Regression
2023-06-16 17:58:06,242:INFO:Total runtime is 0.0 minutes
2023-06-16 17:58:06,246:INFO:SubProcess create_model() called ==================================
2023-06-16 17:58:06,247:INFO:Initializing create_model()
2023-06-16 17:58:06,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F835E20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:58:06,247:INFO:Checking exceptions
2023-06-16 17:58:06,247:INFO:Importing libraries
2023-06-16 17:58:06,247:INFO:Copying training dataset
2023-06-16 17:58:06,264:INFO:Defining folds
2023-06-16 17:58:06,264:INFO:Declaring metric variables
2023-06-16 17:58:06,269:INFO:Importing untrained model
2023-06-16 17:58:06,273:INFO:Logistic Regression Imported successfully
2023-06-16 17:58:06,284:INFO:Starting cross validation
2023-06-16 17:58:06,287:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:58:06,316:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:06,324:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:06,333:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:06,346:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:08,012:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:09,999:INFO:Calculating mean and std
2023-06-16 17:58:10,001:INFO:Creating metrics dataframe
2023-06-16 17:58:10,867:INFO:Uploading results into container
2023-06-16 17:58:10,868:INFO:Uploading model into container now
2023-06-16 17:58:10,868:INFO:_master_model_container: 83
2023-06-16 17:58:10,869:INFO:_display_container: 15
2023-06-16 17:58:10,869:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:58:10,869:INFO:create_model() successfully completed......................................
2023-06-16 17:58:10,944:INFO:SubProcess create_model() end ==================================
2023-06-16 17:58:10,945:INFO:Creating metrics dataframe
2023-06-16 17:58:10,968:INFO:Initializing Decision Tree Classifier
2023-06-16 17:58:10,968:INFO:Total runtime is 0.07876664797465006 minutes
2023-06-16 17:58:10,974:INFO:SubProcess create_model() called ==================================
2023-06-16 17:58:10,974:INFO:Initializing create_model()
2023-06-16 17:58:10,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F835E20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:58:10,974:INFO:Checking exceptions
2023-06-16 17:58:10,975:INFO:Importing libraries
2023-06-16 17:58:10,975:INFO:Copying training dataset
2023-06-16 17:58:10,990:INFO:Defining folds
2023-06-16 17:58:10,991:INFO:Declaring metric variables
2023-06-16 17:58:10,995:INFO:Importing untrained model
2023-06-16 17:58:11,000:INFO:Decision Tree Classifier Imported successfully
2023-06-16 17:58:11,010:INFO:Starting cross validation
2023-06-16 17:58:11,013:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:58:11,047:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:11,055:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:11,063:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:11,079:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:32,745:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:49,995:INFO:Calculating mean and std
2023-06-16 17:58:49,997:INFO:Creating metrics dataframe
2023-06-16 17:58:50,778:INFO:Uploading results into container
2023-06-16 17:58:50,779:INFO:Uploading model into container now
2023-06-16 17:58:50,780:INFO:_master_model_container: 84
2023-06-16 17:58:50,780:INFO:_display_container: 15
2023-06-16 17:58:50,780:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best')
2023-06-16 17:58:50,781:INFO:create_model() successfully completed......................................
2023-06-16 17:58:50,853:INFO:SubProcess create_model() end ==================================
2023-06-16 17:58:50,853:INFO:Creating metrics dataframe
2023-06-16 17:58:50,880:INFO:Initializing create_model()
2023-06-16 17:58:50,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:58:50,880:INFO:Checking exceptions
2023-06-16 17:58:50,883:INFO:Importing libraries
2023-06-16 17:58:50,883:INFO:Copying training dataset
2023-06-16 17:58:50,907:INFO:Defining folds
2023-06-16 17:58:50,907:INFO:Declaring metric variables
2023-06-16 17:58:50,908:INFO:Importing untrained model
2023-06-16 17:58:50,908:INFO:Declaring custom model
2023-06-16 17:58:50,909:INFO:Decision Tree Classifier Imported successfully
2023-06-16 17:58:50,912:INFO:Cross validation set to False
2023-06-16 17:58:50,912:INFO:Fitting Model
2023-06-16 17:59:12,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:59:12,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:59:12,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:59:12,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:59:14,254:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 17:59:15,192:INFO:PyCaret ClassificationExperiment
2023-06-16 17:59:15,193:INFO:Logging name: clf-default-name
2023-06-16 17:59:15,193:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 17:59:15,193:INFO:version 3.0.2
2023-06-16 17:59:15,193:INFO:Initializing setup()
2023-06-16 17:59:15,193:INFO:self.USI: 99b9
2023-06-16 17:59:15,193:INFO:self._variable_keys: {'seed', 'is_multiclass', '_ml_usecase', 'y', 'fix_imbalance', 'exp_id', 'target_param', 'logging_param', 'memory', 'USI', 'fold_shuffle_param', '_available_plots', 'data', 'exp_name_log', 'idx', 'html_param', 'n_jobs_param', 'pipeline', 'fold_generator', 'log_plots_param', 'y_train', 'gpu_param', 'X', 'X_test', 'X_train', 'y_test', 'gpu_n_jobs_param', 'fold_groups_param'}
2023-06-16 17:59:15,193:INFO:Checking environment
2023-06-16 17:59:15,193:INFO:python_version: 3.9.7
2023-06-16 17:59:15,193:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 17:59:15,193:INFO:machine: AMD64
2023-06-16 17:59:15,193:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 17:59:15,193:INFO:Memory: svmem(total=17120436224, available=3108737024, percent=81.8, used=14011699200, free=3108737024)
2023-06-16 17:59:15,193:INFO:Physical Core: 4
2023-06-16 17:59:15,193:INFO:Logical Core: 4
2023-06-16 17:59:15,194:INFO:Checking libraries
2023-06-16 17:59:15,194:INFO:System:
2023-06-16 17:59:15,194:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 17:59:15,194:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 17:59:15,194:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 17:59:15,194:INFO:PyCaret required dependencies:
2023-06-16 17:59:15,194:INFO:                 pip: 21.2.3
2023-06-16 17:59:15,194:INFO:          setuptools: 57.4.0
2023-06-16 17:59:15,195:INFO:             pycaret: 3.0.2
2023-06-16 17:59:15,195:INFO:             IPython: 7.28.0
2023-06-16 17:59:15,195:INFO:          ipywidgets: 8.0.6
2023-06-16 17:59:15,195:INFO:                tqdm: 4.64.0
2023-06-16 17:59:15,195:INFO:               numpy: 1.22.4
2023-06-16 17:59:15,195:INFO:              pandas: 1.3.5
2023-06-16 17:59:15,195:INFO:              jinja2: 3.1.2
2023-06-16 17:59:15,195:INFO:               scipy: 1.7.1
2023-06-16 17:59:15,195:INFO:              joblib: 1.2.0
2023-06-16 17:59:15,195:INFO:             sklearn: 1.1.0
2023-06-16 17:59:15,195:INFO:                pyod: 1.0.9
2023-06-16 17:59:15,195:INFO:            imblearn: 0.9.1
2023-06-16 17:59:15,195:INFO:   category_encoders: 2.6.1
2023-06-16 17:59:15,195:INFO:            lightgbm: 3.3.5
2023-06-16 17:59:15,195:INFO:               numba: 0.57.0
2023-06-16 17:59:15,195:INFO:            requests: 2.31.0
2023-06-16 17:59:15,196:INFO:          matplotlib: 3.4.3
2023-06-16 17:59:15,196:INFO:          scikitplot: 0.3.7
2023-06-16 17:59:15,196:INFO:         yellowbrick: 1.5
2023-06-16 17:59:15,196:INFO:              plotly: 5.8.0
2023-06-16 17:59:15,196:INFO:             kaleido: 0.2.1
2023-06-16 17:59:15,196:INFO:         statsmodels: 0.14.0
2023-06-16 17:59:15,196:INFO:              sktime: 0.17.0
2023-06-16 17:59:15,196:INFO:               tbats: 1.1.3
2023-06-16 17:59:15,196:INFO:            pmdarima: 2.0.3
2023-06-16 17:59:15,196:INFO:              psutil: 5.9.0
2023-06-16 17:59:15,196:INFO:PyCaret optional dependencies:
2023-06-16 17:59:15,230:INFO:                shap: Not installed
2023-06-16 17:59:15,231:INFO:           interpret: Not installed
2023-06-16 17:59:15,231:INFO:                umap: Not installed
2023-06-16 17:59:15,231:INFO:    pandas_profiling: Not installed
2023-06-16 17:59:15,231:INFO:  explainerdashboard: Not installed
2023-06-16 17:59:15,231:INFO:             autoviz: Not installed
2023-06-16 17:59:15,231:INFO:           fairlearn: Not installed
2023-06-16 17:59:15,231:INFO:             xgboost: Not installed
2023-06-16 17:59:15,231:INFO:            catboost: Not installed
2023-06-16 17:59:15,231:INFO:              kmodes: Not installed
2023-06-16 17:59:15,231:INFO:             mlxtend: Not installed
2023-06-16 17:59:15,231:INFO:       statsforecast: Not installed
2023-06-16 17:59:15,231:INFO:        tune_sklearn: Not installed
2023-06-16 17:59:15,231:INFO:                 ray: Not installed
2023-06-16 17:59:15,231:INFO:            hyperopt: Not installed
2023-06-16 17:59:15,231:INFO:              optuna: Not installed
2023-06-16 17:59:15,231:INFO:               skopt: Not installed
2023-06-16 17:59:15,231:INFO:              mlflow: Not installed
2023-06-16 17:59:15,231:INFO:              gradio: Not installed
2023-06-16 17:59:15,231:INFO:             fastapi: Not installed
2023-06-16 17:59:15,231:INFO:             uvicorn: Not installed
2023-06-16 17:59:15,232:INFO:              m2cgen: Not installed
2023-06-16 17:59:15,232:INFO:           evidently: Not installed
2023-06-16 17:59:15,232:INFO:               fugue: Not installed
2023-06-16 17:59:15,232:INFO:           streamlit: Not installed
2023-06-16 17:59:15,232:INFO:             prophet: Not installed
2023-06-16 17:59:15,232:INFO:None
2023-06-16 17:59:15,232:INFO:Set up data.
2023-06-16 17:59:15,312:INFO:Set up train/test split.
2023-06-16 17:59:15,348:INFO:Set up index.
2023-06-16 17:59:15,349:INFO:Set up folding strategy.
2023-06-16 17:59:15,349:INFO:Assigning column types.
2023-06-16 17:59:15,365:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 17:59:15,428:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,430:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,652:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 17:59:15,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,756:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,815:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,852:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 17:59:15,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,065:INFO:Preparing preprocessing pipeline...
2023-06-16 17:59:16,068:INFO:Set up simple imputation.
2023-06-16 17:59:16,086:INFO:Set up encoding of ordinal features.
2023-06-16 17:59:16,104:INFO:Set up encoding of categorical features.
2023-06-16 17:59:16,104:INFO:Set up removing multicollinearity.
2023-06-16 17:59:16,104:INFO:Set up imbalanced handling.
2023-06-16 17:59:16,104:INFO:Set up feature selection.
2023-06-16 17:59:16,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,204:INFO:Set up column name cleaning.
2023-06-16 17:59:16,657:INFO:Finished creating preprocessing pipeline.
2023-06-16 17:59:16,738:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x0000017FF894BA60>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 17:59:16,738:INFO:Creating final display dataframe.
2023-06-16 17:59:17,598:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              99b9
2023-06-16 17:59:17,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:17,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:17,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:17,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:17,811:INFO:setup() successfully completed in 3.35s...............
2023-06-16 17:59:23,648:INFO:Initializing compare_models()
2023-06-16 17:59:23,648:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:59:23,648:INFO:Checking exceptions
2023-06-16 17:59:23,657:INFO:Preparing display monitor
2023-06-16 17:59:23,706:INFO:Initializing Logistic Regression
2023-06-16 17:59:23,707:INFO:Total runtime is 1.6681353251139323e-05 minutes
2023-06-16 17:59:23,711:INFO:SubProcess create_model() called ==================================
2023-06-16 17:59:23,711:INFO:Initializing create_model()
2023-06-16 17:59:23,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FE63520A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:59:23,711:INFO:Checking exceptions
2023-06-16 17:59:23,711:INFO:Importing libraries
2023-06-16 17:59:23,711:INFO:Copying training dataset
2023-06-16 17:59:23,728:INFO:Defining folds
2023-06-16 17:59:23,729:INFO:Declaring metric variables
2023-06-16 17:59:23,750:INFO:Importing untrained model
2023-06-16 17:59:23,757:INFO:Logistic Regression Imported successfully
2023-06-16 17:59:23,768:INFO:Starting cross validation
2023-06-16 17:59:23,771:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:59:31,732:INFO:Calculating mean and std
2023-06-16 17:59:31,733:INFO:Creating metrics dataframe
2023-06-16 17:59:32,559:INFO:Uploading results into container
2023-06-16 17:59:32,560:INFO:Uploading model into container now
2023-06-16 17:59:32,561:INFO:_master_model_container: 1
2023-06-16 17:59:32,561:INFO:_display_container: 2
2023-06-16 17:59:32,562:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:59:32,562:INFO:create_model() successfully completed......................................
2023-06-16 17:59:32,631:INFO:SubProcess create_model() end ==================================
2023-06-16 17:59:32,632:INFO:Creating metrics dataframe
2023-06-16 17:59:32,648:INFO:Initializing Decision Tree Classifier
2023-06-16 17:59:32,648:INFO:Total runtime is 0.14902259906133017 minutes
2023-06-16 17:59:32,653:INFO:SubProcess create_model() called ==================================
2023-06-16 17:59:32,654:INFO:Initializing create_model()
2023-06-16 17:59:32,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FE63520A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:59:32,654:INFO:Checking exceptions
2023-06-16 17:59:32,654:INFO:Importing libraries
2023-06-16 17:59:32,654:INFO:Copying training dataset
2023-06-16 17:59:32,671:INFO:Defining folds
2023-06-16 17:59:32,671:INFO:Declaring metric variables
2023-06-16 17:59:32,676:INFO:Importing untrained model
2023-06-16 17:59:32,682:INFO:Decision Tree Classifier Imported successfully
2023-06-16 17:59:32,696:INFO:Starting cross validation
2023-06-16 17:59:32,698:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:59:36,030:INFO:Calculating mean and std
2023-06-16 17:59:36,031:INFO:Creating metrics dataframe
2023-06-16 17:59:36,834:INFO:Uploading results into container
2023-06-16 17:59:36,834:INFO:Uploading model into container now
2023-06-16 17:59:36,835:INFO:_master_model_container: 2
2023-06-16 17:59:36,835:INFO:_display_container: 2
2023-06-16 17:59:36,835:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best')
2023-06-16 17:59:36,835:INFO:create_model() successfully completed......................................
2023-06-16 17:59:36,903:INFO:SubProcess create_model() end ==================================
2023-06-16 17:59:36,903:INFO:Creating metrics dataframe
2023-06-16 17:59:36,931:INFO:Initializing create_model()
2023-06-16 17:59:36,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:59:36,932:INFO:Checking exceptions
2023-06-16 17:59:36,935:INFO:Importing libraries
2023-06-16 17:59:36,936:INFO:Copying training dataset
2023-06-16 17:59:36,952:INFO:Defining folds
2023-06-16 17:59:36,952:INFO:Declaring metric variables
2023-06-16 17:59:36,953:INFO:Importing untrained model
2023-06-16 17:59:36,953:INFO:Declaring custom model
2023-06-16 17:59:36,953:INFO:Decision Tree Classifier Imported successfully
2023-06-16 17:59:36,956:INFO:Cross validation set to False
2023-06-16 17:59:36,956:INFO:Fitting Model
2023-06-16 18:00:09,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:09,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:09,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:09,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:10,141:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 18:00:10,962:INFO:PyCaret ClassificationExperiment
2023-06-16 18:00:10,962:INFO:Logging name: clf-default-name
2023-06-16 18:00:10,962:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 18:00:10,962:INFO:version 3.0.2
2023-06-16 18:00:10,962:INFO:Initializing setup()
2023-06-16 18:00:10,962:INFO:self.USI: 2d2c
2023-06-16 18:00:10,962:INFO:self._variable_keys: {'memory', 'gpu_n_jobs_param', 'fix_imbalance', 'log_plots_param', 'y_train', 'is_multiclass', 'X_test', 'USI', 'y_test', 'logging_param', 'exp_id', 'X_train', 'fold_shuffle_param', 'exp_name_log', 'pipeline', '_available_plots', 'y', '_ml_usecase', 'fold_groups_param', 'data', 'fold_generator', 'idx', 'gpu_param', 'html_param', 'seed', 'n_jobs_param', 'X', 'target_param'}
2023-06-16 18:00:10,962:INFO:Checking environment
2023-06-16 18:00:10,962:INFO:python_version: 3.9.7
2023-06-16 18:00:10,962:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 18:00:10,962:INFO:machine: AMD64
2023-06-16 18:00:10,962:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 18:00:10,962:INFO:Memory: svmem(total=17120436224, available=2701078528, percent=84.2, used=14419357696, free=2701078528)
2023-06-16 18:00:10,962:INFO:Physical Core: 4
2023-06-16 18:00:10,962:INFO:Logical Core: 4
2023-06-16 18:00:10,963:INFO:Checking libraries
2023-06-16 18:00:10,963:INFO:System:
2023-06-16 18:00:10,963:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 18:00:10,963:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 18:00:10,963:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 18:00:10,963:INFO:PyCaret required dependencies:
2023-06-16 18:00:10,963:INFO:                 pip: 21.2.3
2023-06-16 18:00:10,963:INFO:          setuptools: 57.4.0
2023-06-16 18:00:10,963:INFO:             pycaret: 3.0.2
2023-06-16 18:00:10,964:INFO:             IPython: 7.28.0
2023-06-16 18:00:10,964:INFO:          ipywidgets: 8.0.6
2023-06-16 18:00:10,964:INFO:                tqdm: 4.64.0
2023-06-16 18:00:10,964:INFO:               numpy: 1.22.4
2023-06-16 18:00:10,964:INFO:              pandas: 1.3.5
2023-06-16 18:00:10,964:INFO:              jinja2: 3.1.2
2023-06-16 18:00:10,965:INFO:               scipy: 1.7.1
2023-06-16 18:00:10,965:INFO:              joblib: 1.2.0
2023-06-16 18:00:10,965:INFO:             sklearn: 1.1.0
2023-06-16 18:00:10,965:INFO:                pyod: 1.0.9
2023-06-16 18:00:10,965:INFO:            imblearn: 0.9.1
2023-06-16 18:00:10,965:INFO:   category_encoders: 2.6.1
2023-06-16 18:00:10,965:INFO:            lightgbm: 3.3.5
2023-06-16 18:00:10,965:INFO:               numba: 0.57.0
2023-06-16 18:00:10,965:INFO:            requests: 2.31.0
2023-06-16 18:00:10,965:INFO:          matplotlib: 3.4.3
2023-06-16 18:00:10,965:INFO:          scikitplot: 0.3.7
2023-06-16 18:00:10,966:INFO:         yellowbrick: 1.5
2023-06-16 18:00:10,966:INFO:              plotly: 5.8.0
2023-06-16 18:00:10,966:INFO:             kaleido: 0.2.1
2023-06-16 18:00:10,966:INFO:         statsmodels: 0.14.0
2023-06-16 18:00:10,966:INFO:              sktime: 0.17.0
2023-06-16 18:00:10,966:INFO:               tbats: 1.1.3
2023-06-16 18:00:10,966:INFO:            pmdarima: 2.0.3
2023-06-16 18:00:10,966:INFO:              psutil: 5.9.0
2023-06-16 18:00:10,966:INFO:PyCaret optional dependencies:
2023-06-16 18:00:10,987:INFO:                shap: Not installed
2023-06-16 18:00:10,987:INFO:           interpret: Not installed
2023-06-16 18:00:10,987:INFO:                umap: Not installed
2023-06-16 18:00:10,987:INFO:    pandas_profiling: Not installed
2023-06-16 18:00:10,987:INFO:  explainerdashboard: Not installed
2023-06-16 18:00:10,987:INFO:             autoviz: Not installed
2023-06-16 18:00:10,987:INFO:           fairlearn: Not installed
2023-06-16 18:00:10,987:INFO:             xgboost: Not installed
2023-06-16 18:00:10,987:INFO:            catboost: Not installed
2023-06-16 18:00:10,987:INFO:              kmodes: Not installed
2023-06-16 18:00:10,988:INFO:             mlxtend: Not installed
2023-06-16 18:00:10,988:INFO:       statsforecast: Not installed
2023-06-16 18:00:10,988:INFO:        tune_sklearn: Not installed
2023-06-16 18:00:10,988:INFO:                 ray: Not installed
2023-06-16 18:00:10,988:INFO:            hyperopt: Not installed
2023-06-16 18:00:10,988:INFO:              optuna: Not installed
2023-06-16 18:00:10,988:INFO:               skopt: Not installed
2023-06-16 18:00:10,988:INFO:              mlflow: Not installed
2023-06-16 18:00:10,988:INFO:              gradio: Not installed
2023-06-16 18:00:10,988:INFO:             fastapi: Not installed
2023-06-16 18:00:10,988:INFO:             uvicorn: Not installed
2023-06-16 18:00:10,988:INFO:              m2cgen: Not installed
2023-06-16 18:00:10,988:INFO:           evidently: Not installed
2023-06-16 18:00:10,988:INFO:               fugue: Not installed
2023-06-16 18:00:10,988:INFO:           streamlit: Not installed
2023-06-16 18:00:10,988:INFO:             prophet: Not installed
2023-06-16 18:00:10,988:INFO:None
2023-06-16 18:00:10,988:INFO:Set up data.
2023-06-16 18:00:11,051:INFO:Set up train/test split.
2023-06-16 18:00:11,076:INFO:Set up index.
2023-06-16 18:00:11,078:INFO:Set up folding strategy.
2023-06-16 18:00:11,078:INFO:Assigning column types.
2023-06-16 18:00:11,089:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 18:00:11,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,323:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 18:00:11,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,470:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,502:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 18:00:11,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,678:INFO:Preparing preprocessing pipeline...
2023-06-16 18:00:11,680:INFO:Set up simple imputation.
2023-06-16 18:00:11,692:INFO:Set up encoding of ordinal features.
2023-06-16 18:00:11,702:INFO:Set up encoding of categorical features.
2023-06-16 18:00:11,702:INFO:Set up removing multicollinearity.
2023-06-16 18:00:11,702:INFO:Set up imbalanced handling.
2023-06-16 18:00:11,702:INFO:Set up feature selection.
2023-06-16 18:00:11,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,791:INFO:Set up column name cleaning.
2023-06-16 18:00:12,172:INFO:Finished creating preprocessing pipeline.
2023-06-16 18:00:12,237:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002198AAB28B0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 18:00:12,237:INFO:Creating final display dataframe.
2023-06-16 18:00:12,397:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              2d2c
2023-06-16 18:00:12,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:12,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:12,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:12,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:12,626:INFO:setup() successfully completed in 2.29s...............
2023-06-16 18:00:13,512:INFO:Initializing compare_models()
2023-06-16 18:00:13,512:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 18:00:13,512:INFO:Checking exceptions
2023-06-16 18:00:13,522:INFO:Preparing display monitor
2023-06-16 18:00:13,572:INFO:Initializing Logistic Regression
2023-06-16 18:00:13,572:INFO:Total runtime is 0.0 minutes
2023-06-16 18:00:13,577:INFO:SubProcess create_model() called ==================================
2023-06-16 18:00:13,578:INFO:Initializing create_model()
2023-06-16 18:00:13,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002198D64CFA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:00:13,578:INFO:Checking exceptions
2023-06-16 18:00:13,579:INFO:Importing libraries
2023-06-16 18:00:13,579:INFO:Copying training dataset
2023-06-16 18:00:13,597:INFO:Defining folds
2023-06-16 18:00:13,597:INFO:Declaring metric variables
2023-06-16 18:00:13,601:INFO:Importing untrained model
2023-06-16 18:00:13,609:INFO:Logistic Regression Imported successfully
2023-06-16 18:00:13,623:INFO:Starting cross validation
2023-06-16 18:00:13,625:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:00:22,876:INFO:Calculating mean and std
2023-06-16 18:00:22,877:INFO:Creating metrics dataframe
2023-06-16 18:00:23,738:INFO:Uploading results into container
2023-06-16 18:00:23,738:INFO:Uploading model into container now
2023-06-16 18:00:23,739:INFO:_master_model_container: 1
2023-06-16 18:00:23,739:INFO:_display_container: 2
2023-06-16 18:00:23,740:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:00:23,740:INFO:create_model() successfully completed......................................
2023-06-16 18:00:23,808:INFO:SubProcess create_model() end ==================================
2023-06-16 18:00:23,808:INFO:Creating metrics dataframe
2023-06-16 18:00:23,825:INFO:Initializing Decision Tree Classifier
2023-06-16 18:00:23,826:INFO:Total runtime is 0.17090052366256714 minutes
2023-06-16 18:00:23,829:INFO:SubProcess create_model() called ==================================
2023-06-16 18:00:23,830:INFO:Initializing create_model()
2023-06-16 18:00:23,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002198D64CFA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:00:23,830:INFO:Checking exceptions
2023-06-16 18:00:23,830:INFO:Importing libraries
2023-06-16 18:00:23,830:INFO:Copying training dataset
2023-06-16 18:00:23,850:INFO:Defining folds
2023-06-16 18:00:23,851:INFO:Declaring metric variables
2023-06-16 18:00:23,855:INFO:Importing untrained model
2023-06-16 18:00:23,862:INFO:Decision Tree Classifier Imported successfully
2023-06-16 18:00:23,870:INFO:Starting cross validation
2023-06-16 18:00:23,873:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:00:27,254:INFO:Calculating mean and std
2023-06-16 18:00:27,255:INFO:Creating metrics dataframe
2023-06-16 18:00:28,053:INFO:Uploading results into container
2023-06-16 18:00:28,054:INFO:Uploading model into container now
2023-06-16 18:00:28,054:INFO:_master_model_container: 2
2023-06-16 18:00:28,054:INFO:_display_container: 2
2023-06-16 18:00:28,055:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best')
2023-06-16 18:00:28,055:INFO:create_model() successfully completed......................................
2023-06-16 18:00:28,117:INFO:SubProcess create_model() end ==================================
2023-06-16 18:00:28,117:INFO:Creating metrics dataframe
2023-06-16 18:00:28,147:INFO:Initializing create_model()
2023-06-16 18:00:28,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:00:28,147:INFO:Checking exceptions
2023-06-16 18:00:28,150:INFO:Importing libraries
2023-06-16 18:00:28,150:INFO:Copying training dataset
2023-06-16 18:00:28,169:INFO:Defining folds
2023-06-16 18:00:28,169:INFO:Declaring metric variables
2023-06-16 18:00:28,169:INFO:Importing untrained model
2023-06-16 18:00:28,169:INFO:Declaring custom model
2023-06-16 18:00:28,170:INFO:Decision Tree Classifier Imported successfully
2023-06-16 18:00:28,174:INFO:Cross validation set to False
2023-06-16 18:00:28,174:INFO:Fitting Model
2023-06-16 18:00:48,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:48,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:48,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:48,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:49,208:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 18:00:50,181:INFO:PyCaret ClassificationExperiment
2023-06-16 18:00:50,181:INFO:Logging name: clf-default-name
2023-06-16 18:00:50,181:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 18:00:50,181:INFO:version 3.0.2
2023-06-16 18:00:50,181:INFO:Initializing setup()
2023-06-16 18:00:50,181:INFO:self.USI: d317
2023-06-16 18:00:50,181:INFO:self._variable_keys: {'gpu_param', 'USI', 'X', 'X_test', 'y_train', 'fold_generator', 'is_multiclass', 'html_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'y', 'target_param', 'X_train', 'idx', 'logging_param', 'log_plots_param', 'n_jobs_param', 'exp_id', 'pipeline', 'y_test', 'fix_imbalance', 'memory', 'data', 'seed', 'fold_groups_param', 'exp_name_log', '_ml_usecase', '_available_plots'}
2023-06-16 18:00:50,181:INFO:Checking environment
2023-06-16 18:00:50,181:INFO:python_version: 3.9.7
2023-06-16 18:00:50,181:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 18:00:50,181:INFO:machine: AMD64
2023-06-16 18:00:50,181:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 18:00:50,181:INFO:Memory: svmem(total=17120436224, available=2110099456, percent=87.7, used=15010336768, free=2110099456)
2023-06-16 18:00:50,181:INFO:Physical Core: 4
2023-06-16 18:00:50,181:INFO:Logical Core: 4
2023-06-16 18:00:50,182:INFO:Checking libraries
2023-06-16 18:00:50,182:INFO:System:
2023-06-16 18:00:50,182:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 18:00:50,182:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 18:00:50,182:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 18:00:50,182:INFO:PyCaret required dependencies:
2023-06-16 18:00:50,182:INFO:                 pip: 21.2.3
2023-06-16 18:00:50,182:INFO:          setuptools: 57.4.0
2023-06-16 18:00:50,182:INFO:             pycaret: 3.0.2
2023-06-16 18:00:50,182:INFO:             IPython: 7.28.0
2023-06-16 18:00:50,182:INFO:          ipywidgets: 8.0.6
2023-06-16 18:00:50,182:INFO:                tqdm: 4.64.0
2023-06-16 18:00:50,182:INFO:               numpy: 1.22.4
2023-06-16 18:00:50,182:INFO:              pandas: 1.3.5
2023-06-16 18:00:50,182:INFO:              jinja2: 3.1.2
2023-06-16 18:00:50,182:INFO:               scipy: 1.7.1
2023-06-16 18:00:50,182:INFO:              joblib: 1.2.0
2023-06-16 18:00:50,182:INFO:             sklearn: 1.1.0
2023-06-16 18:00:50,182:INFO:                pyod: 1.0.9
2023-06-16 18:00:50,182:INFO:            imblearn: 0.9.1
2023-06-16 18:00:50,183:INFO:   category_encoders: 2.6.1
2023-06-16 18:00:50,183:INFO:            lightgbm: 3.3.5
2023-06-16 18:00:50,183:INFO:               numba: 0.57.0
2023-06-16 18:00:50,183:INFO:            requests: 2.31.0
2023-06-16 18:00:50,183:INFO:          matplotlib: 3.4.3
2023-06-16 18:00:50,183:INFO:          scikitplot: 0.3.7
2023-06-16 18:00:50,183:INFO:         yellowbrick: 1.5
2023-06-16 18:00:50,183:INFO:              plotly: 5.8.0
2023-06-16 18:00:50,183:INFO:             kaleido: 0.2.1
2023-06-16 18:00:50,183:INFO:         statsmodels: 0.14.0
2023-06-16 18:00:50,183:INFO:              sktime: 0.17.0
2023-06-16 18:00:50,183:INFO:               tbats: 1.1.3
2023-06-16 18:00:50,183:INFO:            pmdarima: 2.0.3
2023-06-16 18:00:50,183:INFO:              psutil: 5.9.0
2023-06-16 18:00:50,183:INFO:PyCaret optional dependencies:
2023-06-16 18:00:50,207:INFO:                shap: Not installed
2023-06-16 18:00:50,207:INFO:           interpret: Not installed
2023-06-16 18:00:50,207:INFO:                umap: Not installed
2023-06-16 18:00:50,207:INFO:    pandas_profiling: Not installed
2023-06-16 18:00:50,207:INFO:  explainerdashboard: Not installed
2023-06-16 18:00:50,207:INFO:             autoviz: Not installed
2023-06-16 18:00:50,207:INFO:           fairlearn: Not installed
2023-06-16 18:00:50,207:INFO:             xgboost: Not installed
2023-06-16 18:00:50,207:INFO:            catboost: Not installed
2023-06-16 18:00:50,207:INFO:              kmodes: Not installed
2023-06-16 18:00:50,207:INFO:             mlxtend: Not installed
2023-06-16 18:00:50,207:INFO:       statsforecast: Not installed
2023-06-16 18:00:50,207:INFO:        tune_sklearn: Not installed
2023-06-16 18:00:50,207:INFO:                 ray: Not installed
2023-06-16 18:00:50,207:INFO:            hyperopt: Not installed
2023-06-16 18:00:50,207:INFO:              optuna: Not installed
2023-06-16 18:00:50,207:INFO:               skopt: Not installed
2023-06-16 18:00:50,208:INFO:              mlflow: Not installed
2023-06-16 18:00:50,208:INFO:              gradio: Not installed
2023-06-16 18:00:50,208:INFO:             fastapi: Not installed
2023-06-16 18:00:50,208:INFO:             uvicorn: Not installed
2023-06-16 18:00:50,208:INFO:              m2cgen: Not installed
2023-06-16 18:00:50,208:INFO:           evidently: Not installed
2023-06-16 18:00:50,208:INFO:               fugue: Not installed
2023-06-16 18:00:50,208:INFO:           streamlit: Not installed
2023-06-16 18:00:50,208:INFO:             prophet: Not installed
2023-06-16 18:00:50,208:INFO:None
2023-06-16 18:00:50,208:INFO:Set up data.
2023-06-16 18:00:50,275:INFO:Set up train/test split.
2023-06-16 18:00:50,300:INFO:Set up index.
2023-06-16 18:00:50,301:INFO:Set up folding strategy.
2023-06-16 18:00:50,301:INFO:Assigning column types.
2023-06-16 18:00:50,314:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 18:00:50,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,378:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,522:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,523:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,555:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 18:00:50,613:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,700:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,735:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 18:00:50,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,912:INFO:Preparing preprocessing pipeline...
2023-06-16 18:00:50,914:INFO:Set up simple imputation.
2023-06-16 18:00:50,925:INFO:Set up encoding of ordinal features.
2023-06-16 18:00:50,936:INFO:Set up encoding of categorical features.
2023-06-16 18:00:50,936:INFO:Set up removing multicollinearity.
2023-06-16 18:00:50,937:INFO:Set up imbalanced handling.
2023-06-16 18:00:50,937:INFO:Set up feature selection.
2023-06-16 18:00:51,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,023:INFO:Set up column name cleaning.
2023-06-16 18:00:51,413:INFO:Finished creating preprocessing pipeline.
2023-06-16 18:00:51,467:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002AB8E608A60>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 18:00:51,467:INFO:Creating final display dataframe.
2023-06-16 18:00:51,636:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              d317
2023-06-16 18:00:51,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,842:INFO:setup() successfully completed in 2.45s...............
2023-06-16 18:00:52,696:INFO:Initializing compare_models()
2023-06-16 18:00:52,696:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, include=['lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, 'include': ['lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 18:00:52,696:INFO:Checking exceptions
2023-06-16 18:00:52,706:INFO:Preparing display monitor
2023-06-16 18:00:52,757:INFO:Initializing Logistic Regression
2023-06-16 18:00:52,759:INFO:Total runtime is 1.6609827677408855e-05 minutes
2023-06-16 18:00:52,763:INFO:SubProcess create_model() called ==================================
2023-06-16 18:00:52,764:INFO:Initializing create_model()
2023-06-16 18:00:52,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AB8DD56430>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:00:52,764:INFO:Checking exceptions
2023-06-16 18:00:52,764:INFO:Importing libraries
2023-06-16 18:00:52,764:INFO:Copying training dataset
2023-06-16 18:00:52,788:INFO:Defining folds
2023-06-16 18:00:52,788:INFO:Declaring metric variables
2023-06-16 18:00:52,795:INFO:Importing untrained model
2023-06-16 18:00:52,802:INFO:Logistic Regression Imported successfully
2023-06-16 18:00:52,814:INFO:Starting cross validation
2023-06-16 18:00:52,817:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:01:00,684:INFO:Calculating mean and std
2023-06-16 18:01:00,686:INFO:Creating metrics dataframe
2023-06-16 18:01:01,521:INFO:Uploading results into container
2023-06-16 18:01:01,522:INFO:Uploading model into container now
2023-06-16 18:01:01,522:INFO:_master_model_container: 1
2023-06-16 18:01:01,522:INFO:_display_container: 2
2023-06-16 18:01:01,523:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:01:01,523:INFO:create_model() successfully completed......................................
2023-06-16 18:01:01,594:INFO:SubProcess create_model() end ==================================
2023-06-16 18:01:01,594:INFO:Creating metrics dataframe
2023-06-16 18:01:01,631:INFO:Initializing create_model()
2023-06-16 18:01:01,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:01:01,631:INFO:Checking exceptions
2023-06-16 18:01:01,634:INFO:Importing libraries
2023-06-16 18:01:01,634:INFO:Copying training dataset
2023-06-16 18:01:01,651:INFO:Defining folds
2023-06-16 18:01:01,651:INFO:Declaring metric variables
2023-06-16 18:01:01,651:INFO:Importing untrained model
2023-06-16 18:01:01,651:INFO:Declaring custom model
2023-06-16 18:01:01,652:INFO:Logistic Regression Imported successfully
2023-06-16 18:01:01,656:INFO:Cross validation set to False
2023-06-16 18:01:01,656:INFO:Fitting Model
2023-06-16 18:01:02,691:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:01:02,691:INFO:create_model() successfully completed......................................
2023-06-16 18:01:02,801:INFO:_master_model_container: 1
2023-06-16 18:01:02,801:INFO:_display_container: 2
2023-06-16 18:01:02,802:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:01:02,802:INFO:compare_models() successfully completed......................................
2023-06-16 18:01:57,133:INFO:Initializing create_model()
2023-06-16 18:01:57,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:01:57,133:INFO:Checking exceptions
2023-06-16 18:01:57,168:INFO:Importing libraries
2023-06-16 18:01:57,168:INFO:Copying training dataset
2023-06-16 18:01:57,186:INFO:Defining folds
2023-06-16 18:01:57,186:INFO:Declaring metric variables
2023-06-16 18:01:57,190:INFO:Importing untrained model
2023-06-16 18:01:57,195:INFO:Logistic Regression Imported successfully
2023-06-16 18:01:57,208:INFO:Starting cross validation
2023-06-16 18:01:57,211:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:02:00,848:INFO:Calculating mean and std
2023-06-16 18:02:00,851:INFO:Creating metrics dataframe
2023-06-16 18:02:00,859:INFO:Finalizing model
2023-06-16 18:02:02,019:INFO:Uploading results into container
2023-06-16 18:02:02,021:INFO:Uploading model into container now
2023-06-16 18:02:02,040:INFO:_master_model_container: 2
2023-06-16 18:02:02,040:INFO:_display_container: 3
2023-06-16 18:02:02,041:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:02:02,041:INFO:create_model() successfully completed......................................
2023-06-16 18:02:11,865:INFO:Initializing create_model()
2023-06-16 18:02:11,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:02:11,866:INFO:Checking exceptions
2023-06-16 18:02:11,900:INFO:Importing libraries
2023-06-16 18:02:11,901:INFO:Copying training dataset
2023-06-16 18:02:11,920:INFO:Defining folds
2023-06-16 18:02:11,920:INFO:Declaring metric variables
2023-06-16 18:02:11,924:INFO:Importing untrained model
2023-06-16 18:02:11,928:INFO:Logistic Regression Imported successfully
2023-06-16 18:02:11,940:INFO:Starting cross validation
2023-06-16 18:02:11,942:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:02:15,622:INFO:Calculating mean and std
2023-06-16 18:02:15,624:INFO:Creating metrics dataframe
2023-06-16 18:02:15,632:INFO:Finalizing model
2023-06-16 18:02:16,884:INFO:Uploading results into container
2023-06-16 18:02:16,885:INFO:Uploading model into container now
2023-06-16 18:02:16,902:INFO:_master_model_container: 3
2023-06-16 18:02:16,902:INFO:_display_container: 4
2023-06-16 18:02:16,902:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:02:16,902:INFO:create_model() successfully completed......................................
2023-06-16 18:02:17,071:INFO:Initializing evaluate_model()
2023-06-16 18:02:17,071:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:02:17,123:INFO:Initializing plot_model()
2023-06-16 18:02:17,123:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, system=True)
2023-06-16 18:02:17,123:INFO:Checking exceptions
2023-06-16 18:02:17,129:INFO:Preloading libraries
2023-06-16 18:02:17,129:INFO:Copying training dataset
2023-06-16 18:02:17,129:INFO:Plot type: pipeline
2023-06-16 18:02:17,717:INFO:Visual Rendered Successfully
2023-06-16 18:02:17,802:INFO:plot_model() successfully completed......................................
2023-06-16 18:02:20,494:INFO:Initializing plot_model()
2023-06-16 18:02:20,494:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, system=True)
2023-06-16 18:02:20,494:INFO:Checking exceptions
2023-06-16 18:02:20,500:INFO:Preloading libraries
2023-06-16 18:02:20,501:INFO:Copying training dataset
2023-06-16 18:02:20,501:INFO:Plot type: auc
2023-06-16 18:02:20,643:INFO:Fitting Model
2023-06-16 18:02:20,645:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:02:20,646:INFO:Scoring test/hold-out set
2023-06-16 18:02:20,843:INFO:Visual Rendered Successfully
2023-06-16 18:02:20,958:INFO:plot_model() successfully completed......................................
2023-06-16 18:02:23,134:INFO:Initializing plot_model()
2023-06-16 18:02:23,134:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, system=True)
2023-06-16 18:02:23,134:INFO:Checking exceptions
2023-06-16 18:02:23,141:INFO:Preloading libraries
2023-06-16 18:02:23,141:INFO:Copying training dataset
2023-06-16 18:02:23,141:INFO:Plot type: confusion_matrix
2023-06-16 18:02:23,275:INFO:Fitting Model
2023-06-16 18:02:23,275:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:02:23,276:INFO:Scoring test/hold-out set
2023-06-16 18:02:23,387:INFO:Visual Rendered Successfully
2023-06-16 18:02:23,463:INFO:plot_model() successfully completed......................................
2023-06-16 18:02:38,870:INFO:Initializing create_model()
2023-06-16 18:02:38,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:02:38,870:INFO:Checking exceptions
2023-06-16 18:02:38,905:INFO:Importing libraries
2023-06-16 18:02:38,905:INFO:Copying training dataset
2023-06-16 18:02:38,922:INFO:Defining folds
2023-06-16 18:02:38,922:INFO:Declaring metric variables
2023-06-16 18:02:38,930:INFO:Importing untrained model
2023-06-16 18:02:38,936:INFO:Decision Tree Classifier Imported successfully
2023-06-16 18:02:38,948:INFO:Starting cross validation
2023-06-16 18:02:38,951:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:02:42,410:INFO:Calculating mean and std
2023-06-16 18:02:42,411:INFO:Creating metrics dataframe
2023-06-16 18:02:42,419:INFO:Finalizing model
2023-06-16 18:05:32,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:05:32,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:05:32,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:05:32,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:05:33,421:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 18:05:34,187:INFO:PyCaret ClassificationExperiment
2023-06-16 18:05:34,187:INFO:Logging name: clf-default-name
2023-06-16 18:05:34,187:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 18:05:34,187:INFO:version 3.0.2
2023-06-16 18:05:34,188:INFO:Initializing setup()
2023-06-16 18:05:34,188:INFO:self.USI: 9f99
2023-06-16 18:05:34,188:INFO:self._variable_keys: {'is_multiclass', '_available_plots', 'gpu_param', 'y_test', 'fold_groups_param', 'fold_generator', 'X_test', 'fold_shuffle_param', 'X_train', 'html_param', 'USI', 'logging_param', '_ml_usecase', 'y', 'X', 'memory', 'fix_imbalance', 'y_train', 'data', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'seed', 'exp_id', 'n_jobs_param', 'idx', 'target_param', 'exp_name_log'}
2023-06-16 18:05:34,188:INFO:Checking environment
2023-06-16 18:05:34,188:INFO:python_version: 3.9.7
2023-06-16 18:05:34,188:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 18:05:34,188:INFO:machine: AMD64
2023-06-16 18:05:34,188:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 18:05:34,188:INFO:Memory: svmem(total=17120436224, available=3637477376, percent=78.8, used=13482958848, free=3637477376)
2023-06-16 18:05:34,188:INFO:Physical Core: 4
2023-06-16 18:05:34,188:INFO:Logical Core: 4
2023-06-16 18:05:34,188:INFO:Checking libraries
2023-06-16 18:05:34,188:INFO:System:
2023-06-16 18:05:34,188:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 18:05:34,188:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 18:05:34,188:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 18:05:34,188:INFO:PyCaret required dependencies:
2023-06-16 18:05:34,189:INFO:                 pip: 21.2.3
2023-06-16 18:05:34,189:INFO:          setuptools: 57.4.0
2023-06-16 18:05:34,189:INFO:             pycaret: 3.0.2
2023-06-16 18:05:34,189:INFO:             IPython: 7.28.0
2023-06-16 18:05:34,189:INFO:          ipywidgets: 8.0.6
2023-06-16 18:05:34,189:INFO:                tqdm: 4.64.0
2023-06-16 18:05:34,189:INFO:               numpy: 1.22.4
2023-06-16 18:05:34,189:INFO:              pandas: 1.3.5
2023-06-16 18:05:34,189:INFO:              jinja2: 3.1.2
2023-06-16 18:05:34,189:INFO:               scipy: 1.7.1
2023-06-16 18:05:34,189:INFO:              joblib: 1.2.0
2023-06-16 18:05:34,189:INFO:             sklearn: 1.1.0
2023-06-16 18:05:34,189:INFO:                pyod: 1.0.9
2023-06-16 18:05:34,189:INFO:            imblearn: 0.9.1
2023-06-16 18:05:34,189:INFO:   category_encoders: 2.6.1
2023-06-16 18:05:34,189:INFO:            lightgbm: 3.3.5
2023-06-16 18:05:34,189:INFO:               numba: 0.57.0
2023-06-16 18:05:34,189:INFO:            requests: 2.31.0
2023-06-16 18:05:34,189:INFO:          matplotlib: 3.4.3
2023-06-16 18:05:34,189:INFO:          scikitplot: 0.3.7
2023-06-16 18:05:34,190:INFO:         yellowbrick: 1.5
2023-06-16 18:05:34,190:INFO:              plotly: 5.8.0
2023-06-16 18:05:34,190:INFO:             kaleido: 0.2.1
2023-06-16 18:05:34,190:INFO:         statsmodels: 0.14.0
2023-06-16 18:05:34,190:INFO:              sktime: 0.17.0
2023-06-16 18:05:34,190:INFO:               tbats: 1.1.3
2023-06-16 18:05:34,190:INFO:            pmdarima: 2.0.3
2023-06-16 18:05:34,190:INFO:              psutil: 5.9.0
2023-06-16 18:05:34,190:INFO:PyCaret optional dependencies:
2023-06-16 18:05:34,213:INFO:                shap: Not installed
2023-06-16 18:05:34,213:INFO:           interpret: Not installed
2023-06-16 18:05:34,213:INFO:                umap: Not installed
2023-06-16 18:05:34,213:INFO:    pandas_profiling: Not installed
2023-06-16 18:05:34,213:INFO:  explainerdashboard: Not installed
2023-06-16 18:05:34,213:INFO:             autoviz: Not installed
2023-06-16 18:05:34,213:INFO:           fairlearn: Not installed
2023-06-16 18:05:34,213:INFO:             xgboost: Not installed
2023-06-16 18:05:34,213:INFO:            catboost: Not installed
2023-06-16 18:05:34,213:INFO:              kmodes: Not installed
2023-06-16 18:05:34,213:INFO:             mlxtend: Not installed
2023-06-16 18:05:34,213:INFO:       statsforecast: Not installed
2023-06-16 18:05:34,213:INFO:        tune_sklearn: Not installed
2023-06-16 18:05:34,213:INFO:                 ray: Not installed
2023-06-16 18:05:34,214:INFO:            hyperopt: Not installed
2023-06-16 18:05:34,214:INFO:              optuna: Not installed
2023-06-16 18:05:34,214:INFO:               skopt: Not installed
2023-06-16 18:05:34,214:INFO:              mlflow: Not installed
2023-06-16 18:05:34,214:INFO:              gradio: Not installed
2023-06-16 18:05:34,214:INFO:             fastapi: Not installed
2023-06-16 18:05:34,214:INFO:             uvicorn: Not installed
2023-06-16 18:05:34,214:INFO:              m2cgen: Not installed
2023-06-16 18:05:34,214:INFO:           evidently: Not installed
2023-06-16 18:05:34,214:INFO:               fugue: Not installed
2023-06-16 18:05:34,214:INFO:           streamlit: Not installed
2023-06-16 18:05:34,214:INFO:             prophet: Not installed
2023-06-16 18:05:34,214:INFO:None
2023-06-16 18:05:34,214:INFO:Set up data.
2023-06-16 18:05:34,272:INFO:Set up train/test split.
2023-06-16 18:05:34,296:INFO:Set up index.
2023-06-16 18:05:34,297:INFO:Set up folding strategy.
2023-06-16 18:05:34,297:INFO:Assigning column types.
2023-06-16 18:05:34,308:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 18:05:34,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,498:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,500:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,532:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 18:05:34,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,700:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 18:05:34,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,866:INFO:Preparing preprocessing pipeline...
2023-06-16 18:05:34,868:INFO:Set up simple imputation.
2023-06-16 18:05:34,880:INFO:Set up encoding of ordinal features.
2023-06-16 18:05:34,889:INFO:Set up encoding of categorical features.
2023-06-16 18:05:34,889:INFO:Set up removing multicollinearity.
2023-06-16 18:05:34,889:INFO:Set up imbalanced handling.
2023-06-16 18:05:34,889:INFO:Set up feature selection.
2023-06-16 18:05:34,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,976:INFO:Set up column name cleaning.
2023-06-16 18:05:35,328:INFO:Finished creating preprocessing pipeline.
2023-06-16 18:05:35,379:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002087307BA60>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 18:05:35,380:INFO:Creating final display dataframe.
2023-06-16 18:05:35,527:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              9f99
2023-06-16 18:05:35,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:35,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:35,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:35,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:35,709:INFO:setup() successfully completed in 2.11s...............
2023-06-16 18:05:36,597:INFO:Initializing compare_models()
2023-06-16 18:05:36,597:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, include=['lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, 'include': ['lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 18:05:36,597:INFO:Checking exceptions
2023-06-16 18:05:36,607:INFO:Preparing display monitor
2023-06-16 18:05:36,655:INFO:Initializing Logistic Regression
2023-06-16 18:05:36,656:INFO:Total runtime is 1.6677379608154298e-05 minutes
2023-06-16 18:05:36,661:INFO:SubProcess create_model() called ==================================
2023-06-16 18:05:36,662:INFO:Initializing create_model()
2023-06-16 18:05:36,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020860A72160>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:05:36,662:INFO:Checking exceptions
2023-06-16 18:05:36,662:INFO:Importing libraries
2023-06-16 18:05:36,662:INFO:Copying training dataset
2023-06-16 18:05:36,686:INFO:Defining folds
2023-06-16 18:05:36,686:INFO:Declaring metric variables
2023-06-16 18:05:36,693:INFO:Importing untrained model
2023-06-16 18:05:36,698:INFO:Logistic Regression Imported successfully
2023-06-16 18:05:36,709:INFO:Starting cross validation
2023-06-16 18:05:36,715:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:05:43,735:INFO:Calculating mean and std
2023-06-16 18:05:43,736:INFO:Creating metrics dataframe
2023-06-16 18:05:44,505:INFO:Uploading results into container
2023-06-16 18:05:44,505:INFO:Uploading model into container now
2023-06-16 18:05:44,506:INFO:_master_model_container: 1
2023-06-16 18:05:44,506:INFO:_display_container: 2
2023-06-16 18:05:44,506:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:05:44,507:INFO:create_model() successfully completed......................................
2023-06-16 18:05:44,572:INFO:SubProcess create_model() end ==================================
2023-06-16 18:05:44,572:INFO:Creating metrics dataframe
2023-06-16 18:05:44,601:INFO:Initializing create_model()
2023-06-16 18:05:44,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:05:44,602:INFO:Checking exceptions
2023-06-16 18:05:44,604:INFO:Importing libraries
2023-06-16 18:05:44,605:INFO:Copying training dataset
2023-06-16 18:05:44,624:INFO:Defining folds
2023-06-16 18:05:44,624:INFO:Declaring metric variables
2023-06-16 18:05:44,625:INFO:Importing untrained model
2023-06-16 18:05:44,625:INFO:Declaring custom model
2023-06-16 18:05:44,626:INFO:Logistic Regression Imported successfully
2023-06-16 18:05:44,627:INFO:Cross validation set to False
2023-06-16 18:05:44,628:INFO:Fitting Model
2023-06-16 18:05:45,682:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:05:45,682:INFO:create_model() successfully completed......................................
2023-06-16 18:05:45,805:INFO:_master_model_container: 1
2023-06-16 18:05:45,805:INFO:_display_container: 2
2023-06-16 18:05:45,805:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:05:45,805:INFO:compare_models() successfully completed......................................
2023-06-16 18:06:02,827:INFO:Initializing create_model()
2023-06-16 18:06:02,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:06:02,828:INFO:Checking exceptions
2023-06-16 18:06:02,860:INFO:Importing libraries
2023-06-16 18:06:02,860:INFO:Copying training dataset
2023-06-16 18:06:02,875:INFO:Defining folds
2023-06-16 18:06:02,876:INFO:Declaring metric variables
2023-06-16 18:06:02,879:INFO:Importing untrained model
2023-06-16 18:06:02,884:INFO:Random Forest Classifier Imported successfully
2023-06-16 18:06:02,894:INFO:Starting cross validation
2023-06-16 18:06:02,896:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:06:07,529:INFO:Calculating mean and std
2023-06-16 18:06:07,530:INFO:Creating metrics dataframe
2023-06-16 18:06:07,539:INFO:Finalizing model
2023-06-16 18:06:09,013:INFO:Uploading results into container
2023-06-16 18:06:09,015:INFO:Uploading model into container now
2023-06-16 18:06:09,031:INFO:_master_model_container: 2
2023-06-16 18:06:09,031:INFO:_display_container: 3
2023-06-16 18:06:09,032:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 18:06:09,032:INFO:create_model() successfully completed......................................
2023-06-16 18:06:09,106:INFO:Initializing evaluate_model()
2023-06-16 18:06:09,106:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:06:09,136:INFO:Initializing plot_model()
2023-06-16 18:06:09,136:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, system=True)
2023-06-16 18:06:09,136:INFO:Checking exceptions
2023-06-16 18:06:09,165:INFO:Preloading libraries
2023-06-16 18:06:09,223:INFO:Copying training dataset
2023-06-16 18:06:09,223:INFO:Plot type: pipeline
2023-06-16 18:06:09,445:INFO:Visual Rendered Successfully
2023-06-16 18:06:09,511:INFO:plot_model() successfully completed......................................
2023-06-16 18:06:27,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:06:27,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:06:27,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:06:27,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:06:28,918:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 18:06:29,712:INFO:PyCaret ClassificationExperiment
2023-06-16 18:06:29,712:INFO:Logging name: clf-default-name
2023-06-16 18:06:29,712:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 18:06:29,712:INFO:version 3.0.2
2023-06-16 18:06:29,712:INFO:Initializing setup()
2023-06-16 18:06:29,712:INFO:self.USI: 5ee9
2023-06-16 18:06:29,712:INFO:self._variable_keys: {'logging_param', 'memory', 'fix_imbalance', 'exp_id', 'idx', 'USI', 'gpu_n_jobs_param', 'exp_name_log', 'y', 'is_multiclass', 'fold_shuffle_param', '_available_plots', 'html_param', 'n_jobs_param', 'X_test', 'y_test', 'X_train', 'X', 'pipeline', 'fold_generator', 'gpu_param', 'target_param', 'log_plots_param', '_ml_usecase', 'y_train', 'seed', 'fold_groups_param', 'data'}
2023-06-16 18:06:29,712:INFO:Checking environment
2023-06-16 18:06:29,712:INFO:python_version: 3.9.7
2023-06-16 18:06:29,712:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 18:06:29,712:INFO:machine: AMD64
2023-06-16 18:06:29,712:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 18:06:29,713:INFO:Memory: svmem(total=17120436224, available=4698177536, percent=72.6, used=12422258688, free=4698177536)
2023-06-16 18:06:29,713:INFO:Physical Core: 4
2023-06-16 18:06:29,713:INFO:Logical Core: 4
2023-06-16 18:06:29,713:INFO:Checking libraries
2023-06-16 18:06:29,713:INFO:System:
2023-06-16 18:06:29,713:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 18:06:29,713:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 18:06:29,713:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 18:06:29,713:INFO:PyCaret required dependencies:
2023-06-16 18:06:29,713:INFO:                 pip: 21.2.3
2023-06-16 18:06:29,713:INFO:          setuptools: 57.4.0
2023-06-16 18:06:29,713:INFO:             pycaret: 3.0.2
2023-06-16 18:06:29,713:INFO:             IPython: 7.28.0
2023-06-16 18:06:29,713:INFO:          ipywidgets: 8.0.6
2023-06-16 18:06:29,713:INFO:                tqdm: 4.64.0
2023-06-16 18:06:29,713:INFO:               numpy: 1.22.4
2023-06-16 18:06:29,713:INFO:              pandas: 1.3.5
2023-06-16 18:06:29,713:INFO:              jinja2: 3.1.2
2023-06-16 18:06:29,713:INFO:               scipy: 1.7.1
2023-06-16 18:06:29,714:INFO:              joblib: 1.2.0
2023-06-16 18:06:29,714:INFO:             sklearn: 1.1.0
2023-06-16 18:06:29,714:INFO:                pyod: 1.0.9
2023-06-16 18:06:29,714:INFO:            imblearn: 0.9.1
2023-06-16 18:06:29,714:INFO:   category_encoders: 2.6.1
2023-06-16 18:06:29,714:INFO:            lightgbm: 3.3.5
2023-06-16 18:06:29,714:INFO:               numba: 0.57.0
2023-06-16 18:06:29,714:INFO:            requests: 2.31.0
2023-06-16 18:06:29,714:INFO:          matplotlib: 3.4.3
2023-06-16 18:06:29,714:INFO:          scikitplot: 0.3.7
2023-06-16 18:06:29,714:INFO:         yellowbrick: 1.5
2023-06-16 18:06:29,714:INFO:              plotly: 5.8.0
2023-06-16 18:06:29,714:INFO:             kaleido: 0.2.1
2023-06-16 18:06:29,714:INFO:         statsmodels: 0.14.0
2023-06-16 18:06:29,714:INFO:              sktime: 0.17.0
2023-06-16 18:06:29,714:INFO:               tbats: 1.1.3
2023-06-16 18:06:29,714:INFO:            pmdarima: 2.0.3
2023-06-16 18:06:29,714:INFO:              psutil: 5.9.0
2023-06-16 18:06:29,714:INFO:PyCaret optional dependencies:
2023-06-16 18:06:29,735:INFO:                shap: Not installed
2023-06-16 18:06:29,735:INFO:           interpret: Not installed
2023-06-16 18:06:29,735:INFO:                umap: Not installed
2023-06-16 18:06:29,735:INFO:    pandas_profiling: Not installed
2023-06-16 18:06:29,735:INFO:  explainerdashboard: Not installed
2023-06-16 18:06:29,735:INFO:             autoviz: Not installed
2023-06-16 18:06:29,735:INFO:           fairlearn: Not installed
2023-06-16 18:06:29,735:INFO:             xgboost: Not installed
2023-06-16 18:06:29,735:INFO:            catboost: Not installed
2023-06-16 18:06:29,736:INFO:              kmodes: Not installed
2023-06-16 18:06:29,736:INFO:             mlxtend: Not installed
2023-06-16 18:06:29,736:INFO:       statsforecast: Not installed
2023-06-16 18:06:29,736:INFO:        tune_sklearn: Not installed
2023-06-16 18:06:29,736:INFO:                 ray: Not installed
2023-06-16 18:06:29,736:INFO:            hyperopt: Not installed
2023-06-16 18:06:29,736:INFO:              optuna: Not installed
2023-06-16 18:06:29,736:INFO:               skopt: Not installed
2023-06-16 18:06:29,736:INFO:              mlflow: Not installed
2023-06-16 18:06:29,736:INFO:              gradio: Not installed
2023-06-16 18:06:29,736:INFO:             fastapi: Not installed
2023-06-16 18:06:29,736:INFO:             uvicorn: Not installed
2023-06-16 18:06:29,736:INFO:              m2cgen: Not installed
2023-06-16 18:06:29,736:INFO:           evidently: Not installed
2023-06-16 18:06:29,736:INFO:               fugue: Not installed
2023-06-16 18:06:29,737:INFO:           streamlit: Not installed
2023-06-16 18:06:29,737:INFO:             prophet: Not installed
2023-06-16 18:06:29,737:INFO:None
2023-06-16 18:06:29,737:INFO:Set up data.
2023-06-16 18:06:29,795:INFO:Set up train/test split.
2023-06-16 18:06:29,819:INFO:Set up index.
2023-06-16 18:06:29,820:INFO:Set up folding strategy.
2023-06-16 18:06:29,821:INFO:Assigning column types.
2023-06-16 18:06:29,832:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 18:06:29,886:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:06:29,889:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:06:29,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:06:30,085:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:06:30,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,128:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 18:06:30,183:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:06:30,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:06:30,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,303:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 18:06:30,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,472:INFO:Preparing preprocessing pipeline...
2023-06-16 18:06:30,474:INFO:Set up simple imputation.
2023-06-16 18:06:30,485:INFO:Set up encoding of ordinal features.
2023-06-16 18:06:30,494:INFO:Set up encoding of categorical features.
2023-06-16 18:06:30,494:INFO:Set up removing multicollinearity.
2023-06-16 18:06:30,494:INFO:Set up imbalanced handling.
2023-06-16 18:06:30,494:INFO:Set up feature selection.
2023-06-16 18:06:30,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,584:INFO:Set up column name cleaning.
2023-06-16 18:06:30,932:INFO:Finished creating preprocessing pipeline.
2023-06-16 18:06:30,997:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001D9727C9A60>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 18:06:30,998:INFO:Creating final display dataframe.
2023-06-16 18:06:31,159:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              5ee9
2023-06-16 18:06:31,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:31,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:31,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:31,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:31,364:INFO:setup() successfully completed in 2.27s...............
2023-06-16 18:06:32,329:INFO:Initializing create_model()
2023-06-16 18:06:32,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:06:32,330:INFO:Checking exceptions
2023-06-16 18:06:32,413:INFO:Importing libraries
2023-06-16 18:06:32,413:INFO:Copying training dataset
2023-06-16 18:06:32,428:INFO:Defining folds
2023-06-16 18:06:32,428:INFO:Declaring metric variables
2023-06-16 18:06:32,433:INFO:Importing untrained model
2023-06-16 18:06:32,438:INFO:Logistic Regression Imported successfully
2023-06-16 18:06:32,452:INFO:Starting cross validation
2023-06-16 18:06:32,454:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:06:40,419:INFO:Calculating mean and std
2023-06-16 18:06:40,420:INFO:Creating metrics dataframe
2023-06-16 18:06:40,427:INFO:Finalizing model
2023-06-16 18:06:41,575:INFO:Uploading results into container
2023-06-16 18:06:41,576:INFO:Uploading model into container now
2023-06-16 18:06:41,597:INFO:_master_model_container: 1
2023-06-16 18:06:41,597:INFO:_display_container: 2
2023-06-16 18:06:41,597:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:06:41,598:INFO:create_model() successfully completed......................................
2023-06-16 18:06:41,719:INFO:Initializing evaluate_model()
2023-06-16 18:06:41,719:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:06:41,746:INFO:Initializing plot_model()
2023-06-16 18:06:41,746:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:06:41,747:INFO:Checking exceptions
2023-06-16 18:06:41,757:INFO:Preloading libraries
2023-06-16 18:06:41,757:INFO:Copying training dataset
2023-06-16 18:06:41,757:INFO:Plot type: pipeline
2023-06-16 18:06:41,978:INFO:Visual Rendered Successfully
2023-06-16 18:06:42,046:INFO:plot_model() successfully completed......................................
2023-06-16 18:06:42,098:INFO:Initializing create_model()
2023-06-16 18:06:42,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:06:42,098:INFO:Checking exceptions
2023-06-16 18:06:42,132:INFO:Importing libraries
2023-06-16 18:06:42,133:INFO:Copying training dataset
2023-06-16 18:06:42,150:INFO:Defining folds
2023-06-16 18:06:42,150:INFO:Declaring metric variables
2023-06-16 18:06:42,155:INFO:Importing untrained model
2023-06-16 18:06:42,159:INFO:Random Forest Classifier Imported successfully
2023-06-16 18:06:42,176:INFO:Starting cross validation
2023-06-16 18:06:42,179:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:06:46,646:INFO:Calculating mean and std
2023-06-16 18:06:46,648:INFO:Creating metrics dataframe
2023-06-16 18:06:46,657:INFO:Finalizing model
2023-06-16 18:06:47,964:INFO:Uploading results into container
2023-06-16 18:06:47,966:INFO:Uploading model into container now
2023-06-16 18:06:47,982:INFO:_master_model_container: 2
2023-06-16 18:06:47,982:INFO:_display_container: 3
2023-06-16 18:06:47,982:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 18:06:47,983:INFO:create_model() successfully completed......................................
2023-06-16 18:06:48,062:INFO:Initializing evaluate_model()
2023-06-16 18:06:48,062:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:06:48,085:INFO:Initializing plot_model()
2023-06-16 18:06:48,086:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:06:48,086:INFO:Checking exceptions
2023-06-16 18:06:48,117:INFO:Preloading libraries
2023-06-16 18:06:48,182:INFO:Copying training dataset
2023-06-16 18:06:48,182:INFO:Plot type: pipeline
2023-06-16 18:06:48,384:INFO:Visual Rendered Successfully
2023-06-16 18:06:48,452:INFO:plot_model() successfully completed......................................
2023-06-16 18:06:52,294:INFO:Initializing plot_model()
2023-06-16 18:06:52,294:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:06:52,295:INFO:Checking exceptions
2023-06-16 18:06:52,327:INFO:Preloading libraries
2023-06-16 18:06:52,379:INFO:Copying training dataset
2023-06-16 18:06:52,379:INFO:Plot type: auc
2023-06-16 18:06:52,513:INFO:Fitting Model
2023-06-16 18:06:52,515:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:06:52,516:INFO:Scoring test/hold-out set
2023-06-16 18:06:52,918:INFO:Visual Rendered Successfully
2023-06-16 18:06:53,005:INFO:plot_model() successfully completed......................................
2023-06-16 18:07:05,342:INFO:Initializing plot_model()
2023-06-16 18:07:05,342:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:07:05,342:INFO:Checking exceptions
2023-06-16 18:07:05,375:INFO:Preloading libraries
2023-06-16 18:07:05,427:INFO:Copying training dataset
2023-06-16 18:07:05,427:INFO:Plot type: tree
2023-06-16 18:07:07,019:INFO:Plotting decision trees
2023-06-16 18:07:23,030:INFO:Initializing plot_model()
2023-06-16 18:07:23,030:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:07:23,030:INFO:Checking exceptions
2023-06-16 18:07:23,160:INFO:Preloading libraries
2023-06-16 18:07:23,228:INFO:Copying training dataset
2023-06-16 18:07:23,228:INFO:Plot type: pipeline
2023-06-16 18:07:23,415:INFO:Visual Rendered Successfully
2023-06-16 18:07:23,645:INFO:plot_model() successfully completed......................................
2023-06-16 18:07:42,281:INFO:Initializing plot_model()
2023-06-16 18:07:42,282:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:07:42,282:INFO:Checking exceptions
2023-06-16 18:07:42,313:INFO:Preloading libraries
2023-06-16 18:07:42,368:INFO:Copying training dataset
2023-06-16 18:07:42,368:INFO:Plot type: feature
2023-06-16 18:07:42,368:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 18:07:42,569:INFO:Visual Rendered Successfully
2023-06-16 18:07:42,742:INFO:plot_model() successfully completed......................................
2023-06-16 18:07:46,207:INFO:Initializing plot_model()
2023-06-16 18:07:46,208:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:07:46,208:INFO:Checking exceptions
2023-06-16 18:07:46,215:INFO:Preloading libraries
2023-06-16 18:07:46,215:INFO:Copying training dataset
2023-06-16 18:07:46,215:INFO:Plot type: feature
2023-06-16 18:07:46,479:INFO:Visual Rendered Successfully
2023-06-16 18:07:46,682:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:04,798:INFO:Initializing plot_model()
2023-06-16 18:08:04,798:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:04,798:INFO:Checking exceptions
2023-06-16 18:08:04,833:INFO:Preloading libraries
2023-06-16 18:08:04,888:INFO:Copying training dataset
2023-06-16 18:08:04,888:INFO:Plot type: feature_all
2023-06-16 18:08:04,931:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 18:08:05,164:INFO:Visual Rendered Successfully
2023-06-16 18:08:05,357:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:07,358:INFO:Initializing plot_model()
2023-06-16 18:08:07,358:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:07,358:INFO:Checking exceptions
2023-06-16 18:08:07,365:INFO:Preloading libraries
2023-06-16 18:08:07,365:INFO:Copying training dataset
2023-06-16 18:08:07,366:INFO:Plot type: feature_all
2023-06-16 18:08:07,652:INFO:Visual Rendered Successfully
2023-06-16 18:08:07,852:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:18,733:INFO:Initializing plot_model()
2023-06-16 18:08:18,734:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:18,734:INFO:Checking exceptions
2023-06-16 18:08:18,769:INFO:Preloading libraries
2023-06-16 18:08:18,821:INFO:Copying training dataset
2023-06-16 18:08:18,821:INFO:Plot type: pr
2023-06-16 18:08:18,956:INFO:Fitting Model
2023-06-16 18:08:18,958:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:08:18,959:INFO:Scoring test/hold-out set
2023-06-16 18:08:19,268:INFO:Visual Rendered Successfully
2023-06-16 18:08:19,453:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:21,694:INFO:Initializing plot_model()
2023-06-16 18:08:21,694:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:21,694:INFO:Checking exceptions
2023-06-16 18:08:21,701:INFO:Preloading libraries
2023-06-16 18:08:21,702:INFO:Copying training dataset
2023-06-16 18:08:21,702:INFO:Plot type: pr
2023-06-16 18:08:21,841:INFO:Fitting Model
2023-06-16 18:08:21,842:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:08:21,843:INFO:Scoring test/hold-out set
2023-06-16 18:08:22,024:INFO:Visual Rendered Successfully
2023-06-16 18:08:22,239:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:27,790:INFO:Initializing plot_model()
2023-06-16 18:08:27,790:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:27,790:INFO:Checking exceptions
2023-06-16 18:08:27,824:INFO:Preloading libraries
2023-06-16 18:08:27,876:INFO:Copying training dataset
2023-06-16 18:08:27,876:INFO:Plot type: auc
2023-06-16 18:08:28,013:INFO:Fitting Model
2023-06-16 18:08:28,014:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:08:28,015:INFO:Scoring test/hold-out set
2023-06-16 18:08:28,358:INFO:Visual Rendered Successfully
2023-06-16 18:08:28,621:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:28,742:INFO:Initializing plot_model()
2023-06-16 18:08:28,743:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:28,743:INFO:Checking exceptions
2023-06-16 18:08:28,775:INFO:Preloading libraries
2023-06-16 18:08:28,828:INFO:Copying training dataset
2023-06-16 18:08:28,828:INFO:Plot type: confusion_matrix
2023-06-16 18:08:28,966:INFO:Fitting Model
2023-06-16 18:08:28,966:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:08:28,967:INFO:Scoring test/hold-out set
2023-06-16 18:08:29,231:INFO:Visual Rendered Successfully
2023-06-16 18:08:29,432:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:31,310:INFO:Initializing plot_model()
2023-06-16 18:08:31,310:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:31,310:INFO:Checking exceptions
2023-06-16 18:08:31,318:INFO:Preloading libraries
2023-06-16 18:08:31,319:INFO:Copying training dataset
2023-06-16 18:08:31,319:INFO:Plot type: confusion_matrix
2023-06-16 18:08:31,455:INFO:Fitting Model
2023-06-16 18:08:31,455:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:08:31,456:INFO:Scoring test/hold-out set
2023-06-16 18:08:31,596:INFO:Visual Rendered Successfully
2023-06-16 18:08:31,803:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:42,598:INFO:Initializing plot_model()
2023-06-16 18:08:42,598:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:42,599:INFO:Checking exceptions
2023-06-16 18:08:42,605:INFO:Preloading libraries
2023-06-16 18:08:42,606:INFO:Copying training dataset
2023-06-16 18:08:42,606:INFO:Plot type: auc
2023-06-16 18:08:42,740:INFO:Fitting Model
2023-06-16 18:08:42,741:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:08:42,742:INFO:Scoring test/hold-out set
2023-06-16 18:08:42,916:INFO:Visual Rendered Successfully
2023-06-16 18:08:43,153:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:43,790:INFO:Initializing plot_model()
2023-06-16 18:08:43,790:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:43,790:INFO:Checking exceptions
2023-06-16 18:08:43,824:INFO:Preloading libraries
2023-06-16 18:08:43,875:INFO:Copying training dataset
2023-06-16 18:08:43,875:INFO:Plot type: auc
2023-06-16 18:08:44,013:INFO:Fitting Model
2023-06-16 18:08:44,014:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:08:44,014:INFO:Scoring test/hold-out set
2023-06-16 18:08:44,348:INFO:Visual Rendered Successfully
2023-06-16 18:08:44,536:INFO:plot_model() successfully completed......................................
2023-06-16 18:09:30,089:INFO:Initializing create_model()
2023-06-16 18:09:30,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=rf, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:09:30,090:INFO:Checking exceptions
2023-06-16 18:09:30,126:INFO:Importing libraries
2023-06-16 18:09:30,126:INFO:Copying training dataset
2023-06-16 18:09:30,142:INFO:Defining folds
2023-06-16 18:09:30,142:INFO:Declaring metric variables
2023-06-16 18:09:30,146:INFO:Importing untrained model
2023-06-16 18:09:30,152:INFO:Random Forest Classifier Imported successfully
2023-06-16 18:09:30,161:INFO:Starting cross validation
2023-06-16 18:09:30,164:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:09:34,113:INFO:Calculating mean and std
2023-06-16 18:09:34,115:INFO:Creating metrics dataframe
2023-06-16 18:09:34,121:INFO:Finalizing model
2023-06-16 18:09:35,402:INFO:Uploading results into container
2023-06-16 18:09:35,403:INFO:Uploading model into container now
2023-06-16 18:09:35,419:INFO:_master_model_container: 3
2023-06-16 18:09:35,419:INFO:_display_container: 4
2023-06-16 18:09:35,419:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 18:09:35,419:INFO:create_model() successfully completed......................................
2023-06-16 18:09:35,612:INFO:Initializing evaluate_model()
2023-06-16 18:09:35,612:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:09:35,638:INFO:Initializing plot_model()
2023-06-16 18:09:35,638:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:09:35,639:INFO:Checking exceptions
2023-06-16 18:09:35,674:INFO:Preloading libraries
2023-06-16 18:09:35,732:INFO:Copying training dataset
2023-06-16 18:09:35,732:INFO:Plot type: pipeline
2023-06-16 18:09:35,894:INFO:Visual Rendered Successfully
2023-06-16 18:09:36,081:INFO:plot_model() successfully completed......................................
2023-06-16 18:11:49,122:INFO:Initializing plot_model()
2023-06-16 18:11:49,122:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:11:49,122:INFO:Checking exceptions
2023-06-16 18:11:49,155:INFO:Preloading libraries
2023-06-16 18:11:49,214:INFO:Copying training dataset
2023-06-16 18:11:49,214:INFO:Plot type: parameter
2023-06-16 18:11:49,218:INFO:Visual Rendered Successfully
2023-06-16 18:11:49,387:INFO:plot_model() successfully completed......................................
2023-06-16 18:12:13,893:INFO:Initializing plot_model()
2023-06-16 18:12:13,893:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:12:13,894:INFO:Checking exceptions
2023-06-16 18:12:13,901:INFO:Preloading libraries
2023-06-16 18:12:13,902:INFO:Copying training dataset
2023-06-16 18:12:13,902:INFO:Plot type: parameter
2023-06-16 18:12:13,907:INFO:Visual Rendered Successfully
2023-06-16 18:12:14,077:INFO:plot_model() successfully completed......................................
2023-06-16 18:12:35,982:INFO:Initializing plot_model()
2023-06-16 18:12:35,982:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:12:35,982:INFO:Checking exceptions
2023-06-16 18:12:35,990:INFO:Preloading libraries
2023-06-16 18:12:35,990:INFO:Copying training dataset
2023-06-16 18:12:35,990:INFO:Plot type: class_report
2023-06-16 18:12:36,127:INFO:Fitting Model
2023-06-16 18:12:36,127:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:12:36,128:INFO:Scoring test/hold-out set
2023-06-16 18:12:36,328:INFO:Visual Rendered Successfully
2023-06-16 18:12:36,523:INFO:plot_model() successfully completed......................................
2023-06-16 18:12:47,374:INFO:Initializing plot_model()
2023-06-16 18:12:47,374:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:12:47,375:INFO:Checking exceptions
2023-06-16 18:12:47,382:INFO:Preloading libraries
2023-06-16 18:12:47,382:INFO:Copying training dataset
2023-06-16 18:12:47,382:INFO:Plot type: rfe
2023-06-16 18:12:47,528:INFO:Fitting Model
2023-06-16 18:13:47,908:INFO:Visual Rendered Successfully
2023-06-16 18:13:48,130:INFO:plot_model() successfully completed......................................
2023-06-16 18:38:26,718:INFO:Initializing create_model()
2023-06-16 18:38:26,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:38:26,718:INFO:Checking exceptions
2023-06-16 18:38:26,753:INFO:Importing libraries
2023-06-16 18:38:26,753:INFO:Copying training dataset
2023-06-16 18:38:26,771:INFO:Defining folds
2023-06-16 18:38:26,772:INFO:Declaring metric variables
2023-06-16 18:38:26,776:INFO:Importing untrained model
2023-06-16 18:38:26,776:INFO:Declaring custom model
2023-06-16 18:38:26,781:INFO:Random Forest Classifier Imported successfully
2023-06-16 18:38:26,792:INFO:Starting cross validation
2023-06-16 18:38:26,794:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:39:56,136:INFO:Calculating mean and std
2023-06-16 18:39:56,137:INFO:Creating metrics dataframe
2023-06-16 18:39:56,148:INFO:Finalizing model
2023-06-16 18:40:56,623:INFO:Uploading results into container
2023-06-16 18:40:56,625:INFO:Uploading model into container now
2023-06-16 18:40:56,642:INFO:_master_model_container: 4
2023-06-16 18:40:56,642:INFO:_display_container: 5
2023-06-16 18:40:56,643:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 18:40:56,643:INFO:create_model() successfully completed......................................
2023-06-16 18:40:56,886:INFO:Initializing evaluate_model()
2023-06-16 18:40:56,886:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:40:56,911:INFO:Initializing plot_model()
2023-06-16 18:40:56,911:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:40:56,911:INFO:Checking exceptions
2023-06-16 18:40:56,923:INFO:Preloading libraries
2023-06-16 18:40:56,926:INFO:Copying training dataset
2023-06-16 18:40:56,926:INFO:Plot type: pipeline
2023-06-16 18:40:57,111:INFO:Visual Rendered Successfully
2023-06-16 18:40:57,312:INFO:plot_model() successfully completed......................................
2023-06-16 18:41:00,631:INFO:Initializing plot_model()
2023-06-16 18:41:00,632:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:00,632:INFO:Checking exceptions
2023-06-16 18:41:00,643:INFO:Preloading libraries
2023-06-16 18:41:00,647:INFO:Copying training dataset
2023-06-16 18:41:00,647:INFO:Plot type: parameter
2023-06-16 18:41:00,653:INFO:Visual Rendered Successfully
2023-06-16 18:41:00,880:INFO:plot_model() successfully completed......................................
2023-06-16 18:41:05,078:INFO:Initializing plot_model()
2023-06-16 18:41:05,079:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:05,079:INFO:Checking exceptions
2023-06-16 18:41:05,091:INFO:Preloading libraries
2023-06-16 18:41:05,094:INFO:Copying training dataset
2023-06-16 18:41:05,094:INFO:Plot type: auc
2023-06-16 18:41:05,234:INFO:Fitting Model
2023-06-16 18:41:05,235:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:41:05,236:INFO:Scoring test/hold-out set
2023-06-16 18:41:05,485:INFO:Visual Rendered Successfully
2023-06-16 18:41:05,790:INFO:plot_model() successfully completed......................................
2023-06-16 18:41:21,134:INFO:Initializing plot_model()
2023-06-16 18:41:21,134:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:21,134:INFO:Checking exceptions
2023-06-16 18:41:21,145:INFO:Preloading libraries
2023-06-16 18:41:21,149:INFO:Copying training dataset
2023-06-16 18:41:21,149:INFO:Plot type: feature
2023-06-16 18:41:21,149:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 18:41:21,329:INFO:Visual Rendered Successfully
2023-06-16 18:41:21,509:INFO:plot_model() successfully completed......................................
2023-06-16 18:41:36,918:INFO:Initializing plot_model()
2023-06-16 18:41:36,918:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:36,919:INFO:Checking exceptions
2023-06-16 18:41:36,930:INFO:Preloading libraries
2023-06-16 18:41:36,934:INFO:Copying training dataset
2023-06-16 18:41:36,934:INFO:Plot type: tree
2023-06-16 18:41:37,613:INFO:Plotting decision trees
2023-06-16 18:41:45,200:INFO:Initializing plot_model()
2023-06-16 18:41:45,201:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:45,201:INFO:Checking exceptions
2023-06-16 18:41:45,213:INFO:Preloading libraries
2023-06-16 18:41:45,218:INFO:Copying training dataset
2023-06-16 18:41:45,218:INFO:Plot type: auc
2023-06-16 18:41:45,853:INFO:Fitting Model
2023-06-16 18:41:45,854:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:41:45,855:INFO:Scoring test/hold-out set
2023-06-16 18:41:46,114:INFO:Visual Rendered Successfully
2023-06-16 18:41:46,304:INFO:plot_model() successfully completed......................................
2023-06-17 16:33:00,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 16:33:00,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 16:33:00,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 16:33:00,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 16:33:04,194:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-17 16:33:09,893:INFO:PyCaret ClassificationExperiment
2023-06-17 16:33:09,893:INFO:Logging name: clf-default-name
2023-06-17 16:33:09,893:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 16:33:09,893:INFO:version 3.0.2
2023-06-17 16:33:09,893:INFO:Initializing setup()
2023-06-17 16:33:09,893:INFO:self.USI: d088
2023-06-17 16:33:09,893:INFO:self._variable_keys: {'fold_shuffle_param', 'fold_groups_param', 'exp_name_log', 'y_test', 'X_train', 'fix_imbalance', 'memory', 'log_plots_param', 'seed', 'X_test', 'USI', 'fold_generator', 'X', 'pipeline', 'exp_id', '_ml_usecase', 'data', 'html_param', 'n_jobs_param', 'y_train', 'gpu_n_jobs_param', 'gpu_param', 'is_multiclass', '_available_plots', 'target_param', 'idx', 'y', 'logging_param'}
2023-06-17 16:33:09,893:INFO:Checking environment
2023-06-17 16:33:09,893:INFO:python_version: 3.9.7
2023-06-17 16:33:09,894:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-17 16:33:09,894:INFO:machine: AMD64
2023-06-17 16:33:09,894:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-17 16:33:09,959:INFO:Memory: svmem(total=17120436224, available=6145613824, percent=64.1, used=10974822400, free=6145613824)
2023-06-17 16:33:09,959:INFO:Physical Core: 4
2023-06-17 16:33:09,959:INFO:Logical Core: 4
2023-06-17 16:33:09,959:INFO:Checking libraries
2023-06-17 16:33:09,959:INFO:System:
2023-06-17 16:33:09,959:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-17 16:33:09,959:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-17 16:33:09,959:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-17 16:33:09,959:INFO:PyCaret required dependencies:
2023-06-17 16:33:09,959:INFO:                 pip: 21.2.3
2023-06-17 16:33:09,959:INFO:          setuptools: 57.4.0
2023-06-17 16:33:09,960:INFO:             pycaret: 3.0.2
2023-06-17 16:33:09,960:INFO:             IPython: 7.28.0
2023-06-17 16:33:09,960:INFO:          ipywidgets: 8.0.6
2023-06-17 16:33:09,960:INFO:                tqdm: 4.64.0
2023-06-17 16:33:09,960:INFO:               numpy: 1.22.4
2023-06-17 16:33:09,960:INFO:              pandas: 1.3.5
2023-06-17 16:33:09,960:INFO:              jinja2: 3.1.2
2023-06-17 16:33:09,960:INFO:               scipy: 1.7.1
2023-06-17 16:33:09,960:INFO:              joblib: 1.2.0
2023-06-17 16:33:09,960:INFO:             sklearn: 1.1.0
2023-06-17 16:33:09,960:INFO:                pyod: 1.0.9
2023-06-17 16:33:09,960:INFO:            imblearn: 0.9.1
2023-06-17 16:33:09,960:INFO:   category_encoders: 2.6.1
2023-06-17 16:33:09,960:INFO:            lightgbm: 3.3.5
2023-06-17 16:33:09,960:INFO:               numba: 0.57.0
2023-06-17 16:33:09,960:INFO:            requests: 2.31.0
2023-06-17 16:33:09,960:INFO:          matplotlib: 3.4.3
2023-06-17 16:33:09,960:INFO:          scikitplot: 0.3.7
2023-06-17 16:33:09,960:INFO:         yellowbrick: 1.5
2023-06-17 16:33:09,960:INFO:              plotly: 5.8.0
2023-06-17 16:33:09,960:INFO:             kaleido: 0.2.1
2023-06-17 16:33:09,960:INFO:         statsmodels: 0.14.0
2023-06-17 16:33:09,961:INFO:              sktime: 0.17.0
2023-06-17 16:33:09,961:INFO:               tbats: 1.1.3
2023-06-17 16:33:09,961:INFO:            pmdarima: 2.0.3
2023-06-17 16:33:09,961:INFO:              psutil: 5.9.0
2023-06-17 16:33:09,961:INFO:PyCaret optional dependencies:
2023-06-17 16:33:09,983:INFO:                shap: Not installed
2023-06-17 16:33:09,983:INFO:           interpret: Not installed
2023-06-17 16:33:09,983:INFO:                umap: Not installed
2023-06-17 16:33:09,984:INFO:    pandas_profiling: Not installed
2023-06-17 16:33:09,984:INFO:  explainerdashboard: Not installed
2023-06-17 16:33:09,984:INFO:             autoviz: Not installed
2023-06-17 16:33:09,984:INFO:           fairlearn: Not installed
2023-06-17 16:33:09,984:INFO:             xgboost: Not installed
2023-06-17 16:33:09,984:INFO:            catboost: Not installed
2023-06-17 16:33:09,984:INFO:              kmodes: Not installed
2023-06-17 16:33:09,984:INFO:             mlxtend: Not installed
2023-06-17 16:33:09,984:INFO:       statsforecast: Not installed
2023-06-17 16:33:09,984:INFO:        tune_sklearn: Not installed
2023-06-17 16:33:09,984:INFO:                 ray: Not installed
2023-06-17 16:33:09,984:INFO:            hyperopt: Not installed
2023-06-17 16:33:09,984:INFO:              optuna: Not installed
2023-06-17 16:33:09,984:INFO:               skopt: Not installed
2023-06-17 16:33:09,984:INFO:              mlflow: Not installed
2023-06-17 16:33:09,984:INFO:              gradio: Not installed
2023-06-17 16:33:09,984:INFO:             fastapi: Not installed
2023-06-17 16:33:09,984:INFO:             uvicorn: Not installed
2023-06-17 16:33:09,984:INFO:              m2cgen: Not installed
2023-06-17 16:33:09,984:INFO:           evidently: Not installed
2023-06-17 16:33:09,985:INFO:               fugue: Not installed
2023-06-17 16:33:09,985:INFO:           streamlit: Not installed
2023-06-17 16:33:09,985:INFO:             prophet: Not installed
2023-06-17 16:33:09,985:INFO:None
2023-06-17 16:33:09,985:INFO:Set up data.
2023-06-17 16:33:10,404:INFO:Set up train/test split.
2023-06-17 16:33:10,434:INFO:Set up index.
2023-06-17 16:33:10,435:INFO:Set up folding strategy.
2023-06-17 16:33:10,435:INFO:Assigning column types.
2023-06-17 16:33:10,458:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 16:33:10,508:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,710:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,741:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 16:33:10,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,870:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,901:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 16:33:10,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,098:INFO:Preparing preprocessing pipeline...
2023-06-17 16:33:11,100:INFO:Set up simple imputation.
2023-06-17 16:33:11,157:INFO:Set up encoding of ordinal features.
2023-06-17 16:33:11,177:INFO:Set up encoding of categorical features.
2023-06-17 16:33:11,177:INFO:Set up removing multicollinearity.
2023-06-17 16:33:11,177:INFO:Set up imbalanced handling.
2023-06-17 16:33:11,177:INFO:Set up feature selection.
2023-06-17 16:33:11,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,277:INFO:Set up column name cleaning.
2023-06-17 16:33:11,938:INFO:Finished creating preprocessing pipeline.
2023-06-17 16:33:12,032:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002581755EAF0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 16:33:12,033:INFO:Creating final display dataframe.
2023-06-17 16:33:12,237:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              d088
2023-06-17 16:33:12,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:12,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:12,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:12,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:12,463:INFO:setup() successfully completed in 6.89s...............
2023-06-17 16:33:18,477:INFO:Initializing create_model()
2023-06-17 16:33:18,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:33:18,478:INFO:Checking exceptions
2023-06-17 16:33:18,596:INFO:Importing libraries
2023-06-17 16:33:18,596:INFO:Copying training dataset
2023-06-17 16:33:18,641:INFO:Defining folds
2023-06-17 16:33:18,641:INFO:Declaring metric variables
2023-06-17 16:33:18,653:INFO:Importing untrained model
2023-06-17 16:33:18,653:INFO:Declaring custom model
2023-06-17 16:33:18,661:INFO:Random Forest Classifier Imported successfully
2023-06-17 16:33:18,673:INFO:Starting cross validation
2023-06-17 16:33:18,675:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:34:15,418:INFO:Calculating mean and std
2023-06-17 16:34:15,419:INFO:Creating metrics dataframe
2023-06-17 16:34:15,425:INFO:Finalizing model
2023-06-17 16:34:54,191:INFO:Uploading results into container
2023-06-17 16:34:54,192:INFO:Uploading model into container now
2023-06-17 16:34:54,210:INFO:_master_model_container: 1
2023-06-17 16:34:54,210:INFO:_display_container: 2
2023-06-17 16:34:54,211:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None)
2023-06-17 16:34:54,211:INFO:create_model() successfully completed......................................
2023-06-17 16:34:54,292:INFO:Initializing evaluate_model()
2023-06-17 16:34:54,293:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:34:54,323:INFO:Initializing plot_model()
2023-06-17 16:34:54,324:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:34:54,324:INFO:Checking exceptions
2023-06-17 16:34:54,335:INFO:Preloading libraries
2023-06-17 16:34:54,345:INFO:Copying training dataset
2023-06-17 16:34:54,345:INFO:Plot type: pipeline
2023-06-17 16:34:54,636:INFO:Visual Rendered Successfully
2023-06-17 16:34:54,704:INFO:plot_model() successfully completed......................................
2023-06-17 16:36:32,441:INFO:Initializing create_model()
2023-06-17 16:36:32,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:36:32,442:INFO:Checking exceptions
2023-06-17 16:36:32,475:INFO:Importing libraries
2023-06-17 16:36:32,475:INFO:Copying training dataset
2023-06-17 16:36:32,494:INFO:Defining folds
2023-06-17 16:36:32,494:INFO:Declaring metric variables
2023-06-17 16:36:32,498:INFO:Importing untrained model
2023-06-17 16:36:32,499:INFO:Declaring custom model
2023-06-17 16:36:32,504:INFO:Random Forest Classifier Imported successfully
2023-06-17 16:36:32,516:INFO:Starting cross validation
2023-06-17 16:36:32,519:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:37:33,229:INFO:Calculating mean and std
2023-06-17 16:37:33,230:INFO:Creating metrics dataframe
2023-06-17 16:37:33,241:INFO:Finalizing model
2023-06-17 16:38:10,688:INFO:Uploading results into container
2023-06-17 16:38:10,689:INFO:Uploading model into container now
2023-06-17 16:38:10,705:INFO:_master_model_container: 2
2023-06-17 16:38:10,706:INFO:_display_container: 3
2023-06-17 16:38:10,708:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None)
2023-06-17 16:38:10,708:INFO:create_model() successfully completed......................................
2023-06-17 16:38:10,789:INFO:Initializing evaluate_model()
2023-06-17 16:38:10,789:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:38:10,812:INFO:Initializing plot_model()
2023-06-17 16:38:10,812:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:10,812:INFO:Checking exceptions
2023-06-17 16:38:10,818:INFO:Preloading libraries
2023-06-17 16:38:10,824:INFO:Copying training dataset
2023-06-17 16:38:10,824:INFO:Plot type: pipeline
2023-06-17 16:38:10,993:INFO:Visual Rendered Successfully
2023-06-17 16:38:11,059:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:16,424:INFO:Initializing plot_model()
2023-06-17 16:38:16,425:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:16,425:INFO:Checking exceptions
2023-06-17 16:38:16,431:INFO:Preloading libraries
2023-06-17 16:38:16,436:INFO:Copying training dataset
2023-06-17 16:38:16,437:INFO:Plot type: auc
2023-06-17 16:38:16,570:INFO:Fitting Model
2023-06-17 16:38:16,571:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:38:16,572:INFO:Scoring test/hold-out set
2023-06-17 16:38:16,858:INFO:Visual Rendered Successfully
2023-06-17 16:38:16,933:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:20,330:INFO:Initializing plot_model()
2023-06-17 16:38:20,331:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:20,331:INFO:Checking exceptions
2023-06-17 16:38:20,338:INFO:Preloading libraries
2023-06-17 16:38:20,344:INFO:Copying training dataset
2023-06-17 16:38:20,344:INFO:Plot type: confusion_matrix
2023-06-17 16:38:20,474:INFO:Fitting Model
2023-06-17 16:38:20,474:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:38:20,475:INFO:Scoring test/hold-out set
2023-06-17 16:38:20,672:INFO:Visual Rendered Successfully
2023-06-17 16:38:20,773:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:32,244:INFO:Initializing plot_model()
2023-06-17 16:38:32,244:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:32,244:INFO:Checking exceptions
2023-06-17 16:38:36,619:INFO:Initializing plot_model()
2023-06-17 16:38:36,619:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:36,619:INFO:Checking exceptions
2023-06-17 16:38:41,530:INFO:Initializing plot_model()
2023-06-17 16:38:41,531:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:41,531:INFO:Checking exceptions
2023-06-17 16:38:41,537:INFO:Preloading libraries
2023-06-17 16:38:41,543:INFO:Copying training dataset
2023-06-17 16:38:41,543:INFO:Plot type: confusion_matrix
2023-06-17 16:38:41,669:INFO:Fitting Model
2023-06-17 16:38:41,670:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:38:41,671:INFO:Scoring test/hold-out set
2023-06-17 16:38:41,888:INFO:Visual Rendered Successfully
2023-06-17 16:38:41,997:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:42,746:INFO:Initializing plot_model()
2023-06-17 16:38:42,747:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:42,747:INFO:Checking exceptions
2023-06-17 16:38:42,753:INFO:Preloading libraries
2023-06-17 16:38:42,759:INFO:Copying training dataset
2023-06-17 16:38:42,759:INFO:Plot type: parameter
2023-06-17 16:38:42,763:INFO:Visual Rendered Successfully
2023-06-17 16:38:42,826:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:59,754:INFO:Initializing create_model()
2023-06-17 16:38:59,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:38:59,755:INFO:Checking exceptions
2023-06-17 16:38:59,789:INFO:Importing libraries
2023-06-17 16:38:59,790:INFO:Copying training dataset
2023-06-17 16:38:59,806:INFO:Defining folds
2023-06-17 16:38:59,806:INFO:Declaring metric variables
2023-06-17 16:38:59,815:INFO:Importing untrained model
2023-06-17 16:38:59,816:INFO:Declaring custom model
2023-06-17 16:38:59,825:INFO:Random Forest Classifier Imported successfully
2023-06-17 16:38:59,837:INFO:Starting cross validation
2023-06-17 16:38:59,839:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:42:07,691:INFO:Calculating mean and std
2023-06-17 16:42:07,692:INFO:Creating metrics dataframe
2023-06-17 16:42:07,706:INFO:Finalizing model
2023-06-17 16:44:10,045:INFO:Uploading results into container
2023-06-17 16:44:10,046:INFO:Uploading model into container now
2023-06-17 16:44:10,073:INFO:_master_model_container: 3
2023-06-17 16:44:10,073:INFO:_display_container: 4
2023-06-17 16:44:10,074:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 16:44:10,076:INFO:create_model() successfully completed......................................
2023-06-17 16:44:10,245:INFO:Initializing evaluate_model()
2023-06-17 16:44:10,246:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:44:10,286:INFO:Initializing plot_model()
2023-06-17 16:44:10,286:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:44:10,286:INFO:Checking exceptions
2023-06-17 16:44:10,294:INFO:Preloading libraries
2023-06-17 16:44:10,307:INFO:Copying training dataset
2023-06-17 16:44:10,307:INFO:Plot type: pipeline
2023-06-17 16:44:10,553:INFO:Visual Rendered Successfully
2023-06-17 16:44:10,644:INFO:plot_model() successfully completed......................................
2023-06-17 16:44:22,958:INFO:Initializing plot_model()
2023-06-17 16:44:22,958:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:44:22,958:INFO:Checking exceptions
2023-06-17 16:44:22,965:INFO:Preloading libraries
2023-06-17 16:44:22,977:INFO:Copying training dataset
2023-06-17 16:44:22,977:INFO:Plot type: auc
2023-06-17 16:44:23,230:INFO:Fitting Model
2023-06-17 16:44:23,231:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:44:23,232:INFO:Scoring test/hold-out set
2023-06-17 16:44:23,733:INFO:Visual Rendered Successfully
2023-06-17 16:44:23,855:INFO:plot_model() successfully completed......................................
2023-06-17 16:44:27,100:INFO:Initializing plot_model()
2023-06-17 16:44:27,100:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:44:27,100:INFO:Checking exceptions
2023-06-17 16:44:27,107:INFO:Preloading libraries
2023-06-17 16:44:27,119:INFO:Copying training dataset
2023-06-17 16:44:27,119:INFO:Plot type: confusion_matrix
2023-06-17 16:44:27,290:INFO:Fitting Model
2023-06-17 16:44:27,290:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:44:27,292:INFO:Scoring test/hold-out set
2023-06-17 16:44:27,713:INFO:Visual Rendered Successfully
2023-06-17 16:44:27,872:INFO:plot_model() successfully completed......................................
2023-06-17 16:45:05,713:INFO:Initializing create_model()
2023-06-17 16:45:05,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:45:05,713:INFO:Checking exceptions
2023-06-17 16:45:05,747:INFO:Importing libraries
2023-06-17 16:45:05,748:INFO:Copying training dataset
2023-06-17 16:45:05,767:INFO:Defining folds
2023-06-17 16:45:05,768:INFO:Declaring metric variables
2023-06-17 16:45:05,772:INFO:Importing untrained model
2023-06-17 16:45:05,778:INFO:Logistic Regression Imported successfully
2023-06-17 16:45:05,793:INFO:Starting cross validation
2023-06-17 16:45:05,797:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:45:09,310:INFO:Calculating mean and std
2023-06-17 16:45:09,313:INFO:Creating metrics dataframe
2023-06-17 16:45:09,319:INFO:Finalizing model
2023-06-17 16:45:10,548:INFO:Uploading results into container
2023-06-17 16:45:10,549:INFO:Uploading model into container now
2023-06-17 16:45:10,567:INFO:_master_model_container: 4
2023-06-17 16:45:10,567:INFO:_display_container: 5
2023-06-17 16:45:10,567:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 16:45:10,568:INFO:create_model() successfully completed......................................
2023-06-17 16:45:10,652:INFO:Initializing evaluate_model()
2023-06-17 16:45:10,653:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:45:10,677:INFO:Initializing plot_model()
2023-06-17 16:45:10,677:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:45:10,677:INFO:Checking exceptions
2023-06-17 16:45:10,683:INFO:Preloading libraries
2023-06-17 16:45:10,683:INFO:Copying training dataset
2023-06-17 16:45:10,683:INFO:Plot type: pipeline
2023-06-17 16:45:10,863:INFO:Visual Rendered Successfully
2023-06-17 16:45:10,933:INFO:plot_model() successfully completed......................................
2023-06-17 16:45:18,763:INFO:Initializing create_model()
2023-06-17 16:45:18,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:45:18,764:INFO:Checking exceptions
2023-06-17 16:45:18,798:INFO:Importing libraries
2023-06-17 16:45:18,805:INFO:Copying training dataset
2023-06-17 16:45:18,820:INFO:Defining folds
2023-06-17 16:45:18,820:INFO:Declaring metric variables
2023-06-17 16:45:18,826:INFO:Importing untrained model
2023-06-17 16:45:18,831:INFO:Logistic Regression Imported successfully
2023-06-17 16:45:18,852:INFO:Starting cross validation
2023-06-17 16:45:18,855:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:45:22,333:INFO:Calculating mean and std
2023-06-17 16:45:22,335:INFO:Creating metrics dataframe
2023-06-17 16:45:22,342:INFO:Finalizing model
2023-06-17 16:45:23,595:INFO:Uploading results into container
2023-06-17 16:45:23,596:INFO:Uploading model into container now
2023-06-17 16:45:23,611:INFO:_master_model_container: 5
2023-06-17 16:45:23,612:INFO:_display_container: 6
2023-06-17 16:45:23,612:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 16:45:23,612:INFO:create_model() successfully completed......................................
2023-06-17 16:45:23,698:INFO:Initializing evaluate_model()
2023-06-17 16:45:23,698:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:45:23,723:INFO:Initializing plot_model()
2023-06-17 16:45:23,723:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:45:23,723:INFO:Checking exceptions
2023-06-17 16:45:23,730:INFO:Preloading libraries
2023-06-17 16:45:23,731:INFO:Copying training dataset
2023-06-17 16:45:23,731:INFO:Plot type: pipeline
2023-06-17 16:45:23,958:INFO:Visual Rendered Successfully
2023-06-17 16:45:24,031:INFO:plot_model() successfully completed......................................
2023-06-17 16:45:33,755:INFO:Initializing create_model()
2023-06-17 16:45:33,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:45:33,756:INFO:Checking exceptions
2023-06-17 16:45:33,791:INFO:Importing libraries
2023-06-17 16:45:33,791:INFO:Copying training dataset
2023-06-17 16:45:33,808:INFO:Defining folds
2023-06-17 16:45:33,808:INFO:Declaring metric variables
2023-06-17 16:45:33,814:INFO:Importing untrained model
2023-06-17 16:45:33,820:INFO:Logistic Regression Imported successfully
2023-06-17 16:45:33,852:INFO:Starting cross validation
2023-06-17 16:45:33,854:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:45:37,320:INFO:Calculating mean and std
2023-06-17 16:45:37,321:INFO:Creating metrics dataframe
2023-06-17 16:45:37,327:INFO:Finalizing model
2023-06-17 16:45:38,541:INFO:Uploading results into container
2023-06-17 16:45:38,542:INFO:Uploading model into container now
2023-06-17 16:45:38,560:INFO:_master_model_container: 6
2023-06-17 16:45:38,560:INFO:_display_container: 7
2023-06-17 16:45:38,560:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 16:45:38,561:INFO:create_model() successfully completed......................................
2023-06-17 16:45:38,719:INFO:Initializing evaluate_model()
2023-06-17 16:45:38,719:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:45:38,747:INFO:Initializing plot_model()
2023-06-17 16:45:38,747:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:45:38,748:INFO:Checking exceptions
2023-06-17 16:45:38,752:INFO:Preloading libraries
2023-06-17 16:45:38,753:INFO:Copying training dataset
2023-06-17 16:45:38,753:INFO:Plot type: pipeline
2023-06-17 16:45:38,936:INFO:Visual Rendered Successfully
2023-06-17 16:45:39,007:INFO:plot_model() successfully completed......................................
2023-06-17 16:45:40,797:INFO:Initializing plot_model()
2023-06-17 16:45:40,798:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:45:40,798:INFO:Checking exceptions
2023-06-17 16:45:40,804:INFO:Preloading libraries
2023-06-17 16:45:40,804:INFO:Copying training dataset
2023-06-17 16:45:40,804:INFO:Plot type: parameter
2023-06-17 16:45:40,808:INFO:Visual Rendered Successfully
2023-06-17 16:45:40,908:INFO:plot_model() successfully completed......................................
2023-06-17 16:57:08,138:INFO:Initializing plot_model()
2023-06-17 16:57:08,138:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:57:08,138:INFO:Checking exceptions
2023-06-17 16:57:08,145:INFO:Preloading libraries
2023-06-17 16:57:08,145:INFO:Copying training dataset
2023-06-17 16:57:08,145:INFO:Plot type: calibration
2023-06-17 16:57:08,166:INFO:Scoring test/hold-out set
2023-06-17 16:59:40,578:INFO:Initializing create_model()
2023-06-17 16:59:40,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:59:40,578:INFO:Checking exceptions
2023-06-17 16:59:40,614:INFO:Importing libraries
2023-06-17 16:59:40,614:INFO:Copying training dataset
2023-06-17 16:59:40,631:INFO:Defining folds
2023-06-17 16:59:40,631:INFO:Declaring metric variables
2023-06-17 16:59:40,645:INFO:Importing untrained model
2023-06-17 16:59:40,651:INFO:Logistic Regression Imported successfully
2023-06-17 16:59:40,678:INFO:Starting cross validation
2023-06-17 16:59:40,680:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:59:47,948:INFO:Calculating mean and std
2023-06-17 16:59:47,949:INFO:Creating metrics dataframe
2023-06-17 16:59:47,957:INFO:Finalizing model
2023-06-17 16:59:49,177:INFO:Uploading results into container
2023-06-17 16:59:49,179:INFO:Uploading model into container now
2023-06-17 16:59:49,198:INFO:_master_model_container: 7
2023-06-17 16:59:49,198:INFO:_display_container: 8
2023-06-17 16:59:49,199:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 16:59:49,199:INFO:create_model() successfully completed......................................
2023-06-17 16:59:49,298:INFO:Initializing calibrate_model()
2023-06-17 16:59:49,298:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 16:59:49,298:INFO:Checking exceptions
2023-06-17 16:59:49,304:INFO:Preloading libraries
2023-06-17 16:59:49,304:INFO:Preparing display monitor
2023-06-17 16:59:49,338:INFO:Getting model name
2023-06-17 16:59:49,338:INFO:Base model : Logistic Regression
2023-06-17 16:59:49,349:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 16:59:49,349:INFO:SubProcess create_model() called ==================================
2023-06-17 16:59:49,350:INFO:Initializing create_model()
2023-06-17 16:59:49,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025819F094F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:59:49,351:INFO:Checking exceptions
2023-06-17 16:59:49,351:INFO:Importing libraries
2023-06-17 16:59:49,351:INFO:Copying training dataset
2023-06-17 16:59:49,373:INFO:Defining folds
2023-06-17 16:59:49,373:INFO:Declaring metric variables
2023-06-17 16:59:49,380:INFO:Importing untrained model
2023-06-17 16:59:49,380:INFO:Declaring custom model
2023-06-17 16:59:49,386:INFO:Logistic Regression Imported successfully
2023-06-17 16:59:49,397:INFO:Starting cross validation
2023-06-17 16:59:49,399:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:59:54,568:INFO:Calculating mean and std
2023-06-17 16:59:54,571:INFO:Creating metrics dataframe
2023-06-17 16:59:54,578:INFO:Finalizing model
2023-06-17 16:59:56,749:INFO:Uploading results into container
2023-06-17 16:59:56,750:INFO:Uploading model into container now
2023-06-17 16:59:56,750:INFO:_master_model_container: 8
2023-06-17 16:59:56,750:INFO:_display_container: 9
2023-06-17 16:59:56,751:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 16:59:56,752:INFO:create_model() successfully completed......................................
2023-06-17 16:59:56,841:INFO:SubProcess create_model() end ==================================
2023-06-17 16:59:56,866:INFO:_master_model_container: 8
2023-06-17 16:59:56,866:INFO:_display_container: 9
2023-06-17 16:59:56,867:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 16:59:56,868:INFO:calibrate_model() successfully completed......................................
2023-06-17 16:59:56,958:INFO:Initializing evaluate_model()
2023-06-17 16:59:56,958:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:59:56,980:INFO:Initializing plot_model()
2023-06-17 16:59:56,981:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:59:56,981:INFO:Checking exceptions
2023-06-17 16:59:56,987:INFO:Preloading libraries
2023-06-17 16:59:56,988:INFO:Copying training dataset
2023-06-17 16:59:56,988:INFO:Plot type: pipeline
2023-06-17 16:59:57,192:INFO:Visual Rendered Successfully
2023-06-17 16:59:57,266:INFO:plot_model() successfully completed......................................
2023-06-17 17:00:09,498:INFO:Initializing plot_model()
2023-06-17 17:00:09,499:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:00:09,499:INFO:Checking exceptions
2023-06-17 17:00:09,506:INFO:Preloading libraries
2023-06-17 17:00:09,507:INFO:Copying training dataset
2023-06-17 17:00:09,507:INFO:Plot type: calibration
2023-06-17 17:00:09,524:INFO:Scoring test/hold-out set
2023-06-17 17:00:09,746:INFO:Visual Rendered Successfully
2023-06-17 17:00:09,810:INFO:plot_model() successfully completed......................................
2023-06-17 17:01:17,903:INFO:Initializing create_model()
2023-06-17 17:01:17,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:01:17,904:INFO:Checking exceptions
2023-06-17 17:01:17,939:INFO:Importing libraries
2023-06-17 17:01:17,940:INFO:Copying training dataset
2023-06-17 17:01:17,958:INFO:Defining folds
2023-06-17 17:01:17,958:INFO:Declaring metric variables
2023-06-17 17:01:17,968:INFO:Importing untrained model
2023-06-17 17:01:17,968:INFO:Declaring custom model
2023-06-17 17:01:17,974:INFO:Random Forest Classifier Imported successfully
2023-06-17 17:01:17,988:INFO:Starting cross validation
2023-06-17 17:01:17,992:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:01:58,419:INFO:Calculating mean and std
2023-06-17 17:01:58,420:INFO:Creating metrics dataframe
2023-06-17 17:01:58,427:INFO:Finalizing model
2023-06-17 17:02:26,239:INFO:Uploading results into container
2023-06-17 17:02:26,240:INFO:Uploading model into container now
2023-06-17 17:02:26,257:INFO:_master_model_container: 9
2023-06-17 17:02:26,257:INFO:_display_container: 10
2023-06-17 17:02:26,257:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-17 17:02:26,257:INFO:create_model() successfully completed......................................
2023-06-17 17:02:26,347:INFO:Initializing calibrate_model()
2023-06-17 17:02:26,348:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:02:26,348:INFO:Checking exceptions
2023-06-17 17:02:26,358:INFO:Preloading libraries
2023-06-17 17:02:26,358:INFO:Preparing display monitor
2023-06-17 17:02:26,401:INFO:Getting model name
2023-06-17 17:02:26,401:INFO:Base model : Random Forest Classifier
2023-06-17 17:02:26,415:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:02:26,415:INFO:SubProcess create_model() called ==================================
2023-06-17 17:02:26,417:INFO:Initializing create_model()
2023-06-17 17:02:26,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025819FAD820>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:02:26,417:INFO:Checking exceptions
2023-06-17 17:02:26,417:INFO:Importing libraries
2023-06-17 17:02:26,417:INFO:Copying training dataset
2023-06-17 17:02:26,468:INFO:Defining folds
2023-06-17 17:02:26,469:INFO:Declaring metric variables
2023-06-17 17:02:26,485:INFO:Importing untrained model
2023-06-17 17:02:26,485:INFO:Declaring custom model
2023-06-17 17:02:26,499:INFO:Random Forest Classifier Imported successfully
2023-06-17 17:02:26,518:INFO:Starting cross validation
2023-06-17 17:02:26,522:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:04:28,893:INFO:Calculating mean and std
2023-06-17 17:04:28,894:INFO:Creating metrics dataframe
2023-06-17 17:04:28,902:INFO:Finalizing model
2023-06-17 17:06:02,267:INFO:Uploading results into container
2023-06-17 17:06:02,268:INFO:Uploading model into container now
2023-06-17 17:06:02,268:INFO:_master_model_container: 10
2023-06-17 17:06:02,268:INFO:_display_container: 11
2023-06-17 17:06:02,270:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:06:02,271:INFO:create_model() successfully completed......................................
2023-06-17 17:06:02,351:INFO:SubProcess create_model() end ==================================
2023-06-17 17:06:02,374:INFO:_master_model_container: 10
2023-06-17 17:06:02,375:INFO:_display_container: 11
2023-06-17 17:06:02,381:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:06:02,382:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:06:02,483:INFO:Initializing evaluate_model()
2023-06-17 17:06:02,483:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:06:02,509:INFO:Initializing plot_model()
2023-06-17 17:06:02,510:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:06:02,510:INFO:Checking exceptions
2023-06-17 17:06:02,518:INFO:Preloading libraries
2023-06-17 17:06:02,527:INFO:Copying training dataset
2023-06-17 17:06:02,527:INFO:Plot type: pipeline
2023-06-17 17:06:02,718:INFO:Visual Rendered Successfully
2023-06-17 17:06:02,791:INFO:plot_model() successfully completed......................................
2023-06-17 17:06:02,815:INFO:Initializing plot_model()
2023-06-17 17:06:02,815:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:06:02,816:INFO:Checking exceptions
2023-06-17 17:06:02,823:INFO:Preloading libraries
2023-06-17 17:06:02,824:INFO:Copying training dataset
2023-06-17 17:06:02,824:INFO:Plot type: parameter
2023-06-17 17:06:02,828:INFO:Visual Rendered Successfully
2023-06-17 17:06:02,920:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:02,632:INFO:Initializing plot_model()
2023-06-17 17:08:02,632:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:02,632:INFO:Checking exceptions
2023-06-17 17:08:02,638:INFO:Preloading libraries
2023-06-17 17:08:02,647:INFO:Copying training dataset
2023-06-17 17:08:02,647:INFO:Plot type: calibration
2023-06-17 17:08:02,668:INFO:Scoring test/hold-out set
2023-06-17 17:08:02,968:INFO:Visual Rendered Successfully
2023-06-17 17:08:03,035:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:09,331:INFO:Initializing plot_model()
2023-06-17 17:08:09,331:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:09,332:INFO:Checking exceptions
2023-06-17 17:08:09,338:INFO:Preloading libraries
2023-06-17 17:08:09,339:INFO:Copying training dataset
2023-06-17 17:08:09,339:INFO:Plot type: calibration
2023-06-17 17:08:09,357:INFO:Scoring test/hold-out set
2023-06-17 17:08:09,548:INFO:Visual Rendered Successfully
2023-06-17 17:08:09,613:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:10,662:INFO:Initializing plot_model()
2023-06-17 17:08:10,662:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:10,662:INFO:Checking exceptions
2023-06-17 17:08:10,669:INFO:Preloading libraries
2023-06-17 17:08:10,670:INFO:Copying training dataset
2023-06-17 17:08:10,670:INFO:Plot type: vc
2023-06-17 17:08:10,670:INFO:Determining param_name
2023-06-17 17:08:13,188:INFO:Initializing plot_model()
2023-06-17 17:08:13,188:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:13,188:INFO:Checking exceptions
2023-06-17 17:08:13,195:INFO:Preloading libraries
2023-06-17 17:08:13,195:INFO:Copying training dataset
2023-06-17 17:08:13,196:INFO:Plot type: calibration
2023-06-17 17:08:13,212:INFO:Scoring test/hold-out set
2023-06-17 17:08:13,409:INFO:Visual Rendered Successfully
2023-06-17 17:08:13,472:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:14,956:INFO:Initializing plot_model()
2023-06-17 17:08:14,956:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:14,956:INFO:Checking exceptions
2023-06-17 17:08:14,963:INFO:Preloading libraries
2023-06-17 17:08:14,963:INFO:Copying training dataset
2023-06-17 17:08:14,963:INFO:Plot type: dimension
2023-06-17 17:08:15,050:INFO:Fitting StandardScaler()
2023-06-17 17:08:15,116:INFO:Fitting PCA()
2023-06-17 17:08:15,473:INFO:Fitting & Transforming Model
2023-06-17 17:08:17,243:INFO:Visual Rendered Successfully
2023-06-17 17:08:17,324:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:20,540:INFO:Initializing plot_model()
2023-06-17 17:08:20,540:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:20,540:INFO:Checking exceptions
2023-06-17 17:08:20,547:INFO:Preloading libraries
2023-06-17 17:08:20,548:INFO:Copying training dataset
2023-06-17 17:08:20,548:INFO:Plot type: calibration
2023-06-17 17:08:20,563:INFO:Scoring test/hold-out set
2023-06-17 17:08:20,750:INFO:Visual Rendered Successfully
2023-06-17 17:08:20,815:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:26,964:INFO:Initializing plot_model()
2023-06-17 17:08:26,964:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:26,965:INFO:Checking exceptions
2023-06-17 17:08:26,971:INFO:Preloading libraries
2023-06-17 17:08:26,980:INFO:Copying training dataset
2023-06-17 17:08:26,980:INFO:Plot type: parameter
2023-06-17 17:08:26,984:INFO:Visual Rendered Successfully
2023-06-17 17:08:27,049:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:42,475:INFO:Initializing plot_model()
2023-06-17 17:08:42,476:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:42,476:INFO:Checking exceptions
2023-06-17 17:08:42,482:INFO:Preloading libraries
2023-06-17 17:08:42,491:INFO:Copying training dataset
2023-06-17 17:08:42,491:INFO:Plot type: calibration
2023-06-17 17:08:42,507:INFO:Scoring test/hold-out set
2023-06-17 17:08:42,769:INFO:Visual Rendered Successfully
2023-06-17 17:08:42,832:INFO:plot_model() successfully completed......................................
2023-06-17 17:09:10,717:INFO:Initializing create_model()
2023-06-17 17:09:10,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:09:10,717:INFO:Checking exceptions
2023-06-17 17:09:10,758:INFO:Importing libraries
2023-06-17 17:09:10,759:INFO:Copying training dataset
2023-06-17 17:09:10,778:INFO:Defining folds
2023-06-17 17:09:10,778:INFO:Declaring metric variables
2023-06-17 17:09:10,782:INFO:Importing untrained model
2023-06-17 17:09:10,791:INFO:Logistic Regression Imported successfully
2023-06-17 17:09:10,804:INFO:Starting cross validation
2023-06-17 17:09:10,806:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:09:16,766:INFO:Calculating mean and std
2023-06-17 17:09:16,767:INFO:Creating metrics dataframe
2023-06-17 17:09:16,775:INFO:Finalizing model
2023-06-17 17:09:17,965:INFO:Uploading results into container
2023-06-17 17:09:17,967:INFO:Uploading model into container now
2023-06-17 17:09:17,984:INFO:_master_model_container: 11
2023-06-17 17:09:17,984:INFO:_display_container: 12
2023-06-17 17:09:17,984:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 17:09:17,984:INFO:create_model() successfully completed......................................
2023-06-17 17:09:18,077:INFO:Initializing calibrate_model()
2023-06-17 17:09:18,077:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:09:18,077:INFO:Checking exceptions
2023-06-17 17:09:18,083:INFO:Preloading libraries
2023-06-17 17:09:18,084:INFO:Preparing display monitor
2023-06-17 17:09:18,121:INFO:Getting model name
2023-06-17 17:09:18,122:INFO:Base model : Logistic Regression
2023-06-17 17:09:18,132:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:09:18,132:INFO:SubProcess create_model() called ==================================
2023-06-17 17:09:18,134:INFO:Initializing create_model()
2023-06-17 17:09:18,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025819D2DB80>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:09:18,134:INFO:Checking exceptions
2023-06-17 17:09:18,134:INFO:Importing libraries
2023-06-17 17:09:18,135:INFO:Copying training dataset
2023-06-17 17:09:18,153:INFO:Defining folds
2023-06-17 17:09:18,153:INFO:Declaring metric variables
2023-06-17 17:09:18,157:INFO:Importing untrained model
2023-06-17 17:09:18,157:INFO:Declaring custom model
2023-06-17 17:09:18,165:INFO:Logistic Regression Imported successfully
2023-06-17 17:09:18,177:INFO:Starting cross validation
2023-06-17 17:09:18,179:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:09:24,803:INFO:Calculating mean and std
2023-06-17 17:09:24,804:INFO:Creating metrics dataframe
2023-06-17 17:09:24,811:INFO:Finalizing model
2023-06-17 17:09:27,605:INFO:Uploading results into container
2023-06-17 17:09:27,606:INFO:Uploading model into container now
2023-06-17 17:09:27,606:INFO:_master_model_container: 12
2023-06-17 17:09:27,606:INFO:_display_container: 13
2023-06-17 17:09:27,607:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:09:27,607:INFO:create_model() successfully completed......................................
2023-06-17 17:09:27,679:INFO:SubProcess create_model() end ==================================
2023-06-17 17:09:27,703:INFO:_master_model_container: 12
2023-06-17 17:09:27,703:INFO:_display_container: 13
2023-06-17 17:09:27,705:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:09:27,705:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:09:27,802:INFO:Initializing evaluate_model()
2023-06-17 17:09:27,802:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:09:27,824:INFO:Initializing plot_model()
2023-06-17 17:09:27,824:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:09:27,824:INFO:Checking exceptions
2023-06-17 17:09:27,833:INFO:Preloading libraries
2023-06-17 17:09:27,834:INFO:Copying training dataset
2023-06-17 17:09:27,834:INFO:Plot type: pipeline
2023-06-17 17:09:28,009:INFO:Visual Rendered Successfully
2023-06-17 17:09:28,081:INFO:plot_model() successfully completed......................................
2023-06-17 17:09:32,044:INFO:Initializing plot_model()
2023-06-17 17:09:32,044:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:09:32,044:INFO:Checking exceptions
2023-06-17 17:09:32,051:INFO:Preloading libraries
2023-06-17 17:09:32,052:INFO:Copying training dataset
2023-06-17 17:09:32,052:INFO:Plot type: parameter
2023-06-17 17:09:32,056:INFO:Visual Rendered Successfully
2023-06-17 17:09:32,138:INFO:plot_model() successfully completed......................................
2023-06-17 17:09:47,227:INFO:Initializing plot_model()
2023-06-17 17:09:47,227:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:09:47,227:INFO:Checking exceptions
2023-06-17 17:09:47,233:INFO:Preloading libraries
2023-06-17 17:09:47,234:INFO:Copying training dataset
2023-06-17 17:09:47,234:INFO:Plot type: calibration
2023-06-17 17:09:47,251:INFO:Scoring test/hold-out set
2023-06-17 17:09:47,450:INFO:Visual Rendered Successfully
2023-06-17 17:09:47,517:INFO:plot_model() successfully completed......................................
2023-06-17 17:10:29,010:INFO:Initializing create_model()
2023-06-17 17:10:29,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:10:29,010:INFO:Checking exceptions
2023-06-17 17:10:29,045:INFO:Importing libraries
2023-06-17 17:10:29,046:INFO:Copying training dataset
2023-06-17 17:10:29,062:INFO:Defining folds
2023-06-17 17:10:29,063:INFO:Declaring metric variables
2023-06-17 17:10:29,068:INFO:Importing untrained model
2023-06-17 17:10:29,073:INFO:Decision Tree Classifier Imported successfully
2023-06-17 17:10:29,084:INFO:Starting cross validation
2023-06-17 17:10:29,087:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:10:32,549:INFO:Calculating mean and std
2023-06-17 17:10:32,550:INFO:Creating metrics dataframe
2023-06-17 17:10:32,561:INFO:Finalizing model
2023-06-17 17:11:07,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 17:11:07,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 17:11:07,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 17:11:07,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 17:11:08,532:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-17 17:11:09,343:INFO:PyCaret ClassificationExperiment
2023-06-17 17:11:09,344:INFO:Logging name: clf-default-name
2023-06-17 17:11:09,344:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 17:11:09,344:INFO:version 3.0.2
2023-06-17 17:11:09,344:INFO:Initializing setup()
2023-06-17 17:11:09,344:INFO:self.USI: 4af8
2023-06-17 17:11:09,344:INFO:self._variable_keys: {'n_jobs_param', 'X_test', 'logging_param', 'data', 'fold_groups_param', 'log_plots_param', 'exp_name_log', 'pipeline', 'y_test', 'y_train', 'X_train', '_available_plots', 'fold_generator', 'target_param', 'html_param', 'X', 'idx', 'gpu_n_jobs_param', '_ml_usecase', 'fold_shuffle_param', 'seed', 'memory', 'exp_id', 'gpu_param', 'USI', 'y', 'is_multiclass', 'fix_imbalance'}
2023-06-17 17:11:09,344:INFO:Checking environment
2023-06-17 17:11:09,344:INFO:python_version: 3.9.7
2023-06-17 17:11:09,344:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-17 17:11:09,344:INFO:machine: AMD64
2023-06-17 17:11:09,344:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-17 17:11:09,344:INFO:Memory: svmem(total=17120436224, available=5267828736, percent=69.2, used=11852607488, free=5267828736)
2023-06-17 17:11:09,344:INFO:Physical Core: 4
2023-06-17 17:11:09,344:INFO:Logical Core: 4
2023-06-17 17:11:09,344:INFO:Checking libraries
2023-06-17 17:11:09,344:INFO:System:
2023-06-17 17:11:09,345:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-17 17:11:09,345:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-17 17:11:09,345:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-17 17:11:09,345:INFO:PyCaret required dependencies:
2023-06-17 17:11:09,345:INFO:                 pip: 21.2.3
2023-06-17 17:11:09,345:INFO:          setuptools: 57.4.0
2023-06-17 17:11:09,345:INFO:             pycaret: 3.0.2
2023-06-17 17:11:09,345:INFO:             IPython: 7.28.0
2023-06-17 17:11:09,345:INFO:          ipywidgets: 8.0.6
2023-06-17 17:11:09,345:INFO:                tqdm: 4.64.0
2023-06-17 17:11:09,345:INFO:               numpy: 1.22.4
2023-06-17 17:11:09,345:INFO:              pandas: 1.3.5
2023-06-17 17:11:09,345:INFO:              jinja2: 3.1.2
2023-06-17 17:11:09,345:INFO:               scipy: 1.7.1
2023-06-17 17:11:09,345:INFO:              joblib: 1.2.0
2023-06-17 17:11:09,345:INFO:             sklearn: 1.1.0
2023-06-17 17:11:09,345:INFO:                pyod: 1.0.9
2023-06-17 17:11:09,345:INFO:            imblearn: 0.9.1
2023-06-17 17:11:09,345:INFO:   category_encoders: 2.6.1
2023-06-17 17:11:09,345:INFO:            lightgbm: 3.3.5
2023-06-17 17:11:09,345:INFO:               numba: 0.57.0
2023-06-17 17:11:09,346:INFO:            requests: 2.31.0
2023-06-17 17:11:09,346:INFO:          matplotlib: 3.4.3
2023-06-17 17:11:09,346:INFO:          scikitplot: 0.3.7
2023-06-17 17:11:09,346:INFO:         yellowbrick: 1.5
2023-06-17 17:11:09,346:INFO:              plotly: 5.8.0
2023-06-17 17:11:09,346:INFO:             kaleido: 0.2.1
2023-06-17 17:11:09,346:INFO:         statsmodels: 0.14.0
2023-06-17 17:11:09,346:INFO:              sktime: 0.17.0
2023-06-17 17:11:09,346:INFO:               tbats: 1.1.3
2023-06-17 17:11:09,346:INFO:            pmdarima: 2.0.3
2023-06-17 17:11:09,346:INFO:              psutil: 5.9.0
2023-06-17 17:11:09,346:INFO:PyCaret optional dependencies:
2023-06-17 17:11:09,368:INFO:                shap: Not installed
2023-06-17 17:11:09,368:INFO:           interpret: Not installed
2023-06-17 17:11:09,368:INFO:                umap: Not installed
2023-06-17 17:11:09,368:INFO:    pandas_profiling: Not installed
2023-06-17 17:11:09,368:INFO:  explainerdashboard: Not installed
2023-06-17 17:11:09,368:INFO:             autoviz: Not installed
2023-06-17 17:11:09,369:INFO:           fairlearn: Not installed
2023-06-17 17:11:09,369:INFO:             xgboost: Not installed
2023-06-17 17:11:09,369:INFO:            catboost: Not installed
2023-06-17 17:11:09,369:INFO:              kmodes: Not installed
2023-06-17 17:11:09,369:INFO:             mlxtend: Not installed
2023-06-17 17:11:09,369:INFO:       statsforecast: Not installed
2023-06-17 17:11:09,369:INFO:        tune_sklearn: Not installed
2023-06-17 17:11:09,369:INFO:                 ray: Not installed
2023-06-17 17:11:09,369:INFO:            hyperopt: Not installed
2023-06-17 17:11:09,369:INFO:              optuna: Not installed
2023-06-17 17:11:09,369:INFO:               skopt: Not installed
2023-06-17 17:11:09,369:INFO:              mlflow: Not installed
2023-06-17 17:11:09,369:INFO:              gradio: Not installed
2023-06-17 17:11:09,369:INFO:             fastapi: Not installed
2023-06-17 17:11:09,369:INFO:             uvicorn: Not installed
2023-06-17 17:11:09,369:INFO:              m2cgen: Not installed
2023-06-17 17:11:09,369:INFO:           evidently: Not installed
2023-06-17 17:11:09,369:INFO:               fugue: Not installed
2023-06-17 17:11:09,369:INFO:           streamlit: Not installed
2023-06-17 17:11:09,369:INFO:             prophet: Not installed
2023-06-17 17:11:09,370:INFO:None
2023-06-17 17:11:09,370:INFO:Set up data.
2023-06-17 17:11:09,440:INFO:Set up train/test split.
2023-06-17 17:11:09,476:INFO:Set up index.
2023-06-17 17:11:09,477:INFO:Set up folding strategy.
2023-06-17 17:11:09,477:INFO:Assigning column types.
2023-06-17 17:11:09,495:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 17:11:09,556:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,559:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,735:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 17:11:09,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,878:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,916:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 17:11:10,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,109:INFO:Preparing preprocessing pipeline...
2023-06-17 17:11:10,111:INFO:Set up simple imputation.
2023-06-17 17:11:10,122:INFO:Set up encoding of ordinal features.
2023-06-17 17:11:10,133:INFO:Set up encoding of categorical features.
2023-06-17 17:11:10,133:INFO:Set up removing multicollinearity.
2023-06-17 17:11:10,133:INFO:Set up imbalanced handling.
2023-06-17 17:11:10,133:INFO:Set up feature selection.
2023-06-17 17:11:10,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,225:INFO:Set up column name cleaning.
2023-06-17 17:11:10,615:INFO:Finished creating preprocessing pipeline.
2023-06-17 17:11:10,669:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x00000216109CAE50>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 17:11:10,669:INFO:Creating final display dataframe.
2023-06-17 17:11:10,909:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              4af8
2023-06-17 17:11:11,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:11,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:11,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:11,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:11,109:INFO:setup() successfully completed in 2.41s...............
2023-06-17 17:11:13,057:INFO:Initializing create_model()
2023-06-17 17:11:13,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:11:13,057:INFO:Checking exceptions
2023-06-17 17:11:13,091:INFO:Importing libraries
2023-06-17 17:11:13,092:INFO:Copying training dataset
2023-06-17 17:11:13,109:INFO:Defining folds
2023-06-17 17:11:13,109:INFO:Declaring metric variables
2023-06-17 17:11:13,114:INFO:Importing untrained model
2023-06-17 17:11:13,121:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 17:11:13,135:INFO:Starting cross validation
2023-06-17 17:11:13,137:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:11:18,360:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 17:11:18,360:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 17:11:18,360:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 17:11:19,722:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 17:11:21,293:INFO:Calculating mean and std
2023-06-17 17:11:21,294:INFO:Creating metrics dataframe
2023-06-17 17:11:21,301:INFO:Finalizing model
2023-06-17 17:11:22,486:INFO:Uploading results into container
2023-06-17 17:11:22,487:INFO:Uploading model into container now
2023-06-17 17:11:22,503:INFO:_master_model_container: 1
2023-06-17 17:11:22,503:INFO:_display_container: 2
2023-06-17 17:11:22,504:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 17:11:22,504:INFO:create_model() successfully completed......................................
2023-06-17 17:11:22,592:INFO:Initializing calibrate_model()
2023-06-17 17:11:22,592:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:11:22,592:INFO:Checking exceptions
2023-06-17 17:11:22,600:INFO:Preloading libraries
2023-06-17 17:11:22,600:INFO:Preparing display monitor
2023-06-17 17:11:22,632:INFO:Getting model name
2023-06-17 17:11:22,632:INFO:Base model : SVM - Linear Kernel
2023-06-17 17:11:22,644:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:11:22,644:INFO:SubProcess create_model() called ==================================
2023-06-17 17:11:22,646:INFO:Initializing create_model()
2023-06-17 17:11:22,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002160FFFC760>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:11:22,646:INFO:Checking exceptions
2023-06-17 17:11:22,646:INFO:Importing libraries
2023-06-17 17:11:22,646:INFO:Copying training dataset
2023-06-17 17:11:22,665:INFO:Defining folds
2023-06-17 17:11:22,665:INFO:Declaring metric variables
2023-06-17 17:11:22,670:INFO:Importing untrained model
2023-06-17 17:11:22,671:INFO:Declaring custom model
2023-06-17 17:11:22,676:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 17:11:22,688:INFO:Starting cross validation
2023-06-17 17:11:22,691:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:11:28,305:INFO:Calculating mean and std
2023-06-17 17:11:28,306:INFO:Creating metrics dataframe
2023-06-17 17:11:28,313:INFO:Finalizing model
2023-06-17 17:11:30,856:INFO:Uploading results into container
2023-06-17 17:11:30,856:INFO:Uploading model into container now
2023-06-17 17:11:30,857:INFO:_master_model_container: 2
2023-06-17 17:11:30,857:INFO:_display_container: 3
2023-06-17 17:11:30,858:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:11:30,858:INFO:create_model() successfully completed......................................
2023-06-17 17:11:30,922:INFO:SubProcess create_model() end ==================================
2023-06-17 17:11:30,946:INFO:_master_model_container: 2
2023-06-17 17:11:30,946:INFO:_display_container: 3
2023-06-17 17:11:30,947:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:11:30,948:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:11:31,043:INFO:Initializing evaluate_model()
2023-06-17 17:11:31,043:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:11:31,073:INFO:Initializing plot_model()
2023-06-17 17:11:31,074:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:11:31,074:INFO:Checking exceptions
2023-06-17 17:11:31,085:INFO:Preloading libraries
2023-06-17 17:11:31,086:INFO:Copying training dataset
2023-06-17 17:11:31,086:INFO:Plot type: pipeline
2023-06-17 17:11:31,318:INFO:Visual Rendered Successfully
2023-06-17 17:11:31,384:INFO:plot_model() successfully completed......................................
2023-06-17 17:11:42,468:INFO:Initializing plot_model()
2023-06-17 17:11:42,468:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:11:42,468:INFO:Checking exceptions
2023-06-17 17:11:42,474:INFO:Preloading libraries
2023-06-17 17:11:42,475:INFO:Copying training dataset
2023-06-17 17:11:42,475:INFO:Plot type: auc
2023-06-17 17:11:42,615:INFO:Fitting Model
2023-06-17 17:11:42,616:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but SGDClassifier was fitted with feature names
  warnings.warn(

2023-06-17 17:11:42,617:INFO:Scoring test/hold-out set
2023-06-17 17:11:42,829:INFO:Visual Rendered Successfully
2023-06-17 17:11:42,908:INFO:plot_model() successfully completed......................................
2023-06-17 17:11:47,523:INFO:Initializing plot_model()
2023-06-17 17:11:47,524:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:11:47,524:INFO:Checking exceptions
2023-06-17 17:11:47,531:INFO:Preloading libraries
2023-06-17 17:11:47,531:INFO:Copying training dataset
2023-06-17 17:11:47,532:INFO:Plot type: parameter
2023-06-17 17:11:47,536:INFO:Visual Rendered Successfully
2023-06-17 17:11:47,597:INFO:plot_model() successfully completed......................................
2023-06-17 17:12:01,011:INFO:Initializing plot_model()
2023-06-17 17:12:01,011:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:12:01,012:INFO:Checking exceptions
2023-06-17 17:12:01,019:INFO:Preloading libraries
2023-06-17 17:12:01,019:INFO:Copying training dataset
2023-06-17 17:12:01,020:INFO:Plot type: auc
2023-06-17 17:12:01,151:INFO:Fitting Model
2023-06-17 17:12:01,152:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but SGDClassifier was fitted with feature names
  warnings.warn(

2023-06-17 17:12:01,153:INFO:Scoring test/hold-out set
2023-06-17 17:12:01,344:INFO:Visual Rendered Successfully
2023-06-17 17:12:01,425:INFO:plot_model() successfully completed......................................
2023-06-17 17:12:07,996:INFO:Initializing plot_model()
2023-06-17 17:12:07,997:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:12:07,997:INFO:Checking exceptions
2023-06-17 17:12:08,003:INFO:Preloading libraries
2023-06-17 17:12:08,004:INFO:Copying training dataset
2023-06-17 17:12:08,004:INFO:Plot type: calibration
2023-06-17 17:12:08,020:INFO:Scoring test/hold-out set
2023-06-17 17:12:08,207:INFO:Visual Rendered Successfully
2023-06-17 17:12:08,314:INFO:plot_model() successfully completed......................................
2023-06-17 17:39:28,983:INFO:Initializing create_model()
2023-06-17 17:39:28,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:39:28,984:INFO:Checking exceptions
2023-06-17 17:39:29,021:INFO:Importing libraries
2023-06-17 17:39:29,021:INFO:Copying training dataset
2023-06-17 17:39:29,038:INFO:Defining folds
2023-06-17 17:39:29,038:INFO:Declaring metric variables
2023-06-17 17:39:29,043:INFO:Importing untrained model
2023-06-17 17:39:29,048:INFO:Logistic Regression Imported successfully
2023-06-17 17:39:29,059:INFO:Starting cross validation
2023-06-17 17:39:29,061:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:39:37,383:INFO:Calculating mean and std
2023-06-17 17:39:37,384:INFO:Creating metrics dataframe
2023-06-17 17:39:37,392:INFO:Finalizing model
2023-06-17 17:39:38,580:INFO:Uploading results into container
2023-06-17 17:39:38,581:INFO:Uploading model into container now
2023-06-17 17:39:38,599:INFO:_master_model_container: 3
2023-06-17 17:39:38,599:INFO:_display_container: 4
2023-06-17 17:39:38,599:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 17:39:38,600:INFO:create_model() successfully completed......................................
2023-06-17 17:39:38,694:INFO:Initializing calibrate_model()
2023-06-17 17:39:38,694:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:39:38,694:INFO:Checking exceptions
2023-06-17 17:39:38,701:INFO:Preloading libraries
2023-06-17 17:39:38,701:INFO:Preparing display monitor
2023-06-17 17:39:38,738:INFO:Getting model name
2023-06-17 17:39:38,738:INFO:Base model : Logistic Regression
2023-06-17 17:39:38,747:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:39:38,747:INFO:SubProcess create_model() called ==================================
2023-06-17 17:39:38,748:INFO:Initializing create_model()
2023-06-17 17:39:38,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021613522B80>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:39:38,749:INFO:Checking exceptions
2023-06-17 17:39:38,749:INFO:Importing libraries
2023-06-17 17:39:38,749:INFO:Copying training dataset
2023-06-17 17:39:38,770:INFO:Defining folds
2023-06-17 17:39:38,770:INFO:Declaring metric variables
2023-06-17 17:39:38,777:INFO:Importing untrained model
2023-06-17 17:39:38,777:INFO:Declaring custom model
2023-06-17 17:39:38,785:INFO:Logistic Regression Imported successfully
2023-06-17 17:39:38,800:INFO:Starting cross validation
2023-06-17 17:39:38,805:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:39:42,783:INFO:Calculating mean and std
2023-06-17 17:39:42,784:INFO:Creating metrics dataframe
2023-06-17 17:39:42,792:INFO:Finalizing model
2023-06-17 17:39:43,992:INFO:Uploading results into container
2023-06-17 17:39:43,993:INFO:Uploading model into container now
2023-06-17 17:39:43,994:INFO:_master_model_container: 4
2023-06-17 17:39:43,994:INFO:_display_container: 5
2023-06-17 17:39:43,995:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:39:43,995:INFO:create_model() successfully completed......................................
2023-06-17 17:39:44,062:INFO:SubProcess create_model() end ==================================
2023-06-17 17:39:44,086:INFO:_master_model_container: 4
2023-06-17 17:39:44,086:INFO:_display_container: 5
2023-06-17 17:39:44,087:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:39:44,087:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:39:44,178:INFO:Initializing evaluate_model()
2023-06-17 17:39:44,178:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:39:44,202:INFO:Initializing plot_model()
2023-06-17 17:39:44,202:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:44,202:INFO:Checking exceptions
2023-06-17 17:39:44,209:INFO:Preloading libraries
2023-06-17 17:39:44,210:INFO:Copying training dataset
2023-06-17 17:39:44,210:INFO:Plot type: pipeline
2023-06-17 17:39:44,396:INFO:Visual Rendered Successfully
2023-06-17 17:39:44,465:INFO:plot_model() successfully completed......................................
2023-06-17 17:39:44,468:INFO:Initializing plot_model()
2023-06-17 17:39:44,468:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=<function calibrate_model at 0x000002161338B1F0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:44,468:INFO:Checking exceptions
2023-06-17 17:39:54,659:INFO:Initializing plot_model()
2023-06-17 17:39:54,660:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:54,660:INFO:Checking exceptions
2023-06-17 17:39:54,666:INFO:Preloading libraries
2023-06-17 17:39:54,667:INFO:Copying training dataset
2023-06-17 17:39:54,667:INFO:Plot type: calibration
2023-06-17 17:39:54,685:INFO:Scoring test/hold-out set
2023-06-17 17:39:54,884:INFO:Visual Rendered Successfully
2023-06-17 17:39:54,947:INFO:plot_model() successfully completed......................................
2023-06-17 17:39:57,492:INFO:Initializing plot_model()
2023-06-17 17:39:57,493:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:57,493:INFO:Checking exceptions
2023-06-17 17:39:57,499:INFO:Preloading libraries
2023-06-17 17:39:57,501:INFO:Copying training dataset
2023-06-17 17:39:57,501:INFO:Plot type: vc
2023-06-17 17:39:57,501:INFO:Determining param_name
2023-06-17 17:39:59,484:INFO:Initializing plot_model()
2023-06-17 17:39:59,484:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:59,484:INFO:Checking exceptions
2023-06-17 17:39:59,491:INFO:Preloading libraries
2023-06-17 17:39:59,492:INFO:Copying training dataset
2023-06-17 17:39:59,492:INFO:Plot type: calibration
2023-06-17 17:39:59,509:INFO:Scoring test/hold-out set
2023-06-17 17:39:59,704:INFO:Visual Rendered Successfully
2023-06-17 17:39:59,767:INFO:plot_model() successfully completed......................................
2023-06-17 17:57:14,500:INFO:Initializing create_model()
2023-06-17 17:57:14,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:57:14,501:INFO:Checking exceptions
2023-06-17 17:57:14,536:INFO:Importing libraries
2023-06-17 17:57:14,537:INFO:Copying training dataset
2023-06-17 17:57:14,556:INFO:Defining folds
2023-06-17 17:57:14,556:INFO:Declaring metric variables
2023-06-17 17:57:14,561:INFO:Importing untrained model
2023-06-17 17:57:14,566:INFO:Logistic Regression Imported successfully
2023-06-17 17:57:14,580:INFO:Starting cross validation
2023-06-17 17:57:14,582:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:57:22,146:INFO:Calculating mean and std
2023-06-17 17:57:22,148:INFO:Creating metrics dataframe
2023-06-17 17:57:22,154:INFO:Finalizing model
2023-06-17 17:57:23,428:INFO:Uploading results into container
2023-06-17 17:57:23,429:INFO:Uploading model into container now
2023-06-17 17:57:23,445:INFO:_master_model_container: 5
2023-06-17 17:57:23,445:INFO:_display_container: 6
2023-06-17 17:57:23,446:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 17:57:23,446:INFO:create_model() successfully completed......................................
2023-06-17 17:57:23,536:INFO:Initializing calibrate_model()
2023-06-17 17:57:23,536:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:57:23,536:INFO:Checking exceptions
2023-06-17 17:57:23,542:INFO:Preloading libraries
2023-06-17 17:57:23,542:INFO:Preparing display monitor
2023-06-17 17:57:23,579:INFO:Getting model name
2023-06-17 17:57:23,580:INFO:Base model : Logistic Regression
2023-06-17 17:57:23,592:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:57:23,593:INFO:SubProcess create_model() called ==================================
2023-06-17 17:57:23,594:INFO:Initializing create_model()
2023-06-17 17:57:23,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021613583400>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:57:23,594:INFO:Checking exceptions
2023-06-17 17:57:23,595:INFO:Importing libraries
2023-06-17 17:57:23,595:INFO:Copying training dataset
2023-06-17 17:57:23,626:INFO:Defining folds
2023-06-17 17:57:23,626:INFO:Declaring metric variables
2023-06-17 17:57:23,633:INFO:Importing untrained model
2023-06-17 17:57:23,634:INFO:Declaring custom model
2023-06-17 17:57:23,639:INFO:Logistic Regression Imported successfully
2023-06-17 17:57:23,656:INFO:Starting cross validation
2023-06-17 17:57:23,658:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:57:27,252:INFO:Calculating mean and std
2023-06-17 17:57:27,255:INFO:Creating metrics dataframe
2023-06-17 17:57:27,262:INFO:Finalizing model
2023-06-17 17:57:28,529:INFO:Uploading results into container
2023-06-17 17:57:28,530:INFO:Uploading model into container now
2023-06-17 17:57:28,530:INFO:_master_model_container: 6
2023-06-17 17:57:28,530:INFO:_display_container: 7
2023-06-17 17:57:28,531:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:57:28,531:INFO:create_model() successfully completed......................................
2023-06-17 17:57:28,602:INFO:SubProcess create_model() end ==================================
2023-06-17 17:57:28,624:INFO:_master_model_container: 6
2023-06-17 17:57:28,624:INFO:_display_container: 7
2023-06-17 17:57:28,625:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:57:28,625:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:57:28,711:INFO:Initializing evaluate_model()
2023-06-17 17:57:28,712:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:57:28,738:INFO:Initializing plot_model()
2023-06-17 17:57:28,738:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:57:28,738:INFO:Checking exceptions
2023-06-17 17:57:28,743:INFO:Preloading libraries
2023-06-17 17:57:28,744:INFO:Copying training dataset
2023-06-17 17:57:28,745:INFO:Plot type: pipeline
2023-06-17 17:57:28,932:INFO:Visual Rendered Successfully
2023-06-17 17:57:29,006:INFO:plot_model() successfully completed......................................
2023-06-17 17:57:29,009:INFO:Initializing predict_model()
2023-06-17 17:57:29,009:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021613849430>)
2023-06-17 17:57:29,010:INFO:Checking exceptions
2023-06-17 17:57:29,010:INFO:Preloading libraries
2023-06-17 17:58:56,177:INFO:Initializing create_model()
2023-06-17 17:58:56,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:58:56,177:INFO:Checking exceptions
2023-06-17 17:58:56,213:INFO:Importing libraries
2023-06-17 17:58:56,213:INFO:Copying training dataset
2023-06-17 17:58:56,232:INFO:Defining folds
2023-06-17 17:58:56,232:INFO:Declaring metric variables
2023-06-17 17:58:56,236:INFO:Importing untrained model
2023-06-17 17:58:56,244:INFO:Logistic Regression Imported successfully
2023-06-17 17:58:56,260:INFO:Starting cross validation
2023-06-17 17:58:56,263:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:58:59,703:INFO:Calculating mean and std
2023-06-17 17:58:59,705:INFO:Creating metrics dataframe
2023-06-17 17:58:59,715:INFO:Finalizing model
2023-06-17 17:59:00,994:INFO:Uploading results into container
2023-06-17 17:59:00,995:INFO:Uploading model into container now
2023-06-17 17:59:01,012:INFO:_master_model_container: 7
2023-06-17 17:59:01,012:INFO:_display_container: 9
2023-06-17 17:59:01,013:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 17:59:01,013:INFO:create_model() successfully completed......................................
2023-06-17 17:59:01,092:INFO:Initializing calibrate_model()
2023-06-17 17:59:01,092:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:59:01,092:INFO:Checking exceptions
2023-06-17 17:59:01,100:INFO:Preloading libraries
2023-06-17 17:59:01,100:INFO:Preparing display monitor
2023-06-17 17:59:01,133:INFO:Getting model name
2023-06-17 17:59:01,133:INFO:Base model : Logistic Regression
2023-06-17 17:59:01,144:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:59:01,145:INFO:SubProcess create_model() called ==================================
2023-06-17 17:59:01,146:INFO:Initializing create_model()
2023-06-17 17:59:01,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000216137908E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:59:01,146:INFO:Checking exceptions
2023-06-17 17:59:01,146:INFO:Importing libraries
2023-06-17 17:59:01,146:INFO:Copying training dataset
2023-06-17 17:59:01,172:INFO:Defining folds
2023-06-17 17:59:01,172:INFO:Declaring metric variables
2023-06-17 17:59:01,180:INFO:Importing untrained model
2023-06-17 17:59:01,180:INFO:Declaring custom model
2023-06-17 17:59:01,187:INFO:Logistic Regression Imported successfully
2023-06-17 17:59:01,198:INFO:Starting cross validation
2023-06-17 17:59:01,200:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:59:05,006:INFO:Calculating mean and std
2023-06-17 17:59:05,007:INFO:Creating metrics dataframe
2023-06-17 17:59:05,014:INFO:Finalizing model
2023-06-17 17:59:06,371:INFO:Uploading results into container
2023-06-17 17:59:06,372:INFO:Uploading model into container now
2023-06-17 17:59:06,373:INFO:_master_model_container: 8
2023-06-17 17:59:06,373:INFO:_display_container: 10
2023-06-17 17:59:06,374:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:59:06,375:INFO:create_model() successfully completed......................................
2023-06-17 17:59:06,467:INFO:SubProcess create_model() end ==================================
2023-06-17 17:59:06,492:INFO:_master_model_container: 8
2023-06-17 17:59:06,492:INFO:_display_container: 10
2023-06-17 17:59:06,493:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:59:06,493:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:59:06,585:INFO:Initializing evaluate_model()
2023-06-17 17:59:06,585:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:59:06,612:INFO:Initializing plot_model()
2023-06-17 17:59:06,612:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:59:06,612:INFO:Checking exceptions
2023-06-17 17:59:06,620:INFO:Preloading libraries
2023-06-17 17:59:06,621:INFO:Copying training dataset
2023-06-17 17:59:06,621:INFO:Plot type: pipeline
2023-06-17 17:59:06,803:INFO:Visual Rendered Successfully
2023-06-17 17:59:06,876:INFO:plot_model() successfully completed......................................
2023-06-17 17:59:06,880:INFO:Initializing predict_model()
2023-06-17 17:59:06,880:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615688B80>)
2023-06-17 17:59:06,881:INFO:Checking exceptions
2023-06-17 17:59:06,881:INFO:Preloading libraries
2023-06-17 17:59:38,492:INFO:Initializing predict_model()
2023-06-17 17:59:38,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E90D0>)
2023-06-17 17:59:38,493:INFO:Checking exceptions
2023-06-17 17:59:38,493:INFO:Preloading libraries
2023-06-17 17:59:56,102:INFO:Initializing predict_model()
2023-06-17 17:59:56,102:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E90D0>)
2023-06-17 17:59:56,102:INFO:Checking exceptions
2023-06-17 17:59:56,102:INFO:Preloading libraries
2023-06-17 18:00:24,161:INFO:Initializing predict_model()
2023-06-17 18:00:24,161:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E90D0>)
2023-06-17 18:00:24,161:INFO:Checking exceptions
2023-06-17 18:00:24,161:INFO:Preloading libraries
2023-06-17 18:02:15,797:INFO:Initializing plot_model()
2023-06-17 18:02:15,797:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:02:15,797:INFO:Checking exceptions
2023-06-17 18:02:15,803:INFO:Preloading libraries
2023-06-17 18:02:15,804:INFO:Copying training dataset
2023-06-17 18:02:15,804:INFO:Plot type: auc
2023-06-17 18:02:15,950:INFO:Fitting Model
2023-06-17 18:02:15,951:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but SGDClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:02:15,952:INFO:Scoring test/hold-out set
2023-06-17 18:02:16,157:INFO:Visual Rendered Successfully
2023-06-17 18:02:16,234:INFO:plot_model() successfully completed......................................
2023-06-17 18:02:30,465:INFO:Initializing create_model()
2023-06-17 18:02:30,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 18:02:30,465:INFO:Checking exceptions
2023-06-17 18:02:30,498:INFO:Importing libraries
2023-06-17 18:02:30,499:INFO:Copying training dataset
2023-06-17 18:02:30,515:INFO:Defining folds
2023-06-17 18:02:30,515:INFO:Declaring metric variables
2023-06-17 18:02:30,521:INFO:Importing untrained model
2023-06-17 18:02:30,528:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 18:02:30,543:INFO:Starting cross validation
2023-06-17 18:02:30,547:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 18:02:31,119:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:31,140:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:31,149:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:31,210:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:32,517:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:34,195:INFO:Calculating mean and std
2023-06-17 18:02:34,196:INFO:Creating metrics dataframe
2023-06-17 18:02:34,205:INFO:Finalizing model
2023-06-17 18:02:35,408:INFO:Uploading results into container
2023-06-17 18:02:35,409:INFO:Uploading model into container now
2023-06-17 18:02:35,425:INFO:_master_model_container: 9
2023-06-17 18:02:35,426:INFO:_display_container: 15
2023-06-17 18:02:35,427:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 18:02:35,427:INFO:create_model() successfully completed......................................
2023-06-17 18:02:35,514:INFO:Initializing calibrate_model()
2023-06-17 18:02:35,514:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 18:02:35,514:INFO:Checking exceptions
2023-06-17 18:02:35,520:INFO:Preloading libraries
2023-06-17 18:02:35,520:INFO:Preparing display monitor
2023-06-17 18:02:35,556:INFO:Getting model name
2023-06-17 18:02:35,556:INFO:Base model : SVM - Linear Kernel
2023-06-17 18:02:35,570:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 18:02:35,570:INFO:SubProcess create_model() called ==================================
2023-06-17 18:02:35,572:INFO:Initializing create_model()
2023-06-17 18:02:35,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000216137CFF40>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 18:02:35,573:INFO:Checking exceptions
2023-06-17 18:02:35,573:INFO:Importing libraries
2023-06-17 18:02:35,573:INFO:Copying training dataset
2023-06-17 18:02:35,595:INFO:Defining folds
2023-06-17 18:02:35,595:INFO:Declaring metric variables
2023-06-17 18:02:35,607:INFO:Importing untrained model
2023-06-17 18:02:35,608:INFO:Declaring custom model
2023-06-17 18:02:35,621:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 18:02:35,635:INFO:Starting cross validation
2023-06-17 18:02:35,637:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 18:02:39,384:INFO:Calculating mean and std
2023-06-17 18:02:39,385:INFO:Creating metrics dataframe
2023-06-17 18:02:39,394:INFO:Finalizing model
2023-06-17 18:02:40,603:INFO:Uploading results into container
2023-06-17 18:02:40,603:INFO:Uploading model into container now
2023-06-17 18:02:40,603:INFO:_master_model_container: 10
2023-06-17 18:02:40,604:INFO:_display_container: 16
2023-06-17 18:02:40,605:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 18:02:40,605:INFO:create_model() successfully completed......................................
2023-06-17 18:02:40,676:INFO:SubProcess create_model() end ==================================
2023-06-17 18:02:40,699:INFO:_master_model_container: 10
2023-06-17 18:02:40,699:INFO:_display_container: 16
2023-06-17 18:02:40,700:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 18:02:40,700:INFO:calibrate_model() successfully completed......................................
2023-06-17 18:02:40,782:INFO:Initializing evaluate_model()
2023-06-17 18:02:40,782:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 18:02:40,809:INFO:Initializing plot_model()
2023-06-17 18:02:40,809:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:02:40,809:INFO:Checking exceptions
2023-06-17 18:02:40,816:INFO:Preloading libraries
2023-06-17 18:02:40,816:INFO:Copying training dataset
2023-06-17 18:02:40,816:INFO:Plot type: pipeline
2023-06-17 18:02:40,990:INFO:Visual Rendered Successfully
2023-06-17 18:02:41,061:INFO:plot_model() successfully completed......................................
2023-06-17 18:03:02,670:INFO:Initializing predict_model()
2023-06-17 18:03:02,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216157063A0>)
2023-06-17 18:03:02,670:INFO:Checking exceptions
2023-06-17 18:03:02,670:INFO:Preloading libraries
2023-06-17 18:03:06,465:INFO:Initializing predict_model()
2023-06-17 18:03:06,465:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706B80>)
2023-06-17 18:03:06,465:INFO:Checking exceptions
2023-06-17 18:03:06,466:INFO:Preloading libraries
2023-06-17 18:03:14,977:INFO:Initializing predict_model()
2023-06-17 18:03:14,977:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706CA0>)
2023-06-17 18:03:14,977:INFO:Checking exceptions
2023-06-17 18:03:14,977:INFO:Preloading libraries
2023-06-17 18:03:22,336:INFO:Initializing predict_model()
2023-06-17 18:03:22,337:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706310>)
2023-06-17 18:03:22,337:INFO:Checking exceptions
2023-06-17 18:03:22,337:INFO:Preloading libraries
2023-06-17 18:03:33,353:INFO:Initializing predict_model()
2023-06-17 18:03:33,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706DC0>)
2023-06-17 18:03:33,353:INFO:Checking exceptions
2023-06-17 18:03:33,354:INFO:Preloading libraries
2023-06-17 18:03:37,157:INFO:Initializing predict_model()
2023-06-17 18:03:37,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706550>)
2023-06-17 18:03:37,158:INFO:Checking exceptions
2023-06-17 18:03:37,158:INFO:Preloading libraries
2023-06-17 18:03:43,429:INFO:Initializing predict_model()
2023-06-17 18:03:43,429:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706040>)
2023-06-17 18:03:43,429:INFO:Checking exceptions
2023-06-17 18:03:43,429:INFO:Preloading libraries
2023-06-17 18:03:50,114:INFO:Initializing predict_model()
2023-06-17 18:03:50,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706310>)
2023-06-17 18:03:50,115:INFO:Checking exceptions
2023-06-17 18:03:50,115:INFO:Preloading libraries
2023-06-17 18:04:07,050:INFO:Initializing predict_model()
2023-06-17 18:04:07,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E9EE0>)
2023-06-17 18:04:07,050:INFO:Checking exceptions
2023-06-17 18:04:07,051:INFO:Preloading libraries
2023-06-17 18:04:07,287:INFO:Initializing predict_model()
2023-06-17 18:04:07,287:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E9EE0>)
2023-06-17 18:04:07,287:INFO:Checking exceptions
2023-06-17 18:04:07,287:INFO:Preloading libraries
2023-06-17 18:04:21,607:INFO:Initializing predict_model()
2023-06-17 18:04:21,607:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706550>)
2023-06-17 18:04:21,607:INFO:Checking exceptions
2023-06-17 18:04:21,608:INFO:Preloading libraries
2023-06-17 18:04:21,927:INFO:Initializing predict_model()
2023-06-17 18:04:21,927:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002161379F820>)
2023-06-17 18:04:21,928:INFO:Checking exceptions
2023-06-17 18:04:21,928:INFO:Preloading libraries
2023-06-17 18:05:19,413:INFO:Initializing create_model()
2023-06-17 18:05:19,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 18:05:19,414:INFO:Checking exceptions
2023-06-17 18:05:19,448:INFO:Importing libraries
2023-06-17 18:05:19,448:INFO:Copying training dataset
2023-06-17 18:05:19,466:INFO:Defining folds
2023-06-17 18:05:19,467:INFO:Declaring metric variables
2023-06-17 18:05:19,472:INFO:Importing untrained model
2023-06-17 18:05:19,472:INFO:Declaring custom model
2023-06-17 18:05:19,481:INFO:Random Forest Classifier Imported successfully
2023-06-17 18:05:19,492:INFO:Starting cross validation
2023-06-17 18:05:19,496:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 18:05:23,278:INFO:Calculating mean and std
2023-06-17 18:05:23,279:INFO:Creating metrics dataframe
2023-06-17 18:05:23,288:INFO:Finalizing model
2023-06-17 18:05:24,502:INFO:Uploading results into container
2023-06-17 18:05:24,503:INFO:Uploading model into container now
2023-06-17 18:05:24,519:INFO:_master_model_container: 11
2023-06-17 18:05:24,519:INFO:_display_container: 29
2023-06-17 18:05:24,519:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-17 18:05:24,520:INFO:create_model() successfully completed......................................
2023-06-17 18:05:24,600:INFO:Initializing calibrate_model()
2023-06-17 18:05:24,600:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 18:05:24,600:INFO:Checking exceptions
2023-06-17 18:05:24,607:INFO:Preloading libraries
2023-06-17 18:05:24,607:INFO:Preparing display monitor
2023-06-17 18:05:24,646:INFO:Getting model name
2023-06-17 18:05:24,647:INFO:Base model : Random Forest Classifier
2023-06-17 18:05:24,658:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 18:05:24,658:INFO:SubProcess create_model() called ==================================
2023-06-17 18:05:24,660:INFO:Initializing create_model()
2023-06-17 18:05:24,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000216133F5220>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 18:05:24,661:INFO:Checking exceptions
2023-06-17 18:05:24,661:INFO:Importing libraries
2023-06-17 18:05:24,661:INFO:Copying training dataset
2023-06-17 18:05:24,680:INFO:Defining folds
2023-06-17 18:05:24,680:INFO:Declaring metric variables
2023-06-17 18:05:24,686:INFO:Importing untrained model
2023-06-17 18:05:24,686:INFO:Declaring custom model
2023-06-17 18:05:24,692:INFO:Random Forest Classifier Imported successfully
2023-06-17 18:05:24,707:INFO:Starting cross validation
2023-06-17 18:05:24,711:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 18:05:28,888:INFO:Calculating mean and std
2023-06-17 18:05:28,890:INFO:Creating metrics dataframe
2023-06-17 18:05:28,897:INFO:Finalizing model
2023-06-17 18:05:30,132:INFO:Uploading results into container
2023-06-17 18:05:30,132:INFO:Uploading model into container now
2023-06-17 18:05:30,133:INFO:_master_model_container: 12
2023-06-17 18:05:30,133:INFO:_display_container: 30
2023-06-17 18:05:30,134:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 18:05:30,134:INFO:create_model() successfully completed......................................
2023-06-17 18:05:30,201:INFO:SubProcess create_model() end ==================================
2023-06-17 18:05:30,227:INFO:_master_model_container: 12
2023-06-17 18:05:30,227:INFO:_display_container: 30
2023-06-17 18:05:30,229:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 18:05:30,229:INFO:calibrate_model() successfully completed......................................
2023-06-17 18:05:30,334:INFO:Initializing evaluate_model()
2023-06-17 18:05:30,334:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 18:05:30,359:INFO:Initializing plot_model()
2023-06-17 18:05:30,359:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:05:30,359:INFO:Checking exceptions
2023-06-17 18:05:30,366:INFO:Preloading libraries
2023-06-17 18:05:30,376:INFO:Copying training dataset
2023-06-17 18:05:30,376:INFO:Plot type: pipeline
2023-06-17 18:05:30,546:INFO:Visual Rendered Successfully
2023-06-17 18:05:30,617:INFO:plot_model() successfully completed......................................
2023-06-17 18:05:37,605:INFO:Initializing predict_model()
2023-06-17 18:05:37,605:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A5AF0>)
2023-06-17 18:05:37,605:INFO:Checking exceptions
2023-06-17 18:05:37,605:INFO:Preloading libraries
2023-06-17 18:05:37,837:INFO:Initializing predict_model()
2023-06-17 18:05:37,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002161567CF70>)
2023-06-17 18:05:37,838:INFO:Checking exceptions
2023-06-17 18:05:37,838:INFO:Preloading libraries
2023-06-17 18:07:10,659:INFO:Initializing predict_model()
2023-06-17 18:07:10,659:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A5A60>)
2023-06-17 18:07:10,659:INFO:Checking exceptions
2023-06-17 18:07:10,659:INFO:Preloading libraries
2023-06-17 18:07:10,990:INFO:Initializing predict_model()
2023-06-17 18:07:10,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021613799A60>)
2023-06-17 18:07:10,990:INFO:Checking exceptions
2023-06-17 18:07:10,991:INFO:Preloading libraries
2023-06-17 18:07:11,358:INFO:Initializing plot_model()
2023-06-17 18:07:11,358:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:07:11,358:INFO:Checking exceptions
2023-06-17 18:07:11,367:INFO:Preloading libraries
2023-06-17 18:07:11,369:INFO:Copying training dataset
2023-06-17 18:07:11,369:INFO:Plot type: calibration
2023-06-17 18:07:11,384:INFO:Scoring test/hold-out set
2023-06-17 18:07:11,599:INFO:Visual Rendered Successfully
2023-06-17 18:07:11,677:INFO:plot_model() successfully completed......................................
2023-06-17 18:07:22,420:INFO:Initializing predict_model()
2023-06-17 18:07:22,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A5940>)
2023-06-17 18:07:22,420:INFO:Checking exceptions
2023-06-17 18:07:22,421:INFO:Preloading libraries
2023-06-17 18:07:22,677:INFO:Initializing predict_model()
2023-06-17 18:07:22,677:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021614958820>)
2023-06-17 18:07:22,678:INFO:Checking exceptions
2023-06-17 18:07:22,678:INFO:Preloading libraries
2023-06-17 18:07:23,113:INFO:Initializing plot_model()
2023-06-17 18:07:23,113:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:07:23,114:INFO:Checking exceptions
2023-06-17 18:07:23,123:INFO:Preloading libraries
2023-06-17 18:07:23,126:INFO:Copying training dataset
2023-06-17 18:07:23,126:INFO:Plot type: calibration
2023-06-17 18:07:23,151:INFO:Scoring test/hold-out set
2023-06-17 18:07:23,368:INFO:Visual Rendered Successfully
2023-06-17 18:07:23,442:INFO:plot_model() successfully completed......................................
2023-06-17 18:07:23,443:INFO:Initializing plot_model()
2023-06-17 18:07:23,444:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:07:23,444:INFO:Checking exceptions
2023-06-17 18:07:23,451:INFO:Preloading libraries
2023-06-17 18:07:23,459:INFO:Copying training dataset
2023-06-17 18:07:23,459:INFO:Plot type: calibration
2023-06-17 18:07:23,476:INFO:Scoring test/hold-out set
2023-06-17 18:07:23,770:INFO:Visual Rendered Successfully
2023-06-17 18:07:23,837:INFO:plot_model() successfully completed......................................
2023-06-17 18:07:50,407:INFO:Initializing predict_model()
2023-06-17 18:07:50,408:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A53A0>)
2023-06-17 18:07:50,408:INFO:Checking exceptions
2023-06-17 18:07:50,408:INFO:Preloading libraries
2023-06-17 18:07:50,658:INFO:Initializing predict_model()
2023-06-17 18:07:50,658:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A53A0>)
2023-06-17 18:07:50,658:INFO:Checking exceptions
2023-06-17 18:07:50,658:INFO:Preloading libraries
2023-06-17 18:07:50,881:INFO:Initializing plot_model()
2023-06-17 18:07:50,881:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:07:50,882:INFO:Checking exceptions
2023-06-17 18:08:07,292:INFO:Initializing predict_model()
2023-06-17 18:08:07,292:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002161575A1F0>)
2023-06-17 18:08:07,292:INFO:Checking exceptions
2023-06-17 18:08:07,292:INFO:Preloading libraries
2023-06-17 18:08:07,489:INFO:Initializing predict_model()
2023-06-17 18:08:07,489:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A5B80>)
2023-06-17 18:08:07,489:INFO:Checking exceptions
2023-06-17 18:08:07,489:INFO:Preloading libraries
2023-06-17 18:08:41,875:INFO:Initializing plot_model()
2023-06-17 18:08:41,876:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:08:41,876:INFO:Checking exceptions
2023-06-17 18:08:41,881:INFO:Preloading libraries
2023-06-17 18:08:41,891:INFO:Copying training dataset
2023-06-17 18:08:41,891:INFO:Plot type: lift
2023-06-17 18:08:41,891:INFO:Generating predictions / predict_proba on X_test
2023-06-17 18:08:42,466:INFO:Visual Rendered Successfully
2023-06-17 18:08:42,561:INFO:plot_model() successfully completed......................................
2023-06-17 18:08:50,860:INFO:Initializing plot_model()
2023-06-17 18:08:50,860:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:08:50,860:INFO:Checking exceptions
2023-06-17 18:08:50,866:INFO:Preloading libraries
2023-06-17 18:08:50,875:INFO:Copying training dataset
2023-06-17 18:08:50,875:INFO:Plot type: boundary
2023-06-17 18:08:50,969:INFO:Fitting StandardScaler()
2023-06-17 18:08:50,989:INFO:Fitting PCA()
2023-06-17 18:08:51,174:INFO:Fitting Model
2023-06-17 18:08:55,531:WARNING:c:\Program Files\Python39\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2023-06-17 18:08:56,849:INFO:Visual Rendered Successfully
2023-06-17 18:08:56,969:INFO:plot_model() successfully completed......................................
2023-06-17 18:09:13,317:INFO:Initializing plot_model()
2023-06-17 18:09:13,317:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:13,317:INFO:Checking exceptions
2023-06-17 18:09:17,109:INFO:Initializing plot_model()
2023-06-17 18:09:17,110:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:17,110:INFO:Checking exceptions
2023-06-17 18:09:27,749:INFO:Initializing plot_model()
2023-06-17 18:09:27,749:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:27,750:INFO:Checking exceptions
2023-06-17 18:09:27,757:INFO:Preloading libraries
2023-06-17 18:09:27,767:INFO:Copying training dataset
2023-06-17 18:09:27,767:INFO:Plot type: calibration
2023-06-17 18:09:27,783:INFO:Scoring test/hold-out set
2023-06-17 18:09:28,037:INFO:Visual Rendered Successfully
2023-06-17 18:09:28,103:INFO:plot_model() successfully completed......................................
2023-06-17 18:09:31,582:INFO:Initializing plot_model()
2023-06-17 18:09:31,582:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:31,582:INFO:Checking exceptions
2023-06-17 18:09:31,589:INFO:Preloading libraries
2023-06-17 18:09:31,598:INFO:Copying training dataset
2023-06-17 18:09:31,598:INFO:Plot type: error
2023-06-17 18:09:31,740:INFO:Fitting Model
2023-06-17 18:09:31,740:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:09:31,741:INFO:Scoring test/hold-out set
2023-06-17 18:09:32,044:INFO:Visual Rendered Successfully
2023-06-17 18:09:32,170:INFO:plot_model() successfully completed......................................
2023-06-17 18:09:39,951:INFO:Initializing plot_model()
2023-06-17 18:09:39,951:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:39,951:INFO:Checking exceptions
2023-06-17 18:09:39,958:INFO:Preloading libraries
2023-06-17 18:09:39,967:INFO:Copying training dataset
2023-06-17 18:09:39,967:INFO:Plot type: pr
2023-06-17 18:09:40,100:INFO:Fitting Model
2023-06-17 18:09:40,101:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:09:40,102:INFO:Scoring test/hold-out set
2023-06-17 18:09:40,417:INFO:Visual Rendered Successfully
2023-06-17 18:09:40,502:INFO:plot_model() successfully completed......................................
2023-06-17 18:09:42,916:INFO:Initializing plot_model()
2023-06-17 18:09:42,916:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:42,917:INFO:Checking exceptions
2023-06-17 18:09:42,923:INFO:Preloading libraries
2023-06-17 18:09:42,932:INFO:Copying training dataset
2023-06-17 18:09:42,932:INFO:Plot type: auc
2023-06-17 18:09:43,063:INFO:Fitting Model
2023-06-17 18:09:43,064:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:09:43,065:INFO:Scoring test/hold-out set
2023-06-17 18:09:43,394:INFO:Visual Rendered Successfully
2023-06-17 18:09:43,468:INFO:plot_model() successfully completed......................................
2023-06-17 18:38:11,345:INFO:Initializing predict_model()
2023-06-17 18:38:11,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002167E461F70>)
2023-06-17 18:38:11,346:INFO:Checking exceptions
2023-06-17 18:38:11,346:INFO:Preloading libraries
2023-06-17 18:38:11,557:INFO:Initializing predict_model()
2023-06-17 18:38:11,557:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002167E461F70>)
2023-06-17 18:38:11,557:INFO:Checking exceptions
2023-06-17 18:38:11,557:INFO:Preloading libraries
2023-06-17 18:38:44,514:INFO:Initializing predict_model()
2023-06-17 18:38:44,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CD430>)
2023-06-17 18:38:44,514:INFO:Checking exceptions
2023-06-17 18:38:44,514:INFO:Preloading libraries
2023-06-17 18:38:44,765:INFO:Initializing predict_model()
2023-06-17 18:38:44,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CA0D0>)
2023-06-17 18:38:44,765:INFO:Checking exceptions
2023-06-17 18:38:44,765:INFO:Preloading libraries
2023-06-17 18:38:57,823:INFO:Initializing predict_model()
2023-06-17 18:38:57,823:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CD9D0>)
2023-06-17 18:38:57,823:INFO:Checking exceptions
2023-06-17 18:38:57,823:INFO:Preloading libraries
2023-06-17 18:38:58,059:INFO:Initializing predict_model()
2023-06-17 18:38:58,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216137AB310>)
2023-06-17 18:38:58,059:INFO:Checking exceptions
2023-06-17 18:38:58,059:INFO:Preloading libraries
2023-06-17 18:38:58,507:INFO:Initializing plot_model()
2023-06-17 18:38:58,507:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:38:58,508:INFO:Checking exceptions
2023-06-17 18:38:58,516:INFO:Preloading libraries
2023-06-17 18:38:58,519:INFO:Copying training dataset
2023-06-17 18:38:58,520:INFO:Plot type: calibration
2023-06-17 18:38:58,536:INFO:Scoring test/hold-out set
2023-06-17 18:38:58,758:INFO:Visual Rendered Successfully
2023-06-17 18:38:58,825:INFO:plot_model() successfully completed......................................
2023-06-17 18:38:58,827:INFO:Initializing plot_model()
2023-06-17 18:38:58,827:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:38:58,827:INFO:Checking exceptions
2023-06-17 18:38:58,835:INFO:Preloading libraries
2023-06-17 18:38:58,843:INFO:Copying training dataset
2023-06-17 18:38:58,843:INFO:Plot type: calibration
2023-06-17 18:38:58,864:INFO:Scoring test/hold-out set
2023-06-17 18:38:59,148:INFO:Visual Rendered Successfully
2023-06-17 18:38:59,215:INFO:plot_model() successfully completed......................................
2023-06-17 18:39:35,349:INFO:Initializing predict_model()
2023-06-17 18:39:35,349:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615A5EAF0>)
2023-06-17 18:39:35,349:INFO:Checking exceptions
2023-06-17 18:39:35,349:INFO:Preloading libraries
2023-06-17 18:39:35,662:INFO:Initializing predict_model()
2023-06-17 18:39:35,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706790>)
2023-06-17 18:39:35,662:INFO:Checking exceptions
2023-06-17 18:39:35,662:INFO:Preloading libraries
2023-06-17 18:39:36,189:INFO:Initializing plot_model()
2023-06-17 18:39:36,189:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:39:36,189:INFO:Checking exceptions
2023-06-17 18:39:36,199:INFO:Preloading libraries
2023-06-17 18:39:36,202:INFO:Copying training dataset
2023-06-17 18:39:36,202:INFO:Plot type: calibration
2023-06-17 18:39:36,219:INFO:Scoring test/hold-out set
2023-06-17 18:39:36,442:INFO:Visual Rendered Successfully
2023-06-17 18:39:36,518:INFO:plot_model() successfully completed......................................
2023-06-17 18:39:36,520:INFO:Initializing plot_model()
2023-06-17 18:39:36,520:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:39:36,520:INFO:Checking exceptions
2023-06-17 18:39:36,528:INFO:Preloading libraries
2023-06-17 18:39:36,537:INFO:Copying training dataset
2023-06-17 18:39:36,537:INFO:Plot type: calibration
2023-06-17 18:39:36,559:INFO:Scoring test/hold-out set
2023-06-17 18:39:36,853:INFO:Visual Rendered Successfully
2023-06-17 18:39:36,922:INFO:plot_model() successfully completed......................................
2023-06-17 18:40:34,211:INFO:Initializing predict_model()
2023-06-17 18:40:34,211:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021614958670>)
2023-06-17 18:40:34,211:INFO:Checking exceptions
2023-06-17 18:40:34,211:INFO:Preloading libraries
2023-06-17 18:40:34,435:INFO:Initializing predict_model()
2023-06-17 18:40:34,435:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CA160>)
2023-06-17 18:40:34,435:INFO:Checking exceptions
2023-06-17 18:40:34,435:INFO:Preloading libraries
2023-06-17 18:41:07,488:INFO:Initializing plot_model()
2023-06-17 18:41:07,488:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:41:07,488:INFO:Checking exceptions
2023-06-17 18:41:11,900:INFO:Initializing plot_model()
2023-06-17 18:41:11,900:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:41:11,900:INFO:Checking exceptions
2023-06-17 18:41:11,907:INFO:Preloading libraries
2023-06-17 18:41:11,907:INFO:Copying training dataset
2023-06-17 18:41:11,908:INFO:Plot type: pipeline
2023-06-17 18:41:12,061:INFO:Visual Rendered Successfully
2023-06-17 18:41:12,136:INFO:plot_model() successfully completed......................................
2023-06-17 18:41:12,957:INFO:Initializing plot_model()
2023-06-17 18:41:12,957:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:41:12,957:INFO:Checking exceptions
2023-06-17 18:41:12,964:INFO:Preloading libraries
2023-06-17 18:41:12,964:INFO:Copying training dataset
2023-06-17 18:41:12,964:INFO:Plot type: parameter
2023-06-17 18:41:12,969:INFO:Visual Rendered Successfully
2023-06-17 18:41:13,034:INFO:plot_model() successfully completed......................................
2023-06-17 18:41:27,165:INFO:Initializing plot_model()
2023-06-17 18:41:27,165:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:41:27,165:INFO:Checking exceptions
2023-06-17 18:41:37,509:INFO:Initializing plot_model()
2023-06-17 18:41:37,509:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:41:37,509:INFO:Checking exceptions
2023-06-17 18:41:37,515:INFO:Preloading libraries
2023-06-17 18:41:37,515:INFO:Copying training dataset
2023-06-17 18:41:37,515:INFO:Plot type: confusion_matrix
2023-06-17 18:41:37,651:INFO:Fitting Model
2023-06-17 18:41:37,651:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but SGDClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:41:37,652:INFO:Scoring test/hold-out set
2023-06-17 18:41:37,763:INFO:Visual Rendered Successfully
2023-06-17 18:41:37,847:INFO:plot_model() successfully completed......................................
2023-06-17 18:52:40,972:INFO:Initializing predict_model()
2023-06-17 18:52:40,972:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CDC10>)
2023-06-17 18:52:40,972:INFO:Checking exceptions
2023-06-17 18:52:40,972:INFO:Preloading libraries
2023-06-17 18:52:41,222:INFO:Initializing predict_model()
2023-06-17 18:52:41,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CDC10>)
2023-06-17 18:52:41,223:INFO:Checking exceptions
2023-06-17 18:52:41,223:INFO:Preloading libraries
2023-06-19 08:58:19,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 08:58:19,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 08:58:19,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 08:58:19,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 08:58:22,118:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 08:58:23,621:INFO:PyCaret ClassificationExperiment
2023-06-19 08:58:23,621:INFO:Logging name: clf-default-name
2023-06-19 08:58:23,621:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 08:58:23,621:INFO:version 3.0.2
2023-06-19 08:58:23,621:INFO:Initializing setup()
2023-06-19 08:58:23,621:INFO:self.USI: 74c3
2023-06-19 08:58:23,621:INFO:self._variable_keys: {'y_train', 'fold_groups_param', 'y_test', 'html_param', 'X', 'X_train', 'X_test', 'pipeline', 'exp_name_log', 'exp_id', 'data', 'logging_param', 'seed', 'log_plots_param', 'gpu_param', '_ml_usecase', 'USI', 'y', 'memory', 'fold_generator', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', '_available_plots', 'n_jobs_param', 'idx'}
2023-06-19 08:58:23,621:INFO:Checking environment
2023-06-19 08:58:23,621:INFO:python_version: 3.9.7
2023-06-19 08:58:23,621:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 08:58:23,621:INFO:machine: AMD64
2023-06-19 08:58:23,621:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 08:58:23,621:INFO:Memory: svmem(total=17120436224, available=7630721024, percent=55.4, used=9489715200, free=7630721024)
2023-06-19 08:58:23,622:INFO:Physical Core: 4
2023-06-19 08:58:23,622:INFO:Logical Core: 4
2023-06-19 08:58:23,622:INFO:Checking libraries
2023-06-19 08:58:23,622:INFO:System:
2023-06-19 08:58:23,622:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 08:58:23,622:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 08:58:23,622:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 08:58:23,622:INFO:PyCaret required dependencies:
2023-06-19 08:58:23,622:INFO:                 pip: 21.2.3
2023-06-19 08:58:23,622:INFO:          setuptools: 57.4.0
2023-06-19 08:58:23,622:INFO:             pycaret: 3.0.2
2023-06-19 08:58:23,622:INFO:             IPython: 7.28.0
2023-06-19 08:58:23,622:INFO:          ipywidgets: 8.0.6
2023-06-19 08:58:23,622:INFO:                tqdm: 4.64.0
2023-06-19 08:58:23,622:INFO:               numpy: 1.22.4
2023-06-19 08:58:23,622:INFO:              pandas: 1.3.5
2023-06-19 08:58:23,622:INFO:              jinja2: 3.1.2
2023-06-19 08:58:23,622:INFO:               scipy: 1.7.1
2023-06-19 08:58:23,622:INFO:              joblib: 1.2.0
2023-06-19 08:58:23,622:INFO:             sklearn: 1.1.0
2023-06-19 08:58:23,623:INFO:                pyod: 1.0.9
2023-06-19 08:58:23,623:INFO:            imblearn: 0.9.1
2023-06-19 08:58:23,623:INFO:   category_encoders: 2.6.1
2023-06-19 08:58:23,623:INFO:            lightgbm: 3.3.5
2023-06-19 08:58:23,623:INFO:               numba: 0.57.0
2023-06-19 08:58:23,623:INFO:            requests: 2.31.0
2023-06-19 08:58:23,623:INFO:          matplotlib: 3.4.3
2023-06-19 08:58:23,623:INFO:          scikitplot: 0.3.7
2023-06-19 08:58:23,623:INFO:         yellowbrick: 1.5
2023-06-19 08:58:23,623:INFO:              plotly: 5.8.0
2023-06-19 08:58:23,623:INFO:             kaleido: 0.2.1
2023-06-19 08:58:23,623:INFO:         statsmodels: 0.14.0
2023-06-19 08:58:23,623:INFO:              sktime: 0.17.0
2023-06-19 08:58:23,623:INFO:               tbats: 1.1.3
2023-06-19 08:58:23,623:INFO:            pmdarima: 2.0.3
2023-06-19 08:58:23,623:INFO:              psutil: 5.9.0
2023-06-19 08:58:23,623:INFO:PyCaret optional dependencies:
2023-06-19 08:58:23,645:INFO:                shap: Not installed
2023-06-19 08:58:23,645:INFO:           interpret: Not installed
2023-06-19 08:58:23,645:INFO:                umap: Not installed
2023-06-19 08:58:23,645:INFO:    pandas_profiling: Not installed
2023-06-19 08:58:23,645:INFO:  explainerdashboard: Not installed
2023-06-19 08:58:23,646:INFO:             autoviz: Not installed
2023-06-19 08:58:23,646:INFO:           fairlearn: Not installed
2023-06-19 08:58:23,646:INFO:             xgboost: Not installed
2023-06-19 08:58:23,646:INFO:            catboost: Not installed
2023-06-19 08:58:23,646:INFO:              kmodes: Not installed
2023-06-19 08:58:23,646:INFO:             mlxtend: Not installed
2023-06-19 08:58:23,646:INFO:       statsforecast: Not installed
2023-06-19 08:58:23,646:INFO:        tune_sklearn: Not installed
2023-06-19 08:58:23,646:INFO:                 ray: Not installed
2023-06-19 08:58:23,646:INFO:            hyperopt: Not installed
2023-06-19 08:58:23,646:INFO:              optuna: Not installed
2023-06-19 08:58:23,646:INFO:               skopt: Not installed
2023-06-19 08:58:23,646:INFO:              mlflow: Not installed
2023-06-19 08:58:23,646:INFO:              gradio: Not installed
2023-06-19 08:58:23,646:INFO:             fastapi: Not installed
2023-06-19 08:58:23,646:INFO:             uvicorn: Not installed
2023-06-19 08:58:23,646:INFO:              m2cgen: Not installed
2023-06-19 08:58:23,646:INFO:           evidently: Not installed
2023-06-19 08:58:23,646:INFO:               fugue: Not installed
2023-06-19 08:58:23,647:INFO:           streamlit: Not installed
2023-06-19 08:58:23,647:INFO:             prophet: Not installed
2023-06-19 08:58:23,647:INFO:None
2023-06-19 08:58:23,647:INFO:Set up data.
2023-06-19 08:58:23,717:INFO:Set up train/test split.
2023-06-19 08:58:23,745:INFO:Set up index.
2023-06-19 08:58:23,748:INFO:Set up folding strategy.
2023-06-19 08:58:23,748:INFO:Assigning column types.
2023-06-19 08:58:23,761:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 08:58:23,814:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 08:58:23,817:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 08:58:23,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:23,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 08:58:24,014:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 08:58:24,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,047:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 08:58:24,101:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 08:58:24,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,190:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 08:58:24,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,224:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 08:58:24,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,403:INFO:Preparing preprocessing pipeline...
2023-06-19 08:58:24,407:INFO:Set up simple imputation.
2023-06-19 08:58:24,418:INFO:Set up encoding of ordinal features.
2023-06-19 08:58:24,429:INFO:Set up encoding of categorical features.
2023-06-19 08:58:24,429:INFO:Set up removing multicollinearity.
2023-06-19 08:58:24,429:INFO:Set up imbalanced handling.
2023-06-19 08:58:24,429:INFO:Set up feature selection.
2023-06-19 08:58:24,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:24,522:INFO:Set up column name cleaning.
2023-06-19 08:58:25,038:INFO:Finished creating preprocessing pipeline.
2023-06-19 08:58:25,096:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x0000020A8E957550>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 08:58:25,096:INFO:Creating final display dataframe.
2023-06-19 08:58:25,301:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              74c3
2023-06-19 08:58:25,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:25,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:25,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:25,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 08:58:25,500:INFO:setup() successfully completed in 2.84s...............
2023-06-19 08:58:26,367:INFO:Initializing create_model()
2023-06-19 08:58:26,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 08:58:26,368:INFO:Checking exceptions
2023-06-19 08:58:26,409:INFO:Importing libraries
2023-06-19 08:58:26,409:INFO:Copying training dataset
2023-06-19 08:58:26,433:INFO:Defining folds
2023-06-19 08:58:26,433:INFO:Declaring metric variables
2023-06-19 08:58:26,438:INFO:Importing untrained model
2023-06-19 08:58:26,445:INFO:Logistic Regression Imported successfully
2023-06-19 08:58:26,458:INFO:Starting cross validation
2023-06-19 08:58:26,460:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 08:58:34,893:INFO:Calculating mean and std
2023-06-19 08:58:34,896:INFO:Creating metrics dataframe
2023-06-19 08:58:34,902:INFO:Finalizing model
2023-06-19 08:58:36,152:INFO:Uploading results into container
2023-06-19 08:58:36,153:INFO:Uploading model into container now
2023-06-19 08:58:36,171:INFO:_master_model_container: 1
2023-06-19 08:58:36,171:INFO:_display_container: 2
2023-06-19 08:58:36,172:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 08:58:36,172:INFO:create_model() successfully completed......................................
2023-06-19 08:58:36,253:INFO:Initializing calibrate_model()
2023-06-19 08:58:36,254:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 08:58:36,255:INFO:Checking exceptions
2023-06-19 08:58:36,260:INFO:Preloading libraries
2023-06-19 08:58:36,260:INFO:Preparing display monitor
2023-06-19 08:58:36,298:INFO:Getting model name
2023-06-19 08:58:36,298:INFO:Base model : Logistic Regression
2023-06-19 08:58:36,311:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 08:58:36,311:INFO:SubProcess create_model() called ==================================
2023-06-19 08:58:36,312:INFO:Initializing create_model()
2023-06-19 08:58:36,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020AFB7951F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 08:58:36,313:INFO:Checking exceptions
2023-06-19 08:58:36,313:INFO:Importing libraries
2023-06-19 08:58:36,313:INFO:Copying training dataset
2023-06-19 08:58:36,331:INFO:Defining folds
2023-06-19 08:58:36,331:INFO:Declaring metric variables
2023-06-19 08:58:36,339:INFO:Importing untrained model
2023-06-19 08:58:36,340:INFO:Declaring custom model
2023-06-19 08:58:36,344:INFO:Logistic Regression Imported successfully
2023-06-19 08:58:36,355:INFO:Starting cross validation
2023-06-19 08:58:36,357:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 08:58:40,131:INFO:Calculating mean and std
2023-06-19 08:58:40,132:INFO:Creating metrics dataframe
2023-06-19 08:58:40,142:INFO:Finalizing model
2023-06-19 08:58:41,520:INFO:Uploading results into container
2023-06-19 08:58:41,521:INFO:Uploading model into container now
2023-06-19 08:58:41,522:INFO:_master_model_container: 2
2023-06-19 08:58:41,523:INFO:_display_container: 3
2023-06-19 08:58:41,524:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 08:58:41,524:INFO:create_model() successfully completed......................................
2023-06-19 08:58:41,595:INFO:SubProcess create_model() end ==================================
2023-06-19 08:58:41,618:INFO:_master_model_container: 2
2023-06-19 08:58:41,618:INFO:_display_container: 3
2023-06-19 08:58:41,620:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 08:58:41,620:INFO:calibrate_model() successfully completed......................................
2023-06-19 08:58:41,702:INFO:Initializing evaluate_model()
2023-06-19 08:58:41,703:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 08:58:41,733:INFO:Initializing plot_model()
2023-06-19 08:58:41,733:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, system=True)
2023-06-19 08:58:41,733:INFO:Checking exceptions
2023-06-19 08:58:41,744:INFO:Preloading libraries
2023-06-19 08:58:41,745:INFO:Copying training dataset
2023-06-19 08:58:41,745:INFO:Plot type: pipeline
2023-06-19 08:58:42,020:INFO:Visual Rendered Successfully
2023-06-19 08:58:42,092:INFO:plot_model() successfully completed......................................
2023-06-19 08:58:42,143:INFO:Initializing predict_model()
2023-06-19 08:58:42,143:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A91736B80>)
2023-06-19 08:58:42,143:INFO:Checking exceptions
2023-06-19 08:58:42,143:INFO:Preloading libraries
2023-06-19 08:58:42,370:INFO:Initializing predict_model()
2023-06-19 08:58:42,370:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A9139DF70>)
2023-06-19 08:58:42,370:INFO:Checking exceptions
2023-06-19 08:58:42,370:INFO:Preloading libraries
2023-06-19 08:58:42,733:INFO:Initializing create_model()
2023-06-19 08:58:42,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 08:58:42,733:INFO:Checking exceptions
2023-06-19 08:58:42,770:INFO:Importing libraries
2023-06-19 08:58:42,770:INFO:Copying training dataset
2023-06-19 08:58:42,787:INFO:Defining folds
2023-06-19 08:58:42,787:INFO:Declaring metric variables
2023-06-19 08:58:42,792:INFO:Importing untrained model
2023-06-19 08:58:42,799:INFO:SVM - Linear Kernel Imported successfully
2023-06-19 08:58:42,817:INFO:Starting cross validation
2023-06-19 08:58:42,820:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 08:58:43,543:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 08:58:43,543:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 08:58:43,544:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 08:58:43,552:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 08:58:45,031:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 08:58:46,780:INFO:Calculating mean and std
2023-06-19 08:58:46,781:INFO:Creating metrics dataframe
2023-06-19 08:58:46,788:INFO:Finalizing model
2023-06-19 08:58:48,080:INFO:Uploading results into container
2023-06-19 08:58:48,081:INFO:Uploading model into container now
2023-06-19 08:58:48,100:INFO:_master_model_container: 3
2023-06-19 08:58:48,101:INFO:_display_container: 6
2023-06-19 08:58:48,101:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-19 08:58:48,101:INFO:create_model() successfully completed......................................
2023-06-19 08:58:48,198:INFO:Initializing calibrate_model()
2023-06-19 08:58:48,198:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 08:58:48,198:INFO:Checking exceptions
2023-06-19 08:58:48,207:INFO:Preloading libraries
2023-06-19 08:58:48,207:INFO:Preparing display monitor
2023-06-19 08:58:48,246:INFO:Getting model name
2023-06-19 08:58:48,246:INFO:Base model : SVM - Linear Kernel
2023-06-19 08:58:48,261:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 08:58:48,261:INFO:SubProcess create_model() called ==================================
2023-06-19 08:58:48,262:INFO:Initializing create_model()
2023-06-19 08:58:48,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A9379DEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 08:58:48,263:INFO:Checking exceptions
2023-06-19 08:58:48,263:INFO:Importing libraries
2023-06-19 08:58:48,263:INFO:Copying training dataset
2023-06-19 08:58:48,293:INFO:Defining folds
2023-06-19 08:58:48,293:INFO:Declaring metric variables
2023-06-19 08:58:48,303:INFO:Importing untrained model
2023-06-19 08:58:48,303:INFO:Declaring custom model
2023-06-19 08:58:48,313:INFO:SVM - Linear Kernel Imported successfully
2023-06-19 08:58:48,342:INFO:Starting cross validation
2023-06-19 08:58:48,345:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 08:58:52,248:INFO:Calculating mean and std
2023-06-19 08:58:52,249:INFO:Creating metrics dataframe
2023-06-19 08:58:52,259:INFO:Finalizing model
2023-06-19 08:58:53,528:INFO:Uploading results into container
2023-06-19 08:58:53,529:INFO:Uploading model into container now
2023-06-19 08:58:53,530:INFO:_master_model_container: 4
2023-06-19 08:58:53,530:INFO:_display_container: 7
2023-06-19 08:58:53,532:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 08:58:53,532:INFO:create_model() successfully completed......................................
2023-06-19 08:58:53,603:INFO:SubProcess create_model() end ==================================
2023-06-19 08:58:53,626:INFO:_master_model_container: 4
2023-06-19 08:58:53,626:INFO:_display_container: 7
2023-06-19 08:58:53,627:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 08:58:53,628:INFO:calibrate_model() successfully completed......................................
2023-06-19 08:58:53,756:INFO:Initializing evaluate_model()
2023-06-19 08:58:53,757:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 08:58:53,783:INFO:Initializing plot_model()
2023-06-19 08:58:53,783:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, system=True)
2023-06-19 08:58:53,783:INFO:Checking exceptions
2023-06-19 08:58:53,790:INFO:Preloading libraries
2023-06-19 08:58:53,790:INFO:Copying training dataset
2023-06-19 08:58:53,792:INFO:Plot type: pipeline
2023-06-19 08:58:53,975:INFO:Visual Rendered Successfully
2023-06-19 08:58:54,049:INFO:plot_model() successfully completed......................................
2023-06-19 08:58:54,105:INFO:Initializing predict_model()
2023-06-19 08:58:54,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A93768EE0>)
2023-06-19 08:58:54,105:INFO:Checking exceptions
2023-06-19 08:58:54,105:INFO:Preloading libraries
2023-06-19 08:58:54,306:INFO:Initializing predict_model()
2023-06-19 08:58:54,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A93768EE0>)
2023-06-19 08:58:54,306:INFO:Checking exceptions
2023-06-19 08:58:54,306:INFO:Preloading libraries
2023-06-19 08:58:54,566:INFO:Initializing create_model()
2023-06-19 08:58:54,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 08:58:54,567:INFO:Checking exceptions
2023-06-19 08:58:54,609:INFO:Importing libraries
2023-06-19 08:58:54,609:INFO:Copying training dataset
2023-06-19 08:58:54,629:INFO:Defining folds
2023-06-19 08:58:54,630:INFO:Declaring metric variables
2023-06-19 08:58:54,637:INFO:Importing untrained model
2023-06-19 08:58:54,637:INFO:Declaring custom model
2023-06-19 08:58:54,645:INFO:Random Forest Classifier Imported successfully
2023-06-19 08:58:54,679:INFO:Starting cross validation
2023-06-19 08:58:54,682:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 08:58:58,482:INFO:Calculating mean and std
2023-06-19 08:58:58,483:INFO:Creating metrics dataframe
2023-06-19 08:58:58,493:INFO:Finalizing model
2023-06-19 08:58:59,737:INFO:Uploading results into container
2023-06-19 08:58:59,738:INFO:Uploading model into container now
2023-06-19 08:58:59,756:INFO:_master_model_container: 5
2023-06-19 08:58:59,756:INFO:_display_container: 10
2023-06-19 08:58:59,757:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 08:58:59,757:INFO:create_model() successfully completed......................................
2023-06-19 08:58:59,835:INFO:Initializing calibrate_model()
2023-06-19 08:58:59,835:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 08:58:59,835:INFO:Checking exceptions
2023-06-19 08:58:59,840:INFO:Preloading libraries
2023-06-19 08:58:59,840:INFO:Preparing display monitor
2023-06-19 08:58:59,876:INFO:Getting model name
2023-06-19 08:58:59,876:INFO:Base model : Random Forest Classifier
2023-06-19 08:58:59,889:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 08:58:59,889:INFO:SubProcess create_model() called ==================================
2023-06-19 08:58:59,891:INFO:Initializing create_model()
2023-06-19 08:58:59,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A93A7B1C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 08:58:59,892:INFO:Checking exceptions
2023-06-19 08:58:59,892:INFO:Importing libraries
2023-06-19 08:58:59,892:INFO:Copying training dataset
2023-06-19 08:58:59,908:INFO:Defining folds
2023-06-19 08:58:59,908:INFO:Declaring metric variables
2023-06-19 08:58:59,914:INFO:Importing untrained model
2023-06-19 08:58:59,914:INFO:Declaring custom model
2023-06-19 08:58:59,919:INFO:Random Forest Classifier Imported successfully
2023-06-19 08:58:59,930:INFO:Starting cross validation
2023-06-19 08:58:59,933:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 08:59:03,909:INFO:Calculating mean and std
2023-06-19 08:59:03,910:INFO:Creating metrics dataframe
2023-06-19 08:59:03,918:INFO:Finalizing model
2023-06-19 08:59:05,215:INFO:Uploading results into container
2023-06-19 08:59:05,216:INFO:Uploading model into container now
2023-06-19 08:59:05,216:INFO:_master_model_container: 6
2023-06-19 08:59:05,216:INFO:_display_container: 11
2023-06-19 08:59:05,217:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 08:59:05,218:INFO:create_model() successfully completed......................................
2023-06-19 08:59:05,289:INFO:SubProcess create_model() end ==================================
2023-06-19 08:59:05,311:INFO:_master_model_container: 6
2023-06-19 08:59:05,311:INFO:_display_container: 11
2023-06-19 08:59:05,313:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 08:59:05,313:INFO:calibrate_model() successfully completed......................................
2023-06-19 08:59:05,398:INFO:Initializing evaluate_model()
2023-06-19 08:59:05,398:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 08:59:05,423:INFO:Initializing plot_model()
2023-06-19 08:59:05,424:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, system=True)
2023-06-19 08:59:05,424:INFO:Checking exceptions
2023-06-19 08:59:05,429:INFO:Preloading libraries
2023-06-19 08:59:05,440:INFO:Copying training dataset
2023-06-19 08:59:05,440:INFO:Plot type: pipeline
2023-06-19 08:59:05,628:INFO:Visual Rendered Successfully
2023-06-19 08:59:05,701:INFO:plot_model() successfully completed......................................
2023-06-19 08:59:05,745:INFO:Initializing predict_model()
2023-06-19 08:59:05,746:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A93A84700>)
2023-06-19 08:59:05,746:INFO:Checking exceptions
2023-06-19 08:59:05,746:INFO:Preloading libraries
2023-06-19 08:59:06,058:INFO:Initializing predict_model()
2023-06-19 08:59:06,058:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A93768F70>)
2023-06-19 08:59:06,058:INFO:Checking exceptions
2023-06-19 08:59:06,058:INFO:Preloading libraries
2023-06-19 08:59:06,602:INFO:Initializing plot_model()
2023-06-19 08:59:06,602:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, system=True)
2023-06-19 08:59:06,602:INFO:Checking exceptions
2023-06-19 08:59:06,612:INFO:Preloading libraries
2023-06-19 08:59:06,615:INFO:Copying training dataset
2023-06-19 08:59:06,615:INFO:Plot type: calibration
2023-06-19 08:59:06,631:INFO:Scoring test/hold-out set
2023-06-19 08:59:06,872:INFO:Visual Rendered Successfully
2023-06-19 08:59:06,944:INFO:plot_model() successfully completed......................................
2023-06-19 08:59:06,945:INFO:Initializing plot_model()
2023-06-19 08:59:06,946:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, system=True)
2023-06-19 08:59:06,946:INFO:Checking exceptions
2023-06-19 08:59:06,952:INFO:Preloading libraries
2023-06-19 08:59:06,962:INFO:Copying training dataset
2023-06-19 08:59:06,962:INFO:Plot type: calibration
2023-06-19 08:59:06,979:INFO:Scoring test/hold-out set
2023-06-19 08:59:07,344:INFO:Visual Rendered Successfully
2023-06-19 08:59:07,418:INFO:plot_model() successfully completed......................................
2023-06-19 08:59:13,219:INFO:Initializing plot_model()
2023-06-19 08:59:13,219:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A8CC2D910>, system=True)
2023-06-19 08:59:13,219:INFO:Checking exceptions
2023-06-19 09:14:59,452:INFO:PyCaret ClassificationExperiment
2023-06-19 09:14:59,452:INFO:Logging name: clf-default-name
2023-06-19 09:14:59,452:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 09:14:59,452:INFO:version 3.0.2
2023-06-19 09:14:59,452:INFO:Initializing setup()
2023-06-19 09:14:59,452:INFO:self.USI: d98e
2023-06-19 09:14:59,453:INFO:self._variable_keys: {'y_train', 'fold_groups_param', 'y_test', 'html_param', 'X', 'X_train', 'X_test', 'pipeline', 'exp_name_log', 'exp_id', 'data', 'logging_param', 'seed', 'log_plots_param', 'gpu_param', '_ml_usecase', 'USI', 'y', 'memory', 'fold_generator', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', '_available_plots', 'n_jobs_param', 'idx'}
2023-06-19 09:14:59,453:INFO:Checking environment
2023-06-19 09:14:59,453:INFO:python_version: 3.9.7
2023-06-19 09:14:59,453:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 09:14:59,453:INFO:machine: AMD64
2023-06-19 09:14:59,453:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 09:14:59,453:INFO:Memory: svmem(total=17120436224, available=7445467136, percent=56.5, used=9674969088, free=7445467136)
2023-06-19 09:14:59,453:INFO:Physical Core: 4
2023-06-19 09:14:59,453:INFO:Logical Core: 4
2023-06-19 09:14:59,453:INFO:Checking libraries
2023-06-19 09:14:59,453:INFO:System:
2023-06-19 09:14:59,453:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 09:14:59,453:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 09:14:59,453:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 09:14:59,454:INFO:PyCaret required dependencies:
2023-06-19 09:14:59,454:INFO:                 pip: 21.2.3
2023-06-19 09:14:59,454:INFO:          setuptools: 57.4.0
2023-06-19 09:14:59,454:INFO:             pycaret: 3.0.2
2023-06-19 09:14:59,454:INFO:             IPython: 7.28.0
2023-06-19 09:14:59,454:INFO:          ipywidgets: 8.0.6
2023-06-19 09:14:59,454:INFO:                tqdm: 4.64.0
2023-06-19 09:14:59,454:INFO:               numpy: 1.22.4
2023-06-19 09:14:59,454:INFO:              pandas: 1.3.5
2023-06-19 09:14:59,454:INFO:              jinja2: 3.1.2
2023-06-19 09:14:59,454:INFO:               scipy: 1.7.1
2023-06-19 09:14:59,454:INFO:              joblib: 1.2.0
2023-06-19 09:14:59,454:INFO:             sklearn: 1.1.0
2023-06-19 09:14:59,454:INFO:                pyod: 1.0.9
2023-06-19 09:14:59,454:INFO:            imblearn: 0.9.1
2023-06-19 09:14:59,454:INFO:   category_encoders: 2.6.1
2023-06-19 09:14:59,454:INFO:            lightgbm: 3.3.5
2023-06-19 09:14:59,454:INFO:               numba: 0.57.0
2023-06-19 09:14:59,454:INFO:            requests: 2.31.0
2023-06-19 09:14:59,454:INFO:          matplotlib: 3.4.3
2023-06-19 09:14:59,455:INFO:          scikitplot: 0.3.7
2023-06-19 09:14:59,455:INFO:         yellowbrick: 1.5
2023-06-19 09:14:59,455:INFO:              plotly: 5.8.0
2023-06-19 09:14:59,455:INFO:             kaleido: 0.2.1
2023-06-19 09:14:59,455:INFO:         statsmodels: 0.14.0
2023-06-19 09:14:59,455:INFO:              sktime: 0.17.0
2023-06-19 09:14:59,455:INFO:               tbats: 1.1.3
2023-06-19 09:14:59,455:INFO:            pmdarima: 2.0.3
2023-06-19 09:14:59,455:INFO:              psutil: 5.9.0
2023-06-19 09:14:59,455:INFO:PyCaret optional dependencies:
2023-06-19 09:14:59,455:INFO:                shap: Not installed
2023-06-19 09:14:59,455:INFO:           interpret: Not installed
2023-06-19 09:14:59,455:INFO:                umap: Not installed
2023-06-19 09:14:59,455:INFO:    pandas_profiling: Not installed
2023-06-19 09:14:59,455:INFO:  explainerdashboard: Not installed
2023-06-19 09:14:59,455:INFO:             autoviz: Not installed
2023-06-19 09:14:59,455:INFO:           fairlearn: Not installed
2023-06-19 09:14:59,455:INFO:             xgboost: Not installed
2023-06-19 09:14:59,455:INFO:            catboost: Not installed
2023-06-19 09:14:59,455:INFO:              kmodes: Not installed
2023-06-19 09:14:59,456:INFO:             mlxtend: Not installed
2023-06-19 09:14:59,456:INFO:       statsforecast: Not installed
2023-06-19 09:14:59,456:INFO:        tune_sklearn: Not installed
2023-06-19 09:14:59,456:INFO:                 ray: Not installed
2023-06-19 09:14:59,456:INFO:            hyperopt: Not installed
2023-06-19 09:14:59,456:INFO:              optuna: Not installed
2023-06-19 09:14:59,456:INFO:               skopt: Not installed
2023-06-19 09:14:59,456:INFO:              mlflow: Not installed
2023-06-19 09:14:59,456:INFO:              gradio: Not installed
2023-06-19 09:14:59,456:INFO:             fastapi: Not installed
2023-06-19 09:14:59,456:INFO:             uvicorn: Not installed
2023-06-19 09:14:59,456:INFO:              m2cgen: Not installed
2023-06-19 09:14:59,456:INFO:           evidently: Not installed
2023-06-19 09:14:59,456:INFO:               fugue: Not installed
2023-06-19 09:14:59,456:INFO:           streamlit: Not installed
2023-06-19 09:14:59,456:INFO:             prophet: Not installed
2023-06-19 09:14:59,456:INFO:None
2023-06-19 09:14:59,456:INFO:Set up data.
2023-06-19 09:14:59,515:INFO:Set up train/test split.
2023-06-19 09:14:59,539:INFO:Set up index.
2023-06-19 09:14:59,540:INFO:Set up folding strategy.
2023-06-19 09:14:59,540:INFO:Assigning column types.
2023-06-19 09:14:59,552:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 09:14:59,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 09:14:59,624:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 09:14:59,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:14:59,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:14:59,733:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 09:14:59,736:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 09:14:59,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:14:59,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:14:59,773:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 09:14:59,832:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 09:14:59,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:14:59,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:14:59,927:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 09:14:59,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:14:59,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:14:59,963:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 09:15:00,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:00,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:00,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:00,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:00,151:INFO:Preparing preprocessing pipeline...
2023-06-19 09:15:00,153:INFO:Set up simple imputation.
2023-06-19 09:15:00,165:INFO:Set up encoding of ordinal features.
2023-06-19 09:15:00,175:INFO:Set up encoding of categorical features.
2023-06-19 09:15:00,175:INFO:Set up removing multicollinearity.
2023-06-19 09:15:00,175:INFO:Set up imbalanced handling.
2023-06-19 09:15:00,175:INFO:Set up feature selection.
2023-06-19 09:15:00,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:00,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:40,750:INFO:PyCaret ClassificationExperiment
2023-06-19 09:15:40,750:INFO:Logging name: clf-default-name
2023-06-19 09:15:40,750:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 09:15:40,750:INFO:version 3.0.2
2023-06-19 09:15:40,750:INFO:Initializing setup()
2023-06-19 09:15:40,750:INFO:self.USI: 757d
2023-06-19 09:15:40,750:INFO:self._variable_keys: {'y_train', 'fold_groups_param', 'y_test', 'html_param', 'X', 'X_train', 'X_test', 'pipeline', 'exp_name_log', 'exp_id', 'data', 'logging_param', 'seed', 'log_plots_param', 'gpu_param', '_ml_usecase', 'USI', 'y', 'memory', 'fold_generator', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', '_available_plots', 'n_jobs_param', 'idx'}
2023-06-19 09:15:40,750:INFO:Checking environment
2023-06-19 09:15:40,750:INFO:python_version: 3.9.7
2023-06-19 09:15:40,750:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 09:15:40,750:INFO:machine: AMD64
2023-06-19 09:15:40,751:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 09:15:40,751:INFO:Memory: svmem(total=17120436224, available=7419510784, percent=56.7, used=9700925440, free=7419510784)
2023-06-19 09:15:40,751:INFO:Physical Core: 4
2023-06-19 09:15:40,751:INFO:Logical Core: 4
2023-06-19 09:15:40,751:INFO:Checking libraries
2023-06-19 09:15:40,751:INFO:System:
2023-06-19 09:15:40,751:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 09:15:40,751:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 09:15:40,751:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 09:15:40,751:INFO:PyCaret required dependencies:
2023-06-19 09:15:40,751:INFO:                 pip: 21.2.3
2023-06-19 09:15:40,751:INFO:          setuptools: 57.4.0
2023-06-19 09:15:40,751:INFO:             pycaret: 3.0.2
2023-06-19 09:15:40,751:INFO:             IPython: 7.28.0
2023-06-19 09:15:40,752:INFO:          ipywidgets: 8.0.6
2023-06-19 09:15:40,752:INFO:                tqdm: 4.64.0
2023-06-19 09:15:40,752:INFO:               numpy: 1.22.4
2023-06-19 09:15:40,752:INFO:              pandas: 1.3.5
2023-06-19 09:15:40,752:INFO:              jinja2: 3.1.2
2023-06-19 09:15:40,752:INFO:               scipy: 1.7.1
2023-06-19 09:15:40,752:INFO:              joblib: 1.2.0
2023-06-19 09:15:40,752:INFO:             sklearn: 1.1.0
2023-06-19 09:15:40,752:INFO:                pyod: 1.0.9
2023-06-19 09:15:40,752:INFO:            imblearn: 0.9.1
2023-06-19 09:15:40,752:INFO:   category_encoders: 2.6.1
2023-06-19 09:15:40,752:INFO:            lightgbm: 3.3.5
2023-06-19 09:15:40,752:INFO:               numba: 0.57.0
2023-06-19 09:15:40,752:INFO:            requests: 2.31.0
2023-06-19 09:15:40,752:INFO:          matplotlib: 3.4.3
2023-06-19 09:15:40,752:INFO:          scikitplot: 0.3.7
2023-06-19 09:15:40,752:INFO:         yellowbrick: 1.5
2023-06-19 09:15:40,752:INFO:              plotly: 5.8.0
2023-06-19 09:15:40,752:INFO:             kaleido: 0.2.1
2023-06-19 09:15:40,752:INFO:         statsmodels: 0.14.0
2023-06-19 09:15:40,753:INFO:              sktime: 0.17.0
2023-06-19 09:15:40,753:INFO:               tbats: 1.1.3
2023-06-19 09:15:40,753:INFO:            pmdarima: 2.0.3
2023-06-19 09:15:40,753:INFO:              psutil: 5.9.0
2023-06-19 09:15:40,753:INFO:PyCaret optional dependencies:
2023-06-19 09:15:40,753:INFO:                shap: Not installed
2023-06-19 09:15:40,753:INFO:           interpret: Not installed
2023-06-19 09:15:40,753:INFO:                umap: Not installed
2023-06-19 09:15:40,753:INFO:    pandas_profiling: Not installed
2023-06-19 09:15:40,753:INFO:  explainerdashboard: Not installed
2023-06-19 09:15:40,753:INFO:             autoviz: Not installed
2023-06-19 09:15:40,753:INFO:           fairlearn: Not installed
2023-06-19 09:15:40,753:INFO:             xgboost: Not installed
2023-06-19 09:15:40,753:INFO:            catboost: Not installed
2023-06-19 09:15:40,753:INFO:              kmodes: Not installed
2023-06-19 09:15:40,753:INFO:             mlxtend: Not installed
2023-06-19 09:15:40,753:INFO:       statsforecast: Not installed
2023-06-19 09:15:40,753:INFO:        tune_sklearn: Not installed
2023-06-19 09:15:40,753:INFO:                 ray: Not installed
2023-06-19 09:15:40,753:INFO:            hyperopt: Not installed
2023-06-19 09:15:40,754:INFO:              optuna: Not installed
2023-06-19 09:15:40,754:INFO:               skopt: Not installed
2023-06-19 09:15:40,754:INFO:              mlflow: Not installed
2023-06-19 09:15:40,754:INFO:              gradio: Not installed
2023-06-19 09:15:40,754:INFO:             fastapi: Not installed
2023-06-19 09:15:40,754:INFO:             uvicorn: Not installed
2023-06-19 09:15:40,754:INFO:              m2cgen: Not installed
2023-06-19 09:15:40,754:INFO:           evidently: Not installed
2023-06-19 09:15:40,754:INFO:               fugue: Not installed
2023-06-19 09:15:40,754:INFO:           streamlit: Not installed
2023-06-19 09:15:40,754:INFO:             prophet: Not installed
2023-06-19 09:15:40,754:INFO:None
2023-06-19 09:15:40,754:INFO:Set up data.
2023-06-19 09:15:40,811:INFO:Set up train/test split.
2023-06-19 09:15:40,835:INFO:Set up index.
2023-06-19 09:15:40,836:INFO:Set up folding strategy.
2023-06-19 09:15:40,836:INFO:Assigning column types.
2023-06-19 09:15:40,848:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 09:15:40,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 09:15:40,902:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 09:15:40,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:40,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,032:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 09:15:41,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 09:15:41,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,092:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 09:15:41,303:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 09:15:41,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,430:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 09:15:41,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,472:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 09:15:41,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,718:INFO:Preparing preprocessing pipeline...
2023-06-19 09:15:41,721:INFO:Set up simple imputation.
2023-06-19 09:15:41,741:INFO:Set up encoding of ordinal features.
2023-06-19 09:15:41,752:INFO:Set up encoding of categorical features.
2023-06-19 09:15:41,752:INFO:Set up removing multicollinearity.
2023-06-19 09:15:41,752:INFO:Set up imbalanced handling.
2023-06-19 09:15:41,752:INFO:Set up feature selection.
2023-06-19 09:15:41,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:41,879:INFO:Set up column name cleaning.
2023-06-19 09:15:42,611:INFO:Finished creating preprocessing pipeline.
2023-06-19 09:15:42,699:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=16,
                                                            score_func=<function f_classif at 0x0000020A8E957550>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 09:15:42,699:INFO:Creating final display dataframe.
2023-06-19 09:15:43,649:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 17)
5   Transformed train set shape       (51162, 17)
6    Transformed test set shape       (12356, 17)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                16
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              757d
2023-06-19 09:15:43,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:43,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:43,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:43,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 09:15:43,881:INFO:setup() successfully completed in 3.9s...............
2023-06-19 09:15:44,848:INFO:Initializing create_model()
2023-06-19 09:15:44,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:15:44,848:INFO:Checking exceptions
2023-06-19 09:15:44,880:INFO:Importing libraries
2023-06-19 09:15:44,880:INFO:Copying training dataset
2023-06-19 09:15:44,902:INFO:Defining folds
2023-06-19 09:15:44,902:INFO:Declaring metric variables
2023-06-19 09:15:44,906:INFO:Importing untrained model
2023-06-19 09:15:44,912:INFO:Logistic Regression Imported successfully
2023-06-19 09:15:44,932:INFO:Starting cross validation
2023-06-19 09:15:44,937:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:15:53,516:INFO:Calculating mean and std
2023-06-19 09:15:53,517:INFO:Creating metrics dataframe
2023-06-19 09:15:53,528:INFO:Finalizing model
2023-06-19 09:15:54,998:INFO:Uploading results into container
2023-06-19 09:15:54,999:INFO:Uploading model into container now
2023-06-19 09:15:55,015:INFO:_master_model_container: 1
2023-06-19 09:15:55,015:INFO:_display_container: 2
2023-06-19 09:15:55,016:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 09:15:55,016:INFO:create_model() successfully completed......................................
2023-06-19 09:15:55,114:INFO:Initializing calibrate_model()
2023-06-19 09:15:55,114:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 09:15:55,114:INFO:Checking exceptions
2023-06-19 09:15:55,120:INFO:Preloading libraries
2023-06-19 09:15:55,120:INFO:Preparing display monitor
2023-06-19 09:15:55,182:INFO:Getting model name
2023-06-19 09:15:55,183:INFO:Base model : Logistic Regression
2023-06-19 09:15:55,193:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 09:15:55,194:INFO:SubProcess create_model() called ==================================
2023-06-19 09:15:55,196:INFO:Initializing create_model()
2023-06-19 09:15:55,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A8CC2D670>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:15:55,196:INFO:Checking exceptions
2023-06-19 09:15:55,196:INFO:Importing libraries
2023-06-19 09:15:55,196:INFO:Copying training dataset
2023-06-19 09:15:55,214:INFO:Defining folds
2023-06-19 09:15:55,236:INFO:Declaring metric variables
2023-06-19 09:15:55,242:INFO:Importing untrained model
2023-06-19 09:15:55,242:INFO:Declaring custom model
2023-06-19 09:15:55,248:INFO:Logistic Regression Imported successfully
2023-06-19 09:15:55,259:INFO:Starting cross validation
2023-06-19 09:15:55,262:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:16:01,762:INFO:Calculating mean and std
2023-06-19 09:16:01,763:INFO:Creating metrics dataframe
2023-06-19 09:16:01,773:INFO:Finalizing model
2023-06-19 09:16:04,730:INFO:Uploading results into container
2023-06-19 09:16:04,731:INFO:Uploading model into container now
2023-06-19 09:16:04,731:INFO:_master_model_container: 2
2023-06-19 09:16:04,732:INFO:_display_container: 3
2023-06-19 09:16:04,733:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 09:16:04,734:INFO:create_model() successfully completed......................................
2023-06-19 09:16:04,817:INFO:SubProcess create_model() end ==================================
2023-06-19 09:16:04,842:INFO:_master_model_container: 2
2023-06-19 09:16:04,842:INFO:_display_container: 3
2023-06-19 09:16:04,843:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 09:16:04,843:INFO:calibrate_model() successfully completed......................................
2023-06-19 09:16:04,932:INFO:Initializing evaluate_model()
2023-06-19 09:16:04,932:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 09:16:04,959:INFO:Initializing plot_model()
2023-06-19 09:16:04,959:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, system=True)
2023-06-19 09:16:04,959:INFO:Checking exceptions
2023-06-19 09:16:04,971:INFO:Preloading libraries
2023-06-19 09:16:04,972:INFO:Copying training dataset
2023-06-19 09:16:04,972:INFO:Plot type: pipeline
2023-06-19 09:16:05,156:INFO:Visual Rendered Successfully
2023-06-19 09:16:05,227:INFO:plot_model() successfully completed......................................
2023-06-19 09:16:05,276:INFO:Initializing predict_model()
2023-06-19 09:16:05,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A92EACD30>)
2023-06-19 09:16:05,277:INFO:Checking exceptions
2023-06-19 09:16:05,277:INFO:Preloading libraries
2023-06-19 09:16:05,514:INFO:Initializing predict_model()
2023-06-19 09:16:05,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A91599E50>)
2023-06-19 09:16:05,514:INFO:Checking exceptions
2023-06-19 09:16:05,514:INFO:Preloading libraries
2023-06-19 09:16:05,867:INFO:Initializing create_model()
2023-06-19 09:16:05,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:16:05,867:INFO:Checking exceptions
2023-06-19 09:16:05,916:INFO:Importing libraries
2023-06-19 09:16:05,922:INFO:Copying training dataset
2023-06-19 09:16:05,941:INFO:Defining folds
2023-06-19 09:16:05,941:INFO:Declaring metric variables
2023-06-19 09:16:05,946:INFO:Importing untrained model
2023-06-19 09:16:05,951:INFO:SVM - Linear Kernel Imported successfully
2023-06-19 09:16:05,984:INFO:Starting cross validation
2023-06-19 09:16:05,987:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:16:07,551:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 09:16:07,576:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 09:16:07,676:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 09:16:07,675:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 09:16:09,659:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 09:16:10,802:INFO:Calculating mean and std
2023-06-19 09:16:10,804:INFO:Creating metrics dataframe
2023-06-19 09:16:10,811:INFO:Finalizing model
2023-06-19 09:16:12,362:INFO:Uploading results into container
2023-06-19 09:16:12,363:INFO:Uploading model into container now
2023-06-19 09:16:12,381:INFO:_master_model_container: 3
2023-06-19 09:16:12,381:INFO:_display_container: 6
2023-06-19 09:16:12,382:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-19 09:16:12,382:INFO:create_model() successfully completed......................................
2023-06-19 09:16:12,476:INFO:Initializing calibrate_model()
2023-06-19 09:16:12,476:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 09:16:12,476:INFO:Checking exceptions
2023-06-19 09:16:12,482:INFO:Preloading libraries
2023-06-19 09:16:12,482:INFO:Preparing display monitor
2023-06-19 09:16:12,519:INFO:Getting model name
2023-06-19 09:16:12,519:INFO:Base model : SVM - Linear Kernel
2023-06-19 09:16:12,534:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 09:16:12,534:INFO:SubProcess create_model() called ==================================
2023-06-19 09:16:12,535:INFO:Initializing create_model()
2023-06-19 09:16:12,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A916CFDF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:16:12,536:INFO:Checking exceptions
2023-06-19 09:16:12,536:INFO:Importing libraries
2023-06-19 09:16:12,536:INFO:Copying training dataset
2023-06-19 09:16:12,557:INFO:Defining folds
2023-06-19 09:16:12,557:INFO:Declaring metric variables
2023-06-19 09:16:12,564:INFO:Importing untrained model
2023-06-19 09:16:12,564:INFO:Declaring custom model
2023-06-19 09:16:12,572:INFO:SVM - Linear Kernel Imported successfully
2023-06-19 09:16:12,587:INFO:Starting cross validation
2023-06-19 09:16:12,590:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:16:18,605:INFO:Calculating mean and std
2023-06-19 09:16:18,606:INFO:Creating metrics dataframe
2023-06-19 09:16:18,616:INFO:Finalizing model
2023-06-19 09:16:21,448:INFO:Uploading results into container
2023-06-19 09:16:21,450:INFO:Uploading model into container now
2023-06-19 09:16:21,451:INFO:_master_model_container: 4
2023-06-19 09:16:21,451:INFO:_display_container: 7
2023-06-19 09:16:21,452:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 09:16:21,452:INFO:create_model() successfully completed......................................
2023-06-19 09:16:21,523:INFO:SubProcess create_model() end ==================================
2023-06-19 09:16:21,546:INFO:_master_model_container: 4
2023-06-19 09:16:21,546:INFO:_display_container: 7
2023-06-19 09:16:21,547:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 09:16:21,547:INFO:calibrate_model() successfully completed......................................
2023-06-19 09:16:21,642:INFO:Initializing evaluate_model()
2023-06-19 09:16:21,642:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 09:16:21,667:INFO:Initializing plot_model()
2023-06-19 09:16:21,668:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, system=True)
2023-06-19 09:16:21,668:INFO:Checking exceptions
2023-06-19 09:16:21,673:INFO:Preloading libraries
2023-06-19 09:16:21,674:INFO:Copying training dataset
2023-06-19 09:16:21,674:INFO:Plot type: pipeline
2023-06-19 09:16:21,859:INFO:Visual Rendered Successfully
2023-06-19 09:16:21,933:INFO:plot_model() successfully completed......................................
2023-06-19 09:16:21,988:INFO:Initializing predict_model()
2023-06-19 09:16:21,988:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A93A840D0>)
2023-06-19 09:16:21,988:INFO:Checking exceptions
2023-06-19 09:16:21,988:INFO:Preloading libraries
2023-06-19 09:16:22,211:INFO:Initializing predict_model()
2023-06-19 09:16:22,211:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A93A840D0>)
2023-06-19 09:16:22,211:INFO:Checking exceptions
2023-06-19 09:16:22,211:INFO:Preloading libraries
2023-06-19 09:16:22,451:INFO:Initializing create_model()
2023-06-19 09:16:22,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:16:22,451:INFO:Checking exceptions
2023-06-19 09:16:22,488:INFO:Importing libraries
2023-06-19 09:16:22,488:INFO:Copying training dataset
2023-06-19 09:16:22,514:INFO:Defining folds
2023-06-19 09:16:22,514:INFO:Declaring metric variables
2023-06-19 09:16:22,520:INFO:Importing untrained model
2023-06-19 09:16:22,520:INFO:Declaring custom model
2023-06-19 09:16:22,525:INFO:Random Forest Classifier Imported successfully
2023-06-19 09:16:22,536:INFO:Starting cross validation
2023-06-19 09:16:22,539:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:17:15,208:INFO:Calculating mean and std
2023-06-19 09:17:15,210:INFO:Creating metrics dataframe
2023-06-19 09:17:15,217:INFO:Finalizing model
2023-06-19 09:17:49,815:INFO:Uploading results into container
2023-06-19 09:17:49,816:INFO:Uploading model into container now
2023-06-19 09:17:49,834:INFO:_master_model_container: 5
2023-06-19 09:17:49,834:INFO:_display_container: 10
2023-06-19 09:17:49,834:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 09:17:49,834:INFO:create_model() successfully completed......................................
2023-06-19 09:17:49,959:INFO:Initializing calibrate_model()
2023-06-19 09:17:49,959:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 09:17:49,959:INFO:Checking exceptions
2023-06-19 09:17:49,965:INFO:Preloading libraries
2023-06-19 09:17:49,965:INFO:Preparing display monitor
2023-06-19 09:17:49,999:INFO:Getting model name
2023-06-19 09:17:49,999:INFO:Base model : Random Forest Classifier
2023-06-19 09:17:50,009:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 09:17:50,009:INFO:SubProcess create_model() called ==================================
2023-06-19 09:17:50,011:INFO:Initializing create_model()
2023-06-19 09:17:50,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A9170BD90>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:17:50,012:INFO:Checking exceptions
2023-06-19 09:17:50,012:INFO:Importing libraries
2023-06-19 09:17:50,012:INFO:Copying training dataset
2023-06-19 09:17:50,031:INFO:Defining folds
2023-06-19 09:17:50,031:INFO:Declaring metric variables
2023-06-19 09:17:50,039:INFO:Importing untrained model
2023-06-19 09:17:50,039:INFO:Declaring custom model
2023-06-19 09:17:50,045:INFO:Random Forest Classifier Imported successfully
2023-06-19 09:17:50,056:INFO:Starting cross validation
2023-06-19 09:17:50,059:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:20:21,929:INFO:Calculating mean and std
2023-06-19 09:20:21,931:INFO:Creating metrics dataframe
2023-06-19 09:20:21,938:INFO:Finalizing model
2023-06-19 09:22:12,420:INFO:Uploading results into container
2023-06-19 09:22:12,421:INFO:Uploading model into container now
2023-06-19 09:22:12,421:INFO:_master_model_container: 6
2023-06-19 09:22:12,421:INFO:_display_container: 11
2023-06-19 09:22:12,422:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 09:22:12,422:INFO:create_model() successfully completed......................................
2023-06-19 09:22:12,494:INFO:SubProcess create_model() end ==================================
2023-06-19 09:22:12,518:INFO:_master_model_container: 6
2023-06-19 09:22:12,518:INFO:_display_container: 11
2023-06-19 09:22:12,519:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 09:22:12,519:INFO:calibrate_model() successfully completed......................................
2023-06-19 09:22:12,605:INFO:Initializing evaluate_model()
2023-06-19 09:22:12,606:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 09:22:12,636:INFO:Initializing plot_model()
2023-06-19 09:22:12,636:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, system=True)
2023-06-19 09:22:12,636:INFO:Checking exceptions
2023-06-19 09:22:12,644:INFO:Preloading libraries
2023-06-19 09:22:12,657:INFO:Copying training dataset
2023-06-19 09:22:12,659:INFO:Plot type: pipeline
2023-06-19 09:22:12,867:INFO:Visual Rendered Successfully
2023-06-19 09:22:12,947:INFO:plot_model() successfully completed......................................
2023-06-19 09:22:13,014:INFO:Initializing predict_model()
2023-06-19 09:22:13,015:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A92EAC1F0>)
2023-06-19 09:22:13,015:INFO:Checking exceptions
2023-06-19 09:22:13,015:INFO:Preloading libraries
2023-06-19 09:22:13,259:INFO:Initializing predict_model()
2023-06-19 09:22:13,259:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A93F049D0>)
2023-06-19 09:22:13,260:INFO:Checking exceptions
2023-06-19 09:22:13,260:INFO:Preloading libraries
2023-06-19 09:22:13,761:INFO:Initializing plot_model()
2023-06-19 09:22:13,761:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, system=True)
2023-06-19 09:22:13,761:INFO:Checking exceptions
2023-06-19 09:22:13,770:INFO:Preloading libraries
2023-06-19 09:22:13,772:INFO:Copying training dataset
2023-06-19 09:22:13,773:INFO:Plot type: calibration
2023-06-19 09:22:13,788:INFO:Scoring test/hold-out set
2023-06-19 09:22:13,991:INFO:Visual Rendered Successfully
2023-06-19 09:22:14,060:INFO:plot_model() successfully completed......................................
2023-06-19 09:22:14,061:INFO:Initializing plot_model()
2023-06-19 09:22:14,061:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, system=True)
2023-06-19 09:22:14,061:INFO:Checking exceptions
2023-06-19 09:22:14,068:INFO:Preloading libraries
2023-06-19 09:22:14,077:INFO:Copying training dataset
2023-06-19 09:22:14,077:INFO:Plot type: calibration
2023-06-19 09:22:14,093:INFO:Scoring test/hold-out set
2023-06-19 09:22:14,494:INFO:Visual Rendered Successfully
2023-06-19 09:22:14,566:INFO:plot_model() successfully completed......................................
2023-06-19 09:25:20,741:INFO:Initializing create_model()
2023-06-19 09:25:20,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:25:20,742:INFO:Checking exceptions
2023-06-19 09:25:20,777:INFO:Importing libraries
2023-06-19 09:25:20,778:INFO:Copying training dataset
2023-06-19 09:25:20,794:INFO:Defining folds
2023-06-19 09:25:20,794:INFO:Declaring metric variables
2023-06-19 09:25:20,799:INFO:Importing untrained model
2023-06-19 09:25:20,805:INFO:Logistic Regression Imported successfully
2023-06-19 09:25:20,830:INFO:Starting cross validation
2023-06-19 09:25:20,833:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:25:27,666:INFO:Calculating mean and std
2023-06-19 09:25:27,667:INFO:Creating metrics dataframe
2023-06-19 09:25:27,674:INFO:Finalizing model
2023-06-19 09:25:28,980:INFO:Uploading results into container
2023-06-19 09:25:28,980:INFO:Uploading model into container now
2023-06-19 09:25:28,997:INFO:_master_model_container: 7
2023-06-19 09:25:28,997:INFO:_display_container: 14
2023-06-19 09:25:28,998:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 09:25:28,998:INFO:create_model() successfully completed......................................
2023-06-19 09:25:29,091:INFO:Initializing tune_model()
2023-06-19 09:25:29,091:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>)
2023-06-19 09:25:29,091:INFO:Checking exceptions
2023-06-19 09:25:29,131:INFO:Copying training dataset
2023-06-19 09:25:29,144:INFO:Checking base model
2023-06-19 09:25:29,144:INFO:Base model : Logistic Regression
2023-06-19 09:25:29,150:INFO:Declaring metric variables
2023-06-19 09:25:29,154:INFO:Defining Hyperparameters
2023-06-19 09:25:29,299:INFO:Tuning with n_jobs=-1
2023-06-19 09:25:29,299:INFO:Initializing RandomizedSearchCV
2023-06-19 09:26:11,284:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 4.724}
2023-06-19 09:26:11,285:INFO:Hyperparameter search completed
2023-06-19 09:26:11,285:INFO:SubProcess create_model() called ==================================
2023-06-19 09:26:11,286:INFO:Initializing create_model()
2023-06-19 09:26:11,286:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A9170B310>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 4.724})
2023-06-19 09:26:11,287:INFO:Checking exceptions
2023-06-19 09:26:11,287:INFO:Importing libraries
2023-06-19 09:26:11,287:INFO:Copying training dataset
2023-06-19 09:26:11,304:INFO:Defining folds
2023-06-19 09:26:11,305:INFO:Declaring metric variables
2023-06-19 09:26:11,308:INFO:Importing untrained model
2023-06-19 09:26:11,309:INFO:Declaring custom model
2023-06-19 09:26:11,316:INFO:Logistic Regression Imported successfully
2023-06-19 09:26:11,325:INFO:Starting cross validation
2023-06-19 09:26:11,327:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:26:15,194:INFO:Calculating mean and std
2023-06-19 09:26:15,195:INFO:Creating metrics dataframe
2023-06-19 09:26:15,202:INFO:Finalizing model
2023-06-19 09:26:16,671:INFO:Uploading results into container
2023-06-19 09:26:16,672:INFO:Uploading model into container now
2023-06-19 09:26:16,673:INFO:_master_model_container: 8
2023-06-19 09:26:16,673:INFO:_display_container: 15
2023-06-19 09:26:16,674:INFO:LogisticRegression(C=4.724, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 09:26:16,674:INFO:create_model() successfully completed......................................
2023-06-19 09:26:16,760:INFO:SubProcess create_model() end ==================================
2023-06-19 09:26:16,760:INFO:choose_better activated
2023-06-19 09:26:16,764:INFO:SubProcess create_model() called ==================================
2023-06-19 09:26:16,765:INFO:Initializing create_model()
2023-06-19 09:26:16,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:26:16,765:INFO:Checking exceptions
2023-06-19 09:26:16,767:INFO:Importing libraries
2023-06-19 09:26:16,767:INFO:Copying training dataset
2023-06-19 09:26:16,781:INFO:Defining folds
2023-06-19 09:26:16,781:INFO:Declaring metric variables
2023-06-19 09:26:16,782:INFO:Importing untrained model
2023-06-19 09:26:16,782:INFO:Declaring custom model
2023-06-19 09:26:16,782:INFO:Logistic Regression Imported successfully
2023-06-19 09:26:16,783:INFO:Starting cross validation
2023-06-19 09:26:16,784:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:26:20,473:INFO:Calculating mean and std
2023-06-19 09:26:20,474:INFO:Creating metrics dataframe
2023-06-19 09:26:20,477:INFO:Finalizing model
2023-06-19 09:26:21,827:INFO:Uploading results into container
2023-06-19 09:26:21,828:INFO:Uploading model into container now
2023-06-19 09:26:21,828:INFO:_master_model_container: 9
2023-06-19 09:26:21,828:INFO:_display_container: 16
2023-06-19 09:26:21,829:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 09:26:21,829:INFO:create_model() successfully completed......................................
2023-06-19 09:26:21,897:INFO:SubProcess create_model() end ==================================
2023-06-19 09:26:21,898:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7457
2023-06-19 09:26:21,899:INFO:LogisticRegression(C=4.724, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7457
2023-06-19 09:26:21,900:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-06-19 09:26:21,900:INFO:choose_better completed
2023-06-19 09:26:21,900:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-19 09:26:21,914:INFO:_master_model_container: 9
2023-06-19 09:26:21,914:INFO:_display_container: 15
2023-06-19 09:26:21,914:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 09:26:21,914:INFO:tune_model() successfully completed......................................
2023-06-19 09:26:22,697:INFO:Initializing evaluate_model()
2023-06-19 09:26:22,698:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 09:26:22,721:INFO:Initializing plot_model()
2023-06-19 09:26:22,722:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, system=True)
2023-06-19 09:26:22,722:INFO:Checking exceptions
2023-06-19 09:26:22,729:INFO:Preloading libraries
2023-06-19 09:26:22,729:INFO:Copying training dataset
2023-06-19 09:26:22,729:INFO:Plot type: pipeline
2023-06-19 09:26:22,901:INFO:Visual Rendered Successfully
2023-06-19 09:26:23,007:INFO:plot_model() successfully completed......................................
2023-06-19 09:26:31,142:INFO:Initializing plot_model()
2023-06-19 09:26:31,142:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, system=True)
2023-06-19 09:26:31,143:INFO:Checking exceptions
2023-06-19 09:26:31,149:INFO:Preloading libraries
2023-06-19 09:26:31,149:INFO:Copying training dataset
2023-06-19 09:26:31,149:INFO:Plot type: parameter
2023-06-19 09:26:31,154:INFO:Visual Rendered Successfully
2023-06-19 09:26:31,234:INFO:plot_model() successfully completed......................................
2023-06-19 09:27:37,893:INFO:Initializing predict_model()
2023-06-19 09:27:37,893:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020A92C11700>)
2023-06-19 09:27:37,893:INFO:Checking exceptions
2023-06-19 09:27:37,893:INFO:Preloading libraries
2023-06-19 09:27:45,674:INFO:Initializing plot_model()
2023-06-19 09:27:45,675:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, system=True)
2023-06-19 09:27:45,675:INFO:Checking exceptions
2023-06-19 09:27:45,681:INFO:Preloading libraries
2023-06-19 09:27:45,681:INFO:Copying training dataset
2023-06-19 09:27:45,681:INFO:Plot type: parameter
2023-06-19 09:27:45,686:INFO:Visual Rendered Successfully
2023-06-19 09:27:45,754:INFO:plot_model() successfully completed......................................
2023-06-19 09:29:29,345:INFO:Initializing create_model()
2023-06-19 09:29:29,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 09:29:29,345:INFO:Checking exceptions
2023-06-19 09:29:29,381:INFO:Importing libraries
2023-06-19 09:29:29,382:INFO:Copying training dataset
2023-06-19 09:29:29,401:INFO:Defining folds
2023-06-19 09:29:29,401:INFO:Declaring metric variables
2023-06-19 09:29:29,405:INFO:Importing untrained model
2023-06-19 09:29:29,411:INFO:Random Forest Classifier Imported successfully
2023-06-19 09:29:29,419:INFO:Starting cross validation
2023-06-19 09:29:29,422:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 09:34:21,923:INFO:Calculating mean and std
2023-06-19 09:34:21,925:INFO:Creating metrics dataframe
2023-06-19 09:34:21,934:INFO:Finalizing model
2023-06-19 09:36:02,670:INFO:Uploading results into container
2023-06-19 09:36:02,672:INFO:Uploading model into container now
2023-06-19 09:36:02,688:INFO:_master_model_container: 10
2023-06-19 09:36:02,688:INFO:_display_container: 17
2023-06-19 09:36:02,689:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 09:36:02,689:INFO:create_model() successfully completed......................................
2023-06-19 09:36:02,794:INFO:Initializing tune_model()
2023-06-19 09:36:02,794:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A91564370>)
2023-06-19 09:36:02,794:INFO:Checking exceptions
2023-06-19 09:36:02,842:INFO:Copying training dataset
2023-06-19 09:36:02,867:INFO:Checking base model
2023-06-19 09:36:02,867:INFO:Base model : Random Forest Classifier
2023-06-19 09:36:02,872:INFO:Declaring metric variables
2023-06-19 09:36:02,880:INFO:Defining Hyperparameters
2023-06-19 09:36:02,970:INFO:Tuning with n_jobs=-1
2023-06-19 09:36:02,970:INFO:Initializing RandomizedSearchCV
2023-06-19 09:40:24,091:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:45:11,335:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 09:45:13,330:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:45:13,339:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 09:45:14,834:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:48:10,273:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 09:48:12,538:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.17s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:51:29,454:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:51:33,958:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:53:02,965:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 09:53:04,876:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:53:55,640:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:56:49,067:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 09:56:52,929:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:07:11,953:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:07:58,546:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:11:01,822:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:11:36,770:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:15:09,184:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 10:15:11,687:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.02s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:18:10,061:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 10:18:12,287:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.07s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:18:46,107:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 10:18:47,725:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:21:03,457:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:22:09,437:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 10:22:11,100:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:24:30,834:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 10:24:32,506:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:25:25,919:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:27:37,257:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 10:27:38,977:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:28:41,136:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 10:28:42,775:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:31:36,883:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:32:06,483:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 10:33:27,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 10:33:27,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 10:33:27,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 10:33:27,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 10:33:29,141:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 10:33:30,123:INFO:PyCaret ClassificationExperiment
2023-06-19 10:33:30,123:INFO:Logging name: clf-default-name
2023-06-19 10:33:30,124:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 10:33:30,124:INFO:version 3.0.2
2023-06-19 10:33:30,124:INFO:Initializing setup()
2023-06-19 10:33:30,124:INFO:self.USI: afd7
2023-06-19 10:33:30,124:INFO:self._variable_keys: {'pipeline', 'y', 'is_multiclass', 'fold_groups_param', 'X_train', '_ml_usecase', 'y_train', 'idx', 'logging_param', 'gpu_n_jobs_param', 'data', 'exp_name_log', 'target_param', 'fix_imbalance', 'seed', 'html_param', 'gpu_param', 'y_test', 'exp_id', 'X_test', 'X', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'fold_shuffle_param', 'memory', 'n_jobs_param'}
2023-06-19 10:33:30,124:INFO:Checking environment
2023-06-19 10:33:30,124:INFO:python_version: 3.9.7
2023-06-19 10:33:30,124:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 10:33:30,124:INFO:machine: AMD64
2023-06-19 10:33:30,124:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 10:33:30,124:INFO:Memory: svmem(total=17120436224, available=7862083584, percent=54.1, used=9258352640, free=7862083584)
2023-06-19 10:33:30,124:INFO:Physical Core: 4
2023-06-19 10:33:30,124:INFO:Logical Core: 4
2023-06-19 10:33:30,124:INFO:Checking libraries
2023-06-19 10:33:30,124:INFO:System:
2023-06-19 10:33:30,124:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 10:33:30,124:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 10:33:30,125:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 10:33:30,125:INFO:PyCaret required dependencies:
2023-06-19 10:33:30,125:INFO:                 pip: 21.2.3
2023-06-19 10:33:30,125:INFO:          setuptools: 57.4.0
2023-06-19 10:33:30,125:INFO:             pycaret: 3.0.2
2023-06-19 10:33:30,125:INFO:             IPython: 7.28.0
2023-06-19 10:33:30,125:INFO:          ipywidgets: 8.0.6
2023-06-19 10:33:30,125:INFO:                tqdm: 4.64.0
2023-06-19 10:33:30,125:INFO:               numpy: 1.22.4
2023-06-19 10:33:30,125:INFO:              pandas: 1.3.5
2023-06-19 10:33:30,125:INFO:              jinja2: 3.1.2
2023-06-19 10:33:30,125:INFO:               scipy: 1.7.1
2023-06-19 10:33:30,125:INFO:              joblib: 1.2.0
2023-06-19 10:33:30,125:INFO:             sklearn: 1.1.0
2023-06-19 10:33:30,126:INFO:                pyod: 1.0.9
2023-06-19 10:33:30,126:INFO:            imblearn: 0.9.1
2023-06-19 10:33:30,126:INFO:   category_encoders: 2.6.1
2023-06-19 10:33:30,126:INFO:            lightgbm: 3.3.5
2023-06-19 10:33:30,126:INFO:               numba: 0.57.0
2023-06-19 10:33:30,126:INFO:            requests: 2.31.0
2023-06-19 10:33:30,126:INFO:          matplotlib: 3.4.3
2023-06-19 10:33:30,126:INFO:          scikitplot: 0.3.7
2023-06-19 10:33:30,126:INFO:         yellowbrick: 1.5
2023-06-19 10:33:30,126:INFO:              plotly: 5.8.0
2023-06-19 10:33:30,126:INFO:             kaleido: 0.2.1
2023-06-19 10:33:30,126:INFO:         statsmodels: 0.14.0
2023-06-19 10:33:30,126:INFO:              sktime: 0.17.0
2023-06-19 10:33:30,126:INFO:               tbats: 1.1.3
2023-06-19 10:33:30,126:INFO:            pmdarima: 2.0.3
2023-06-19 10:33:30,126:INFO:              psutil: 5.9.0
2023-06-19 10:33:30,126:INFO:PyCaret optional dependencies:
2023-06-19 10:33:30,153:INFO:                shap: Not installed
2023-06-19 10:33:30,153:INFO:           interpret: Not installed
2023-06-19 10:33:30,153:INFO:                umap: Not installed
2023-06-19 10:33:30,153:INFO:    pandas_profiling: Not installed
2023-06-19 10:33:30,153:INFO:  explainerdashboard: Not installed
2023-06-19 10:33:30,153:INFO:             autoviz: Not installed
2023-06-19 10:33:30,153:INFO:           fairlearn: Not installed
2023-06-19 10:33:30,153:INFO:             xgboost: Not installed
2023-06-19 10:33:30,153:INFO:            catboost: Not installed
2023-06-19 10:33:30,153:INFO:              kmodes: Not installed
2023-06-19 10:33:30,153:INFO:             mlxtend: Not installed
2023-06-19 10:33:30,153:INFO:       statsforecast: Not installed
2023-06-19 10:33:30,153:INFO:        tune_sklearn: Not installed
2023-06-19 10:33:30,153:INFO:                 ray: Not installed
2023-06-19 10:33:30,153:INFO:            hyperopt: Not installed
2023-06-19 10:33:30,153:INFO:              optuna: Not installed
2023-06-19 10:33:30,153:INFO:               skopt: Not installed
2023-06-19 10:33:30,154:INFO:              mlflow: Not installed
2023-06-19 10:33:30,154:INFO:              gradio: Not installed
2023-06-19 10:33:30,154:INFO:             fastapi: Not installed
2023-06-19 10:33:30,154:INFO:             uvicorn: Not installed
2023-06-19 10:33:30,154:INFO:              m2cgen: Not installed
2023-06-19 10:33:30,154:INFO:           evidently: Not installed
2023-06-19 10:33:30,154:INFO:               fugue: Not installed
2023-06-19 10:33:30,154:INFO:           streamlit: Not installed
2023-06-19 10:33:30,154:INFO:             prophet: Not installed
2023-06-19 10:33:30,154:INFO:None
2023-06-19 10:33:30,154:INFO:Set up data.
2023-06-19 10:33:30,222:INFO:Set up train/test split.
2023-06-19 10:33:30,250:INFO:Set up index.
2023-06-19 10:33:30,251:INFO:Set up folding strategy.
2023-06-19 10:33:30,251:INFO:Assigning column types.
2023-06-19 10:33:30,267:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 10:33:30,327:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 10:33:30,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 10:33:30,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 10:33:30,503:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 10:33:30,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,539:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 10:33:30,594:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 10:33:30,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,688:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 10:33:30,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,721:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 10:33:30,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:30,894:INFO:Preparing preprocessing pipeline...
2023-06-19 10:33:30,896:INFO:Set up simple imputation.
2023-06-19 10:33:30,907:INFO:Set up encoding of ordinal features.
2023-06-19 10:33:30,916:INFO:Set up encoding of categorical features.
2023-06-19 10:33:30,916:INFO:Set up removing multicollinearity.
2023-06-19 10:33:30,916:INFO:Set up imbalanced handling.
2023-06-19 10:33:30,916:INFO:Set up feature selection.
2023-06-19 10:33:31,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:31,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:31,010:INFO:Set up column name cleaning.
2023-06-19 10:33:31,398:INFO:Finished creating preprocessing pipeline.
2023-06-19 10:33:31,451:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=16,
                                                            score_func=<function f_classif at 0x0000028D7962C040>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 10:33:31,451:INFO:Creating final display dataframe.
2023-06-19 10:33:31,605:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 17)
5   Transformed train set shape       (51162, 17)
6    Transformed test set shape       (12356, 17)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                16
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              afd7
2023-06-19 10:33:31,711:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:31,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:31,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:31,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 10:33:31,799:INFO:setup() successfully completed in 2.47s...............
2023-06-19 10:33:58,908:INFO:Initializing create_model()
2023-06-19 10:33:58,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028D67012100>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 10:33:58,908:INFO:Checking exceptions
2023-06-19 10:33:58,943:INFO:Importing libraries
2023-06-19 10:33:58,943:INFO:Copying training dataset
2023-06-19 10:33:58,964:INFO:Defining folds
2023-06-19 10:33:58,964:INFO:Declaring metric variables
2023-06-19 10:33:58,969:INFO:Importing untrained model
2023-06-19 10:33:58,969:INFO:Declaring custom model
2023-06-19 10:33:58,978:INFO:Random Forest Classifier Imported successfully
2023-06-19 10:33:58,989:INFO:Starting cross validation
2023-06-19 10:33:58,992:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 10:40:50,521:INFO:Calculating mean and std
2023-06-19 10:40:50,522:INFO:Creating metrics dataframe
2023-06-19 10:40:50,531:INFO:Finalizing model
2023-06-19 10:45:53,946:INFO:Uploading results into container
2023-06-19 10:45:53,948:INFO:Uploading model into container now
2023-06-19 10:45:53,964:INFO:_master_model_container: 1
2023-06-19 10:45:53,965:INFO:_display_container: 2
2023-06-19 10:45:53,966:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 10:45:53,966:INFO:create_model() successfully completed......................................
2023-06-19 10:45:54,054:INFO:Initializing calibrate_model()
2023-06-19 10:45:54,054:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028D67012100>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 10:45:54,054:INFO:Checking exceptions
2023-06-19 10:45:54,063:INFO:Preloading libraries
2023-06-19 10:45:54,064:INFO:Preparing display monitor
2023-06-19 10:45:54,122:INFO:Getting model name
2023-06-19 10:45:54,122:INFO:Base model : Random Forest Classifier
2023-06-19 10:45:54,135:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 10:45:54,135:INFO:SubProcess create_model() called ==================================
2023-06-19 10:45:54,137:INFO:Initializing create_model()
2023-06-19 10:45:54,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028D67012100>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=7,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=100,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028D7BE8D190>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 10:45:54,137:INFO:Checking exceptions
2023-06-19 10:45:54,137:INFO:Importing libraries
2023-06-19 10:45:54,137:INFO:Copying training dataset
2023-06-19 10:45:54,190:INFO:Defining folds
2023-06-19 10:45:54,190:INFO:Declaring metric variables
2023-06-19 10:45:54,198:INFO:Importing untrained model
2023-06-19 10:45:54,198:INFO:Declaring custom model
2023-06-19 10:45:54,204:INFO:Random Forest Classifier Imported successfully
2023-06-19 10:45:54,217:INFO:Starting cross validation
2023-06-19 10:45:54,220:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 11:08:29,296:INFO:Calculating mean and std
2023-06-19 11:08:29,298:INFO:Creating metrics dataframe
2023-06-19 11:08:29,305:INFO:Finalizing model
2023-06-19 11:20:18,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 11:20:18,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 11:20:18,639:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 11:20:18,639:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 11:20:19,818:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 11:20:21,189:INFO:PyCaret ClassificationExperiment
2023-06-19 11:20:21,189:INFO:Logging name: clf-default-name
2023-06-19 11:20:21,189:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 11:20:21,189:INFO:version 3.0.2
2023-06-19 11:20:21,189:INFO:Initializing setup()
2023-06-19 11:20:21,190:INFO:self.USI: 509d
2023-06-19 11:20:21,190:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 11:20:21,190:INFO:Checking environment
2023-06-19 11:20:21,190:INFO:python_version: 3.9.7
2023-06-19 11:20:21,190:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 11:20:21,190:INFO:machine: AMD64
2023-06-19 11:20:21,190:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 11:20:21,190:INFO:Memory: svmem(total=17120436224, available=6829797376, percent=60.1, used=10290638848, free=6829797376)
2023-06-19 11:20:21,190:INFO:Physical Core: 4
2023-06-19 11:20:21,190:INFO:Logical Core: 4
2023-06-19 11:20:21,190:INFO:Checking libraries
2023-06-19 11:20:21,190:INFO:System:
2023-06-19 11:20:21,190:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 11:20:21,190:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 11:20:21,190:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 11:20:21,190:INFO:PyCaret required dependencies:
2023-06-19 11:20:21,190:INFO:                 pip: 21.2.3
2023-06-19 11:20:21,191:INFO:          setuptools: 57.4.0
2023-06-19 11:20:21,191:INFO:             pycaret: 3.0.2
2023-06-19 11:20:21,191:INFO:             IPython: 7.28.0
2023-06-19 11:20:21,191:INFO:          ipywidgets: 8.0.6
2023-06-19 11:20:21,191:INFO:                tqdm: 4.64.0
2023-06-19 11:20:21,191:INFO:               numpy: 1.22.4
2023-06-19 11:20:21,191:INFO:              pandas: 1.3.5
2023-06-19 11:20:21,191:INFO:              jinja2: 3.1.2
2023-06-19 11:20:21,191:INFO:               scipy: 1.7.1
2023-06-19 11:20:21,191:INFO:              joblib: 1.2.0
2023-06-19 11:20:21,191:INFO:             sklearn: 1.1.0
2023-06-19 11:20:21,191:INFO:                pyod: 1.0.9
2023-06-19 11:20:21,191:INFO:            imblearn: 0.9.1
2023-06-19 11:20:21,191:INFO:   category_encoders: 2.6.1
2023-06-19 11:20:21,192:INFO:            lightgbm: 3.3.5
2023-06-19 11:20:21,192:INFO:               numba: 0.57.0
2023-06-19 11:20:21,192:INFO:            requests: 2.31.0
2023-06-19 11:20:21,192:INFO:          matplotlib: 3.4.3
2023-06-19 11:20:21,192:INFO:          scikitplot: 0.3.7
2023-06-19 11:20:21,192:INFO:         yellowbrick: 1.5
2023-06-19 11:20:21,192:INFO:              plotly: 5.8.0
2023-06-19 11:20:21,192:INFO:             kaleido: 0.2.1
2023-06-19 11:20:21,192:INFO:         statsmodels: 0.14.0
2023-06-19 11:20:21,192:INFO:              sktime: 0.17.0
2023-06-19 11:20:21,192:INFO:               tbats: 1.1.3
2023-06-19 11:20:21,192:INFO:            pmdarima: 2.0.3
2023-06-19 11:20:21,192:INFO:              psutil: 5.9.0
2023-06-19 11:20:21,192:INFO:PyCaret optional dependencies:
2023-06-19 11:20:21,225:INFO:                shap: Not installed
2023-06-19 11:20:21,225:INFO:           interpret: Not installed
2023-06-19 11:20:21,227:INFO:                umap: Not installed
2023-06-19 11:20:21,227:INFO:    pandas_profiling: Not installed
2023-06-19 11:20:21,227:INFO:  explainerdashboard: Not installed
2023-06-19 11:20:21,227:INFO:             autoviz: Not installed
2023-06-19 11:20:21,227:INFO:           fairlearn: Not installed
2023-06-19 11:20:21,227:INFO:             xgboost: Not installed
2023-06-19 11:20:21,227:INFO:            catboost: Not installed
2023-06-19 11:20:21,227:INFO:              kmodes: Not installed
2023-06-19 11:20:21,227:INFO:             mlxtend: Not installed
2023-06-19 11:20:21,227:INFO:       statsforecast: Not installed
2023-06-19 11:20:21,227:INFO:        tune_sklearn: Not installed
2023-06-19 11:20:21,228:INFO:                 ray: Not installed
2023-06-19 11:20:21,228:INFO:            hyperopt: Not installed
2023-06-19 11:20:21,228:INFO:              optuna: Not installed
2023-06-19 11:20:21,228:INFO:               skopt: Not installed
2023-06-19 11:20:21,228:INFO:              mlflow: Not installed
2023-06-19 11:20:21,228:INFO:              gradio: Not installed
2023-06-19 11:20:21,228:INFO:             fastapi: Not installed
2023-06-19 11:20:21,229:INFO:             uvicorn: Not installed
2023-06-19 11:20:21,230:INFO:              m2cgen: Not installed
2023-06-19 11:20:21,230:INFO:           evidently: Not installed
2023-06-19 11:20:21,230:INFO:               fugue: Not installed
2023-06-19 11:20:21,230:INFO:           streamlit: Not installed
2023-06-19 11:20:21,230:INFO:             prophet: Not installed
2023-06-19 11:20:21,230:INFO:None
2023-06-19 11:20:21,230:INFO:Set up data.
2023-06-19 11:20:21,317:INFO:Set up train/test split.
2023-06-19 11:20:21,348:INFO:Set up index.
2023-06-19 11:20:21,349:INFO:Set up folding strategy.
2023-06-19 11:20:21,350:INFO:Assigning column types.
2023-06-19 11:20:21,368:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 11:20:21,429:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 11:20:21,432:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 11:20:21,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,575:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 11:20:21,576:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 11:20:21,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,609:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 11:20:21,664:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 11:20:21,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,761:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 11:20:21,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,795:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 11:20:21,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:21,965:INFO:Preparing preprocessing pipeline...
2023-06-19 11:20:21,967:INFO:Set up simple imputation.
2023-06-19 11:20:21,979:INFO:Set up encoding of ordinal features.
2023-06-19 11:20:21,990:INFO:Set up encoding of categorical features.
2023-06-19 11:20:21,990:INFO:Set up removing multicollinearity.
2023-06-19 11:20:21,990:INFO:Set up imbalanced handling.
2023-06-19 11:20:21,990:INFO:Set up feature selection.
2023-06-19 11:20:22,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:22,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:22,088:INFO:Set up column name cleaning.
2023-06-19 11:20:22,544:INFO:Finished creating preprocessing pipeline.
2023-06-19 11:20:22,606:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=16,
                                                            score_func=<function f_classif at 0x000002C2AB5485E0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 11:20:22,606:INFO:Creating final display dataframe.
2023-06-19 11:20:22,767:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 17)
5   Transformed train set shape       (51162, 17)
6    Transformed test set shape       (12356, 17)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                16
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              509d
2023-06-19 11:20:22,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:22,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:22,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:22,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 11:20:22,960:INFO:setup() successfully completed in 2.97s...............
2023-06-19 11:20:41,364:INFO:Initializing create_model()
2023-06-19 11:20:41,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=10, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 11:20:41,364:INFO:Checking exceptions
2023-06-19 11:20:41,400:INFO:Importing libraries
2023-06-19 11:20:41,400:INFO:Copying training dataset
2023-06-19 11:20:41,416:INFO:Defining folds
2023-06-19 11:20:41,416:INFO:Declaring metric variables
2023-06-19 11:20:41,420:INFO:Importing untrained model
2023-06-19 11:20:41,421:INFO:Declaring custom model
2023-06-19 11:20:41,426:INFO:Random Forest Classifier Imported successfully
2023-06-19 11:20:41,438:INFO:Starting cross validation
2023-06-19 11:20:41,441:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 11:21:03,670:INFO:Calculating mean and std
2023-06-19 11:21:03,671:INFO:Creating metrics dataframe
2023-06-19 11:21:03,691:INFO:Finalizing model
2023-06-19 11:21:10,915:INFO:Uploading results into container
2023-06-19 11:21:10,916:INFO:Uploading model into container now
2023-06-19 11:21:10,966:INFO:_master_model_container: 1
2023-06-19 11:21:10,966:INFO:_display_container: 2
2023-06-19 11:21:10,966:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=10, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 11:21:10,966:INFO:create_model() successfully completed......................................
2023-06-19 11:21:11,067:INFO:Initializing calibrate_model()
2023-06-19 11:21:11,067:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=10, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 11:21:11,067:INFO:Checking exceptions
2023-06-19 11:21:11,072:INFO:Preloading libraries
2023-06-19 11:21:11,072:INFO:Preparing display monitor
2023-06-19 11:21:11,112:INFO:Getting model name
2023-06-19 11:21:11,112:INFO:Base model : Random Forest Classifier
2023-06-19 11:21:11,126:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 11:21:11,126:INFO:SubProcess create_model() called ==================================
2023-06-19 11:21:11,128:INFO:Initializing create_model()
2023-06-19 11:21:11,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=10,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C2A987E520>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 11:21:11,129:INFO:Checking exceptions
2023-06-19 11:21:11,129:INFO:Importing libraries
2023-06-19 11:21:11,129:INFO:Copying training dataset
2023-06-19 11:21:11,144:INFO:Defining folds
2023-06-19 11:21:11,144:INFO:Declaring metric variables
2023-06-19 11:21:11,149:INFO:Importing untrained model
2023-06-19 11:21:11,149:INFO:Declaring custom model
2023-06-19 11:21:11,158:INFO:Random Forest Classifier Imported successfully
2023-06-19 11:21:11,168:INFO:Starting cross validation
2023-06-19 11:21:11,171:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 11:22:03,831:INFO:Calculating mean and std
2023-06-19 11:22:03,832:INFO:Creating metrics dataframe
2023-06-19 11:22:03,839:INFO:Finalizing model
2023-06-19 11:22:24,018:INFO:Uploading results into container
2023-06-19 11:22:24,019:INFO:Uploading model into container now
2023-06-19 11:22:24,019:INFO:_master_model_container: 2
2023-06-19 11:22:24,019:INFO:_display_container: 3
2023-06-19 11:22:24,020:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=10,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 11:22:24,021:INFO:create_model() successfully completed......................................
2023-06-19 11:22:24,086:INFO:SubProcess create_model() end ==================================
2023-06-19 11:22:24,108:INFO:_master_model_container: 2
2023-06-19 11:22:24,109:INFO:_display_container: 3
2023-06-19 11:22:24,110:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=10,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 11:22:24,110:INFO:calibrate_model() successfully completed......................................
2023-06-19 11:22:24,191:INFO:Initializing evaluate_model()
2023-06-19 11:22:24,191:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=10,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 11:22:24,223:INFO:Initializing plot_model()
2023-06-19 11:22:24,223:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=10,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, system=True)
2023-06-19 11:22:24,223:INFO:Checking exceptions
2023-06-19 11:22:24,232:INFO:Preloading libraries
2023-06-19 11:22:24,238:INFO:Copying training dataset
2023-06-19 11:22:24,238:INFO:Plot type: pipeline
2023-06-19 11:22:24,465:INFO:Visual Rendered Successfully
2023-06-19 11:22:24,532:INFO:plot_model() successfully completed......................................
2023-06-19 11:22:38,543:INFO:Initializing plot_model()
2023-06-19 11:22:38,544:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=10,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, system=True)
2023-06-19 11:22:38,544:INFO:Checking exceptions
2023-06-19 11:22:38,551:INFO:Preloading libraries
2023-06-19 11:22:38,555:INFO:Copying training dataset
2023-06-19 11:22:38,555:INFO:Plot type: auc
2023-06-19 11:22:38,687:INFO:Fitting Model
2023-06-19 11:22:38,689:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-19 11:22:38,689:INFO:Scoring test/hold-out set
2023-06-19 11:22:38,992:INFO:Visual Rendered Successfully
2023-06-19 11:22:39,082:INFO:plot_model() successfully completed......................................
2023-06-19 11:22:41,341:INFO:Initializing plot_model()
2023-06-19 11:22:41,341:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=10,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, system=True)
2023-06-19 11:22:41,341:INFO:Checking exceptions
2023-06-19 11:22:41,348:INFO:Preloading libraries
2023-06-19 11:22:41,353:INFO:Copying training dataset
2023-06-19 11:22:41,353:INFO:Plot type: parameter
2023-06-19 11:22:41,357:INFO:Visual Rendered Successfully
2023-06-19 11:22:41,417:INFO:plot_model() successfully completed......................................
2023-06-19 11:22:44,365:INFO:Initializing plot_model()
2023-06-19 11:22:44,366:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=10,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, system=True)
2023-06-19 11:22:44,366:INFO:Checking exceptions
2023-06-19 11:22:44,373:INFO:Preloading libraries
2023-06-19 11:22:44,378:INFO:Copying training dataset
2023-06-19 11:22:44,378:INFO:Plot type: auc
2023-06-19 11:22:44,512:INFO:Fitting Model
2023-06-19 11:22:44,512:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-19 11:22:44,513:INFO:Scoring test/hold-out set
2023-06-19 11:22:44,817:INFO:Visual Rendered Successfully
2023-06-19 11:22:44,896:INFO:plot_model() successfully completed......................................
2023-06-19 11:23:04,850:INFO:Initializing create_model()
2023-06-19 11:23:04,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 11:23:04,850:INFO:Checking exceptions
2023-06-19 11:23:04,883:INFO:Importing libraries
2023-06-19 11:23:04,884:INFO:Copying training dataset
2023-06-19 11:23:04,901:INFO:Defining folds
2023-06-19 11:23:04,901:INFO:Declaring metric variables
2023-06-19 11:23:04,905:INFO:Importing untrained model
2023-06-19 11:23:04,906:INFO:Declaring custom model
2023-06-19 11:23:04,911:INFO:Random Forest Classifier Imported successfully
2023-06-19 11:23:04,919:INFO:Starting cross validation
2023-06-19 11:23:04,922:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 11:27:59,937:INFO:Calculating mean and std
2023-06-19 11:27:59,938:INFO:Creating metrics dataframe
2023-06-19 11:27:59,946:INFO:Finalizing model
2023-06-19 11:29:37,989:INFO:Uploading results into container
2023-06-19 11:29:37,990:INFO:Uploading model into container now
2023-06-19 11:29:38,010:INFO:_master_model_container: 3
2023-06-19 11:29:38,010:INFO:_display_container: 4
2023-06-19 11:29:38,010:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 11:29:38,010:INFO:create_model() successfully completed......................................
2023-06-19 11:29:38,103:INFO:Initializing evaluate_model()
2023-06-19 11:29:38,103:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 11:29:38,126:INFO:Initializing plot_model()
2023-06-19 11:29:38,126:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, system=True)
2023-06-19 11:29:38,126:INFO:Checking exceptions
2023-06-19 11:29:38,160:INFO:Preloading libraries
2023-06-19 11:29:38,171:INFO:Copying training dataset
2023-06-19 11:29:38,172:INFO:Plot type: pipeline
2023-06-19 11:29:38,340:INFO:Visual Rendered Successfully
2023-06-19 11:29:38,408:INFO:plot_model() successfully completed......................................
2023-06-19 13:24:30,462:INFO:Initializing plot_model()
2023-06-19 13:24:30,464:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2983353A0>, system=True)
2023-06-19 13:24:30,464:INFO:Checking exceptions
2023-06-19 13:24:30,540:INFO:Preloading libraries
2023-06-19 13:24:30,557:INFO:Copying training dataset
2023-06-19 13:24:30,557:INFO:Plot type: parameter
2023-06-19 13:24:30,575:INFO:Visual Rendered Successfully
2023-06-19 13:24:30,853:INFO:plot_model() successfully completed......................................
2023-06-19 13:25:02,099:INFO:PyCaret ClassificationExperiment
2023-06-19 13:25:02,099:INFO:Logging name: clf-default-name
2023-06-19 13:25:02,099:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 13:25:02,099:INFO:version 3.0.2
2023-06-19 13:25:02,099:INFO:Initializing setup()
2023-06-19 13:25:02,099:INFO:self.USI: 62fc
2023-06-19 13:25:02,099:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 13:25:02,099:INFO:Checking environment
2023-06-19 13:25:02,099:INFO:python_version: 3.9.7
2023-06-19 13:25:02,099:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 13:25:02,100:INFO:machine: AMD64
2023-06-19 13:25:02,100:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 13:25:02,100:INFO:Memory: svmem(total=17120436224, available=7098810368, percent=58.5, used=10021625856, free=7098810368)
2023-06-19 13:25:02,100:INFO:Physical Core: 4
2023-06-19 13:25:02,100:INFO:Logical Core: 4
2023-06-19 13:25:02,100:INFO:Checking libraries
2023-06-19 13:25:02,100:INFO:System:
2023-06-19 13:25:02,100:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 13:25:02,100:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 13:25:02,100:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 13:25:02,100:INFO:PyCaret required dependencies:
2023-06-19 13:25:02,100:INFO:                 pip: 21.2.3
2023-06-19 13:25:02,100:INFO:          setuptools: 57.4.0
2023-06-19 13:25:02,100:INFO:             pycaret: 3.0.2
2023-06-19 13:25:02,100:INFO:             IPython: 7.28.0
2023-06-19 13:25:02,101:INFO:          ipywidgets: 8.0.6
2023-06-19 13:25:02,101:INFO:                tqdm: 4.64.0
2023-06-19 13:25:02,101:INFO:               numpy: 1.22.4
2023-06-19 13:25:02,101:INFO:              pandas: 1.3.5
2023-06-19 13:25:02,101:INFO:              jinja2: 3.1.2
2023-06-19 13:25:02,101:INFO:               scipy: 1.7.1
2023-06-19 13:25:02,101:INFO:              joblib: 1.2.0
2023-06-19 13:25:02,101:INFO:             sklearn: 1.1.0
2023-06-19 13:25:02,101:INFO:                pyod: 1.0.9
2023-06-19 13:25:02,101:INFO:            imblearn: 0.9.1
2023-06-19 13:25:02,101:INFO:   category_encoders: 2.6.1
2023-06-19 13:25:02,101:INFO:            lightgbm: 3.3.5
2023-06-19 13:25:02,101:INFO:               numba: 0.57.0
2023-06-19 13:25:02,101:INFO:            requests: 2.31.0
2023-06-19 13:25:02,101:INFO:          matplotlib: 3.4.3
2023-06-19 13:25:02,101:INFO:          scikitplot: 0.3.7
2023-06-19 13:25:02,101:INFO:         yellowbrick: 1.5
2023-06-19 13:25:02,101:INFO:              plotly: 5.8.0
2023-06-19 13:25:02,101:INFO:             kaleido: 0.2.1
2023-06-19 13:25:02,101:INFO:         statsmodels: 0.14.0
2023-06-19 13:25:02,101:INFO:              sktime: 0.17.0
2023-06-19 13:25:02,102:INFO:               tbats: 1.1.3
2023-06-19 13:25:02,102:INFO:            pmdarima: 2.0.3
2023-06-19 13:25:02,102:INFO:              psutil: 5.9.0
2023-06-19 13:25:02,102:INFO:PyCaret optional dependencies:
2023-06-19 13:25:02,102:INFO:                shap: Not installed
2023-06-19 13:25:02,102:INFO:           interpret: Not installed
2023-06-19 13:25:02,102:INFO:                umap: Not installed
2023-06-19 13:25:02,102:INFO:    pandas_profiling: Not installed
2023-06-19 13:25:02,102:INFO:  explainerdashboard: Not installed
2023-06-19 13:25:02,102:INFO:             autoviz: Not installed
2023-06-19 13:25:02,102:INFO:           fairlearn: Not installed
2023-06-19 13:25:02,102:INFO:             xgboost: Not installed
2023-06-19 13:25:02,102:INFO:            catboost: Not installed
2023-06-19 13:25:02,102:INFO:              kmodes: Not installed
2023-06-19 13:25:02,102:INFO:             mlxtend: Not installed
2023-06-19 13:25:02,102:INFO:       statsforecast: Not installed
2023-06-19 13:25:02,102:INFO:        tune_sklearn: Not installed
2023-06-19 13:25:02,103:INFO:                 ray: Not installed
2023-06-19 13:25:02,103:INFO:            hyperopt: Not installed
2023-06-19 13:25:02,103:INFO:              optuna: Not installed
2023-06-19 13:25:02,103:INFO:               skopt: Not installed
2023-06-19 13:25:02,103:INFO:              mlflow: Not installed
2023-06-19 13:25:02,103:INFO:              gradio: Not installed
2023-06-19 13:25:02,103:INFO:             fastapi: Not installed
2023-06-19 13:25:02,103:INFO:             uvicorn: Not installed
2023-06-19 13:25:02,103:INFO:              m2cgen: Not installed
2023-06-19 13:25:02,103:INFO:           evidently: Not installed
2023-06-19 13:25:02,103:INFO:               fugue: Not installed
2023-06-19 13:25:02,103:INFO:           streamlit: Not installed
2023-06-19 13:25:02,103:INFO:             prophet: Not installed
2023-06-19 13:25:02,103:INFO:None
2023-06-19 13:25:02,103:INFO:Set up data.
2023-06-19 13:25:02,169:INFO:Set up train/test split.
2023-06-19 13:25:02,195:INFO:Set up index.
2023-06-19 13:25:02,196:INFO:Set up folding strategy.
2023-06-19 13:25:02,196:INFO:Assigning column types.
2023-06-19 13:25:02,210:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 13:25:02,263:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 13:25:02,264:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 13:25:02,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,351:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 13:25:02,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 13:25:02,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,385:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 13:25:02,444:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 13:25:02,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,530:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 13:25:02,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,567:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 13:25:02,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,746:INFO:Preparing preprocessing pipeline...
2023-06-19 13:25:02,748:INFO:Set up simple imputation.
2023-06-19 13:25:02,763:INFO:Set up encoding of ordinal features.
2023-06-19 13:25:02,773:INFO:Set up encoding of categorical features.
2023-06-19 13:25:02,773:INFO:Set up removing multicollinearity.
2023-06-19 13:25:02,773:INFO:Set up imbalanced handling.
2023-06-19 13:25:02,773:INFO:Set up feature selection.
2023-06-19 13:25:02,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:02,866:INFO:Set up column name cleaning.
2023-06-19 13:25:08,090:INFO:PyCaret ClassificationExperiment
2023-06-19 13:25:08,090:INFO:Logging name: clf-default-name
2023-06-19 13:25:08,090:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 13:25:08,090:INFO:version 3.0.2
2023-06-19 13:25:08,090:INFO:Initializing setup()
2023-06-19 13:25:08,091:INFO:self.USI: a46a
2023-06-19 13:25:08,091:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 13:25:08,091:INFO:Checking environment
2023-06-19 13:25:08,091:INFO:python_version: 3.9.7
2023-06-19 13:25:08,091:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 13:25:08,091:INFO:machine: AMD64
2023-06-19 13:25:08,091:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 13:25:08,091:INFO:Memory: svmem(total=17120436224, available=7057244160, percent=58.8, used=10063192064, free=7057244160)
2023-06-19 13:25:08,091:INFO:Physical Core: 4
2023-06-19 13:25:08,091:INFO:Logical Core: 4
2023-06-19 13:25:08,091:INFO:Checking libraries
2023-06-19 13:25:08,091:INFO:System:
2023-06-19 13:25:08,091:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 13:25:08,091:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 13:25:08,091:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 13:25:08,091:INFO:PyCaret required dependencies:
2023-06-19 13:25:08,092:INFO:                 pip: 21.2.3
2023-06-19 13:25:08,092:INFO:          setuptools: 57.4.0
2023-06-19 13:25:08,092:INFO:             pycaret: 3.0.2
2023-06-19 13:25:08,092:INFO:             IPython: 7.28.0
2023-06-19 13:25:08,092:INFO:          ipywidgets: 8.0.6
2023-06-19 13:25:08,092:INFO:                tqdm: 4.64.0
2023-06-19 13:25:08,092:INFO:               numpy: 1.22.4
2023-06-19 13:25:08,092:INFO:              pandas: 1.3.5
2023-06-19 13:25:08,092:INFO:              jinja2: 3.1.2
2023-06-19 13:25:08,092:INFO:               scipy: 1.7.1
2023-06-19 13:25:08,092:INFO:              joblib: 1.2.0
2023-06-19 13:25:08,092:INFO:             sklearn: 1.1.0
2023-06-19 13:25:08,092:INFO:                pyod: 1.0.9
2023-06-19 13:25:08,092:INFO:            imblearn: 0.9.1
2023-06-19 13:25:08,092:INFO:   category_encoders: 2.6.1
2023-06-19 13:25:08,092:INFO:            lightgbm: 3.3.5
2023-06-19 13:25:08,092:INFO:               numba: 0.57.0
2023-06-19 13:25:08,092:INFO:            requests: 2.31.0
2023-06-19 13:25:08,092:INFO:          matplotlib: 3.4.3
2023-06-19 13:25:08,092:INFO:          scikitplot: 0.3.7
2023-06-19 13:25:08,093:INFO:         yellowbrick: 1.5
2023-06-19 13:25:08,093:INFO:              plotly: 5.8.0
2023-06-19 13:25:08,093:INFO:             kaleido: 0.2.1
2023-06-19 13:25:08,093:INFO:         statsmodels: 0.14.0
2023-06-19 13:25:08,093:INFO:              sktime: 0.17.0
2023-06-19 13:25:08,093:INFO:               tbats: 1.1.3
2023-06-19 13:25:08,093:INFO:            pmdarima: 2.0.3
2023-06-19 13:25:08,093:INFO:              psutil: 5.9.0
2023-06-19 13:25:08,093:INFO:PyCaret optional dependencies:
2023-06-19 13:25:08,093:INFO:                shap: Not installed
2023-06-19 13:25:08,093:INFO:           interpret: Not installed
2023-06-19 13:25:08,093:INFO:                umap: Not installed
2023-06-19 13:25:08,093:INFO:    pandas_profiling: Not installed
2023-06-19 13:25:08,093:INFO:  explainerdashboard: Not installed
2023-06-19 13:25:08,093:INFO:             autoviz: Not installed
2023-06-19 13:25:08,093:INFO:           fairlearn: Not installed
2023-06-19 13:25:08,093:INFO:             xgboost: Not installed
2023-06-19 13:25:08,093:INFO:            catboost: Not installed
2023-06-19 13:25:08,094:INFO:              kmodes: Not installed
2023-06-19 13:25:08,094:INFO:             mlxtend: Not installed
2023-06-19 13:25:08,094:INFO:       statsforecast: Not installed
2023-06-19 13:25:08,094:INFO:        tune_sklearn: Not installed
2023-06-19 13:25:08,094:INFO:                 ray: Not installed
2023-06-19 13:25:08,094:INFO:            hyperopt: Not installed
2023-06-19 13:25:08,094:INFO:              optuna: Not installed
2023-06-19 13:25:08,094:INFO:               skopt: Not installed
2023-06-19 13:25:08,094:INFO:              mlflow: Not installed
2023-06-19 13:25:08,094:INFO:              gradio: Not installed
2023-06-19 13:25:08,094:INFO:             fastapi: Not installed
2023-06-19 13:25:08,094:INFO:             uvicorn: Not installed
2023-06-19 13:25:08,094:INFO:              m2cgen: Not installed
2023-06-19 13:25:08,094:INFO:           evidently: Not installed
2023-06-19 13:25:08,094:INFO:               fugue: Not installed
2023-06-19 13:25:08,094:INFO:           streamlit: Not installed
2023-06-19 13:25:08,094:INFO:             prophet: Not installed
2023-06-19 13:25:08,094:INFO:None
2023-06-19 13:25:08,094:INFO:Set up data.
2023-06-19 13:25:08,149:INFO:Set up train/test split.
2023-06-19 13:25:08,173:INFO:Set up index.
2023-06-19 13:25:08,174:INFO:Set up folding strategy.
2023-06-19 13:25:08,174:INFO:Assigning column types.
2023-06-19 13:25:08,186:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 13:25:08,243:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 13:25:08,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 13:25:08,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 13:25:08,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 13:25:08,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,407:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 13:25:08,472:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 13:25:08,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,629:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 13:25:08,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,663:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 13:25:08,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:08,839:INFO:Preparing preprocessing pipeline...
2023-06-19 13:25:08,841:INFO:Set up simple imputation.
2023-06-19 13:25:08,853:INFO:Set up encoding of ordinal features.
2023-06-19 13:25:08,863:INFO:Set up encoding of categorical features.
2023-06-19 13:25:08,863:INFO:Set up removing multicollinearity.
2023-06-19 13:25:08,863:INFO:Set up imbalanced handling.
2023-06-19 13:25:08,865:INFO:Set up column name cleaning.
2023-06-19 13:25:09,214:INFO:Finished creating preprocessing pipeline.
2023-06-19 13:25:09,264:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 13:25:09,264:INFO:Creating final display dataframe.
2023-06-19 13:25:10,130:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 36)
5   Transformed train set shape       (51162, 36)
6    Transformed test set shape       (12356, 36)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21               Fold Generator   StratifiedKFold
22                  Fold Number                 5
23                     CPU Jobs                -1
24                      Use GPU             False
25               Log Experiment             False
26              Experiment Name  clf-default-name
27                          USI              a46a
2023-06-19 13:25:10,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:10,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:10,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:10,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 13:25:10,336:INFO:setup() successfully completed in 3.11s...............
2023-06-19 13:25:19,581:INFO:Initializing create_model()
2023-06-19 13:25:19,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 13:25:19,581:INFO:Checking exceptions
2023-06-19 13:25:19,617:INFO:Importing libraries
2023-06-19 13:25:19,618:INFO:Copying training dataset
2023-06-19 13:25:19,635:INFO:Defining folds
2023-06-19 13:25:19,636:INFO:Declaring metric variables
2023-06-19 13:25:19,641:INFO:Importing untrained model
2023-06-19 13:25:19,646:INFO:Logistic Regression Imported successfully
2023-06-19 13:25:19,666:INFO:Starting cross validation
2023-06-19 13:25:19,669:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 13:25:30,873:INFO:Calculating mean and std
2023-06-19 13:25:30,874:INFO:Creating metrics dataframe
2023-06-19 13:25:30,881:INFO:Finalizing model
2023-06-19 13:25:33,124:INFO:Uploading results into container
2023-06-19 13:25:33,125:INFO:Uploading model into container now
2023-06-19 13:25:33,146:INFO:_master_model_container: 1
2023-06-19 13:25:33,146:INFO:_display_container: 2
2023-06-19 13:25:33,147:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 13:25:33,147:INFO:create_model() successfully completed......................................
2023-06-19 13:25:33,286:INFO:Initializing evaluate_model()
2023-06-19 13:25:33,286:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 13:25:33,321:INFO:Initializing plot_model()
2023-06-19 13:25:33,321:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:25:33,321:INFO:Checking exceptions
2023-06-19 13:25:33,333:INFO:Preloading libraries
2023-06-19 13:25:33,333:INFO:Copying training dataset
2023-06-19 13:25:33,333:INFO:Plot type: pipeline
2023-06-19 13:25:33,514:INFO:Visual Rendered Successfully
2023-06-19 13:25:33,586:INFO:plot_model() successfully completed......................................
2023-06-19 13:25:37,570:INFO:Initializing plot_model()
2023-06-19 13:25:37,570:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:25:37,570:INFO:Checking exceptions
2023-06-19 13:25:37,577:INFO:Preloading libraries
2023-06-19 13:25:37,577:INFO:Copying training dataset
2023-06-19 13:25:37,577:INFO:Plot type: parameter
2023-06-19 13:25:37,581:INFO:Visual Rendered Successfully
2023-06-19 13:25:37,647:INFO:plot_model() successfully completed......................................
2023-06-19 13:25:39,419:INFO:Initializing plot_model()
2023-06-19 13:25:39,420:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:25:39,420:INFO:Checking exceptions
2023-06-19 13:25:39,426:INFO:Preloading libraries
2023-06-19 13:25:39,427:INFO:Copying training dataset
2023-06-19 13:25:39,427:INFO:Plot type: auc
2023-06-19 13:25:39,590:INFO:Fitting Model
2023-06-19 13:25:39,591:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 13:25:39,592:INFO:Scoring test/hold-out set
2023-06-19 13:25:39,773:INFO:Visual Rendered Successfully
2023-06-19 13:25:39,869:INFO:plot_model() successfully completed......................................
2023-06-19 13:25:44,411:INFO:Initializing plot_model()
2023-06-19 13:25:44,412:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:25:44,412:INFO:Checking exceptions
2023-06-19 13:25:44,419:INFO:Preloading libraries
2023-06-19 13:25:44,419:INFO:Copying training dataset
2023-06-19 13:25:44,419:INFO:Plot type: feature_all
2023-06-19 13:25:44,877:INFO:Visual Rendered Successfully
2023-06-19 13:25:44,945:INFO:plot_model() successfully completed......................................
2023-06-19 13:26:13,691:INFO:Initializing predict_model()
2023-06-19 13:26:13,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C2B417EEE0>)
2023-06-19 13:26:13,691:INFO:Checking exceptions
2023-06-19 13:26:13,691:INFO:Preloading libraries
2023-06-19 13:26:27,213:INFO:Initializing create_model()
2023-06-19 13:26:27,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 13:26:27,214:INFO:Checking exceptions
2023-06-19 13:26:27,278:INFO:Importing libraries
2023-06-19 13:26:27,278:INFO:Copying training dataset
2023-06-19 13:26:27,297:INFO:Defining folds
2023-06-19 13:26:27,298:INFO:Declaring metric variables
2023-06-19 13:26:27,302:INFO:Importing untrained model
2023-06-19 13:26:27,310:INFO:SVM - Linear Kernel Imported successfully
2023-06-19 13:26:27,329:INFO:Starting cross validation
2023-06-19 13:26:27,332:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 13:26:30,811:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 13:26:30,884:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 13:26:31,670:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 13:26:31,929:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 13:26:35,918:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 13:26:35,941:INFO:Calculating mean and std
2023-06-19 13:26:35,944:INFO:Creating metrics dataframe
2023-06-19 13:26:35,958:INFO:Finalizing model
2023-06-19 13:26:40,511:INFO:Uploading results into container
2023-06-19 13:26:40,512:INFO:Uploading model into container now
2023-06-19 13:26:40,531:INFO:_master_model_container: 2
2023-06-19 13:26:40,532:INFO:_display_container: 4
2023-06-19 13:26:40,532:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-19 13:26:40,532:INFO:create_model() successfully completed......................................
2023-06-19 13:26:40,628:INFO:Initializing calibrate_model()
2023-06-19 13:26:40,628:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 13:26:40,628:INFO:Checking exceptions
2023-06-19 13:26:40,632:INFO:Preloading libraries
2023-06-19 13:26:40,634:INFO:Preparing display monitor
2023-06-19 13:26:40,671:INFO:Getting model name
2023-06-19 13:26:40,671:INFO:Base model : SVM - Linear Kernel
2023-06-19 13:26:40,685:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 13:26:40,685:INFO:SubProcess create_model() called ==================================
2023-06-19 13:26:40,688:INFO:Initializing create_model()
2023-06-19 13:26:40,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C2B4379160>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 13:26:40,688:INFO:Checking exceptions
2023-06-19 13:26:40,688:INFO:Importing libraries
2023-06-19 13:26:40,689:INFO:Copying training dataset
2023-06-19 13:26:40,707:INFO:Defining folds
2023-06-19 13:26:40,707:INFO:Declaring metric variables
2023-06-19 13:26:40,717:INFO:Importing untrained model
2023-06-19 13:26:40,717:INFO:Declaring custom model
2023-06-19 13:26:40,722:INFO:SVM - Linear Kernel Imported successfully
2023-06-19 13:26:40,735:INFO:Starting cross validation
2023-06-19 13:26:40,738:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 13:27:03,401:INFO:Calculating mean and std
2023-06-19 13:27:03,402:INFO:Creating metrics dataframe
2023-06-19 13:27:03,419:INFO:Finalizing model
2023-06-19 13:27:14,765:INFO:Uploading results into container
2023-06-19 13:27:14,766:INFO:Uploading model into container now
2023-06-19 13:27:14,766:INFO:_master_model_container: 3
2023-06-19 13:27:14,767:INFO:_display_container: 5
2023-06-19 13:27:14,768:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 13:27:14,769:INFO:create_model() successfully completed......................................
2023-06-19 13:27:14,848:INFO:SubProcess create_model() end ==================================
2023-06-19 13:27:14,872:INFO:_master_model_container: 3
2023-06-19 13:27:14,872:INFO:_display_container: 5
2023-06-19 13:27:14,873:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 13:27:14,873:INFO:calibrate_model() successfully completed......................................
2023-06-19 13:27:14,971:INFO:Initializing evaluate_model()
2023-06-19 13:27:14,971:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 13:27:14,996:INFO:Initializing plot_model()
2023-06-19 13:27:14,996:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:27:14,996:INFO:Checking exceptions
2023-06-19 13:27:15,003:INFO:Preloading libraries
2023-06-19 13:27:15,003:INFO:Copying training dataset
2023-06-19 13:27:15,004:INFO:Plot type: pipeline
2023-06-19 13:27:15,191:INFO:Visual Rendered Successfully
2023-06-19 13:27:15,270:INFO:plot_model() successfully completed......................................
2023-06-19 13:27:19,922:INFO:Initializing plot_model()
2023-06-19 13:27:19,922:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:27:19,922:INFO:Checking exceptions
2023-06-19 13:27:19,928:INFO:Preloading libraries
2023-06-19 13:27:19,929:INFO:Copying training dataset
2023-06-19 13:27:19,929:INFO:Plot type: parameter
2023-06-19 13:27:19,935:INFO:Visual Rendered Successfully
2023-06-19 13:27:20,023:INFO:plot_model() successfully completed......................................
2023-06-19 13:27:22,004:INFO:Initializing plot_model()
2023-06-19 13:27:22,004:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:27:22,005:INFO:Checking exceptions
2023-06-19 13:27:23,467:INFO:Initializing plot_model()
2023-06-19 13:27:23,468:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:27:23,468:INFO:Checking exceptions
2023-06-19 13:27:23,474:INFO:Preloading libraries
2023-06-19 13:27:23,475:INFO:Copying training dataset
2023-06-19 13:27:23,475:INFO:Plot type: feature
2023-06-19 13:27:23,739:INFO:Visual Rendered Successfully
2023-06-19 13:27:24,737:INFO:plot_model() successfully completed......................................
2023-06-19 13:27:35,731:INFO:Initializing plot_model()
2023-06-19 13:27:35,732:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:27:35,732:INFO:Checking exceptions
2023-06-19 13:27:35,739:INFO:Preloading libraries
2023-06-19 13:27:35,740:INFO:Copying training dataset
2023-06-19 13:27:35,740:INFO:Plot type: feature_all
2023-06-19 13:27:36,305:INFO:Visual Rendered Successfully
2023-06-19 13:27:36,373:INFO:plot_model() successfully completed......................................
2023-06-19 13:28:02,992:INFO:Initializing predict_model()
2023-06-19 13:28:02,993:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C2B4135CA0>)
2023-06-19 13:28:02,993:INFO:Checking exceptions
2023-06-19 13:28:02,993:INFO:Preloading libraries
2023-06-19 13:28:03,322:INFO:Initializing predict_model()
2023-06-19 13:28:03,322:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C2B025D940>)
2023-06-19 13:28:03,322:INFO:Checking exceptions
2023-06-19 13:28:03,322:INFO:Preloading libraries
2023-06-19 13:28:23,356:INFO:Initializing create_model()
2023-06-19 13:28:23,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 13:28:23,356:INFO:Checking exceptions
2023-06-19 13:28:23,393:INFO:Importing libraries
2023-06-19 13:28:23,394:INFO:Copying training dataset
2023-06-19 13:28:23,413:INFO:Defining folds
2023-06-19 13:28:23,413:INFO:Declaring metric variables
2023-06-19 13:28:23,419:INFO:Importing untrained model
2023-06-19 13:28:23,419:INFO:Declaring custom model
2023-06-19 13:28:23,425:INFO:Random Forest Classifier Imported successfully
2023-06-19 13:28:23,450:INFO:Starting cross validation
2023-06-19 13:28:23,455:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 13:30:58,164:INFO:Calculating mean and std
2023-06-19 13:30:58,165:INFO:Creating metrics dataframe
2023-06-19 13:30:58,179:INFO:Finalizing model
2023-06-19 13:31:51,317:INFO:Uploading results into container
2023-06-19 13:31:51,318:INFO:Uploading model into container now
2023-06-19 13:31:51,336:INFO:_master_model_container: 4
2023-06-19 13:31:51,336:INFO:_display_container: 8
2023-06-19 13:31:51,337:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 13:31:51,337:INFO:create_model() successfully completed......................................
2023-06-19 13:31:51,444:INFO:Initializing evaluate_model()
2023-06-19 13:31:51,444:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 13:31:51,472:INFO:Initializing plot_model()
2023-06-19 13:31:51,473:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2ADEF49D0>, system=True)
2023-06-19 13:31:51,473:INFO:Checking exceptions
2023-06-19 13:31:51,492:INFO:Preloading libraries
2023-06-19 13:31:51,496:INFO:Copying training dataset
2023-06-19 13:31:51,497:INFO:Plot type: pipeline
2023-06-19 13:31:51,683:INFO:Visual Rendered Successfully
2023-06-19 13:31:51,763:INFO:plot_model() successfully completed......................................
2023-06-19 14:37:52,780:INFO:PyCaret ClassificationExperiment
2023-06-19 14:37:52,781:INFO:Logging name: clf-default-name
2023-06-19 14:37:52,781:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 14:37:52,781:INFO:version 3.0.2
2023-06-19 14:37:52,781:INFO:Initializing setup()
2023-06-19 14:37:52,781:INFO:self.USI: e27a
2023-06-19 14:37:52,781:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 14:37:52,782:INFO:Checking environment
2023-06-19 14:37:52,782:INFO:python_version: 3.9.7
2023-06-19 14:37:52,782:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 14:37:52,782:INFO:machine: AMD64
2023-06-19 14:37:52,782:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 14:37:52,782:INFO:Memory: svmem(total=17120436224, available=7269543936, percent=57.5, used=9850892288, free=7269543936)
2023-06-19 14:37:52,782:INFO:Physical Core: 4
2023-06-19 14:37:52,782:INFO:Logical Core: 4
2023-06-19 14:37:52,782:INFO:Checking libraries
2023-06-19 14:37:52,782:INFO:System:
2023-06-19 14:37:52,782:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 14:37:52,783:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 14:37:52,783:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 14:37:52,783:INFO:PyCaret required dependencies:
2023-06-19 14:37:52,783:INFO:                 pip: 21.2.3
2023-06-19 14:37:52,783:INFO:          setuptools: 57.4.0
2023-06-19 14:37:52,783:INFO:             pycaret: 3.0.2
2023-06-19 14:37:52,783:INFO:             IPython: 7.28.0
2023-06-19 14:37:52,783:INFO:          ipywidgets: 8.0.6
2023-06-19 14:37:52,783:INFO:                tqdm: 4.64.0
2023-06-19 14:37:52,783:INFO:               numpy: 1.22.4
2023-06-19 14:37:52,783:INFO:              pandas: 1.3.5
2023-06-19 14:37:52,783:INFO:              jinja2: 3.1.2
2023-06-19 14:37:52,783:INFO:               scipy: 1.7.1
2023-06-19 14:37:52,784:INFO:              joblib: 1.2.0
2023-06-19 14:37:52,784:INFO:             sklearn: 1.1.0
2023-06-19 14:37:52,784:INFO:                pyod: 1.0.9
2023-06-19 14:37:52,784:INFO:            imblearn: 0.9.1
2023-06-19 14:37:52,784:INFO:   category_encoders: 2.6.1
2023-06-19 14:37:52,784:INFO:            lightgbm: 3.3.5
2023-06-19 14:37:52,784:INFO:               numba: 0.57.0
2023-06-19 14:37:52,784:INFO:            requests: 2.31.0
2023-06-19 14:37:52,784:INFO:          matplotlib: 3.4.3
2023-06-19 14:37:52,784:INFO:          scikitplot: 0.3.7
2023-06-19 14:37:52,784:INFO:         yellowbrick: 1.5
2023-06-19 14:37:52,784:INFO:              plotly: 5.8.0
2023-06-19 14:37:52,784:INFO:             kaleido: 0.2.1
2023-06-19 14:37:52,784:INFO:         statsmodels: 0.14.0
2023-06-19 14:37:52,785:INFO:              sktime: 0.17.0
2023-06-19 14:37:52,785:INFO:               tbats: 1.1.3
2023-06-19 14:37:52,785:INFO:            pmdarima: 2.0.3
2023-06-19 14:37:52,785:INFO:              psutil: 5.9.0
2023-06-19 14:37:52,785:INFO:PyCaret optional dependencies:
2023-06-19 14:37:52,785:INFO:                shap: Not installed
2023-06-19 14:37:52,785:INFO:           interpret: Not installed
2023-06-19 14:37:52,785:INFO:                umap: Not installed
2023-06-19 14:37:52,785:INFO:    pandas_profiling: Not installed
2023-06-19 14:37:52,785:INFO:  explainerdashboard: Not installed
2023-06-19 14:37:52,785:INFO:             autoviz: Not installed
2023-06-19 14:37:52,785:INFO:           fairlearn: Not installed
2023-06-19 14:37:52,785:INFO:             xgboost: Not installed
2023-06-19 14:37:52,785:INFO:            catboost: Not installed
2023-06-19 14:37:52,785:INFO:              kmodes: Not installed
2023-06-19 14:37:52,786:INFO:             mlxtend: Not installed
2023-06-19 14:37:52,786:INFO:       statsforecast: Not installed
2023-06-19 14:37:52,786:INFO:        tune_sklearn: Not installed
2023-06-19 14:37:52,786:INFO:                 ray: Not installed
2023-06-19 14:37:52,786:INFO:            hyperopt: Not installed
2023-06-19 14:37:52,786:INFO:              optuna: Not installed
2023-06-19 14:37:52,786:INFO:               skopt: Not installed
2023-06-19 14:37:52,786:INFO:              mlflow: Not installed
2023-06-19 14:37:52,786:INFO:              gradio: Not installed
2023-06-19 14:37:52,786:INFO:             fastapi: Not installed
2023-06-19 14:37:52,786:INFO:             uvicorn: Not installed
2023-06-19 14:37:52,786:INFO:              m2cgen: Not installed
2023-06-19 14:37:52,787:INFO:           evidently: Not installed
2023-06-19 14:37:52,787:INFO:               fugue: Not installed
2023-06-19 14:37:52,787:INFO:           streamlit: Not installed
2023-06-19 14:37:52,787:INFO:             prophet: Not installed
2023-06-19 14:37:52,787:INFO:None
2023-06-19 14:37:52,787:INFO:Set up data.
2023-06-19 14:37:52,905:INFO:Set up train/test split.
2023-06-19 14:37:52,954:INFO:Set up index.
2023-06-19 14:37:52,955:INFO:Set up folding strategy.
2023-06-19 14:37:52,955:INFO:Assigning column types.
2023-06-19 14:37:52,975:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 14:37:53,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:37:53,091:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:37:53,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:37:53,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:37:53,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,257:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 14:37:53,313:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:37:53,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,400:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:37:53,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,434:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 14:37:53,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,610:INFO:Preparing preprocessing pipeline...
2023-06-19 14:37:53,612:INFO:Set up simple imputation.
2023-06-19 14:37:53,624:INFO:Set up encoding of ordinal features.
2023-06-19 14:37:53,634:INFO:Set up encoding of categorical features.
2023-06-19 14:37:53,635:INFO:Set up removing multicollinearity.
2023-06-19 14:37:53,635:INFO:Set up imbalanced handling.
2023-06-19 14:37:53,635:INFO:Set up feature selection.
2023-06-19 14:37:53,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:37:53,723:INFO:Set up column name cleaning.
2023-06-19 14:43:47,448:INFO:PyCaret ClassificationExperiment
2023-06-19 14:43:47,448:INFO:Logging name: clf-default-name
2023-06-19 14:43:47,448:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 14:43:47,448:INFO:version 3.0.2
2023-06-19 14:43:47,448:INFO:Initializing setup()
2023-06-19 14:43:47,448:INFO:self.USI: 9a4c
2023-06-19 14:43:47,448:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 14:43:47,449:INFO:Checking environment
2023-06-19 14:43:47,449:INFO:python_version: 3.9.7
2023-06-19 14:43:47,449:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 14:43:47,449:INFO:machine: AMD64
2023-06-19 14:43:47,449:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 14:43:47,449:INFO:Memory: svmem(total=17120436224, available=6731894784, percent=60.7, used=10388541440, free=6731894784)
2023-06-19 14:43:47,449:INFO:Physical Core: 4
2023-06-19 14:43:47,449:INFO:Logical Core: 4
2023-06-19 14:43:47,449:INFO:Checking libraries
2023-06-19 14:43:47,449:INFO:System:
2023-06-19 14:43:47,449:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 14:43:47,449:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 14:43:47,449:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 14:43:47,449:INFO:PyCaret required dependencies:
2023-06-19 14:43:47,449:INFO:                 pip: 21.2.3
2023-06-19 14:43:47,450:INFO:          setuptools: 57.4.0
2023-06-19 14:43:47,450:INFO:             pycaret: 3.0.2
2023-06-19 14:43:47,450:INFO:             IPython: 7.28.0
2023-06-19 14:43:47,450:INFO:          ipywidgets: 8.0.6
2023-06-19 14:43:47,450:INFO:                tqdm: 4.64.0
2023-06-19 14:43:47,450:INFO:               numpy: 1.22.4
2023-06-19 14:43:47,450:INFO:              pandas: 1.3.5
2023-06-19 14:43:47,450:INFO:              jinja2: 3.1.2
2023-06-19 14:43:47,450:INFO:               scipy: 1.7.1
2023-06-19 14:43:47,450:INFO:              joblib: 1.2.0
2023-06-19 14:43:47,450:INFO:             sklearn: 1.1.0
2023-06-19 14:43:47,450:INFO:                pyod: 1.0.9
2023-06-19 14:43:47,450:INFO:            imblearn: 0.9.1
2023-06-19 14:43:47,450:INFO:   category_encoders: 2.6.1
2023-06-19 14:43:47,450:INFO:            lightgbm: 3.3.5
2023-06-19 14:43:47,450:INFO:               numba: 0.57.0
2023-06-19 14:43:47,450:INFO:            requests: 2.31.0
2023-06-19 14:43:47,450:INFO:          matplotlib: 3.4.3
2023-06-19 14:43:47,450:INFO:          scikitplot: 0.3.7
2023-06-19 14:43:47,450:INFO:         yellowbrick: 1.5
2023-06-19 14:43:47,450:INFO:              plotly: 5.8.0
2023-06-19 14:43:47,451:INFO:             kaleido: 0.2.1
2023-06-19 14:43:47,451:INFO:         statsmodels: 0.14.0
2023-06-19 14:43:47,451:INFO:              sktime: 0.17.0
2023-06-19 14:43:47,451:INFO:               tbats: 1.1.3
2023-06-19 14:43:47,451:INFO:            pmdarima: 2.0.3
2023-06-19 14:43:47,451:INFO:              psutil: 5.9.0
2023-06-19 14:43:47,451:INFO:PyCaret optional dependencies:
2023-06-19 14:43:47,451:INFO:                shap: Not installed
2023-06-19 14:43:47,451:INFO:           interpret: Not installed
2023-06-19 14:43:47,451:INFO:                umap: Not installed
2023-06-19 14:43:47,451:INFO:    pandas_profiling: Not installed
2023-06-19 14:43:47,451:INFO:  explainerdashboard: Not installed
2023-06-19 14:43:47,451:INFO:             autoviz: Not installed
2023-06-19 14:43:47,451:INFO:           fairlearn: Not installed
2023-06-19 14:43:47,451:INFO:             xgboost: Not installed
2023-06-19 14:43:47,451:INFO:            catboost: Not installed
2023-06-19 14:43:47,451:INFO:              kmodes: Not installed
2023-06-19 14:43:47,451:INFO:             mlxtend: Not installed
2023-06-19 14:43:47,452:INFO:       statsforecast: Not installed
2023-06-19 14:43:47,452:INFO:        tune_sklearn: Not installed
2023-06-19 14:43:47,452:INFO:                 ray: Not installed
2023-06-19 14:43:47,452:INFO:            hyperopt: Not installed
2023-06-19 14:43:47,453:INFO:              optuna: Not installed
2023-06-19 14:43:47,453:INFO:               skopt: Not installed
2023-06-19 14:43:47,453:INFO:              mlflow: Not installed
2023-06-19 14:43:47,453:INFO:              gradio: Not installed
2023-06-19 14:43:47,453:INFO:             fastapi: Not installed
2023-06-19 14:43:47,453:INFO:             uvicorn: Not installed
2023-06-19 14:43:47,453:INFO:              m2cgen: Not installed
2023-06-19 14:43:47,453:INFO:           evidently: Not installed
2023-06-19 14:43:47,453:INFO:               fugue: Not installed
2023-06-19 14:43:47,453:INFO:           streamlit: Not installed
2023-06-19 14:43:47,453:INFO:             prophet: Not installed
2023-06-19 14:43:47,453:INFO:None
2023-06-19 14:43:47,453:INFO:Set up data.
2023-06-19 14:43:47,510:INFO:Set up train/test split.
2023-06-19 14:43:47,535:INFO:Set up index.
2023-06-19 14:43:47,536:INFO:Set up folding strategy.
2023-06-19 14:43:47,536:INFO:Assigning column types.
2023-06-19 14:43:47,549:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 14:43:47,601:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:43:47,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:43:47,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,687:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:43:47,688:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:43:47,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,722:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 14:43:47,771:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:43:47,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,858:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:43:47,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,890:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 14:43:47,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:47,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:48,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:48,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:48,060:INFO:Preparing preprocessing pipeline...
2023-06-19 14:43:48,062:INFO:Set up simple imputation.
2023-06-19 14:43:48,073:INFO:Set up encoding of ordinal features.
2023-06-19 14:43:48,083:INFO:Set up encoding of categorical features.
2023-06-19 14:43:48,083:INFO:Set up removing multicollinearity.
2023-06-19 14:43:48,083:INFO:Set up imbalanced handling.
2023-06-19 14:43:48,083:INFO:Set up feature selection.
2023-06-19 14:43:48,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:48,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:43:48,169:INFO:Set up column name cleaning.
2023-06-19 14:48:22,527:INFO:PyCaret ClassificationExperiment
2023-06-19 14:48:22,527:INFO:Logging name: clf-default-name
2023-06-19 14:48:22,527:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 14:48:22,527:INFO:version 3.0.2
2023-06-19 14:48:22,527:INFO:Initializing setup()
2023-06-19 14:48:22,527:INFO:self.USI: 2062
2023-06-19 14:48:22,527:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 14:48:22,527:INFO:Checking environment
2023-06-19 14:48:22,527:INFO:python_version: 3.9.7
2023-06-19 14:48:22,528:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 14:48:22,528:INFO:machine: AMD64
2023-06-19 14:48:22,528:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 14:48:22,528:INFO:Memory: svmem(total=17120436224, available=6808023040, percent=60.2, used=10312413184, free=6808023040)
2023-06-19 14:48:22,528:INFO:Physical Core: 4
2023-06-19 14:48:22,528:INFO:Logical Core: 4
2023-06-19 14:48:22,528:INFO:Checking libraries
2023-06-19 14:48:22,528:INFO:System:
2023-06-19 14:48:22,528:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 14:48:22,528:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 14:48:22,528:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 14:48:22,528:INFO:PyCaret required dependencies:
2023-06-19 14:48:22,528:INFO:                 pip: 21.2.3
2023-06-19 14:48:22,528:INFO:          setuptools: 57.4.0
2023-06-19 14:48:22,528:INFO:             pycaret: 3.0.2
2023-06-19 14:48:22,528:INFO:             IPython: 7.28.0
2023-06-19 14:48:22,528:INFO:          ipywidgets: 8.0.6
2023-06-19 14:48:22,528:INFO:                tqdm: 4.64.0
2023-06-19 14:48:22,529:INFO:               numpy: 1.22.4
2023-06-19 14:48:22,529:INFO:              pandas: 1.3.5
2023-06-19 14:48:22,529:INFO:              jinja2: 3.1.2
2023-06-19 14:48:22,529:INFO:               scipy: 1.7.1
2023-06-19 14:48:22,529:INFO:              joblib: 1.2.0
2023-06-19 14:48:22,529:INFO:             sklearn: 1.1.0
2023-06-19 14:48:22,529:INFO:                pyod: 1.0.9
2023-06-19 14:48:22,529:INFO:            imblearn: 0.9.1
2023-06-19 14:48:22,529:INFO:   category_encoders: 2.6.1
2023-06-19 14:48:22,529:INFO:            lightgbm: 3.3.5
2023-06-19 14:48:22,529:INFO:               numba: 0.57.0
2023-06-19 14:48:22,529:INFO:            requests: 2.31.0
2023-06-19 14:48:22,529:INFO:          matplotlib: 3.4.3
2023-06-19 14:48:22,529:INFO:          scikitplot: 0.3.7
2023-06-19 14:48:22,529:INFO:         yellowbrick: 1.5
2023-06-19 14:48:22,529:INFO:              plotly: 5.8.0
2023-06-19 14:48:22,529:INFO:             kaleido: 0.2.1
2023-06-19 14:48:22,529:INFO:         statsmodels: 0.14.0
2023-06-19 14:48:22,529:INFO:              sktime: 0.17.0
2023-06-19 14:48:22,529:INFO:               tbats: 1.1.3
2023-06-19 14:48:22,530:INFO:            pmdarima: 2.0.3
2023-06-19 14:48:22,530:INFO:              psutil: 5.9.0
2023-06-19 14:48:22,530:INFO:PyCaret optional dependencies:
2023-06-19 14:48:22,530:INFO:                shap: Not installed
2023-06-19 14:48:22,530:INFO:           interpret: Not installed
2023-06-19 14:48:22,530:INFO:                umap: Not installed
2023-06-19 14:48:22,530:INFO:    pandas_profiling: Not installed
2023-06-19 14:48:22,530:INFO:  explainerdashboard: Not installed
2023-06-19 14:48:22,530:INFO:             autoviz: Not installed
2023-06-19 14:48:22,530:INFO:           fairlearn: Not installed
2023-06-19 14:48:22,530:INFO:             xgboost: Not installed
2023-06-19 14:48:22,530:INFO:            catboost: Not installed
2023-06-19 14:48:22,530:INFO:              kmodes: Not installed
2023-06-19 14:48:22,530:INFO:             mlxtend: Not installed
2023-06-19 14:48:22,530:INFO:       statsforecast: Not installed
2023-06-19 14:48:22,530:INFO:        tune_sklearn: Not installed
2023-06-19 14:48:22,530:INFO:                 ray: Not installed
2023-06-19 14:48:22,530:INFO:            hyperopt: Not installed
2023-06-19 14:48:22,530:INFO:              optuna: Not installed
2023-06-19 14:48:22,530:INFO:               skopt: Not installed
2023-06-19 14:48:22,531:INFO:              mlflow: Not installed
2023-06-19 14:48:22,531:INFO:              gradio: Not installed
2023-06-19 14:48:22,531:INFO:             fastapi: Not installed
2023-06-19 14:48:22,531:INFO:             uvicorn: Not installed
2023-06-19 14:48:22,531:INFO:              m2cgen: Not installed
2023-06-19 14:48:22,531:INFO:           evidently: Not installed
2023-06-19 14:48:22,531:INFO:               fugue: Not installed
2023-06-19 14:48:22,531:INFO:           streamlit: Not installed
2023-06-19 14:48:22,531:INFO:             prophet: Not installed
2023-06-19 14:48:22,531:INFO:None
2023-06-19 14:48:22,531:INFO:Set up data.
2023-06-19 14:48:22,591:INFO:Set up train/test split.
2023-06-19 14:48:22,616:INFO:Set up index.
2023-06-19 14:48:22,617:INFO:Set up folding strategy.
2023-06-19 14:48:22,617:INFO:Assigning column types.
2023-06-19 14:48:22,630:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 14:48:22,683:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:48:22,684:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:48:22,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:22,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:22,822:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:48:22,824:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:48:22,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:22,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:22,915:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 14:48:22,986:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:48:23,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,080:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:48:23,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,114:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 14:48:23,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,293:INFO:Preparing preprocessing pipeline...
2023-06-19 14:48:23,296:INFO:Set up simple imputation.
2023-06-19 14:48:23,307:INFO:Set up encoding of ordinal features.
2023-06-19 14:48:23,320:INFO:Set up encoding of categorical features.
2023-06-19 14:48:23,320:INFO:Set up removing multicollinearity.
2023-06-19 14:48:23,320:INFO:Set up imbalanced handling.
2023-06-19 14:48:23,320:INFO:Set up feature selection.
2023-06-19 14:48:23,411:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:48:23,415:INFO:Set up column name cleaning.
2023-06-19 14:49:13,144:INFO:PyCaret ClassificationExperiment
2023-06-19 14:49:13,144:INFO:Logging name: clf-default-name
2023-06-19 14:49:13,145:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 14:49:13,145:INFO:version 3.0.2
2023-06-19 14:49:13,146:INFO:Initializing setup()
2023-06-19 14:49:13,146:INFO:self.USI: 922f
2023-06-19 14:49:13,146:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 14:49:13,146:INFO:Checking environment
2023-06-19 14:49:13,146:INFO:python_version: 3.9.7
2023-06-19 14:49:13,147:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 14:49:13,147:INFO:machine: AMD64
2023-06-19 14:49:13,147:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 14:49:13,147:INFO:Memory: svmem(total=17120436224, available=6798151680, percent=60.3, used=10322284544, free=6798151680)
2023-06-19 14:49:13,147:INFO:Physical Core: 4
2023-06-19 14:49:13,148:INFO:Logical Core: 4
2023-06-19 14:49:13,148:INFO:Checking libraries
2023-06-19 14:49:13,148:INFO:System:
2023-06-19 14:49:13,148:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 14:49:13,149:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 14:49:13,149:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 14:49:13,149:INFO:PyCaret required dependencies:
2023-06-19 14:49:13,149:INFO:                 pip: 21.2.3
2023-06-19 14:49:13,149:INFO:          setuptools: 57.4.0
2023-06-19 14:49:13,149:INFO:             pycaret: 3.0.2
2023-06-19 14:49:13,149:INFO:             IPython: 7.28.0
2023-06-19 14:49:13,149:INFO:          ipywidgets: 8.0.6
2023-06-19 14:49:13,149:INFO:                tqdm: 4.64.0
2023-06-19 14:49:13,149:INFO:               numpy: 1.22.4
2023-06-19 14:49:13,149:INFO:              pandas: 1.3.5
2023-06-19 14:49:13,149:INFO:              jinja2: 3.1.2
2023-06-19 14:49:13,149:INFO:               scipy: 1.7.1
2023-06-19 14:49:13,150:INFO:              joblib: 1.2.0
2023-06-19 14:49:13,150:INFO:             sklearn: 1.1.0
2023-06-19 14:49:13,150:INFO:                pyod: 1.0.9
2023-06-19 14:49:13,150:INFO:            imblearn: 0.9.1
2023-06-19 14:49:13,150:INFO:   category_encoders: 2.6.1
2023-06-19 14:49:13,150:INFO:            lightgbm: 3.3.5
2023-06-19 14:49:13,150:INFO:               numba: 0.57.0
2023-06-19 14:49:13,150:INFO:            requests: 2.31.0
2023-06-19 14:49:13,150:INFO:          matplotlib: 3.4.3
2023-06-19 14:49:13,150:INFO:          scikitplot: 0.3.7
2023-06-19 14:49:13,150:INFO:         yellowbrick: 1.5
2023-06-19 14:49:13,150:INFO:              plotly: 5.8.0
2023-06-19 14:49:13,150:INFO:             kaleido: 0.2.1
2023-06-19 14:49:13,150:INFO:         statsmodels: 0.14.0
2023-06-19 14:49:13,150:INFO:              sktime: 0.17.0
2023-06-19 14:49:13,150:INFO:               tbats: 1.1.3
2023-06-19 14:49:13,150:INFO:            pmdarima: 2.0.3
2023-06-19 14:49:13,150:INFO:              psutil: 5.9.0
2023-06-19 14:49:13,151:INFO:PyCaret optional dependencies:
2023-06-19 14:49:13,151:INFO:                shap: Not installed
2023-06-19 14:49:13,151:INFO:           interpret: Not installed
2023-06-19 14:49:13,151:INFO:                umap: Not installed
2023-06-19 14:49:13,151:INFO:    pandas_profiling: Not installed
2023-06-19 14:49:13,151:INFO:  explainerdashboard: Not installed
2023-06-19 14:49:13,151:INFO:             autoviz: Not installed
2023-06-19 14:49:13,151:INFO:           fairlearn: Not installed
2023-06-19 14:49:13,151:INFO:             xgboost: Not installed
2023-06-19 14:49:13,151:INFO:            catboost: Not installed
2023-06-19 14:49:13,151:INFO:              kmodes: Not installed
2023-06-19 14:49:13,151:INFO:             mlxtend: Not installed
2023-06-19 14:49:13,151:INFO:       statsforecast: Not installed
2023-06-19 14:49:13,152:INFO:        tune_sklearn: Not installed
2023-06-19 14:49:13,152:INFO:                 ray: Not installed
2023-06-19 14:49:13,152:INFO:            hyperopt: Not installed
2023-06-19 14:49:13,152:INFO:              optuna: Not installed
2023-06-19 14:49:13,152:INFO:               skopt: Not installed
2023-06-19 14:49:13,152:INFO:              mlflow: Not installed
2023-06-19 14:49:13,152:INFO:              gradio: Not installed
2023-06-19 14:49:13,152:INFO:             fastapi: Not installed
2023-06-19 14:49:13,152:INFO:             uvicorn: Not installed
2023-06-19 14:49:13,152:INFO:              m2cgen: Not installed
2023-06-19 14:49:13,153:INFO:           evidently: Not installed
2023-06-19 14:49:13,153:INFO:               fugue: Not installed
2023-06-19 14:49:13,153:INFO:           streamlit: Not installed
2023-06-19 14:49:13,153:INFO:             prophet: Not installed
2023-06-19 14:49:13,153:INFO:None
2023-06-19 14:49:13,153:INFO:Set up data.
2023-06-19 14:49:13,225:INFO:Set up train/test split.
2023-06-19 14:49:13,252:INFO:Set up index.
2023-06-19 14:49:13,253:INFO:Set up folding strategy.
2023-06-19 14:49:13,253:INFO:Assigning column types.
2023-06-19 14:49:13,268:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 14:49:13,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:49:13,327:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:49:13,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,500:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:49:13,504:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:49:13,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,540:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 14:49:13,604:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:49:13,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,689:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:49:13,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,722:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 14:49:13,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:13,903:INFO:Preparing preprocessing pipeline...
2023-06-19 14:49:13,905:INFO:Set up simple imputation.
2023-06-19 14:49:13,916:INFO:Set up encoding of ordinal features.
2023-06-19 14:49:13,926:INFO:Set up encoding of categorical features.
2023-06-19 14:49:13,926:INFO:Set up removing multicollinearity.
2023-06-19 14:49:13,926:INFO:Set up imbalanced handling.
2023-06-19 14:49:13,926:INFO:Set up feature selection.
2023-06-19 14:49:14,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:14,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:14,018:INFO:Set up column name cleaning.
2023-06-19 14:49:19,669:INFO:PyCaret ClassificationExperiment
2023-06-19 14:49:19,669:INFO:Logging name: clf-default-name
2023-06-19 14:49:19,669:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 14:49:19,669:INFO:version 3.0.2
2023-06-19 14:49:19,669:INFO:Initializing setup()
2023-06-19 14:49:19,669:INFO:self.USI: c12c
2023-06-19 14:49:19,669:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 14:49:19,669:INFO:Checking environment
2023-06-19 14:49:19,669:INFO:python_version: 3.9.7
2023-06-19 14:49:19,669:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 14:49:19,670:INFO:machine: AMD64
2023-06-19 14:49:19,670:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 14:49:19,670:INFO:Memory: svmem(total=17120436224, available=6743617536, percent=60.6, used=10376818688, free=6743617536)
2023-06-19 14:49:19,670:INFO:Physical Core: 4
2023-06-19 14:49:19,670:INFO:Logical Core: 4
2023-06-19 14:49:19,670:INFO:Checking libraries
2023-06-19 14:49:19,670:INFO:System:
2023-06-19 14:49:19,670:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 14:49:19,670:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 14:49:19,670:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 14:49:19,670:INFO:PyCaret required dependencies:
2023-06-19 14:49:19,670:INFO:                 pip: 21.2.3
2023-06-19 14:49:19,670:INFO:          setuptools: 57.4.0
2023-06-19 14:49:19,670:INFO:             pycaret: 3.0.2
2023-06-19 14:49:19,670:INFO:             IPython: 7.28.0
2023-06-19 14:49:19,670:INFO:          ipywidgets: 8.0.6
2023-06-19 14:49:19,670:INFO:                tqdm: 4.64.0
2023-06-19 14:49:19,670:INFO:               numpy: 1.22.4
2023-06-19 14:49:19,671:INFO:              pandas: 1.3.5
2023-06-19 14:49:19,671:INFO:              jinja2: 3.1.2
2023-06-19 14:49:19,671:INFO:               scipy: 1.7.1
2023-06-19 14:49:19,671:INFO:              joblib: 1.2.0
2023-06-19 14:49:19,671:INFO:             sklearn: 1.1.0
2023-06-19 14:49:19,671:INFO:                pyod: 1.0.9
2023-06-19 14:49:19,671:INFO:            imblearn: 0.9.1
2023-06-19 14:49:19,671:INFO:   category_encoders: 2.6.1
2023-06-19 14:49:19,671:INFO:            lightgbm: 3.3.5
2023-06-19 14:49:19,671:INFO:               numba: 0.57.0
2023-06-19 14:49:19,671:INFO:            requests: 2.31.0
2023-06-19 14:49:19,671:INFO:          matplotlib: 3.4.3
2023-06-19 14:49:19,671:INFO:          scikitplot: 0.3.7
2023-06-19 14:49:19,671:INFO:         yellowbrick: 1.5
2023-06-19 14:49:19,671:INFO:              plotly: 5.8.0
2023-06-19 14:49:19,671:INFO:             kaleido: 0.2.1
2023-06-19 14:49:19,672:INFO:         statsmodels: 0.14.0
2023-06-19 14:49:19,672:INFO:              sktime: 0.17.0
2023-06-19 14:49:19,672:INFO:               tbats: 1.1.3
2023-06-19 14:49:19,672:INFO:            pmdarima: 2.0.3
2023-06-19 14:49:19,672:INFO:              psutil: 5.9.0
2023-06-19 14:49:19,672:INFO:PyCaret optional dependencies:
2023-06-19 14:49:19,672:INFO:                shap: Not installed
2023-06-19 14:49:19,672:INFO:           interpret: Not installed
2023-06-19 14:49:19,672:INFO:                umap: Not installed
2023-06-19 14:49:19,673:INFO:    pandas_profiling: Not installed
2023-06-19 14:49:19,673:INFO:  explainerdashboard: Not installed
2023-06-19 14:49:19,673:INFO:             autoviz: Not installed
2023-06-19 14:49:19,673:INFO:           fairlearn: Not installed
2023-06-19 14:49:19,673:INFO:             xgboost: Not installed
2023-06-19 14:49:19,673:INFO:            catboost: Not installed
2023-06-19 14:49:19,673:INFO:              kmodes: Not installed
2023-06-19 14:49:19,673:INFO:             mlxtend: Not installed
2023-06-19 14:49:19,673:INFO:       statsforecast: Not installed
2023-06-19 14:49:19,673:INFO:        tune_sklearn: Not installed
2023-06-19 14:49:19,673:INFO:                 ray: Not installed
2023-06-19 14:49:19,673:INFO:            hyperopt: Not installed
2023-06-19 14:49:19,673:INFO:              optuna: Not installed
2023-06-19 14:49:19,673:INFO:               skopt: Not installed
2023-06-19 14:49:19,673:INFO:              mlflow: Not installed
2023-06-19 14:49:19,673:INFO:              gradio: Not installed
2023-06-19 14:49:19,674:INFO:             fastapi: Not installed
2023-06-19 14:49:19,674:INFO:             uvicorn: Not installed
2023-06-19 14:49:19,674:INFO:              m2cgen: Not installed
2023-06-19 14:49:19,674:INFO:           evidently: Not installed
2023-06-19 14:49:19,674:INFO:               fugue: Not installed
2023-06-19 14:49:19,674:INFO:           streamlit: Not installed
2023-06-19 14:49:19,674:INFO:             prophet: Not installed
2023-06-19 14:49:19,674:INFO:None
2023-06-19 14:49:19,674:INFO:Set up data.
2023-06-19 14:49:19,731:INFO:Set up train/test split.
2023-06-19 14:49:19,754:INFO:Set up index.
2023-06-19 14:49:19,756:INFO:Set up folding strategy.
2023-06-19 14:49:19,756:INFO:Assigning column types.
2023-06-19 14:49:19,767:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 14:49:19,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:49:19,821:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:49:19,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:19,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:19,916:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:49:19,916:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:49:19,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:19,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:19,960:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 14:49:20,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:49:20,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,102:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:49:20,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,140:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 14:49:20,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,307:INFO:Preparing preprocessing pipeline...
2023-06-19 14:49:20,310:INFO:Set up simple imputation.
2023-06-19 14:49:20,323:INFO:Set up encoding of ordinal features.
2023-06-19 14:49:20,332:INFO:Set up encoding of categorical features.
2023-06-19 14:49:20,332:INFO:Set up removing multicollinearity.
2023-06-19 14:49:20,332:INFO:Set up imbalanced handling.
2023-06-19 14:49:20,332:INFO:Set up feature selection.
2023-06-19 14:49:20,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:49:20,420:INFO:Set up column name cleaning.
2023-06-19 14:58:32,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 14:58:32,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 14:58:32,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 14:58:32,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 14:58:33,828:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 14:58:35,002:INFO:PyCaret ClassificationExperiment
2023-06-19 14:58:35,002:INFO:Logging name: clf-default-name
2023-06-19 14:58:35,002:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 14:58:35,002:INFO:version 3.0.2
2023-06-19 14:58:35,002:INFO:Initializing setup()
2023-06-19 14:58:35,002:INFO:self.USI: 8144
2023-06-19 14:58:35,002:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'exp_id', 'gpu_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'fold_groups_param', 'y_test', 'pipeline', '_ml_usecase', 'memory', 'seed', 'y_train', 'logging_param', 'is_multiclass', 'fold_generator', 'html_param', 'data', 'fold_shuffle_param', 'X_test', 'target_param', 'y', 'X_train', 'log_plots_param', 'idx', 'USI', 'fix_imbalance'}
2023-06-19 14:58:35,002:INFO:Checking environment
2023-06-19 14:58:35,002:INFO:python_version: 3.9.7
2023-06-19 14:58:35,002:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 14:58:35,002:INFO:machine: AMD64
2023-06-19 14:58:35,003:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 14:58:35,003:INFO:Memory: svmem(total=17120436224, available=6585520128, percent=61.5, used=10534916096, free=6585520128)
2023-06-19 14:58:35,003:INFO:Physical Core: 4
2023-06-19 14:58:35,003:INFO:Logical Core: 4
2023-06-19 14:58:35,003:INFO:Checking libraries
2023-06-19 14:58:35,003:INFO:System:
2023-06-19 14:58:35,003:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 14:58:35,003:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 14:58:35,003:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 14:58:35,003:INFO:PyCaret required dependencies:
2023-06-19 14:58:35,005:INFO:                 pip: 21.2.3
2023-06-19 14:58:35,005:INFO:          setuptools: 57.4.0
2023-06-19 14:58:35,005:INFO:             pycaret: 3.0.2
2023-06-19 14:58:35,005:INFO:             IPython: 7.28.0
2023-06-19 14:58:35,005:INFO:          ipywidgets: 8.0.6
2023-06-19 14:58:35,005:INFO:                tqdm: 4.64.0
2023-06-19 14:58:35,005:INFO:               numpy: 1.22.4
2023-06-19 14:58:35,005:INFO:              pandas: 1.3.5
2023-06-19 14:58:35,005:INFO:              jinja2: 3.1.2
2023-06-19 14:58:35,005:INFO:               scipy: 1.7.1
2023-06-19 14:58:35,005:INFO:              joblib: 1.2.0
2023-06-19 14:58:35,005:INFO:             sklearn: 1.1.0
2023-06-19 14:58:35,005:INFO:                pyod: 1.0.9
2023-06-19 14:58:35,005:INFO:            imblearn: 0.9.1
2023-06-19 14:58:35,005:INFO:   category_encoders: 2.6.1
2023-06-19 14:58:35,005:INFO:            lightgbm: 3.3.5
2023-06-19 14:58:35,005:INFO:               numba: 0.57.0
2023-06-19 14:58:35,005:INFO:            requests: 2.31.0
2023-06-19 14:58:35,006:INFO:          matplotlib: 3.4.3
2023-06-19 14:58:35,006:INFO:          scikitplot: 0.3.7
2023-06-19 14:58:35,006:INFO:         yellowbrick: 1.5
2023-06-19 14:58:35,006:INFO:              plotly: 5.8.0
2023-06-19 14:58:35,006:INFO:             kaleido: 0.2.1
2023-06-19 14:58:35,006:INFO:         statsmodels: 0.14.0
2023-06-19 14:58:35,006:INFO:              sktime: 0.17.0
2023-06-19 14:58:35,006:INFO:               tbats: 1.1.3
2023-06-19 14:58:35,006:INFO:            pmdarima: 2.0.3
2023-06-19 14:58:35,006:INFO:              psutil: 5.9.0
2023-06-19 14:58:35,006:INFO:PyCaret optional dependencies:
2023-06-19 14:58:35,026:INFO:                shap: Not installed
2023-06-19 14:58:35,027:INFO:           interpret: Not installed
2023-06-19 14:58:35,027:INFO:                umap: Not installed
2023-06-19 14:58:35,027:INFO:    pandas_profiling: Not installed
2023-06-19 14:58:35,027:INFO:  explainerdashboard: Not installed
2023-06-19 14:58:35,027:INFO:             autoviz: Not installed
2023-06-19 14:58:35,027:INFO:           fairlearn: Not installed
2023-06-19 14:58:35,027:INFO:             xgboost: Not installed
2023-06-19 14:58:35,027:INFO:            catboost: Not installed
2023-06-19 14:58:35,027:INFO:              kmodes: Not installed
2023-06-19 14:58:35,027:INFO:             mlxtend: Not installed
2023-06-19 14:58:35,027:INFO:       statsforecast: Not installed
2023-06-19 14:58:35,027:INFO:        tune_sklearn: Not installed
2023-06-19 14:58:35,027:INFO:                 ray: Not installed
2023-06-19 14:58:35,027:INFO:            hyperopt: Not installed
2023-06-19 14:58:35,027:INFO:              optuna: Not installed
2023-06-19 14:58:35,027:INFO:               skopt: Not installed
2023-06-19 14:58:35,027:INFO:              mlflow: Not installed
2023-06-19 14:58:35,027:INFO:              gradio: Not installed
2023-06-19 14:58:35,028:INFO:             fastapi: Not installed
2023-06-19 14:58:35,028:INFO:             uvicorn: Not installed
2023-06-19 14:58:35,028:INFO:              m2cgen: Not installed
2023-06-19 14:58:35,028:INFO:           evidently: Not installed
2023-06-19 14:58:35,028:INFO:               fugue: Not installed
2023-06-19 14:58:35,028:INFO:           streamlit: Not installed
2023-06-19 14:58:35,028:INFO:             prophet: Not installed
2023-06-19 14:58:35,028:INFO:None
2023-06-19 14:58:35,028:INFO:Set up data.
2023-06-19 14:58:35,107:INFO:Set up train/test split.
2023-06-19 14:58:35,134:INFO:Set up index.
2023-06-19 14:58:35,135:INFO:Set up folding strategy.
2023-06-19 14:58:35,136:INFO:Assigning column types.
2023-06-19 14:58:35,148:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 14:58:35,200:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:58:35,206:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:58:35,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,350:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 14:58:35,351:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:58:35,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,384:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 14:58:35,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:58:35,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,531:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 14:58:35,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,579:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 14:58:35,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:35,762:INFO:Preparing preprocessing pipeline...
2023-06-19 14:58:35,766:INFO:Set up simple imputation.
2023-06-19 14:58:35,782:INFO:Set up encoding of ordinal features.
2023-06-19 14:58:35,792:INFO:Set up encoding of categorical features.
2023-06-19 14:58:35,792:INFO:Set up imbalanced handling.
2023-06-19 14:58:35,794:INFO:Set up column name cleaning.
2023-06-19 14:58:36,270:INFO:Finished creating preprocessing pipeline.
2023-06-19 14:58:36,341:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 14:58:36,341:INFO:Creating final display dataframe.
2023-06-19 14:58:37,374:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              8144
2023-06-19 14:58:37,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:37,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:37,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:37,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 14:58:37,601:INFO:setup() successfully completed in 3.53s...............
2023-06-19 15:00:26,383:INFO:PyCaret ClassificationExperiment
2023-06-19 15:00:26,383:INFO:Logging name: clf-default-name
2023-06-19 15:00:26,383:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:00:26,383:INFO:version 3.0.2
2023-06-19 15:00:26,383:INFO:Initializing setup()
2023-06-19 15:00:26,384:INFO:self.USI: d71d
2023-06-19 15:00:26,384:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'exp_id', 'gpu_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'fold_groups_param', 'y_test', 'pipeline', '_ml_usecase', 'memory', 'seed', 'y_train', 'logging_param', 'is_multiclass', 'fold_generator', 'html_param', 'data', 'fold_shuffle_param', 'X_test', 'target_param', 'y', 'X_train', 'log_plots_param', 'idx', 'USI', 'fix_imbalance'}
2023-06-19 15:00:26,384:INFO:Checking environment
2023-06-19 15:00:26,384:INFO:python_version: 3.9.7
2023-06-19 15:00:26,384:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:00:26,384:INFO:machine: AMD64
2023-06-19 15:00:26,384:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:00:26,384:INFO:Memory: svmem(total=17120436224, available=6614896640, percent=61.4, used=10505539584, free=6614896640)
2023-06-19 15:00:26,384:INFO:Physical Core: 4
2023-06-19 15:00:26,384:INFO:Logical Core: 4
2023-06-19 15:00:26,384:INFO:Checking libraries
2023-06-19 15:00:26,384:INFO:System:
2023-06-19 15:00:26,384:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:00:26,384:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:00:26,384:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:00:26,384:INFO:PyCaret required dependencies:
2023-06-19 15:00:26,384:INFO:                 pip: 21.2.3
2023-06-19 15:00:26,385:INFO:          setuptools: 57.4.0
2023-06-19 15:00:26,385:INFO:             pycaret: 3.0.2
2023-06-19 15:00:26,385:INFO:             IPython: 7.28.0
2023-06-19 15:00:26,385:INFO:          ipywidgets: 8.0.6
2023-06-19 15:00:26,385:INFO:                tqdm: 4.64.0
2023-06-19 15:00:26,385:INFO:               numpy: 1.22.4
2023-06-19 15:00:26,385:INFO:              pandas: 1.3.5
2023-06-19 15:00:26,385:INFO:              jinja2: 3.1.2
2023-06-19 15:00:26,385:INFO:               scipy: 1.7.1
2023-06-19 15:00:26,385:INFO:              joblib: 1.2.0
2023-06-19 15:00:26,385:INFO:             sklearn: 1.1.0
2023-06-19 15:00:26,385:INFO:                pyod: 1.0.9
2023-06-19 15:00:26,385:INFO:            imblearn: 0.9.1
2023-06-19 15:00:26,385:INFO:   category_encoders: 2.6.1
2023-06-19 15:00:26,385:INFO:            lightgbm: 3.3.5
2023-06-19 15:00:26,385:INFO:               numba: 0.57.0
2023-06-19 15:00:26,385:INFO:            requests: 2.31.0
2023-06-19 15:00:26,386:INFO:          matplotlib: 3.4.3
2023-06-19 15:00:26,386:INFO:          scikitplot: 0.3.7
2023-06-19 15:00:26,386:INFO:         yellowbrick: 1.5
2023-06-19 15:00:26,386:INFO:              plotly: 5.8.0
2023-06-19 15:00:26,386:INFO:             kaleido: 0.2.1
2023-06-19 15:00:26,386:INFO:         statsmodels: 0.14.0
2023-06-19 15:00:26,386:INFO:              sktime: 0.17.0
2023-06-19 15:00:26,386:INFO:               tbats: 1.1.3
2023-06-19 15:00:26,386:INFO:            pmdarima: 2.0.3
2023-06-19 15:00:26,386:INFO:              psutil: 5.9.0
2023-06-19 15:00:26,386:INFO:PyCaret optional dependencies:
2023-06-19 15:00:26,386:INFO:                shap: Not installed
2023-06-19 15:00:26,386:INFO:           interpret: Not installed
2023-06-19 15:00:26,386:INFO:                umap: Not installed
2023-06-19 15:00:26,386:INFO:    pandas_profiling: Not installed
2023-06-19 15:00:26,386:INFO:  explainerdashboard: Not installed
2023-06-19 15:00:26,386:INFO:             autoviz: Not installed
2023-06-19 15:00:26,386:INFO:           fairlearn: Not installed
2023-06-19 15:00:26,386:INFO:             xgboost: Not installed
2023-06-19 15:00:26,386:INFO:            catboost: Not installed
2023-06-19 15:00:26,387:INFO:              kmodes: Not installed
2023-06-19 15:00:26,387:INFO:             mlxtend: Not installed
2023-06-19 15:00:26,387:INFO:       statsforecast: Not installed
2023-06-19 15:00:26,387:INFO:        tune_sklearn: Not installed
2023-06-19 15:00:26,387:INFO:                 ray: Not installed
2023-06-19 15:00:26,387:INFO:            hyperopt: Not installed
2023-06-19 15:00:26,387:INFO:              optuna: Not installed
2023-06-19 15:00:26,387:INFO:               skopt: Not installed
2023-06-19 15:00:26,387:INFO:              mlflow: Not installed
2023-06-19 15:00:26,387:INFO:              gradio: Not installed
2023-06-19 15:00:26,387:INFO:             fastapi: Not installed
2023-06-19 15:00:26,387:INFO:             uvicorn: Not installed
2023-06-19 15:00:26,387:INFO:              m2cgen: Not installed
2023-06-19 15:00:26,387:INFO:           evidently: Not installed
2023-06-19 15:00:26,387:INFO:               fugue: Not installed
2023-06-19 15:00:26,387:INFO:           streamlit: Not installed
2023-06-19 15:00:26,387:INFO:             prophet: Not installed
2023-06-19 15:00:26,387:INFO:None
2023-06-19 15:00:26,387:INFO:Set up data.
2023-06-19 15:00:26,442:INFO:Set up train/test split.
2023-06-19 15:00:26,466:INFO:Set up index.
2023-06-19 15:00:26,467:INFO:Set up folding strategy.
2023-06-19 15:00:26,467:INFO:Assigning column types.
2023-06-19 15:00:26,479:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:00:26,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:00:26,533:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:00:26,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:00:26,650:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:00:26,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,687:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:00:26,740:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:00:26,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,829:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:00:26,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,863:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:00:26,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:26,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:27,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:27,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:27,035:INFO:Preparing preprocessing pipeline...
2023-06-19 15:00:27,037:INFO:Set up simple imputation.
2023-06-19 15:00:27,050:INFO:Set up encoding of ordinal features.
2023-06-19 15:00:27,060:INFO:Set up encoding of categorical features.
2023-06-19 15:00:27,060:INFO:Set up imbalanced handling.
2023-06-19 15:00:27,063:INFO:Set up column name cleaning.
2023-06-19 15:00:27,402:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:00:27,457:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:00:27,457:INFO:Creating final display dataframe.
2023-06-19 15:00:27,655:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                 5
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              d71d
2023-06-19 15:00:27,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:27,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:27,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:27,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:00:27,872:INFO:setup() successfully completed in 2.39s...............
2023-06-19 15:01:03,885:INFO:Initializing create_model()
2023-06-19 15:01:03,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020481C94310>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=25, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 15:01:03,886:INFO:Checking exceptions
2023-06-19 15:01:03,924:INFO:Importing libraries
2023-06-19 15:01:03,925:INFO:Copying training dataset
2023-06-19 15:01:03,942:INFO:Defining folds
2023-06-19 15:01:03,942:INFO:Declaring metric variables
2023-06-19 15:01:03,946:INFO:Importing untrained model
2023-06-19 15:01:03,946:INFO:Declaring custom model
2023-06-19 15:01:03,952:INFO:Random Forest Classifier Imported successfully
2023-06-19 15:01:03,966:INFO:Starting cross validation
2023-06-19 15:01:03,968:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 15:02:31,655:INFO:Calculating mean and std
2023-06-19 15:02:31,660:INFO:Creating metrics dataframe
2023-06-19 15:02:31,668:INFO:Finalizing model
2023-06-19 15:02:57,370:INFO:Uploading results into container
2023-06-19 15:02:57,371:INFO:Uploading model into container now
2023-06-19 15:02:57,420:INFO:_master_model_container: 1
2023-06-19 15:02:57,420:INFO:_display_container: 2
2023-06-19 15:02:57,420:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=25, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 15:02:57,421:INFO:create_model() successfully completed......................................
2023-06-19 15:02:57,604:INFO:Initializing evaluate_model()
2023-06-19 15:02:57,604:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020481C94310>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=25, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 15:02:57,639:INFO:Initializing plot_model()
2023-06-19 15:02:57,640:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=25, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020481C94310>, system=True)
2023-06-19 15:02:57,640:INFO:Checking exceptions
2023-06-19 15:02:57,661:INFO:Preloading libraries
2023-06-19 15:02:57,667:INFO:Copying training dataset
2023-06-19 15:02:57,667:INFO:Plot type: pipeline
2023-06-19 15:02:57,992:INFO:Visual Rendered Successfully
2023-06-19 15:02:58,061:INFO:plot_model() successfully completed......................................
2023-06-19 15:03:09,094:INFO:Initializing plot_model()
2023-06-19 15:03:09,094:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=25, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020481C94310>, system=True)
2023-06-19 15:03:09,094:INFO:Checking exceptions
2023-06-19 15:03:09,156:INFO:Preloading libraries
2023-06-19 15:03:09,159:INFO:Copying training dataset
2023-06-19 15:03:09,159:INFO:Plot type: auc
2023-06-19 15:03:09,357:INFO:Fitting Model
2023-06-19 15:03:09,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-19 15:03:09,383:INFO:Scoring test/hold-out set
2023-06-19 15:03:09,648:INFO:Visual Rendered Successfully
2023-06-19 15:03:09,731:INFO:plot_model() successfully completed......................................
2023-06-19 15:03:20,023:INFO:Initializing plot_model()
2023-06-19 15:03:20,023:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=25, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020481C94310>, system=True)
2023-06-19 15:03:20,023:INFO:Checking exceptions
2023-06-19 15:03:20,041:INFO:Preloading libraries
2023-06-19 15:03:20,043:INFO:Copying training dataset
2023-06-19 15:03:20,043:INFO:Plot type: feature_all
2023-06-19 15:03:20,105:WARNING:No coef_ found. Trying feature_importances_
2023-06-19 15:03:20,511:INFO:Visual Rendered Successfully
2023-06-19 15:03:20,584:INFO:plot_model() successfully completed......................................
2023-06-19 15:18:28,369:INFO:PyCaret ClassificationExperiment
2023-06-19 15:18:28,370:INFO:Logging name: clf-default-name
2023-06-19 15:18:28,370:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:18:28,370:INFO:version 3.0.2
2023-06-19 15:18:28,370:INFO:Initializing setup()
2023-06-19 15:18:28,370:INFO:self.USI: ec1e
2023-06-19 15:18:28,370:INFO:self._variable_keys: {'exp_name_log', 'n_jobs_param', 'exp_id', 'gpu_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'fold_groups_param', 'y_test', 'pipeline', '_ml_usecase', 'memory', 'seed', 'y_train', 'logging_param', 'is_multiclass', 'fold_generator', 'html_param', 'data', 'fold_shuffle_param', 'X_test', 'target_param', 'y', 'X_train', 'log_plots_param', 'idx', 'USI', 'fix_imbalance'}
2023-06-19 15:18:28,370:INFO:Checking environment
2023-06-19 15:18:28,370:INFO:python_version: 3.9.7
2023-06-19 15:18:28,370:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:18:28,370:INFO:machine: AMD64
2023-06-19 15:18:28,370:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:18:28,370:INFO:Memory: svmem(total=17120436224, available=5974732800, percent=65.1, used=11145703424, free=5974732800)
2023-06-19 15:18:28,370:INFO:Physical Core: 4
2023-06-19 15:18:28,370:INFO:Logical Core: 4
2023-06-19 15:18:28,370:INFO:Checking libraries
2023-06-19 15:18:28,370:INFO:System:
2023-06-19 15:18:28,371:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:18:28,371:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:18:28,371:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:18:28,371:INFO:PyCaret required dependencies:
2023-06-19 15:18:28,371:INFO:                 pip: 21.2.3
2023-06-19 15:18:28,371:INFO:          setuptools: 57.4.0
2023-06-19 15:18:28,371:INFO:             pycaret: 3.0.2
2023-06-19 15:18:28,371:INFO:             IPython: 7.28.0
2023-06-19 15:18:28,371:INFO:          ipywidgets: 8.0.6
2023-06-19 15:18:28,371:INFO:                tqdm: 4.64.0
2023-06-19 15:18:28,371:INFO:               numpy: 1.22.4
2023-06-19 15:18:28,371:INFO:              pandas: 1.3.5
2023-06-19 15:18:28,371:INFO:              jinja2: 3.1.2
2023-06-19 15:18:28,371:INFO:               scipy: 1.7.1
2023-06-19 15:18:28,371:INFO:              joblib: 1.2.0
2023-06-19 15:18:28,371:INFO:             sklearn: 1.1.0
2023-06-19 15:18:28,371:INFO:                pyod: 1.0.9
2023-06-19 15:18:28,371:INFO:            imblearn: 0.9.1
2023-06-19 15:18:28,371:INFO:   category_encoders: 2.6.1
2023-06-19 15:18:28,371:INFO:            lightgbm: 3.3.5
2023-06-19 15:18:28,372:INFO:               numba: 0.57.0
2023-06-19 15:18:28,372:INFO:            requests: 2.31.0
2023-06-19 15:18:28,372:INFO:          matplotlib: 3.4.3
2023-06-19 15:18:28,372:INFO:          scikitplot: 0.3.7
2023-06-19 15:18:28,372:INFO:         yellowbrick: 1.5
2023-06-19 15:18:28,372:INFO:              plotly: 5.8.0
2023-06-19 15:18:28,372:INFO:             kaleido: 0.2.1
2023-06-19 15:18:28,372:INFO:         statsmodels: 0.14.0
2023-06-19 15:18:28,372:INFO:              sktime: 0.17.0
2023-06-19 15:18:28,372:INFO:               tbats: 1.1.3
2023-06-19 15:18:28,372:INFO:            pmdarima: 2.0.3
2023-06-19 15:18:28,372:INFO:              psutil: 5.9.0
2023-06-19 15:18:28,372:INFO:PyCaret optional dependencies:
2023-06-19 15:18:28,372:INFO:                shap: Not installed
2023-06-19 15:18:28,372:INFO:           interpret: Not installed
2023-06-19 15:18:28,372:INFO:                umap: Not installed
2023-06-19 15:18:28,372:INFO:    pandas_profiling: Not installed
2023-06-19 15:18:28,372:INFO:  explainerdashboard: Not installed
2023-06-19 15:18:28,372:INFO:             autoviz: Not installed
2023-06-19 15:18:28,372:INFO:           fairlearn: Not installed
2023-06-19 15:18:28,372:INFO:             xgboost: Not installed
2023-06-19 15:18:28,373:INFO:            catboost: Not installed
2023-06-19 15:18:28,373:INFO:              kmodes: Not installed
2023-06-19 15:18:28,373:INFO:             mlxtend: Not installed
2023-06-19 15:18:28,373:INFO:       statsforecast: Not installed
2023-06-19 15:18:28,373:INFO:        tune_sklearn: Not installed
2023-06-19 15:18:28,373:INFO:                 ray: Not installed
2023-06-19 15:18:28,373:INFO:            hyperopt: Not installed
2023-06-19 15:18:28,373:INFO:              optuna: Not installed
2023-06-19 15:18:28,373:INFO:               skopt: Not installed
2023-06-19 15:18:28,373:INFO:              mlflow: Not installed
2023-06-19 15:18:28,373:INFO:              gradio: Not installed
2023-06-19 15:18:28,373:INFO:             fastapi: Not installed
2023-06-19 15:18:28,373:INFO:             uvicorn: Not installed
2023-06-19 15:18:28,373:INFO:              m2cgen: Not installed
2023-06-19 15:18:28,373:INFO:           evidently: Not installed
2023-06-19 15:18:28,373:INFO:               fugue: Not installed
2023-06-19 15:18:28,373:INFO:           streamlit: Not installed
2023-06-19 15:18:28,373:INFO:             prophet: Not installed
2023-06-19 15:18:28,373:INFO:None
2023-06-19 15:18:28,373:INFO:Set up data.
2023-06-19 15:18:28,430:INFO:Set up train/test split.
2023-06-19 15:18:28,455:INFO:Set up index.
2023-06-19 15:18:28,456:INFO:Set up folding strategy.
2023-06-19 15:18:28,456:INFO:Assigning column types.
2023-06-19 15:18:28,468:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:18:28,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:18:28,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:18:28,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:28,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:28,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:18:28,623:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:18:28,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:28,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:28,671:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:18:28,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:18:28,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:28,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:28,900:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:18:28,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:28,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:28,936:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:18:29,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:29,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:29,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:29,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:29,107:INFO:Preparing preprocessing pipeline...
2023-06-19 15:18:29,109:INFO:Set up simple imputation.
2023-06-19 15:18:29,121:INFO:Set up encoding of ordinal features.
2023-06-19 15:18:29,132:INFO:Set up encoding of categorical features.
2023-06-19 15:18:29,134:INFO:Set up column name cleaning.
2023-06-19 15:18:30,047:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:18:30,093:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:18:30,093:INFO:Creating final display dataframe.
2023-06-19 15:18:30,883:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (41185, 55)
5   Transformed train set shape       (28829, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              ec1e
2023-06-19 15:18:31,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:31,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:31,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:31,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:18:31,298:INFO:setup() successfully completed in 3.8s...............
2023-06-19 15:18:53,674:INFO:Initializing create_model()
2023-06-19 15:18:53,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 15:18:53,675:INFO:Checking exceptions
2023-06-19 15:18:53,710:INFO:Importing libraries
2023-06-19 15:18:53,710:INFO:Copying training dataset
2023-06-19 15:18:53,728:INFO:Defining folds
2023-06-19 15:18:53,729:INFO:Declaring metric variables
2023-06-19 15:18:53,733:INFO:Importing untrained model
2023-06-19 15:18:53,734:INFO:Declaring custom model
2023-06-19 15:18:53,739:INFO:Random Forest Classifier Imported successfully
2023-06-19 15:18:53,751:INFO:Starting cross validation
2023-06-19 15:18:53,753:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 15:20:05,009:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-19 15:20:29,464:INFO:Calculating mean and std
2023-06-19 15:20:29,465:INFO:Creating metrics dataframe
2023-06-19 15:20:29,478:INFO:Finalizing model
2023-06-19 15:21:02,997:INFO:Uploading results into container
2023-06-19 15:21:02,999:INFO:Uploading model into container now
2023-06-19 15:21:03,015:INFO:_master_model_container: 1
2023-06-19 15:21:03,015:INFO:_display_container: 2
2023-06-19 15:21:03,015:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 15:21:03,015:INFO:create_model() successfully completed......................................
2023-06-19 15:21:03,117:INFO:Initializing evaluate_model()
2023-06-19 15:21:03,117:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 15:21:03,141:INFO:Initializing plot_model()
2023-06-19 15:21:03,142:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, system=True)
2023-06-19 15:21:03,142:INFO:Checking exceptions
2023-06-19 15:21:03,169:INFO:Preloading libraries
2023-06-19 15:21:03,175:INFO:Copying training dataset
2023-06-19 15:21:03,175:INFO:Plot type: pipeline
2023-06-19 15:21:03,397:INFO:Visual Rendered Successfully
2023-06-19 15:21:03,467:INFO:plot_model() successfully completed......................................
2023-06-19 15:25:33,592:INFO:Initializing plot_model()
2023-06-19 15:25:33,593:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, system=True)
2023-06-19 15:25:33,593:INFO:Checking exceptions
2023-06-19 15:25:33,613:INFO:Preloading libraries
2023-06-19 15:25:33,617:INFO:Copying training dataset
2023-06-19 15:25:33,617:INFO:Plot type: parameter
2023-06-19 15:25:33,621:INFO:Visual Rendered Successfully
2023-06-19 15:25:33,690:INFO:plot_model() successfully completed......................................
2023-06-19 15:25:37,942:INFO:Initializing plot_model()
2023-06-19 15:25:37,943:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, system=True)
2023-06-19 15:25:37,943:INFO:Checking exceptions
2023-06-19 15:25:37,963:INFO:Preloading libraries
2023-06-19 15:25:37,966:INFO:Copying training dataset
2023-06-19 15:25:37,967:INFO:Plot type: auc
2023-06-19 15:25:38,147:INFO:Fitting Model
2023-06-19 15:25:38,148:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-19 15:25:38,149:INFO:Scoring test/hold-out set
2023-06-19 15:25:38,441:INFO:Visual Rendered Successfully
2023-06-19 15:25:38,534:INFO:plot_model() successfully completed......................................
2023-06-19 15:25:45,664:INFO:Initializing plot_model()
2023-06-19 15:25:45,664:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, system=True)
2023-06-19 15:25:45,664:INFO:Checking exceptions
2023-06-19 15:25:45,685:INFO:Preloading libraries
2023-06-19 15:25:45,689:INFO:Copying training dataset
2023-06-19 15:25:45,689:INFO:Plot type: confusion_matrix
2023-06-19 15:25:45,862:INFO:Fitting Model
2023-06-19 15:25:45,863:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-19 15:25:45,864:INFO:Scoring test/hold-out set
2023-06-19 15:25:46,128:INFO:Visual Rendered Successfully
2023-06-19 15:25:46,211:INFO:plot_model() successfully completed......................................
2023-06-19 15:26:00,567:INFO:Initializing plot_model()
2023-06-19 15:26:00,568:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, system=True)
2023-06-19 15:26:00,568:INFO:Checking exceptions
2023-06-19 15:26:00,608:INFO:Preloading libraries
2023-06-19 15:26:00,612:INFO:Copying training dataset
2023-06-19 15:26:00,612:INFO:Plot type: feature_all
2023-06-19 15:26:00,682:WARNING:No coef_ found. Trying feature_importances_
2023-06-19 15:26:01,578:INFO:Visual Rendered Successfully
2023-06-19 15:26:01,645:INFO:plot_model() successfully completed......................................
2023-06-19 15:26:51,920:INFO:Initializing plot_model()
2023-06-19 15:26:51,920:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, system=True)
2023-06-19 15:26:51,921:INFO:Checking exceptions
2023-06-19 15:26:51,941:INFO:Preloading libraries
2023-06-19 15:26:51,944:INFO:Copying training dataset
2023-06-19 15:26:51,945:INFO:Plot type: feature
2023-06-19 15:26:51,945:WARNING:No coef_ found. Trying feature_importances_
2023-06-19 15:26:52,189:INFO:Visual Rendered Successfully
2023-06-19 15:26:52,259:INFO:plot_model() successfully completed......................................
2023-06-19 15:27:03,247:INFO:Initializing plot_model()
2023-06-19 15:27:03,248:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020488745640>, system=True)
2023-06-19 15:27:03,248:INFO:Checking exceptions
2023-06-19 15:27:03,270:INFO:Preloading libraries
2023-06-19 15:27:03,274:INFO:Copying training dataset
2023-06-19 15:27:03,274:INFO:Plot type: feature_all
2023-06-19 15:27:03,329:WARNING:No coef_ found. Trying feature_importances_
2023-06-19 15:27:04,156:INFO:Visual Rendered Successfully
2023-06-19 15:27:04,223:INFO:plot_model() successfully completed......................................
2023-06-19 15:28:38,830:INFO:PyCaret ClassificationExperiment
2023-06-19 15:28:38,830:INFO:Logging name: clf-default-name
2023-06-19 15:28:38,830:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:28:38,830:INFO:version 3.0.2
2023-06-19 15:28:38,831:INFO:Initializing setup()
2023-06-19 15:28:38,831:INFO:self.USI: 52a1
2023-06-19 15:28:38,831:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:28:38,831:INFO:Checking environment
2023-06-19 15:28:38,831:INFO:python_version: 3.9.7
2023-06-19 15:28:38,831:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:28:38,831:INFO:machine: AMD64
2023-06-19 15:28:38,831:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:28:38,832:INFO:Memory: svmem(total=17120436224, available=6474194944, percent=62.2, used=10646241280, free=6474194944)
2023-06-19 15:28:38,832:INFO:Physical Core: 4
2023-06-19 15:28:38,832:INFO:Logical Core: 4
2023-06-19 15:28:38,832:INFO:Checking libraries
2023-06-19 15:28:38,832:INFO:System:
2023-06-19 15:28:38,832:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:28:38,832:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:28:38,832:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:28:38,832:INFO:PyCaret required dependencies:
2023-06-19 15:28:38,833:INFO:                 pip: 21.2.3
2023-06-19 15:28:38,833:INFO:          setuptools: 57.4.0
2023-06-19 15:28:38,833:INFO:             pycaret: 3.0.2
2023-06-19 15:28:38,833:INFO:             IPython: 7.28.0
2023-06-19 15:28:38,833:INFO:          ipywidgets: 8.0.6
2023-06-19 15:28:38,833:INFO:                tqdm: 4.64.0
2023-06-19 15:28:38,833:INFO:               numpy: 1.22.4
2023-06-19 15:28:38,833:INFO:              pandas: 1.3.5
2023-06-19 15:28:38,833:INFO:              jinja2: 3.1.2
2023-06-19 15:28:38,833:INFO:               scipy: 1.7.1
2023-06-19 15:28:38,833:INFO:              joblib: 1.2.0
2023-06-19 15:28:38,833:INFO:             sklearn: 1.1.0
2023-06-19 15:28:38,833:INFO:                pyod: 1.0.9
2023-06-19 15:28:38,833:INFO:            imblearn: 0.9.1
2023-06-19 15:28:38,833:INFO:   category_encoders: 2.6.1
2023-06-19 15:28:38,833:INFO:            lightgbm: 3.3.5
2023-06-19 15:28:38,833:INFO:               numba: 0.57.0
2023-06-19 15:28:38,834:INFO:            requests: 2.31.0
2023-06-19 15:28:38,834:INFO:          matplotlib: 3.4.3
2023-06-19 15:28:38,834:INFO:          scikitplot: 0.3.7
2023-06-19 15:28:38,834:INFO:         yellowbrick: 1.5
2023-06-19 15:28:38,834:INFO:              plotly: 5.8.0
2023-06-19 15:28:38,834:INFO:             kaleido: 0.2.1
2023-06-19 15:28:38,834:INFO:         statsmodels: 0.14.0
2023-06-19 15:28:38,834:INFO:              sktime: 0.17.0
2023-06-19 15:28:38,834:INFO:               tbats: 1.1.3
2023-06-19 15:28:38,834:INFO:            pmdarima: 2.0.3
2023-06-19 15:28:38,834:INFO:              psutil: 5.9.0
2023-06-19 15:28:38,834:INFO:PyCaret optional dependencies:
2023-06-19 15:28:38,834:INFO:                shap: Not installed
2023-06-19 15:28:38,834:INFO:           interpret: Not installed
2023-06-19 15:28:38,834:INFO:                umap: Not installed
2023-06-19 15:28:38,834:INFO:    pandas_profiling: Not installed
2023-06-19 15:28:38,834:INFO:  explainerdashboard: Not installed
2023-06-19 15:28:38,834:INFO:             autoviz: Not installed
2023-06-19 15:28:38,835:INFO:           fairlearn: Not installed
2023-06-19 15:28:38,835:INFO:             xgboost: Not installed
2023-06-19 15:28:38,835:INFO:            catboost: Not installed
2023-06-19 15:28:38,835:INFO:              kmodes: Not installed
2023-06-19 15:28:38,835:INFO:             mlxtend: Not installed
2023-06-19 15:28:38,835:INFO:       statsforecast: Not installed
2023-06-19 15:28:38,835:INFO:        tune_sklearn: Not installed
2023-06-19 15:28:38,835:INFO:                 ray: Not installed
2023-06-19 15:28:38,835:INFO:            hyperopt: Not installed
2023-06-19 15:28:38,835:INFO:              optuna: Not installed
2023-06-19 15:28:38,835:INFO:               skopt: Not installed
2023-06-19 15:28:38,835:INFO:              mlflow: Not installed
2023-06-19 15:28:38,835:INFO:              gradio: Not installed
2023-06-19 15:28:38,835:INFO:             fastapi: Not installed
2023-06-19 15:28:38,835:INFO:             uvicorn: Not installed
2023-06-19 15:28:38,835:INFO:              m2cgen: Not installed
2023-06-19 15:28:38,835:INFO:           evidently: Not installed
2023-06-19 15:28:38,835:INFO:               fugue: Not installed
2023-06-19 15:28:38,835:INFO:           streamlit: Not installed
2023-06-19 15:28:38,835:INFO:             prophet: Not installed
2023-06-19 15:28:38,835:INFO:None
2023-06-19 15:28:38,836:INFO:Set up data.
2023-06-19 15:28:38,895:INFO:Set up train/test split.
2023-06-19 15:28:38,920:INFO:Set up index.
2023-06-19 15:28:38,921:INFO:Set up folding strategy.
2023-06-19 15:28:38,921:INFO:Assigning column types.
2023-06-19 15:28:38,935:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:28:38,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:28:38,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:28:39,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:28:39,079:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:28:39,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,117:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:28:39,209:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:28:39,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,291:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:28:39,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,323:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:28:39,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,493:INFO:Preparing preprocessing pipeline...
2023-06-19 15:28:39,495:INFO:Set up simple imputation.
2023-06-19 15:28:39,507:INFO:Set up encoding of ordinal features.
2023-06-19 15:28:39,519:INFO:Set up encoding of categorical features.
2023-06-19 15:28:39,519:INFO:Set up removing multicollinearity.
2023-06-19 15:28:39,519:INFO:Set up imbalanced handling.
2023-06-19 15:28:39,520:INFO:Set up feature selection.
2023-06-19 15:28:39,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:39,611:INFO:Set up column name cleaning.
2023-06-19 15:28:40,914:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:28:40,966:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002C2AB5485E0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:28:40,966:INFO:Creating final display dataframe.
2023-06-19 15:28:42,141:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.8
18                Fix imbalance              True
19         Fix imbalance method             SMOTE
20            Feature selection              True
21     Feature selection method        univariate
22  Feature selection estimator          lightgbm
23  Number of features selected                15
24               Fold Generator   StratifiedKFold
25                  Fold Number                 5
26                     CPU Jobs                -1
27                      Use GPU             False
28               Log Experiment             False
29              Experiment Name  clf-default-name
30                          USI              52a1
2023-06-19 15:28:42,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:42,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:42,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:42,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:28:42,353:INFO:setup() successfully completed in 4.4s...............
2023-06-19 15:29:24,517:INFO:Initializing create_model()
2023-06-19 15:29:24,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B72E9970>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 15:29:24,518:INFO:Checking exceptions
2023-06-19 15:29:24,557:INFO:Importing libraries
2023-06-19 15:29:24,557:INFO:Copying training dataset
2023-06-19 15:29:24,575:INFO:Defining folds
2023-06-19 15:29:24,576:INFO:Declaring metric variables
2023-06-19 15:29:24,581:INFO:Importing untrained model
2023-06-19 15:29:24,606:INFO:Logistic Regression Imported successfully
2023-06-19 15:29:24,616:INFO:Starting cross validation
2023-06-19 15:29:24,619:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 15:29:36,167:INFO:Calculating mean and std
2023-06-19 15:29:36,169:INFO:Creating metrics dataframe
2023-06-19 15:29:36,178:INFO:Finalizing model
2023-06-19 15:29:38,049:INFO:Uploading results into container
2023-06-19 15:29:38,051:INFO:Uploading model into container now
2023-06-19 15:29:38,070:INFO:_master_model_container: 1
2023-06-19 15:29:38,070:INFO:_display_container: 2
2023-06-19 15:29:38,071:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 15:29:38,071:INFO:create_model() successfully completed......................................
2023-06-19 15:29:41,955:INFO:Initializing evaluate_model()
2023-06-19 15:29:41,956:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B72E9970>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 15:29:41,984:INFO:Initializing plot_model()
2023-06-19 15:29:41,984:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B72E9970>, system=True)
2023-06-19 15:29:41,984:INFO:Checking exceptions
2023-06-19 15:29:41,994:INFO:Preloading libraries
2023-06-19 15:29:41,995:INFO:Copying training dataset
2023-06-19 15:29:41,995:INFO:Plot type: pipeline
2023-06-19 15:29:42,171:INFO:Visual Rendered Successfully
2023-06-19 15:29:42,247:INFO:plot_model() successfully completed......................................
2023-06-19 15:29:43,811:INFO:Initializing plot_model()
2023-06-19 15:29:43,811:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B72E9970>, system=True)
2023-06-19 15:29:43,812:INFO:Checking exceptions
2023-06-19 15:29:43,818:INFO:Preloading libraries
2023-06-19 15:29:43,818:INFO:Copying training dataset
2023-06-19 15:29:43,819:INFO:Plot type: parameter
2023-06-19 15:29:43,822:INFO:Visual Rendered Successfully
2023-06-19 15:29:43,890:INFO:plot_model() successfully completed......................................
2023-06-19 15:29:45,159:INFO:Initializing plot_model()
2023-06-19 15:29:45,159:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B72E9970>, system=True)
2023-06-19 15:29:45,159:INFO:Checking exceptions
2023-06-19 15:29:45,166:INFO:Preloading libraries
2023-06-19 15:29:45,166:INFO:Copying training dataset
2023-06-19 15:29:45,167:INFO:Plot type: auc
2023-06-19 15:29:45,325:INFO:Fitting Model
2023-06-19 15:29:45,326:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 15:29:45,327:INFO:Scoring test/hold-out set
2023-06-19 15:29:45,518:INFO:Visual Rendered Successfully
2023-06-19 15:29:45,600:INFO:plot_model() successfully completed......................................
2023-06-19 15:29:49,455:INFO:Initializing plot_model()
2023-06-19 15:29:49,456:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B72E9970>, system=True)
2023-06-19 15:29:49,456:INFO:Checking exceptions
2023-06-19 15:29:49,463:INFO:Preloading libraries
2023-06-19 15:29:49,463:INFO:Copying training dataset
2023-06-19 15:29:49,463:INFO:Plot type: calibration
2023-06-19 15:29:49,482:INFO:Scoring test/hold-out set
2023-06-19 15:29:49,718:INFO:Visual Rendered Successfully
2023-06-19 15:29:49,786:INFO:plot_model() successfully completed......................................
2023-06-19 15:29:53,239:INFO:Initializing plot_model()
2023-06-19 15:29:53,240:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B72E9970>, system=True)
2023-06-19 15:29:53,240:INFO:Checking exceptions
2023-06-19 15:29:53,247:INFO:Preloading libraries
2023-06-19 15:29:53,247:INFO:Copying training dataset
2023-06-19 15:29:53,247:INFO:Plot type: feature
2023-06-19 15:29:53,473:INFO:Visual Rendered Successfully
2023-06-19 15:29:53,543:INFO:plot_model() successfully completed......................................
2023-06-19 15:29:57,072:INFO:Initializing plot_model()
2023-06-19 15:29:57,072:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B72E9970>, system=True)
2023-06-19 15:29:57,072:INFO:Checking exceptions
2023-06-19 15:29:57,079:INFO:Preloading libraries
2023-06-19 15:29:57,080:INFO:Copying training dataset
2023-06-19 15:29:57,080:INFO:Plot type: feature_all
2023-06-19 15:29:57,360:INFO:Visual Rendered Successfully
2023-06-19 15:29:57,442:INFO:plot_model() successfully completed......................................
2023-06-19 15:30:09,876:INFO:PyCaret ClassificationExperiment
2023-06-19 15:30:09,876:INFO:Logging name: clf-default-name
2023-06-19 15:30:09,876:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:30:09,876:INFO:version 3.0.2
2023-06-19 15:30:09,876:INFO:Initializing setup()
2023-06-19 15:30:09,876:INFO:self.USI: 1a56
2023-06-19 15:30:09,876:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:30:09,876:INFO:Checking environment
2023-06-19 15:30:09,876:INFO:python_version: 3.9.7
2023-06-19 15:30:09,876:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:30:09,876:INFO:machine: AMD64
2023-06-19 15:30:09,876:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:30:09,876:INFO:Memory: svmem(total=17120436224, available=5971345408, percent=65.1, used=11149090816, free=5971345408)
2023-06-19 15:30:09,876:INFO:Physical Core: 4
2023-06-19 15:30:09,877:INFO:Logical Core: 4
2023-06-19 15:30:09,877:INFO:Checking libraries
2023-06-19 15:30:09,877:INFO:System:
2023-06-19 15:30:09,877:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:30:09,877:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:30:09,877:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:30:09,877:INFO:PyCaret required dependencies:
2023-06-19 15:30:09,877:INFO:                 pip: 21.2.3
2023-06-19 15:30:09,877:INFO:          setuptools: 57.4.0
2023-06-19 15:30:09,877:INFO:             pycaret: 3.0.2
2023-06-19 15:30:09,877:INFO:             IPython: 7.28.0
2023-06-19 15:30:09,877:INFO:          ipywidgets: 8.0.6
2023-06-19 15:30:09,877:INFO:                tqdm: 4.64.0
2023-06-19 15:30:09,877:INFO:               numpy: 1.22.4
2023-06-19 15:30:09,877:INFO:              pandas: 1.3.5
2023-06-19 15:30:09,877:INFO:              jinja2: 3.1.2
2023-06-19 15:30:09,877:INFO:               scipy: 1.7.1
2023-06-19 15:30:09,877:INFO:              joblib: 1.2.0
2023-06-19 15:30:09,877:INFO:             sklearn: 1.1.0
2023-06-19 15:30:09,878:INFO:                pyod: 1.0.9
2023-06-19 15:30:09,878:INFO:            imblearn: 0.9.1
2023-06-19 15:30:09,878:INFO:   category_encoders: 2.6.1
2023-06-19 15:30:09,878:INFO:            lightgbm: 3.3.5
2023-06-19 15:30:09,878:INFO:               numba: 0.57.0
2023-06-19 15:30:09,878:INFO:            requests: 2.31.0
2023-06-19 15:30:09,878:INFO:          matplotlib: 3.4.3
2023-06-19 15:30:09,878:INFO:          scikitplot: 0.3.7
2023-06-19 15:30:09,878:INFO:         yellowbrick: 1.5
2023-06-19 15:30:09,878:INFO:              plotly: 5.8.0
2023-06-19 15:30:09,878:INFO:             kaleido: 0.2.1
2023-06-19 15:30:09,878:INFO:         statsmodels: 0.14.0
2023-06-19 15:30:09,878:INFO:              sktime: 0.17.0
2023-06-19 15:30:09,878:INFO:               tbats: 1.1.3
2023-06-19 15:30:09,878:INFO:            pmdarima: 2.0.3
2023-06-19 15:30:09,878:INFO:              psutil: 5.9.0
2023-06-19 15:30:09,878:INFO:PyCaret optional dependencies:
2023-06-19 15:30:09,878:INFO:                shap: Not installed
2023-06-19 15:30:09,878:INFO:           interpret: Not installed
2023-06-19 15:30:09,878:INFO:                umap: Not installed
2023-06-19 15:30:09,878:INFO:    pandas_profiling: Not installed
2023-06-19 15:30:09,879:INFO:  explainerdashboard: Not installed
2023-06-19 15:30:09,879:INFO:             autoviz: Not installed
2023-06-19 15:30:09,879:INFO:           fairlearn: Not installed
2023-06-19 15:30:09,879:INFO:             xgboost: Not installed
2023-06-19 15:30:09,879:INFO:            catboost: Not installed
2023-06-19 15:30:09,879:INFO:              kmodes: Not installed
2023-06-19 15:30:09,879:INFO:             mlxtend: Not installed
2023-06-19 15:30:09,879:INFO:       statsforecast: Not installed
2023-06-19 15:30:09,879:INFO:        tune_sklearn: Not installed
2023-06-19 15:30:09,879:INFO:                 ray: Not installed
2023-06-19 15:30:09,879:INFO:            hyperopt: Not installed
2023-06-19 15:30:09,879:INFO:              optuna: Not installed
2023-06-19 15:30:09,879:INFO:               skopt: Not installed
2023-06-19 15:30:09,879:INFO:              mlflow: Not installed
2023-06-19 15:30:09,879:INFO:              gradio: Not installed
2023-06-19 15:30:09,879:INFO:             fastapi: Not installed
2023-06-19 15:30:09,879:INFO:             uvicorn: Not installed
2023-06-19 15:30:09,879:INFO:              m2cgen: Not installed
2023-06-19 15:30:09,879:INFO:           evidently: Not installed
2023-06-19 15:30:09,879:INFO:               fugue: Not installed
2023-06-19 15:30:09,879:INFO:           streamlit: Not installed
2023-06-19 15:30:09,879:INFO:             prophet: Not installed
2023-06-19 15:30:09,880:INFO:None
2023-06-19 15:30:09,880:INFO:Set up data.
2023-06-19 15:30:09,938:INFO:Set up train/test split.
2023-06-19 15:30:09,964:INFO:Set up index.
2023-06-19 15:30:09,965:INFO:Set up folding strategy.
2023-06-19 15:30:09,965:INFO:Assigning column types.
2023-06-19 15:30:09,977:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:30:10,045:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:30:10,046:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:30:10,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:30:10,145:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:30:10,177:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,178:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:30:10,233:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:30:10,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,321:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:30:10,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,357:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:30:10,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:10,530:INFO:Preparing preprocessing pipeline...
2023-06-19 15:30:10,532:INFO:Set up simple imputation.
2023-06-19 15:30:10,546:INFO:Set up encoding of ordinal features.
2023-06-19 15:30:10,558:INFO:Set up encoding of categorical features.
2023-06-19 15:30:10,558:INFO:Set up removing multicollinearity.
2023-06-19 15:30:10,558:INFO:Set up imbalanced handling.
2023-06-19 15:30:10,560:INFO:Set up column name cleaning.
2023-06-19 15:30:11,014:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:30:11,065:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:30:11,065:INFO:Creating final display dataframe.
2023-06-19 15:30:12,014:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 51)
5   Transformed train set shape       (51162, 51)
6    Transformed test set shape       (12356, 51)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.8
18                Fix imbalance              True
19         Fix imbalance method             SMOTE
20               Fold Generator   StratifiedKFold
21                  Fold Number                 5
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              1a56
2023-06-19 15:30:12,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:12,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:12,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:12,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:30:12,231:INFO:setup() successfully completed in 3.29s...............
2023-06-19 15:32:21,117:INFO:PyCaret ClassificationExperiment
2023-06-19 15:32:21,117:INFO:Logging name: clf-default-name
2023-06-19 15:32:21,117:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:32:21,117:INFO:version 3.0.2
2023-06-19 15:32:21,117:INFO:Initializing setup()
2023-06-19 15:32:21,117:INFO:self.USI: a384
2023-06-19 15:32:21,117:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:32:21,117:INFO:Checking environment
2023-06-19 15:32:21,117:INFO:python_version: 3.9.7
2023-06-19 15:32:21,117:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:32:21,118:INFO:machine: AMD64
2023-06-19 15:32:21,118:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:32:21,118:INFO:Memory: svmem(total=17120436224, available=5628329984, percent=67.1, used=11492106240, free=5628329984)
2023-06-19 15:32:21,118:INFO:Physical Core: 4
2023-06-19 15:32:21,118:INFO:Logical Core: 4
2023-06-19 15:32:21,118:INFO:Checking libraries
2023-06-19 15:32:21,118:INFO:System:
2023-06-19 15:32:21,118:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:32:21,118:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:32:21,118:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:32:21,118:INFO:PyCaret required dependencies:
2023-06-19 15:32:21,118:INFO:                 pip: 21.2.3
2023-06-19 15:32:21,118:INFO:          setuptools: 57.4.0
2023-06-19 15:32:21,118:INFO:             pycaret: 3.0.2
2023-06-19 15:32:21,118:INFO:             IPython: 7.28.0
2023-06-19 15:32:21,118:INFO:          ipywidgets: 8.0.6
2023-06-19 15:32:21,118:INFO:                tqdm: 4.64.0
2023-06-19 15:32:21,119:INFO:               numpy: 1.22.4
2023-06-19 15:32:21,119:INFO:              pandas: 1.3.5
2023-06-19 15:32:21,119:INFO:              jinja2: 3.1.2
2023-06-19 15:32:21,119:INFO:               scipy: 1.7.1
2023-06-19 15:32:21,119:INFO:              joblib: 1.2.0
2023-06-19 15:32:21,119:INFO:             sklearn: 1.1.0
2023-06-19 15:32:21,119:INFO:                pyod: 1.0.9
2023-06-19 15:32:21,119:INFO:            imblearn: 0.9.1
2023-06-19 15:32:21,119:INFO:   category_encoders: 2.6.1
2023-06-19 15:32:21,119:INFO:            lightgbm: 3.3.5
2023-06-19 15:32:21,119:INFO:               numba: 0.57.0
2023-06-19 15:32:21,119:INFO:            requests: 2.31.0
2023-06-19 15:32:21,119:INFO:          matplotlib: 3.4.3
2023-06-19 15:32:21,119:INFO:          scikitplot: 0.3.7
2023-06-19 15:32:21,120:INFO:         yellowbrick: 1.5
2023-06-19 15:32:21,120:INFO:              plotly: 5.8.0
2023-06-19 15:32:21,121:INFO:             kaleido: 0.2.1
2023-06-19 15:32:21,121:INFO:         statsmodels: 0.14.0
2023-06-19 15:32:21,122:INFO:              sktime: 0.17.0
2023-06-19 15:32:21,122:INFO:               tbats: 1.1.3
2023-06-19 15:32:21,122:INFO:            pmdarima: 2.0.3
2023-06-19 15:32:21,122:INFO:              psutil: 5.9.0
2023-06-19 15:32:21,122:INFO:PyCaret optional dependencies:
2023-06-19 15:32:21,122:INFO:                shap: Not installed
2023-06-19 15:32:21,122:INFO:           interpret: Not installed
2023-06-19 15:32:21,122:INFO:                umap: Not installed
2023-06-19 15:32:21,123:INFO:    pandas_profiling: Not installed
2023-06-19 15:32:21,123:INFO:  explainerdashboard: Not installed
2023-06-19 15:32:21,123:INFO:             autoviz: Not installed
2023-06-19 15:32:21,123:INFO:           fairlearn: Not installed
2023-06-19 15:32:21,123:INFO:             xgboost: Not installed
2023-06-19 15:32:21,123:INFO:            catboost: Not installed
2023-06-19 15:32:21,124:INFO:              kmodes: Not installed
2023-06-19 15:32:21,124:INFO:             mlxtend: Not installed
2023-06-19 15:32:21,124:INFO:       statsforecast: Not installed
2023-06-19 15:32:21,124:INFO:        tune_sklearn: Not installed
2023-06-19 15:32:21,124:INFO:                 ray: Not installed
2023-06-19 15:32:21,124:INFO:            hyperopt: Not installed
2023-06-19 15:32:21,126:INFO:              optuna: Not installed
2023-06-19 15:32:21,126:INFO:               skopt: Not installed
2023-06-19 15:32:21,126:INFO:              mlflow: Not installed
2023-06-19 15:32:21,126:INFO:              gradio: Not installed
2023-06-19 15:32:21,126:INFO:             fastapi: Not installed
2023-06-19 15:32:21,126:INFO:             uvicorn: Not installed
2023-06-19 15:32:21,126:INFO:              m2cgen: Not installed
2023-06-19 15:32:21,126:INFO:           evidently: Not installed
2023-06-19 15:32:21,126:INFO:               fugue: Not installed
2023-06-19 15:32:21,126:INFO:           streamlit: Not installed
2023-06-19 15:32:21,126:INFO:             prophet: Not installed
2023-06-19 15:32:21,126:INFO:None
2023-06-19 15:32:21,127:INFO:Set up data.
2023-06-19 15:32:21,195:INFO:Set up train/test split.
2023-06-19 15:32:21,235:INFO:Set up index.
2023-06-19 15:32:21,236:INFO:Set up folding strategy.
2023-06-19 15:32:21,236:INFO:Assigning column types.
2023-06-19 15:32:21,254:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:32:21,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:32:21,311:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:32:21,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,398:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:32:21,399:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:32:21,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,434:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:32:21,494:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:32:21,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:32:21,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,619:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:32:21,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:21,795:INFO:Preparing preprocessing pipeline...
2023-06-19 15:32:21,797:INFO:Set up simple imputation.
2023-06-19 15:32:21,809:INFO:Set up encoding of ordinal features.
2023-06-19 15:32:21,821:INFO:Set up encoding of categorical features.
2023-06-19 15:32:21,821:INFO:Set up removing multicollinearity.
2023-06-19 15:32:21,821:INFO:Set up imbalanced handling.
2023-06-19 15:32:21,822:INFO:Set up column name cleaning.
2023-06-19 15:32:22,517:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:32:22,571:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:32:22,571:INFO:Creating final display dataframe.
2023-06-19 15:32:23,640:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 51)
5   Transformed train set shape       (51162, 51)
6    Transformed test set shape       (12356, 51)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.8
18                Fix imbalance              True
19         Fix imbalance method             SMOTE
20               Fold Generator   StratifiedKFold
21                  Fold Number                 5
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              a384
2023-06-19 15:32:23,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:23,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:23,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:23,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:32:23,859:INFO:setup() successfully completed in 3.79s...............
2023-06-19 15:34:00,793:INFO:PyCaret ClassificationExperiment
2023-06-19 15:34:00,793:INFO:Logging name: clf-default-name
2023-06-19 15:34:00,793:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:34:00,793:INFO:version 3.0.2
2023-06-19 15:34:00,793:INFO:Initializing setup()
2023-06-19 15:34:00,793:INFO:self.USI: e235
2023-06-19 15:34:00,793:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:34:00,793:INFO:Checking environment
2023-06-19 15:34:00,793:INFO:python_version: 3.9.7
2023-06-19 15:34:00,793:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:34:00,794:INFO:machine: AMD64
2023-06-19 15:34:00,795:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:34:00,795:INFO:Memory: svmem(total=17120436224, available=5617094656, percent=67.2, used=11503341568, free=5617094656)
2023-06-19 15:34:00,795:INFO:Physical Core: 4
2023-06-19 15:34:00,795:INFO:Logical Core: 4
2023-06-19 15:34:00,795:INFO:Checking libraries
2023-06-19 15:34:00,795:INFO:System:
2023-06-19 15:34:00,795:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:34:00,795:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:34:00,795:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:34:00,795:INFO:PyCaret required dependencies:
2023-06-19 15:34:00,795:INFO:                 pip: 21.2.3
2023-06-19 15:34:00,795:INFO:          setuptools: 57.4.0
2023-06-19 15:34:00,795:INFO:             pycaret: 3.0.2
2023-06-19 15:34:00,795:INFO:             IPython: 7.28.0
2023-06-19 15:34:00,795:INFO:          ipywidgets: 8.0.6
2023-06-19 15:34:00,796:INFO:                tqdm: 4.64.0
2023-06-19 15:34:00,796:INFO:               numpy: 1.22.4
2023-06-19 15:34:00,796:INFO:              pandas: 1.3.5
2023-06-19 15:34:00,796:INFO:              jinja2: 3.1.2
2023-06-19 15:34:00,796:INFO:               scipy: 1.7.1
2023-06-19 15:34:00,796:INFO:              joblib: 1.2.0
2023-06-19 15:34:00,796:INFO:             sklearn: 1.1.0
2023-06-19 15:34:00,796:INFO:                pyod: 1.0.9
2023-06-19 15:34:00,796:INFO:            imblearn: 0.9.1
2023-06-19 15:34:00,796:INFO:   category_encoders: 2.6.1
2023-06-19 15:34:00,796:INFO:            lightgbm: 3.3.5
2023-06-19 15:34:00,796:INFO:               numba: 0.57.0
2023-06-19 15:34:00,796:INFO:            requests: 2.31.0
2023-06-19 15:34:00,796:INFO:          matplotlib: 3.4.3
2023-06-19 15:34:00,796:INFO:          scikitplot: 0.3.7
2023-06-19 15:34:00,796:INFO:         yellowbrick: 1.5
2023-06-19 15:34:00,796:INFO:              plotly: 5.8.0
2023-06-19 15:34:00,796:INFO:             kaleido: 0.2.1
2023-06-19 15:34:00,796:INFO:         statsmodels: 0.14.0
2023-06-19 15:34:00,796:INFO:              sktime: 0.17.0
2023-06-19 15:34:00,796:INFO:               tbats: 1.1.3
2023-06-19 15:34:00,797:INFO:            pmdarima: 2.0.3
2023-06-19 15:34:00,797:INFO:              psutil: 5.9.0
2023-06-19 15:34:00,797:INFO:PyCaret optional dependencies:
2023-06-19 15:34:00,797:INFO:                shap: Not installed
2023-06-19 15:34:00,797:INFO:           interpret: Not installed
2023-06-19 15:34:00,797:INFO:                umap: Not installed
2023-06-19 15:34:00,797:INFO:    pandas_profiling: Not installed
2023-06-19 15:34:00,797:INFO:  explainerdashboard: Not installed
2023-06-19 15:34:00,797:INFO:             autoviz: Not installed
2023-06-19 15:34:00,797:INFO:           fairlearn: Not installed
2023-06-19 15:34:00,797:INFO:             xgboost: Not installed
2023-06-19 15:34:00,797:INFO:            catboost: Not installed
2023-06-19 15:34:00,797:INFO:              kmodes: Not installed
2023-06-19 15:34:00,797:INFO:             mlxtend: Not installed
2023-06-19 15:34:00,797:INFO:       statsforecast: Not installed
2023-06-19 15:34:00,797:INFO:        tune_sklearn: Not installed
2023-06-19 15:34:00,797:INFO:                 ray: Not installed
2023-06-19 15:34:00,797:INFO:            hyperopt: Not installed
2023-06-19 15:34:00,797:INFO:              optuna: Not installed
2023-06-19 15:34:00,797:INFO:               skopt: Not installed
2023-06-19 15:34:00,797:INFO:              mlflow: Not installed
2023-06-19 15:34:00,798:INFO:              gradio: Not installed
2023-06-19 15:34:00,798:INFO:             fastapi: Not installed
2023-06-19 15:34:00,798:INFO:             uvicorn: Not installed
2023-06-19 15:34:00,798:INFO:              m2cgen: Not installed
2023-06-19 15:34:00,798:INFO:           evidently: Not installed
2023-06-19 15:34:00,798:INFO:               fugue: Not installed
2023-06-19 15:34:00,798:INFO:           streamlit: Not installed
2023-06-19 15:34:00,798:INFO:             prophet: Not installed
2023-06-19 15:34:00,798:INFO:None
2023-06-19 15:34:00,798:INFO:Set up data.
2023-06-19 15:34:00,855:INFO:Set up train/test split.
2023-06-19 15:34:00,878:INFO:Set up index.
2023-06-19 15:34:00,879:INFO:Set up folding strategy.
2023-06-19 15:34:00,879:INFO:Assigning column types.
2023-06-19 15:34:00,891:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:34:00,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:34:00,958:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:34:01,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,164:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:34:01,165:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:34:01,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,204:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:34:01,260:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:34:01,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,347:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:34:01,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,386:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:34:01,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:01,585:INFO:Preparing preprocessing pipeline...
2023-06-19 15:34:01,587:INFO:Set up simple imputation.
2023-06-19 15:34:01,600:INFO:Set up encoding of ordinal features.
2023-06-19 15:34:01,610:INFO:Set up encoding of categorical features.
2023-06-19 15:34:01,610:INFO:Set up removing multicollinearity.
2023-06-19 15:34:01,610:INFO:Set up imbalanced handling.
2023-06-19 15:34:01,611:INFO:Set up column name cleaning.
2023-06-19 15:34:02,073:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:34:02,125:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:34:02,126:INFO:Creating final display dataframe.
2023-06-19 15:34:02,349:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 51)
5   Transformed train set shape       (51162, 51)
6    Transformed test set shape       (12356, 51)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.8
18                Fix imbalance              True
19         Fix imbalance method             SMOTE
20               Fold Generator   StratifiedKFold
21                  Fold Number                 5
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              e235
2023-06-19 15:34:02,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:02,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:02,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:02,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:34:02,562:INFO:setup() successfully completed in 2.64s...............
2023-06-19 15:38:21,368:INFO:PyCaret ClassificationExperiment
2023-06-19 15:38:21,369:INFO:Logging name: clf-default-name
2023-06-19 15:38:21,369:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:38:21,369:INFO:version 3.0.2
2023-06-19 15:38:21,369:INFO:Initializing setup()
2023-06-19 15:38:21,369:INFO:self.USI: 9dac
2023-06-19 15:38:21,369:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:38:21,369:INFO:Checking environment
2023-06-19 15:38:21,370:INFO:python_version: 3.9.7
2023-06-19 15:38:21,370:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:38:21,370:INFO:machine: AMD64
2023-06-19 15:38:21,370:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:38:21,370:INFO:Memory: svmem(total=17120436224, available=5817421824, percent=66.0, used=11303014400, free=5817421824)
2023-06-19 15:38:21,370:INFO:Physical Core: 4
2023-06-19 15:38:21,370:INFO:Logical Core: 4
2023-06-19 15:38:21,371:INFO:Checking libraries
2023-06-19 15:38:21,371:INFO:System:
2023-06-19 15:38:21,371:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:38:21,371:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:38:21,371:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:38:21,371:INFO:PyCaret required dependencies:
2023-06-19 15:38:21,371:INFO:                 pip: 21.2.3
2023-06-19 15:38:21,371:INFO:          setuptools: 57.4.0
2023-06-19 15:38:21,372:INFO:             pycaret: 3.0.2
2023-06-19 15:38:21,372:INFO:             IPython: 7.28.0
2023-06-19 15:38:21,373:INFO:          ipywidgets: 8.0.6
2023-06-19 15:38:21,373:INFO:                tqdm: 4.64.0
2023-06-19 15:38:21,373:INFO:               numpy: 1.22.4
2023-06-19 15:38:21,373:INFO:              pandas: 1.3.5
2023-06-19 15:38:21,373:INFO:              jinja2: 3.1.2
2023-06-19 15:38:21,373:INFO:               scipy: 1.7.1
2023-06-19 15:38:21,373:INFO:              joblib: 1.2.0
2023-06-19 15:38:21,373:INFO:             sklearn: 1.1.0
2023-06-19 15:38:21,373:INFO:                pyod: 1.0.9
2023-06-19 15:38:21,373:INFO:            imblearn: 0.9.1
2023-06-19 15:38:21,373:INFO:   category_encoders: 2.6.1
2023-06-19 15:38:21,373:INFO:            lightgbm: 3.3.5
2023-06-19 15:38:21,373:INFO:               numba: 0.57.0
2023-06-19 15:38:21,373:INFO:            requests: 2.31.0
2023-06-19 15:38:21,373:INFO:          matplotlib: 3.4.3
2023-06-19 15:38:21,373:INFO:          scikitplot: 0.3.7
2023-06-19 15:38:21,374:INFO:         yellowbrick: 1.5
2023-06-19 15:38:21,374:INFO:              plotly: 5.8.0
2023-06-19 15:38:21,374:INFO:             kaleido: 0.2.1
2023-06-19 15:38:21,374:INFO:         statsmodels: 0.14.0
2023-06-19 15:38:21,374:INFO:              sktime: 0.17.0
2023-06-19 15:38:21,374:INFO:               tbats: 1.1.3
2023-06-19 15:38:21,374:INFO:            pmdarima: 2.0.3
2023-06-19 15:38:21,374:INFO:              psutil: 5.9.0
2023-06-19 15:38:21,374:INFO:PyCaret optional dependencies:
2023-06-19 15:38:21,374:INFO:                shap: Not installed
2023-06-19 15:38:21,374:INFO:           interpret: Not installed
2023-06-19 15:38:21,374:INFO:                umap: Not installed
2023-06-19 15:38:21,374:INFO:    pandas_profiling: Not installed
2023-06-19 15:38:21,374:INFO:  explainerdashboard: Not installed
2023-06-19 15:38:21,374:INFO:             autoviz: Not installed
2023-06-19 15:38:21,374:INFO:           fairlearn: Not installed
2023-06-19 15:38:21,374:INFO:             xgboost: Not installed
2023-06-19 15:38:21,375:INFO:            catboost: Not installed
2023-06-19 15:38:21,375:INFO:              kmodes: Not installed
2023-06-19 15:38:21,375:INFO:             mlxtend: Not installed
2023-06-19 15:38:21,375:INFO:       statsforecast: Not installed
2023-06-19 15:38:21,375:INFO:        tune_sklearn: Not installed
2023-06-19 15:38:21,375:INFO:                 ray: Not installed
2023-06-19 15:38:21,375:INFO:            hyperopt: Not installed
2023-06-19 15:38:21,375:INFO:              optuna: Not installed
2023-06-19 15:38:21,375:INFO:               skopt: Not installed
2023-06-19 15:38:21,375:INFO:              mlflow: Not installed
2023-06-19 15:38:21,375:INFO:              gradio: Not installed
2023-06-19 15:38:21,375:INFO:             fastapi: Not installed
2023-06-19 15:38:21,375:INFO:             uvicorn: Not installed
2023-06-19 15:38:21,375:INFO:              m2cgen: Not installed
2023-06-19 15:38:21,375:INFO:           evidently: Not installed
2023-06-19 15:38:21,376:INFO:               fugue: Not installed
2023-06-19 15:38:21,377:INFO:           streamlit: Not installed
2023-06-19 15:38:21,377:INFO:             prophet: Not installed
2023-06-19 15:38:21,377:INFO:None
2023-06-19 15:38:21,377:INFO:Set up data.
2023-06-19 15:38:21,498:INFO:Set up train/test split.
2023-06-19 15:38:21,535:INFO:Set up index.
2023-06-19 15:38:21,536:INFO:Set up folding strategy.
2023-06-19 15:38:21,537:INFO:Assigning column types.
2023-06-19 15:38:21,577:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:38:21,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:38:21,640:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:38:21,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:21,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:21,748:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:38:21,749:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:38:21,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:21,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:21,791:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:38:21,855:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:38:21,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:21,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:21,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:38:21,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:21,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:21,993:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:38:22,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:22,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:22,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:22,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:22,199:INFO:Preparing preprocessing pipeline...
2023-06-19 15:38:22,201:INFO:Set up simple imputation.
2023-06-19 15:38:22,214:INFO:Set up encoding of ordinal features.
2023-06-19 15:38:22,227:INFO:Set up encoding of categorical features.
2023-06-19 15:38:22,227:INFO:Set up removing multicollinearity.
2023-06-19 15:38:22,227:INFO:Set up imbalanced handling.
2023-06-19 15:38:22,228:INFO:Set up column name cleaning.
2023-06-19 15:38:22,829:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:38:22,886:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:38:22,886:INFO:Creating final display dataframe.
2023-06-19 15:38:23,119:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 51)
5   Transformed train set shape       (51162, 51)
6    Transformed test set shape       (12356, 51)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.8
18                Fix imbalance              True
19         Fix imbalance method             SMOTE
20               Fold Generator   StratifiedKFold
21                  Fold Number                 5
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              9dac
2023-06-19 15:38:23,227:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:23,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:23,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:23,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:38:23,340:INFO:setup() successfully completed in 3.11s...............
2023-06-19 15:40:10,546:INFO:PyCaret ClassificationExperiment
2023-06-19 15:40:10,546:INFO:Logging name: clf-default-name
2023-06-19 15:40:10,546:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:40:10,546:INFO:version 3.0.2
2023-06-19 15:40:10,546:INFO:Initializing setup()
2023-06-19 15:40:10,546:INFO:self.USI: 9858
2023-06-19 15:40:10,546:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:40:10,546:INFO:Checking environment
2023-06-19 15:40:10,546:INFO:python_version: 3.9.7
2023-06-19 15:40:10,546:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:40:10,546:INFO:machine: AMD64
2023-06-19 15:40:10,546:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:40:10,546:INFO:Memory: svmem(total=17120436224, available=5931286528, percent=65.4, used=11189149696, free=5931286528)
2023-06-19 15:40:10,546:INFO:Physical Core: 4
2023-06-19 15:40:10,547:INFO:Logical Core: 4
2023-06-19 15:40:10,547:INFO:Checking libraries
2023-06-19 15:40:10,547:INFO:System:
2023-06-19 15:40:10,547:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:40:10,547:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:40:10,547:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:40:10,547:INFO:PyCaret required dependencies:
2023-06-19 15:40:10,547:INFO:                 pip: 21.2.3
2023-06-19 15:40:10,547:INFO:          setuptools: 57.4.0
2023-06-19 15:40:10,547:INFO:             pycaret: 3.0.2
2023-06-19 15:40:10,547:INFO:             IPython: 7.28.0
2023-06-19 15:40:10,547:INFO:          ipywidgets: 8.0.6
2023-06-19 15:40:10,547:INFO:                tqdm: 4.64.0
2023-06-19 15:40:10,547:INFO:               numpy: 1.22.4
2023-06-19 15:40:10,547:INFO:              pandas: 1.3.5
2023-06-19 15:40:10,547:INFO:              jinja2: 3.1.2
2023-06-19 15:40:10,547:INFO:               scipy: 1.7.1
2023-06-19 15:40:10,547:INFO:              joblib: 1.2.0
2023-06-19 15:40:10,547:INFO:             sklearn: 1.1.0
2023-06-19 15:40:10,547:INFO:                pyod: 1.0.9
2023-06-19 15:40:10,548:INFO:            imblearn: 0.9.1
2023-06-19 15:40:10,548:INFO:   category_encoders: 2.6.1
2023-06-19 15:40:10,548:INFO:            lightgbm: 3.3.5
2023-06-19 15:40:10,548:INFO:               numba: 0.57.0
2023-06-19 15:40:10,548:INFO:            requests: 2.31.0
2023-06-19 15:40:10,548:INFO:          matplotlib: 3.4.3
2023-06-19 15:40:10,548:INFO:          scikitplot: 0.3.7
2023-06-19 15:40:10,548:INFO:         yellowbrick: 1.5
2023-06-19 15:40:10,548:INFO:              plotly: 5.8.0
2023-06-19 15:40:10,548:INFO:             kaleido: 0.2.1
2023-06-19 15:40:10,548:INFO:         statsmodels: 0.14.0
2023-06-19 15:40:10,548:INFO:              sktime: 0.17.0
2023-06-19 15:40:10,548:INFO:               tbats: 1.1.3
2023-06-19 15:40:10,548:INFO:            pmdarima: 2.0.3
2023-06-19 15:40:10,548:INFO:              psutil: 5.9.0
2023-06-19 15:40:10,548:INFO:PyCaret optional dependencies:
2023-06-19 15:40:10,548:INFO:                shap: Not installed
2023-06-19 15:40:10,548:INFO:           interpret: Not installed
2023-06-19 15:40:10,548:INFO:                umap: Not installed
2023-06-19 15:40:10,548:INFO:    pandas_profiling: Not installed
2023-06-19 15:40:10,548:INFO:  explainerdashboard: Not installed
2023-06-19 15:40:10,548:INFO:             autoviz: Not installed
2023-06-19 15:40:10,549:INFO:           fairlearn: Not installed
2023-06-19 15:40:10,549:INFO:             xgboost: Not installed
2023-06-19 15:40:10,549:INFO:            catboost: Not installed
2023-06-19 15:40:10,549:INFO:              kmodes: Not installed
2023-06-19 15:40:10,549:INFO:             mlxtend: Not installed
2023-06-19 15:40:10,549:INFO:       statsforecast: Not installed
2023-06-19 15:40:10,549:INFO:        tune_sklearn: Not installed
2023-06-19 15:40:10,549:INFO:                 ray: Not installed
2023-06-19 15:40:10,549:INFO:            hyperopt: Not installed
2023-06-19 15:40:10,549:INFO:              optuna: Not installed
2023-06-19 15:40:10,549:INFO:               skopt: Not installed
2023-06-19 15:40:10,549:INFO:              mlflow: Not installed
2023-06-19 15:40:10,549:INFO:              gradio: Not installed
2023-06-19 15:40:10,549:INFO:             fastapi: Not installed
2023-06-19 15:40:10,549:INFO:             uvicorn: Not installed
2023-06-19 15:40:10,549:INFO:              m2cgen: Not installed
2023-06-19 15:40:10,549:INFO:           evidently: Not installed
2023-06-19 15:40:10,549:INFO:               fugue: Not installed
2023-06-19 15:40:10,550:INFO:           streamlit: Not installed
2023-06-19 15:40:10,550:INFO:             prophet: Not installed
2023-06-19 15:40:10,550:INFO:None
2023-06-19 15:40:10,550:INFO:Set up data.
2023-06-19 15:40:10,601:INFO:Set up train/test split.
2023-06-19 15:40:10,625:INFO:Set up index.
2023-06-19 15:40:10,626:INFO:Set up folding strategy.
2023-06-19 15:40:10,626:INFO:Assigning column types.
2023-06-19 15:40:10,639:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:40:10,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:40:10,689:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:40:10,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:10,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:10,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:40:10,780:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:40:10,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:10,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:10,821:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:40:10,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:40:10,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:10,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:10,973:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:40:11,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:11,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:11,006:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:40:11,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:11,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:11,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:11,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:11,174:INFO:Preparing preprocessing pipeline...
2023-06-19 15:40:11,178:INFO:Set up simple imputation.
2023-06-19 15:40:11,192:INFO:Set up encoding of ordinal features.
2023-06-19 15:40:11,201:INFO:Set up encoding of categorical features.
2023-06-19 15:40:11,201:INFO:Set up removing multicollinearity.
2023-06-19 15:40:11,201:INFO:Set up imbalanced handling.
2023-06-19 15:40:11,202:INFO:Set up column name cleaning.
2023-06-19 15:40:11,728:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:40:11,780:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:40:11,780:INFO:Creating final display dataframe.
2023-06-19 15:40:12,026:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 51)
5   Transformed train set shape       (51162, 51)
6    Transformed test set shape       (12356, 51)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.8
18                Fix imbalance              True
19         Fix imbalance method             SMOTE
20               Fold Generator   StratifiedKFold
21                  Fold Number                 5
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              9858
2023-06-19 15:40:12,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:12,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:12,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:12,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:12,341:INFO:setup() successfully completed in 2.68s...............
2023-06-19 15:40:56,563:INFO:PyCaret ClassificationExperiment
2023-06-19 15:40:56,564:INFO:Logging name: clf-default-name
2023-06-19 15:40:56,564:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:40:56,564:INFO:version 3.0.2
2023-06-19 15:40:56,564:INFO:Initializing setup()
2023-06-19 15:40:56,564:INFO:self.USI: 25a6
2023-06-19 15:40:56,564:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:40:56,564:INFO:Checking environment
2023-06-19 15:40:56,564:INFO:python_version: 3.9.7
2023-06-19 15:40:56,564:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:40:56,564:INFO:machine: AMD64
2023-06-19 15:40:56,564:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:40:56,565:INFO:Memory: svmem(total=17120436224, available=5846056960, percent=65.9, used=11274379264, free=5846056960)
2023-06-19 15:40:56,565:INFO:Physical Core: 4
2023-06-19 15:40:56,565:INFO:Logical Core: 4
2023-06-19 15:40:56,565:INFO:Checking libraries
2023-06-19 15:40:56,565:INFO:System:
2023-06-19 15:40:56,565:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:40:56,565:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:40:56,565:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:40:56,565:INFO:PyCaret required dependencies:
2023-06-19 15:40:56,565:INFO:                 pip: 21.2.3
2023-06-19 15:40:56,565:INFO:          setuptools: 57.4.0
2023-06-19 15:40:56,565:INFO:             pycaret: 3.0.2
2023-06-19 15:40:56,565:INFO:             IPython: 7.28.0
2023-06-19 15:40:56,565:INFO:          ipywidgets: 8.0.6
2023-06-19 15:40:56,565:INFO:                tqdm: 4.64.0
2023-06-19 15:40:56,565:INFO:               numpy: 1.22.4
2023-06-19 15:40:56,566:INFO:              pandas: 1.3.5
2023-06-19 15:40:56,566:INFO:              jinja2: 3.1.2
2023-06-19 15:40:56,566:INFO:               scipy: 1.7.1
2023-06-19 15:40:56,566:INFO:              joblib: 1.2.0
2023-06-19 15:40:56,566:INFO:             sklearn: 1.1.0
2023-06-19 15:40:56,566:INFO:                pyod: 1.0.9
2023-06-19 15:40:56,566:INFO:            imblearn: 0.9.1
2023-06-19 15:40:56,566:INFO:   category_encoders: 2.6.1
2023-06-19 15:40:56,566:INFO:            lightgbm: 3.3.5
2023-06-19 15:40:56,566:INFO:               numba: 0.57.0
2023-06-19 15:40:56,566:INFO:            requests: 2.31.0
2023-06-19 15:40:56,566:INFO:          matplotlib: 3.4.3
2023-06-19 15:40:56,566:INFO:          scikitplot: 0.3.7
2023-06-19 15:40:56,566:INFO:         yellowbrick: 1.5
2023-06-19 15:40:56,566:INFO:              plotly: 5.8.0
2023-06-19 15:40:56,566:INFO:             kaleido: 0.2.1
2023-06-19 15:40:56,566:INFO:         statsmodels: 0.14.0
2023-06-19 15:40:56,566:INFO:              sktime: 0.17.0
2023-06-19 15:40:56,566:INFO:               tbats: 1.1.3
2023-06-19 15:40:56,566:INFO:            pmdarima: 2.0.3
2023-06-19 15:40:56,566:INFO:              psutil: 5.9.0
2023-06-19 15:40:56,567:INFO:PyCaret optional dependencies:
2023-06-19 15:40:56,567:INFO:                shap: Not installed
2023-06-19 15:40:56,567:INFO:           interpret: Not installed
2023-06-19 15:40:56,567:INFO:                umap: Not installed
2023-06-19 15:40:56,567:INFO:    pandas_profiling: Not installed
2023-06-19 15:40:56,567:INFO:  explainerdashboard: Not installed
2023-06-19 15:40:56,567:INFO:             autoviz: Not installed
2023-06-19 15:40:56,567:INFO:           fairlearn: Not installed
2023-06-19 15:40:56,567:INFO:             xgboost: Not installed
2023-06-19 15:40:56,567:INFO:            catboost: Not installed
2023-06-19 15:40:56,567:INFO:              kmodes: Not installed
2023-06-19 15:40:56,567:INFO:             mlxtend: Not installed
2023-06-19 15:40:56,567:INFO:       statsforecast: Not installed
2023-06-19 15:40:56,567:INFO:        tune_sklearn: Not installed
2023-06-19 15:40:56,567:INFO:                 ray: Not installed
2023-06-19 15:40:56,567:INFO:            hyperopt: Not installed
2023-06-19 15:40:56,567:INFO:              optuna: Not installed
2023-06-19 15:40:56,567:INFO:               skopt: Not installed
2023-06-19 15:40:56,567:INFO:              mlflow: Not installed
2023-06-19 15:40:56,567:INFO:              gradio: Not installed
2023-06-19 15:40:56,567:INFO:             fastapi: Not installed
2023-06-19 15:40:56,568:INFO:             uvicorn: Not installed
2023-06-19 15:40:56,568:INFO:              m2cgen: Not installed
2023-06-19 15:40:56,568:INFO:           evidently: Not installed
2023-06-19 15:40:56,568:INFO:               fugue: Not installed
2023-06-19 15:40:56,568:INFO:           streamlit: Not installed
2023-06-19 15:40:56,568:INFO:             prophet: Not installed
2023-06-19 15:40:56,568:INFO:None
2023-06-19 15:40:56,568:INFO:Set up data.
2023-06-19 15:40:56,617:INFO:Set up train/test split.
2023-06-19 15:40:56,640:INFO:Set up index.
2023-06-19 15:40:56,641:INFO:Set up folding strategy.
2023-06-19 15:40:56,641:INFO:Assigning column types.
2023-06-19 15:40:56,659:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:40:56,717:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:40:56,720:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:40:56,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:56,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:56,831:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:40:56,832:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:40:56,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:56,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:56,866:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:40:56,921:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:40:56,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:56,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:57,007:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:40:57,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:57,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:57,048:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:40:57,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:57,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:57,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:57,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:57,233:INFO:Preparing preprocessing pipeline...
2023-06-19 15:40:57,235:INFO:Set up simple imputation.
2023-06-19 15:40:57,249:INFO:Set up encoding of ordinal features.
2023-06-19 15:40:57,260:INFO:Set up encoding of categorical features.
2023-06-19 15:40:57,261:INFO:Set up column name cleaning.
2023-06-19 15:40:57,654:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:40:57,710:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:40:57,711:INFO:Creating final display dataframe.
2023-06-19 15:40:58,495:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (41185, 55)
5   Transformed train set shape       (28829, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              25a6
2023-06-19 15:40:58,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:58,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:58,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:58,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:40:58,760:INFO:setup() successfully completed in 3.17s...............
2023-06-19 15:41:47,165:INFO:PyCaret ClassificationExperiment
2023-06-19 15:41:47,166:INFO:Logging name: clf-default-name
2023-06-19 15:41:47,166:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:41:47,166:INFO:version 3.0.2
2023-06-19 15:41:47,166:INFO:Initializing setup()
2023-06-19 15:41:47,166:INFO:self.USI: 8441
2023-06-19 15:41:47,166:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:41:47,166:INFO:Checking environment
2023-06-19 15:41:47,166:INFO:python_version: 3.9.7
2023-06-19 15:41:47,166:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:41:47,166:INFO:machine: AMD64
2023-06-19 15:41:47,166:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:41:47,166:INFO:Memory: svmem(total=17120436224, available=5879341056, percent=65.7, used=11241095168, free=5879341056)
2023-06-19 15:41:47,166:INFO:Physical Core: 4
2023-06-19 15:41:47,166:INFO:Logical Core: 4
2023-06-19 15:41:47,167:INFO:Checking libraries
2023-06-19 15:41:47,167:INFO:System:
2023-06-19 15:41:47,167:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:41:47,167:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:41:47,167:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:41:47,167:INFO:PyCaret required dependencies:
2023-06-19 15:41:47,167:INFO:                 pip: 21.2.3
2023-06-19 15:41:47,167:INFO:          setuptools: 57.4.0
2023-06-19 15:41:47,167:INFO:             pycaret: 3.0.2
2023-06-19 15:41:47,168:INFO:             IPython: 7.28.0
2023-06-19 15:41:47,168:INFO:          ipywidgets: 8.0.6
2023-06-19 15:41:47,168:INFO:                tqdm: 4.64.0
2023-06-19 15:41:47,168:INFO:               numpy: 1.22.4
2023-06-19 15:41:47,168:INFO:              pandas: 1.3.5
2023-06-19 15:41:47,168:INFO:              jinja2: 3.1.2
2023-06-19 15:41:47,168:INFO:               scipy: 1.7.1
2023-06-19 15:41:47,168:INFO:              joblib: 1.2.0
2023-06-19 15:41:47,168:INFO:             sklearn: 1.1.0
2023-06-19 15:41:47,168:INFO:                pyod: 1.0.9
2023-06-19 15:41:47,168:INFO:            imblearn: 0.9.1
2023-06-19 15:41:47,168:INFO:   category_encoders: 2.6.1
2023-06-19 15:41:47,168:INFO:            lightgbm: 3.3.5
2023-06-19 15:41:47,168:INFO:               numba: 0.57.0
2023-06-19 15:41:47,168:INFO:            requests: 2.31.0
2023-06-19 15:41:47,168:INFO:          matplotlib: 3.4.3
2023-06-19 15:41:47,168:INFO:          scikitplot: 0.3.7
2023-06-19 15:41:47,168:INFO:         yellowbrick: 1.5
2023-06-19 15:41:47,169:INFO:              plotly: 5.8.0
2023-06-19 15:41:47,169:INFO:             kaleido: 0.2.1
2023-06-19 15:41:47,169:INFO:         statsmodels: 0.14.0
2023-06-19 15:41:47,169:INFO:              sktime: 0.17.0
2023-06-19 15:41:47,169:INFO:               tbats: 1.1.3
2023-06-19 15:41:47,169:INFO:            pmdarima: 2.0.3
2023-06-19 15:41:47,169:INFO:              psutil: 5.9.0
2023-06-19 15:41:47,169:INFO:PyCaret optional dependencies:
2023-06-19 15:41:47,169:INFO:                shap: Not installed
2023-06-19 15:41:47,169:INFO:           interpret: Not installed
2023-06-19 15:41:47,169:INFO:                umap: Not installed
2023-06-19 15:41:47,169:INFO:    pandas_profiling: Not installed
2023-06-19 15:41:47,169:INFO:  explainerdashboard: Not installed
2023-06-19 15:41:47,169:INFO:             autoviz: Not installed
2023-06-19 15:41:47,169:INFO:           fairlearn: Not installed
2023-06-19 15:41:47,169:INFO:             xgboost: Not installed
2023-06-19 15:41:47,169:INFO:            catboost: Not installed
2023-06-19 15:41:47,169:INFO:              kmodes: Not installed
2023-06-19 15:41:47,170:INFO:             mlxtend: Not installed
2023-06-19 15:41:47,170:INFO:       statsforecast: Not installed
2023-06-19 15:41:47,170:INFO:        tune_sklearn: Not installed
2023-06-19 15:41:47,170:INFO:                 ray: Not installed
2023-06-19 15:41:47,170:INFO:            hyperopt: Not installed
2023-06-19 15:41:47,170:INFO:              optuna: Not installed
2023-06-19 15:41:47,170:INFO:               skopt: Not installed
2023-06-19 15:41:47,170:INFO:              mlflow: Not installed
2023-06-19 15:41:47,170:INFO:              gradio: Not installed
2023-06-19 15:41:47,170:INFO:             fastapi: Not installed
2023-06-19 15:41:47,170:INFO:             uvicorn: Not installed
2023-06-19 15:41:47,170:INFO:              m2cgen: Not installed
2023-06-19 15:41:47,170:INFO:           evidently: Not installed
2023-06-19 15:41:47,170:INFO:               fugue: Not installed
2023-06-19 15:41:47,171:INFO:           streamlit: Not installed
2023-06-19 15:41:47,171:INFO:             prophet: Not installed
2023-06-19 15:41:47,171:INFO:None
2023-06-19 15:41:47,171:INFO:Set up data.
2023-06-19 15:41:47,219:INFO:Set up train/test split.
2023-06-19 15:41:47,244:INFO:Set up index.
2023-06-19 15:41:47,245:INFO:Set up folding strategy.
2023-06-19 15:41:47,245:INFO:Assigning column types.
2023-06-19 15:41:47,258:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:41:47,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:41:47,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:41:47,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,412:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:41:47,413:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:41:47,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,453:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:41:47,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:41:47,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:41:47,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,652:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:41:47,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:47,835:INFO:Preparing preprocessing pipeline...
2023-06-19 15:41:47,837:INFO:Set up simple imputation.
2023-06-19 15:41:47,848:INFO:Set up encoding of ordinal features.
2023-06-19 15:41:47,857:INFO:Set up encoding of categorical features.
2023-06-19 15:41:47,857:INFO:Set up imbalanced handling.
2023-06-19 15:41:47,859:INFO:Set up column name cleaning.
2023-06-19 15:41:48,484:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:41:48,534:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:41:48,534:INFO:Creating final display dataframe.
2023-06-19 15:41:49,655:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 55)
5   Transformed train set shape       (51162, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16                Fix imbalance              True
17         Fix imbalance method             SMOTE
18               Fold Generator   StratifiedKFold
19                  Fold Number                 5
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              8441
2023-06-19 15:41:49,756:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:49,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:49,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:49,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:41:49,853:INFO:setup() successfully completed in 3.6s...............
2023-06-19 15:42:15,693:INFO:PyCaret ClassificationExperiment
2023-06-19 15:42:15,693:INFO:Logging name: clf-default-name
2023-06-19 15:42:15,693:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:42:15,693:INFO:version 3.0.2
2023-06-19 15:42:15,693:INFO:Initializing setup()
2023-06-19 15:42:15,694:INFO:self.USI: 5cb6
2023-06-19 15:42:15,694:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:42:15,694:INFO:Checking environment
2023-06-19 15:42:15,694:INFO:python_version: 3.9.7
2023-06-19 15:42:15,694:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:42:15,694:INFO:machine: AMD64
2023-06-19 15:42:15,694:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:42:15,694:INFO:Memory: svmem(total=17120436224, available=5833019392, percent=65.9, used=11287416832, free=5833019392)
2023-06-19 15:42:15,694:INFO:Physical Core: 4
2023-06-19 15:42:15,694:INFO:Logical Core: 4
2023-06-19 15:42:15,694:INFO:Checking libraries
2023-06-19 15:42:15,694:INFO:System:
2023-06-19 15:42:15,694:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:42:15,694:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:42:15,694:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:42:15,694:INFO:PyCaret required dependencies:
2023-06-19 15:42:15,695:INFO:                 pip: 21.2.3
2023-06-19 15:42:15,695:INFO:          setuptools: 57.4.0
2023-06-19 15:42:15,695:INFO:             pycaret: 3.0.2
2023-06-19 15:42:15,695:INFO:             IPython: 7.28.0
2023-06-19 15:42:15,695:INFO:          ipywidgets: 8.0.6
2023-06-19 15:42:15,695:INFO:                tqdm: 4.64.0
2023-06-19 15:42:15,695:INFO:               numpy: 1.22.4
2023-06-19 15:42:15,695:INFO:              pandas: 1.3.5
2023-06-19 15:42:15,695:INFO:              jinja2: 3.1.2
2023-06-19 15:42:15,695:INFO:               scipy: 1.7.1
2023-06-19 15:42:15,695:INFO:              joblib: 1.2.0
2023-06-19 15:42:15,695:INFO:             sklearn: 1.1.0
2023-06-19 15:42:15,695:INFO:                pyod: 1.0.9
2023-06-19 15:42:15,695:INFO:            imblearn: 0.9.1
2023-06-19 15:42:15,695:INFO:   category_encoders: 2.6.1
2023-06-19 15:42:15,695:INFO:            lightgbm: 3.3.5
2023-06-19 15:42:15,695:INFO:               numba: 0.57.0
2023-06-19 15:42:15,695:INFO:            requests: 2.31.0
2023-06-19 15:42:15,695:INFO:          matplotlib: 3.4.3
2023-06-19 15:42:15,695:INFO:          scikitplot: 0.3.7
2023-06-19 15:42:15,696:INFO:         yellowbrick: 1.5
2023-06-19 15:42:15,696:INFO:              plotly: 5.8.0
2023-06-19 15:42:15,696:INFO:             kaleido: 0.2.1
2023-06-19 15:42:15,696:INFO:         statsmodels: 0.14.0
2023-06-19 15:42:15,696:INFO:              sktime: 0.17.0
2023-06-19 15:42:15,696:INFO:               tbats: 1.1.3
2023-06-19 15:42:15,696:INFO:            pmdarima: 2.0.3
2023-06-19 15:42:15,696:INFO:              psutil: 5.9.0
2023-06-19 15:42:15,696:INFO:PyCaret optional dependencies:
2023-06-19 15:42:15,696:INFO:                shap: Not installed
2023-06-19 15:42:15,696:INFO:           interpret: Not installed
2023-06-19 15:42:15,696:INFO:                umap: Not installed
2023-06-19 15:42:15,696:INFO:    pandas_profiling: Not installed
2023-06-19 15:42:15,696:INFO:  explainerdashboard: Not installed
2023-06-19 15:42:15,696:INFO:             autoviz: Not installed
2023-06-19 15:42:15,696:INFO:           fairlearn: Not installed
2023-06-19 15:42:15,696:INFO:             xgboost: Not installed
2023-06-19 15:42:15,696:INFO:            catboost: Not installed
2023-06-19 15:42:15,696:INFO:              kmodes: Not installed
2023-06-19 15:42:15,696:INFO:             mlxtend: Not installed
2023-06-19 15:42:15,697:INFO:       statsforecast: Not installed
2023-06-19 15:42:15,697:INFO:        tune_sklearn: Not installed
2023-06-19 15:42:15,697:INFO:                 ray: Not installed
2023-06-19 15:42:15,697:INFO:            hyperopt: Not installed
2023-06-19 15:42:15,697:INFO:              optuna: Not installed
2023-06-19 15:42:15,697:INFO:               skopt: Not installed
2023-06-19 15:42:15,697:INFO:              mlflow: Not installed
2023-06-19 15:42:15,697:INFO:              gradio: Not installed
2023-06-19 15:42:15,697:INFO:             fastapi: Not installed
2023-06-19 15:42:15,697:INFO:             uvicorn: Not installed
2023-06-19 15:42:15,697:INFO:              m2cgen: Not installed
2023-06-19 15:42:15,697:INFO:           evidently: Not installed
2023-06-19 15:42:15,697:INFO:               fugue: Not installed
2023-06-19 15:42:15,697:INFO:           streamlit: Not installed
2023-06-19 15:42:15,697:INFO:             prophet: Not installed
2023-06-19 15:42:15,697:INFO:None
2023-06-19 15:42:15,697:INFO:Set up data.
2023-06-19 15:42:15,746:INFO:Set up train/test split.
2023-06-19 15:42:15,774:INFO:Set up index.
2023-06-19 15:42:15,775:INFO:Set up folding strategy.
2023-06-19 15:42:15,775:INFO:Assigning column types.
2023-06-19 15:42:15,788:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:42:15,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:42:15,861:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:42:15,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:15,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:15,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:42:16,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:42:16,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,055:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:42:16,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:42:16,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,223:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:42:16,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,258:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:42:16,347:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:16,434:INFO:Preparing preprocessing pipeline...
2023-06-19 15:42:16,436:INFO:Set up simple imputation.
2023-06-19 15:42:16,449:INFO:Set up encoding of ordinal features.
2023-06-19 15:42:16,459:INFO:Set up encoding of categorical features.
2023-06-19 15:42:16,459:INFO:Set up imbalanced handling.
2023-06-19 15:42:16,460:INFO:Set up column name cleaning.
2023-06-19 15:42:16,930:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:42:16,989:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:42:16,990:INFO:Creating final display dataframe.
2023-06-19 15:42:17,944:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 55)
5   Transformed train set shape       (51162, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16                Fix imbalance              True
17         Fix imbalance method             SMOTE
18               Fold Generator   StratifiedKFold
19                  Fold Number                 5
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              5cb6
2023-06-19 15:42:18,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:18,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:18,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:18,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:42:18,217:INFO:setup() successfully completed in 3.47s...............
2023-06-19 15:44:59,356:INFO:PyCaret ClassificationExperiment
2023-06-19 15:44:59,357:INFO:Logging name: clf-default-name
2023-06-19 15:44:59,357:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:44:59,357:INFO:version 3.0.2
2023-06-19 15:44:59,357:INFO:Initializing setup()
2023-06-19 15:44:59,357:INFO:self.USI: 4481
2023-06-19 15:44:59,357:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:44:59,357:INFO:Checking environment
2023-06-19 15:44:59,357:INFO:python_version: 3.9.7
2023-06-19 15:44:59,357:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:44:59,357:INFO:machine: AMD64
2023-06-19 15:44:59,357:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:44:59,357:INFO:Memory: svmem(total=17120436224, available=5885976576, percent=65.6, used=11234459648, free=5885976576)
2023-06-19 15:44:59,357:INFO:Physical Core: 4
2023-06-19 15:44:59,357:INFO:Logical Core: 4
2023-06-19 15:44:59,357:INFO:Checking libraries
2023-06-19 15:44:59,357:INFO:System:
2023-06-19 15:44:59,358:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:44:59,358:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:44:59,358:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:44:59,358:INFO:PyCaret required dependencies:
2023-06-19 15:44:59,358:INFO:                 pip: 21.2.3
2023-06-19 15:44:59,358:INFO:          setuptools: 57.4.0
2023-06-19 15:44:59,358:INFO:             pycaret: 3.0.2
2023-06-19 15:44:59,358:INFO:             IPython: 7.28.0
2023-06-19 15:44:59,358:INFO:          ipywidgets: 8.0.6
2023-06-19 15:44:59,358:INFO:                tqdm: 4.64.0
2023-06-19 15:44:59,358:INFO:               numpy: 1.22.4
2023-06-19 15:44:59,358:INFO:              pandas: 1.3.5
2023-06-19 15:44:59,358:INFO:              jinja2: 3.1.2
2023-06-19 15:44:59,358:INFO:               scipy: 1.7.1
2023-06-19 15:44:59,358:INFO:              joblib: 1.2.0
2023-06-19 15:44:59,358:INFO:             sklearn: 1.1.0
2023-06-19 15:44:59,358:INFO:                pyod: 1.0.9
2023-06-19 15:44:59,358:INFO:            imblearn: 0.9.1
2023-06-19 15:44:59,359:INFO:   category_encoders: 2.6.1
2023-06-19 15:44:59,359:INFO:            lightgbm: 3.3.5
2023-06-19 15:44:59,359:INFO:               numba: 0.57.0
2023-06-19 15:44:59,359:INFO:            requests: 2.31.0
2023-06-19 15:44:59,359:INFO:          matplotlib: 3.4.3
2023-06-19 15:44:59,359:INFO:          scikitplot: 0.3.7
2023-06-19 15:44:59,359:INFO:         yellowbrick: 1.5
2023-06-19 15:44:59,359:INFO:              plotly: 5.8.0
2023-06-19 15:44:59,359:INFO:             kaleido: 0.2.1
2023-06-19 15:44:59,359:INFO:         statsmodels: 0.14.0
2023-06-19 15:44:59,359:INFO:              sktime: 0.17.0
2023-06-19 15:44:59,359:INFO:               tbats: 1.1.3
2023-06-19 15:44:59,359:INFO:            pmdarima: 2.0.3
2023-06-19 15:44:59,360:INFO:              psutil: 5.9.0
2023-06-19 15:44:59,360:INFO:PyCaret optional dependencies:
2023-06-19 15:44:59,360:INFO:                shap: Not installed
2023-06-19 15:44:59,360:INFO:           interpret: Not installed
2023-06-19 15:44:59,360:INFO:                umap: Not installed
2023-06-19 15:44:59,360:INFO:    pandas_profiling: Not installed
2023-06-19 15:44:59,360:INFO:  explainerdashboard: Not installed
2023-06-19 15:44:59,360:INFO:             autoviz: Not installed
2023-06-19 15:44:59,360:INFO:           fairlearn: Not installed
2023-06-19 15:44:59,360:INFO:             xgboost: Not installed
2023-06-19 15:44:59,360:INFO:            catboost: Not installed
2023-06-19 15:44:59,360:INFO:              kmodes: Not installed
2023-06-19 15:44:59,361:INFO:             mlxtend: Not installed
2023-06-19 15:44:59,361:INFO:       statsforecast: Not installed
2023-06-19 15:44:59,361:INFO:        tune_sklearn: Not installed
2023-06-19 15:44:59,361:INFO:                 ray: Not installed
2023-06-19 15:44:59,361:INFO:            hyperopt: Not installed
2023-06-19 15:44:59,361:INFO:              optuna: Not installed
2023-06-19 15:44:59,361:INFO:               skopt: Not installed
2023-06-19 15:44:59,361:INFO:              mlflow: Not installed
2023-06-19 15:44:59,361:INFO:              gradio: Not installed
2023-06-19 15:44:59,361:INFO:             fastapi: Not installed
2023-06-19 15:44:59,361:INFO:             uvicorn: Not installed
2023-06-19 15:44:59,361:INFO:              m2cgen: Not installed
2023-06-19 15:44:59,361:INFO:           evidently: Not installed
2023-06-19 15:44:59,361:INFO:               fugue: Not installed
2023-06-19 15:44:59,362:INFO:           streamlit: Not installed
2023-06-19 15:44:59,362:INFO:             prophet: Not installed
2023-06-19 15:44:59,362:INFO:None
2023-06-19 15:44:59,362:INFO:Set up data.
2023-06-19 15:44:59,411:INFO:Set up train/test split.
2023-06-19 15:44:59,434:INFO:Set up index.
2023-06-19 15:44:59,435:INFO:Set up folding strategy.
2023-06-19 15:44:59,435:INFO:Assigning column types.
2023-06-19 15:44:59,448:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:44:59,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:44:59,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:44:59,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,610:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:44:59,611:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:44:59,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,651:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:44:59,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:44:59,739:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:44:59,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,823:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:44:59,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:44:59,989:INFO:Preparing preprocessing pipeline...
2023-06-19 15:44:59,991:INFO:Set up simple imputation.
2023-06-19 15:45:00,004:INFO:Set up encoding of ordinal features.
2023-06-19 15:45:00,016:INFO:Set up encoding of categorical features.
2023-06-19 15:45:00,018:INFO:Set up column name cleaning.
2023-06-19 15:45:00,374:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:45:00,421:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:45:00,422:INFO:Creating final display dataframe.
2023-06-19 15:45:00,612:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (41185, 55)
5   Transformed train set shape       (28829, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              4481
2023-06-19 15:45:00,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:45:00,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:45:00,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:45:00,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:45:00,811:INFO:setup() successfully completed in 2.39s...............
2023-06-19 15:45:15,176:INFO:Initializing create_model()
2023-06-19 15:45:15,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B6AD6C10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 15:45:15,177:INFO:Checking exceptions
2023-06-19 15:45:15,211:INFO:Importing libraries
2023-06-19 15:45:15,211:INFO:Copying training dataset
2023-06-19 15:45:15,230:INFO:Defining folds
2023-06-19 15:45:15,230:INFO:Declaring metric variables
2023-06-19 15:45:15,234:INFO:Importing untrained model
2023-06-19 15:45:15,238:INFO:Logistic Regression Imported successfully
2023-06-19 15:45:15,248:INFO:Starting cross validation
2023-06-19 15:45:15,250:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 15:45:27,228:INFO:Calculating mean and std
2023-06-19 15:45:27,229:INFO:Creating metrics dataframe
2023-06-19 15:45:27,239:INFO:Finalizing model
2023-06-19 15:45:30,223:INFO:Uploading results into container
2023-06-19 15:45:30,224:INFO:Uploading model into container now
2023-06-19 15:45:30,240:INFO:_master_model_container: 1
2023-06-19 15:45:30,240:INFO:_display_container: 2
2023-06-19 15:45:30,241:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 15:45:30,241:INFO:create_model() successfully completed......................................
2023-06-19 15:45:30,367:INFO:Initializing evaluate_model()
2023-06-19 15:45:30,367:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B6AD6C10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 15:45:30,393:INFO:Initializing plot_model()
2023-06-19 15:45:30,394:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B6AD6C10>, system=True)
2023-06-19 15:45:30,394:INFO:Checking exceptions
2023-06-19 15:45:30,403:INFO:Preloading libraries
2023-06-19 15:45:30,403:INFO:Copying training dataset
2023-06-19 15:45:30,403:INFO:Plot type: pipeline
2023-06-19 15:45:30,535:INFO:Visual Rendered Successfully
2023-06-19 15:45:30,608:INFO:plot_model() successfully completed......................................
2023-06-19 15:45:39,095:INFO:Initializing plot_model()
2023-06-19 15:45:39,095:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B6AD6C10>, system=True)
2023-06-19 15:45:39,095:INFO:Checking exceptions
2023-06-19 15:45:39,102:INFO:Preloading libraries
2023-06-19 15:45:39,103:INFO:Copying training dataset
2023-06-19 15:45:39,103:INFO:Plot type: parameter
2023-06-19 15:45:39,107:INFO:Visual Rendered Successfully
2023-06-19 15:45:39,178:INFO:plot_model() successfully completed......................................
2023-06-19 15:45:40,439:INFO:Initializing plot_model()
2023-06-19 15:45:40,439:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B6AD6C10>, system=True)
2023-06-19 15:45:40,439:INFO:Checking exceptions
2023-06-19 15:45:40,446:INFO:Preloading libraries
2023-06-19 15:45:40,446:INFO:Copying training dataset
2023-06-19 15:45:40,447:INFO:Plot type: auc
2023-06-19 15:45:40,637:INFO:Fitting Model
2023-06-19 15:45:40,637:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 15:45:40,638:INFO:Scoring test/hold-out set
2023-06-19 15:45:40,896:INFO:Visual Rendered Successfully
2023-06-19 15:45:40,999:INFO:plot_model() successfully completed......................................
2023-06-19 15:45:43,384:INFO:Initializing plot_model()
2023-06-19 15:45:43,384:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B6AD6C10>, system=True)
2023-06-19 15:45:43,384:INFO:Checking exceptions
2023-06-19 15:45:43,391:INFO:Preloading libraries
2023-06-19 15:45:43,391:INFO:Copying training dataset
2023-06-19 15:45:43,391:INFO:Plot type: confusion_matrix
2023-06-19 15:45:43,565:INFO:Fitting Model
2023-06-19 15:45:43,566:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 15:45:43,566:INFO:Scoring test/hold-out set
2023-06-19 15:45:43,677:INFO:Visual Rendered Successfully
2023-06-19 15:45:43,761:INFO:plot_model() successfully completed......................................
2023-06-19 15:45:46,057:INFO:Initializing plot_model()
2023-06-19 15:45:46,057:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B6AD6C10>, system=True)
2023-06-19 15:45:46,057:INFO:Checking exceptions
2023-06-19 15:45:46,064:INFO:Preloading libraries
2023-06-19 15:45:46,065:INFO:Copying training dataset
2023-06-19 15:45:46,065:INFO:Plot type: feature
2023-06-19 15:45:46,363:INFO:Visual Rendered Successfully
2023-06-19 15:45:46,467:INFO:plot_model() successfully completed......................................
2023-06-19 15:45:49,440:INFO:Initializing plot_model()
2023-06-19 15:45:49,440:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B6AD6C10>, system=True)
2023-06-19 15:45:49,440:INFO:Checking exceptions
2023-06-19 15:45:49,446:INFO:Preloading libraries
2023-06-19 15:45:49,447:INFO:Copying training dataset
2023-06-19 15:45:49,447:INFO:Plot type: feature_all
2023-06-19 15:45:50,383:INFO:Visual Rendered Successfully
2023-06-19 15:45:50,452:INFO:plot_model() successfully completed......................................
2023-06-19 15:50:44,045:INFO:PyCaret ClassificationExperiment
2023-06-19 15:50:44,045:INFO:Logging name: clf-default-name
2023-06-19 15:50:44,045:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:50:44,045:INFO:version 3.0.2
2023-06-19 15:50:44,046:INFO:Initializing setup()
2023-06-19 15:50:44,046:INFO:self.USI: 44f3
2023-06-19 15:50:44,047:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:50:44,047:INFO:Checking environment
2023-06-19 15:50:44,047:INFO:python_version: 3.9.7
2023-06-19 15:50:44,047:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:50:44,047:INFO:machine: AMD64
2023-06-19 15:50:44,047:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:50:44,047:INFO:Memory: svmem(total=17120436224, available=5547384832, percent=67.6, used=11573051392, free=5547384832)
2023-06-19 15:50:44,047:INFO:Physical Core: 4
2023-06-19 15:50:44,047:INFO:Logical Core: 4
2023-06-19 15:50:44,047:INFO:Checking libraries
2023-06-19 15:50:44,047:INFO:System:
2023-06-19 15:50:44,047:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:50:44,047:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:50:44,048:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:50:44,048:INFO:PyCaret required dependencies:
2023-06-19 15:50:44,048:INFO:                 pip: 21.2.3
2023-06-19 15:50:44,048:INFO:          setuptools: 57.4.0
2023-06-19 15:50:44,048:INFO:             pycaret: 3.0.2
2023-06-19 15:50:44,049:INFO:             IPython: 7.28.0
2023-06-19 15:50:44,049:INFO:          ipywidgets: 8.0.6
2023-06-19 15:50:44,049:INFO:                tqdm: 4.64.0
2023-06-19 15:50:44,049:INFO:               numpy: 1.22.4
2023-06-19 15:50:44,049:INFO:              pandas: 1.3.5
2023-06-19 15:50:44,049:INFO:              jinja2: 3.1.2
2023-06-19 15:50:44,049:INFO:               scipy: 1.7.1
2023-06-19 15:50:44,049:INFO:              joblib: 1.2.0
2023-06-19 15:50:44,049:INFO:             sklearn: 1.1.0
2023-06-19 15:50:44,049:INFO:                pyod: 1.0.9
2023-06-19 15:50:44,049:INFO:            imblearn: 0.9.1
2023-06-19 15:50:44,049:INFO:   category_encoders: 2.6.1
2023-06-19 15:50:44,049:INFO:            lightgbm: 3.3.5
2023-06-19 15:50:44,049:INFO:               numba: 0.57.0
2023-06-19 15:50:44,049:INFO:            requests: 2.31.0
2023-06-19 15:50:44,050:INFO:          matplotlib: 3.4.3
2023-06-19 15:50:44,050:INFO:          scikitplot: 0.3.7
2023-06-19 15:50:44,050:INFO:         yellowbrick: 1.5
2023-06-19 15:50:44,050:INFO:              plotly: 5.8.0
2023-06-19 15:50:44,050:INFO:             kaleido: 0.2.1
2023-06-19 15:50:44,050:INFO:         statsmodels: 0.14.0
2023-06-19 15:50:44,050:INFO:              sktime: 0.17.0
2023-06-19 15:50:44,050:INFO:               tbats: 1.1.3
2023-06-19 15:50:44,050:INFO:            pmdarima: 2.0.3
2023-06-19 15:50:44,050:INFO:              psutil: 5.9.0
2023-06-19 15:50:44,051:INFO:PyCaret optional dependencies:
2023-06-19 15:50:44,051:INFO:                shap: Not installed
2023-06-19 15:50:44,051:INFO:           interpret: Not installed
2023-06-19 15:50:44,051:INFO:                umap: Not installed
2023-06-19 15:50:44,051:INFO:    pandas_profiling: Not installed
2023-06-19 15:50:44,051:INFO:  explainerdashboard: Not installed
2023-06-19 15:50:44,051:INFO:             autoviz: Not installed
2023-06-19 15:50:44,051:INFO:           fairlearn: Not installed
2023-06-19 15:50:44,051:INFO:             xgboost: Not installed
2023-06-19 15:50:44,051:INFO:            catboost: Not installed
2023-06-19 15:50:44,051:INFO:              kmodes: Not installed
2023-06-19 15:50:44,051:INFO:             mlxtend: Not installed
2023-06-19 15:50:44,051:INFO:       statsforecast: Not installed
2023-06-19 15:50:44,051:INFO:        tune_sklearn: Not installed
2023-06-19 15:50:44,052:INFO:                 ray: Not installed
2023-06-19 15:50:44,052:INFO:            hyperopt: Not installed
2023-06-19 15:50:44,052:INFO:              optuna: Not installed
2023-06-19 15:50:44,052:INFO:               skopt: Not installed
2023-06-19 15:50:44,052:INFO:              mlflow: Not installed
2023-06-19 15:50:44,052:INFO:              gradio: Not installed
2023-06-19 15:50:44,052:INFO:             fastapi: Not installed
2023-06-19 15:50:44,052:INFO:             uvicorn: Not installed
2023-06-19 15:50:44,052:INFO:              m2cgen: Not installed
2023-06-19 15:50:44,052:INFO:           evidently: Not installed
2023-06-19 15:50:44,052:INFO:               fugue: Not installed
2023-06-19 15:50:44,052:INFO:           streamlit: Not installed
2023-06-19 15:50:44,053:INFO:             prophet: Not installed
2023-06-19 15:50:44,053:INFO:None
2023-06-19 15:50:44,053:INFO:Set up data.
2023-06-19 15:50:44,137:INFO:Set up train/test split.
2023-06-19 15:50:44,173:INFO:Set up index.
2023-06-19 15:50:44,174:INFO:Set up folding strategy.
2023-06-19 15:50:44,174:INFO:Assigning column types.
2023-06-19 15:50:44,193:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:50:44,260:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:50:44,261:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:50:44,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,353:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:50:44,354:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:50:44,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,392:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:50:44,452:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:50:44,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,547:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:50:44,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,582:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:50:44,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:44,772:INFO:Preparing preprocessing pipeline...
2023-06-19 15:50:44,775:INFO:Set up simple imputation.
2023-06-19 15:50:44,790:INFO:Set up encoding of ordinal features.
2023-06-19 15:50:44,802:INFO:Set up encoding of categorical features.
2023-06-19 15:50:44,802:INFO:Set up imbalanced handling.
2023-06-19 15:50:44,803:INFO:Set up column name cleaning.
2023-06-19 15:50:45,306:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:50:45,359:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:50:45,359:INFO:Creating final display dataframe.
2023-06-19 15:50:45,593:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 55)
5   Transformed train set shape       (51162, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16                Fix imbalance              True
17         Fix imbalance method             SMOTE
18               Fold Generator   StratifiedKFold
19                  Fold Number                 5
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              44f3
2023-06-19 15:50:45,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:45,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:45,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:45,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:50:45,854:INFO:setup() successfully completed in 2.87s...............
2023-06-19 15:51:24,311:INFO:PyCaret ClassificationExperiment
2023-06-19 15:51:24,311:INFO:Logging name: clf-default-name
2023-06-19 15:51:24,311:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:51:24,312:INFO:version 3.0.2
2023-06-19 15:51:24,312:INFO:Initializing setup()
2023-06-19 15:51:24,312:INFO:self.USI: afd8
2023-06-19 15:51:24,312:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:51:24,312:INFO:Checking environment
2023-06-19 15:51:24,312:INFO:python_version: 3.9.7
2023-06-19 15:51:24,312:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:51:24,312:INFO:machine: AMD64
2023-06-19 15:51:24,312:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:51:24,312:INFO:Memory: svmem(total=17120436224, available=5455998976, percent=68.1, used=11664437248, free=5455998976)
2023-06-19 15:51:24,312:INFO:Physical Core: 4
2023-06-19 15:51:24,312:INFO:Logical Core: 4
2023-06-19 15:51:24,312:INFO:Checking libraries
2023-06-19 15:51:24,312:INFO:System:
2023-06-19 15:51:24,312:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:51:24,312:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:51:24,312:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:51:24,312:INFO:PyCaret required dependencies:
2023-06-19 15:51:24,313:INFO:                 pip: 21.2.3
2023-06-19 15:51:24,313:INFO:          setuptools: 57.4.0
2023-06-19 15:51:24,313:INFO:             pycaret: 3.0.2
2023-06-19 15:51:24,313:INFO:             IPython: 7.28.0
2023-06-19 15:51:24,313:INFO:          ipywidgets: 8.0.6
2023-06-19 15:51:24,313:INFO:                tqdm: 4.64.0
2023-06-19 15:51:24,313:INFO:               numpy: 1.22.4
2023-06-19 15:51:24,313:INFO:              pandas: 1.3.5
2023-06-19 15:51:24,313:INFO:              jinja2: 3.1.2
2023-06-19 15:51:24,313:INFO:               scipy: 1.7.1
2023-06-19 15:51:24,313:INFO:              joblib: 1.2.0
2023-06-19 15:51:24,313:INFO:             sklearn: 1.1.0
2023-06-19 15:51:24,313:INFO:                pyod: 1.0.9
2023-06-19 15:51:24,313:INFO:            imblearn: 0.9.1
2023-06-19 15:51:24,313:INFO:   category_encoders: 2.6.1
2023-06-19 15:51:24,313:INFO:            lightgbm: 3.3.5
2023-06-19 15:51:24,313:INFO:               numba: 0.57.0
2023-06-19 15:51:24,313:INFO:            requests: 2.31.0
2023-06-19 15:51:24,313:INFO:          matplotlib: 3.4.3
2023-06-19 15:51:24,313:INFO:          scikitplot: 0.3.7
2023-06-19 15:51:24,313:INFO:         yellowbrick: 1.5
2023-06-19 15:51:24,314:INFO:              plotly: 5.8.0
2023-06-19 15:51:24,314:INFO:             kaleido: 0.2.1
2023-06-19 15:51:24,314:INFO:         statsmodels: 0.14.0
2023-06-19 15:51:24,314:INFO:              sktime: 0.17.0
2023-06-19 15:51:24,314:INFO:               tbats: 1.1.3
2023-06-19 15:51:24,314:INFO:            pmdarima: 2.0.3
2023-06-19 15:51:24,314:INFO:              psutil: 5.9.0
2023-06-19 15:51:24,314:INFO:PyCaret optional dependencies:
2023-06-19 15:51:24,314:INFO:                shap: Not installed
2023-06-19 15:51:24,314:INFO:           interpret: Not installed
2023-06-19 15:51:24,314:INFO:                umap: Not installed
2023-06-19 15:51:24,314:INFO:    pandas_profiling: Not installed
2023-06-19 15:51:24,314:INFO:  explainerdashboard: Not installed
2023-06-19 15:51:24,314:INFO:             autoviz: Not installed
2023-06-19 15:51:24,314:INFO:           fairlearn: Not installed
2023-06-19 15:51:24,314:INFO:             xgboost: Not installed
2023-06-19 15:51:24,314:INFO:            catboost: Not installed
2023-06-19 15:51:24,314:INFO:              kmodes: Not installed
2023-06-19 15:51:24,315:INFO:             mlxtend: Not installed
2023-06-19 15:51:24,315:INFO:       statsforecast: Not installed
2023-06-19 15:51:24,315:INFO:        tune_sklearn: Not installed
2023-06-19 15:51:24,315:INFO:                 ray: Not installed
2023-06-19 15:51:24,315:INFO:            hyperopt: Not installed
2023-06-19 15:51:24,315:INFO:              optuna: Not installed
2023-06-19 15:51:24,315:INFO:               skopt: Not installed
2023-06-19 15:51:24,315:INFO:              mlflow: Not installed
2023-06-19 15:51:24,315:INFO:              gradio: Not installed
2023-06-19 15:51:24,315:INFO:             fastapi: Not installed
2023-06-19 15:51:24,315:INFO:             uvicorn: Not installed
2023-06-19 15:51:24,315:INFO:              m2cgen: Not installed
2023-06-19 15:51:24,315:INFO:           evidently: Not installed
2023-06-19 15:51:24,315:INFO:               fugue: Not installed
2023-06-19 15:51:24,315:INFO:           streamlit: Not installed
2023-06-19 15:51:24,315:INFO:             prophet: Not installed
2023-06-19 15:51:24,315:INFO:None
2023-06-19 15:51:24,316:INFO:Set up data.
2023-06-19 15:51:24,378:INFO:Set up train/test split.
2023-06-19 15:51:24,405:INFO:Set up index.
2023-06-19 15:51:24,407:INFO:Set up folding strategy.
2023-06-19 15:51:24,407:INFO:Assigning column types.
2023-06-19 15:51:24,429:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:51:24,493:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:51:24,497:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:51:24,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,594:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:51:24,595:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:51:24,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,634:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:51:24,691:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:51:24,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,782:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:51:24,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,818:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:51:24,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:24,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:25,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:25,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:25,046:INFO:Preparing preprocessing pipeline...
2023-06-19 15:51:25,048:INFO:Set up simple imputation.
2023-06-19 15:51:25,062:INFO:Set up encoding of ordinal features.
2023-06-19 15:51:25,073:INFO:Set up encoding of categorical features.
2023-06-19 15:51:25,075:INFO:Set up column name cleaning.
2023-06-19 15:51:25,483:INFO:Finished creating preprocessing pipeline.
2023-06-19 15:51:25,537:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 15:51:25,538:INFO:Creating final display dataframe.
2023-06-19 15:51:25,752:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (41185, 55)
5   Transformed train set shape       (28829, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              afd8
2023-06-19 15:51:25,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:25,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:25,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:25,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:51:25,996:INFO:setup() successfully completed in 2.7s...............
2023-06-19 15:59:53,398:INFO:PyCaret ClassificationExperiment
2023-06-19 15:59:53,398:INFO:Logging name: clf-default-name
2023-06-19 15:59:53,399:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 15:59:53,399:INFO:version 3.0.2
2023-06-19 15:59:53,399:INFO:Initializing setup()
2023-06-19 15:59:53,399:INFO:self.USI: 339d
2023-06-19 15:59:53,399:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 15:59:53,399:INFO:Checking environment
2023-06-19 15:59:53,399:INFO:python_version: 3.9.7
2023-06-19 15:59:53,399:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 15:59:53,399:INFO:machine: AMD64
2023-06-19 15:59:53,399:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 15:59:53,399:INFO:Memory: svmem(total=17120436224, available=5658644480, percent=66.9, used=11461791744, free=5658644480)
2023-06-19 15:59:53,399:INFO:Physical Core: 4
2023-06-19 15:59:53,399:INFO:Logical Core: 4
2023-06-19 15:59:53,399:INFO:Checking libraries
2023-06-19 15:59:53,399:INFO:System:
2023-06-19 15:59:53,399:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 15:59:53,399:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 15:59:53,400:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 15:59:53,400:INFO:PyCaret required dependencies:
2023-06-19 15:59:53,400:INFO:                 pip: 21.2.3
2023-06-19 15:59:53,400:INFO:          setuptools: 57.4.0
2023-06-19 15:59:53,400:INFO:             pycaret: 3.0.2
2023-06-19 15:59:53,400:INFO:             IPython: 7.28.0
2023-06-19 15:59:53,400:INFO:          ipywidgets: 8.0.6
2023-06-19 15:59:53,400:INFO:                tqdm: 4.64.0
2023-06-19 15:59:53,400:INFO:               numpy: 1.22.4
2023-06-19 15:59:53,400:INFO:              pandas: 1.3.5
2023-06-19 15:59:53,400:INFO:              jinja2: 3.1.2
2023-06-19 15:59:53,400:INFO:               scipy: 1.7.1
2023-06-19 15:59:53,400:INFO:              joblib: 1.2.0
2023-06-19 15:59:53,400:INFO:             sklearn: 1.1.0
2023-06-19 15:59:53,400:INFO:                pyod: 1.0.9
2023-06-19 15:59:53,400:INFO:            imblearn: 0.9.1
2023-06-19 15:59:53,400:INFO:   category_encoders: 2.6.1
2023-06-19 15:59:53,400:INFO:            lightgbm: 3.3.5
2023-06-19 15:59:53,400:INFO:               numba: 0.57.0
2023-06-19 15:59:53,400:INFO:            requests: 2.31.0
2023-06-19 15:59:53,400:INFO:          matplotlib: 3.4.3
2023-06-19 15:59:53,401:INFO:          scikitplot: 0.3.7
2023-06-19 15:59:53,401:INFO:         yellowbrick: 1.5
2023-06-19 15:59:53,401:INFO:              plotly: 5.8.0
2023-06-19 15:59:53,401:INFO:             kaleido: 0.2.1
2023-06-19 15:59:53,401:INFO:         statsmodels: 0.14.0
2023-06-19 15:59:53,401:INFO:              sktime: 0.17.0
2023-06-19 15:59:53,401:INFO:               tbats: 1.1.3
2023-06-19 15:59:53,401:INFO:            pmdarima: 2.0.3
2023-06-19 15:59:53,401:INFO:              psutil: 5.9.0
2023-06-19 15:59:53,401:INFO:PyCaret optional dependencies:
2023-06-19 15:59:53,401:INFO:                shap: Not installed
2023-06-19 15:59:53,401:INFO:           interpret: Not installed
2023-06-19 15:59:53,401:INFO:                umap: Not installed
2023-06-19 15:59:53,401:INFO:    pandas_profiling: Not installed
2023-06-19 15:59:53,401:INFO:  explainerdashboard: Not installed
2023-06-19 15:59:53,401:INFO:             autoviz: Not installed
2023-06-19 15:59:53,402:INFO:           fairlearn: Not installed
2023-06-19 15:59:53,402:INFO:             xgboost: Not installed
2023-06-19 15:59:53,402:INFO:            catboost: Not installed
2023-06-19 15:59:53,402:INFO:              kmodes: Not installed
2023-06-19 15:59:53,402:INFO:             mlxtend: Not installed
2023-06-19 15:59:53,402:INFO:       statsforecast: Not installed
2023-06-19 15:59:53,402:INFO:        tune_sklearn: Not installed
2023-06-19 15:59:53,402:INFO:                 ray: Not installed
2023-06-19 15:59:53,402:INFO:            hyperopt: Not installed
2023-06-19 15:59:53,402:INFO:              optuna: Not installed
2023-06-19 15:59:53,402:INFO:               skopt: Not installed
2023-06-19 15:59:53,402:INFO:              mlflow: Not installed
2023-06-19 15:59:53,402:INFO:              gradio: Not installed
2023-06-19 15:59:53,402:INFO:             fastapi: Not installed
2023-06-19 15:59:53,402:INFO:             uvicorn: Not installed
2023-06-19 15:59:53,402:INFO:              m2cgen: Not installed
2023-06-19 15:59:53,402:INFO:           evidently: Not installed
2023-06-19 15:59:53,402:INFO:               fugue: Not installed
2023-06-19 15:59:53,402:INFO:           streamlit: Not installed
2023-06-19 15:59:53,402:INFO:             prophet: Not installed
2023-06-19 15:59:53,403:INFO:None
2023-06-19 15:59:53,403:INFO:Set up data.
2023-06-19 15:59:53,492:INFO:Set up train/test split.
2023-06-19 15:59:53,523:INFO:Set up index.
2023-06-19 15:59:53,524:INFO:Set up folding strategy.
2023-06-19 15:59:53,524:INFO:Assigning column types.
2023-06-19 15:59:53,540:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 15:59:53,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:59:53,629:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:59:53,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:53,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:53,830:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 15:59:53,833:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:59:53,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:53,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:53,879:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 15:59:53,961:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:59:54,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:54,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:54,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 15:59:54,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:54,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:54,155:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 15:59:54,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:54,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:54,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:54,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 15:59:54,364:INFO:Preparing preprocessing pipeline...
2023-06-19 15:59:54,369:INFO:Set up simple imputation.
2023-06-19 15:59:54,384:INFO:Set up encoding of ordinal features.
2023-06-19 15:59:54,395:INFO:Set up encoding of categorical features.
2023-06-19 15:59:54,395:INFO:Set up imbalanced handling.
2023-06-19 16:00:09,450:INFO:PyCaret ClassificationExperiment
2023-06-19 16:00:09,450:INFO:Logging name: clf-default-name
2023-06-19 16:00:09,450:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:00:09,450:INFO:version 3.0.2
2023-06-19 16:00:09,450:INFO:Initializing setup()
2023-06-19 16:00:09,450:INFO:self.USI: dba5
2023-06-19 16:00:09,450:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:00:09,450:INFO:Checking environment
2023-06-19 16:00:09,450:INFO:python_version: 3.9.7
2023-06-19 16:00:09,450:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:00:09,450:INFO:machine: AMD64
2023-06-19 16:00:09,451:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:00:09,451:INFO:Memory: svmem(total=17120436224, available=5651279872, percent=67.0, used=11469156352, free=5651279872)
2023-06-19 16:00:09,451:INFO:Physical Core: 4
2023-06-19 16:00:09,451:INFO:Logical Core: 4
2023-06-19 16:00:09,451:INFO:Checking libraries
2023-06-19 16:00:09,451:INFO:System:
2023-06-19 16:00:09,451:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:00:09,451:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:00:09,451:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:00:09,451:INFO:PyCaret required dependencies:
2023-06-19 16:00:09,451:INFO:                 pip: 21.2.3
2023-06-19 16:00:09,451:INFO:          setuptools: 57.4.0
2023-06-19 16:00:09,451:INFO:             pycaret: 3.0.2
2023-06-19 16:00:09,451:INFO:             IPython: 7.28.0
2023-06-19 16:00:09,451:INFO:          ipywidgets: 8.0.6
2023-06-19 16:00:09,451:INFO:                tqdm: 4.64.0
2023-06-19 16:00:09,451:INFO:               numpy: 1.22.4
2023-06-19 16:00:09,452:INFO:              pandas: 1.3.5
2023-06-19 16:00:09,452:INFO:              jinja2: 3.1.2
2023-06-19 16:00:09,452:INFO:               scipy: 1.7.1
2023-06-19 16:00:09,452:INFO:              joblib: 1.2.0
2023-06-19 16:00:09,452:INFO:             sklearn: 1.1.0
2023-06-19 16:00:09,452:INFO:                pyod: 1.0.9
2023-06-19 16:00:09,452:INFO:            imblearn: 0.9.1
2023-06-19 16:00:09,452:INFO:   category_encoders: 2.6.1
2023-06-19 16:00:09,452:INFO:            lightgbm: 3.3.5
2023-06-19 16:00:09,452:INFO:               numba: 0.57.0
2023-06-19 16:00:09,452:INFO:            requests: 2.31.0
2023-06-19 16:00:09,452:INFO:          matplotlib: 3.4.3
2023-06-19 16:00:09,452:INFO:          scikitplot: 0.3.7
2023-06-19 16:00:09,452:INFO:         yellowbrick: 1.5
2023-06-19 16:00:09,452:INFO:              plotly: 5.8.0
2023-06-19 16:00:09,452:INFO:             kaleido: 0.2.1
2023-06-19 16:00:09,452:INFO:         statsmodels: 0.14.0
2023-06-19 16:00:09,452:INFO:              sktime: 0.17.0
2023-06-19 16:00:09,452:INFO:               tbats: 1.1.3
2023-06-19 16:00:09,452:INFO:            pmdarima: 2.0.3
2023-06-19 16:00:09,452:INFO:              psutil: 5.9.0
2023-06-19 16:00:09,452:INFO:PyCaret optional dependencies:
2023-06-19 16:00:09,453:INFO:                shap: Not installed
2023-06-19 16:00:09,453:INFO:           interpret: Not installed
2023-06-19 16:00:09,453:INFO:                umap: Not installed
2023-06-19 16:00:09,453:INFO:    pandas_profiling: Not installed
2023-06-19 16:00:09,453:INFO:  explainerdashboard: Not installed
2023-06-19 16:00:09,453:INFO:             autoviz: Not installed
2023-06-19 16:00:09,453:INFO:           fairlearn: Not installed
2023-06-19 16:00:09,453:INFO:             xgboost: Not installed
2023-06-19 16:00:09,453:INFO:            catboost: Not installed
2023-06-19 16:00:09,453:INFO:              kmodes: Not installed
2023-06-19 16:00:09,453:INFO:             mlxtend: Not installed
2023-06-19 16:00:09,453:INFO:       statsforecast: Not installed
2023-06-19 16:00:09,453:INFO:        tune_sklearn: Not installed
2023-06-19 16:00:09,453:INFO:                 ray: Not installed
2023-06-19 16:00:09,453:INFO:            hyperopt: Not installed
2023-06-19 16:00:09,453:INFO:              optuna: Not installed
2023-06-19 16:00:09,453:INFO:               skopt: Not installed
2023-06-19 16:00:09,453:INFO:              mlflow: Not installed
2023-06-19 16:00:09,453:INFO:              gradio: Not installed
2023-06-19 16:00:09,453:INFO:             fastapi: Not installed
2023-06-19 16:00:09,453:INFO:             uvicorn: Not installed
2023-06-19 16:00:09,453:INFO:              m2cgen: Not installed
2023-06-19 16:00:09,454:INFO:           evidently: Not installed
2023-06-19 16:00:09,454:INFO:               fugue: Not installed
2023-06-19 16:00:09,454:INFO:           streamlit: Not installed
2023-06-19 16:00:09,454:INFO:             prophet: Not installed
2023-06-19 16:00:09,454:INFO:None
2023-06-19 16:00:09,454:INFO:Set up data.
2023-06-19 16:00:09,533:INFO:Set up train/test split.
2023-06-19 16:00:09,587:INFO:Set up index.
2023-06-19 16:00:09,588:INFO:Set up folding strategy.
2023-06-19 16:00:09,588:INFO:Assigning column types.
2023-06-19 16:00:09,625:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:00:09,747:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:00:09,749:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:09,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:09,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:09,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:00:09,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:09,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:09,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:09,934:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:00:10,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:10,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:10,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:10,090:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:10,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:10,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:10,124:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:00:10,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:10,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:10,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:10,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:10,307:INFO:Preparing preprocessing pipeline...
2023-06-19 16:00:10,309:INFO:Set up simple imputation.
2023-06-19 16:00:10,324:INFO:Set up encoding of ordinal features.
2023-06-19 16:00:10,336:INFO:Set up encoding of categorical features.
2023-06-19 16:00:10,336:INFO:Set up imbalanced handling.
2023-06-19 16:00:10,337:INFO:Set up column name cleaning.
2023-06-19 16:00:10,794:INFO:Finished creating preprocessing pipeline.
2023-06-19 16:00:10,856:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 16:00:10,856:INFO:Creating final display dataframe.
2023-06-19 16:00:11,128:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 55)
5   Transformed train set shape       (51162, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16                Fix imbalance              True
17         Fix imbalance method             SMOTE
18               Fold Generator   StratifiedKFold
19                  Fold Number                 5
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              dba5
2023-06-19 16:00:11,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:11,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:11,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:11,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:11,368:INFO:setup() successfully completed in 2.94s...............
2023-06-19 16:00:18,920:INFO:PyCaret ClassificationExperiment
2023-06-19 16:00:18,920:INFO:Logging name: clf-default-name
2023-06-19 16:00:18,920:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:00:18,920:INFO:version 3.0.2
2023-06-19 16:00:18,921:INFO:Initializing setup()
2023-06-19 16:00:18,921:INFO:self.USI: 23ca
2023-06-19 16:00:18,921:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:00:18,921:INFO:Checking environment
2023-06-19 16:00:18,921:INFO:python_version: 3.9.7
2023-06-19 16:00:18,921:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:00:18,921:INFO:machine: AMD64
2023-06-19 16:00:18,921:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:00:18,921:INFO:Memory: svmem(total=17120436224, available=5639188480, percent=67.1, used=11481247744, free=5639188480)
2023-06-19 16:00:18,921:INFO:Physical Core: 4
2023-06-19 16:00:18,921:INFO:Logical Core: 4
2023-06-19 16:00:18,921:INFO:Checking libraries
2023-06-19 16:00:18,921:INFO:System:
2023-06-19 16:00:18,921:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:00:18,921:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:00:18,921:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:00:18,922:INFO:PyCaret required dependencies:
2023-06-19 16:00:18,922:INFO:                 pip: 21.2.3
2023-06-19 16:00:18,922:INFO:          setuptools: 57.4.0
2023-06-19 16:00:18,922:INFO:             pycaret: 3.0.2
2023-06-19 16:00:18,922:INFO:             IPython: 7.28.0
2023-06-19 16:00:18,922:INFO:          ipywidgets: 8.0.6
2023-06-19 16:00:18,922:INFO:                tqdm: 4.64.0
2023-06-19 16:00:18,922:INFO:               numpy: 1.22.4
2023-06-19 16:00:18,922:INFO:              pandas: 1.3.5
2023-06-19 16:00:18,922:INFO:              jinja2: 3.1.2
2023-06-19 16:00:18,922:INFO:               scipy: 1.7.1
2023-06-19 16:00:18,922:INFO:              joblib: 1.2.0
2023-06-19 16:00:18,922:INFO:             sklearn: 1.1.0
2023-06-19 16:00:18,922:INFO:                pyod: 1.0.9
2023-06-19 16:00:18,922:INFO:            imblearn: 0.9.1
2023-06-19 16:00:18,922:INFO:   category_encoders: 2.6.1
2023-06-19 16:00:18,922:INFO:            lightgbm: 3.3.5
2023-06-19 16:00:18,922:INFO:               numba: 0.57.0
2023-06-19 16:00:18,922:INFO:            requests: 2.31.0
2023-06-19 16:00:18,922:INFO:          matplotlib: 3.4.3
2023-06-19 16:00:18,922:INFO:          scikitplot: 0.3.7
2023-06-19 16:00:18,923:INFO:         yellowbrick: 1.5
2023-06-19 16:00:18,923:INFO:              plotly: 5.8.0
2023-06-19 16:00:18,923:INFO:             kaleido: 0.2.1
2023-06-19 16:00:18,923:INFO:         statsmodels: 0.14.0
2023-06-19 16:00:18,923:INFO:              sktime: 0.17.0
2023-06-19 16:00:18,923:INFO:               tbats: 1.1.3
2023-06-19 16:00:18,923:INFO:            pmdarima: 2.0.3
2023-06-19 16:00:18,923:INFO:              psutil: 5.9.0
2023-06-19 16:00:18,923:INFO:PyCaret optional dependencies:
2023-06-19 16:00:18,923:INFO:                shap: Not installed
2023-06-19 16:00:18,923:INFO:           interpret: Not installed
2023-06-19 16:00:18,923:INFO:                umap: Not installed
2023-06-19 16:00:18,923:INFO:    pandas_profiling: Not installed
2023-06-19 16:00:18,923:INFO:  explainerdashboard: Not installed
2023-06-19 16:00:18,923:INFO:             autoviz: Not installed
2023-06-19 16:00:18,923:INFO:           fairlearn: Not installed
2023-06-19 16:00:18,924:INFO:             xgboost: Not installed
2023-06-19 16:00:18,924:INFO:            catboost: Not installed
2023-06-19 16:00:18,924:INFO:              kmodes: Not installed
2023-06-19 16:00:18,924:INFO:             mlxtend: Not installed
2023-06-19 16:00:18,924:INFO:       statsforecast: Not installed
2023-06-19 16:00:18,924:INFO:        tune_sklearn: Not installed
2023-06-19 16:00:18,924:INFO:                 ray: Not installed
2023-06-19 16:00:18,924:INFO:            hyperopt: Not installed
2023-06-19 16:00:18,924:INFO:              optuna: Not installed
2023-06-19 16:00:18,924:INFO:               skopt: Not installed
2023-06-19 16:00:18,924:INFO:              mlflow: Not installed
2023-06-19 16:00:18,924:INFO:              gradio: Not installed
2023-06-19 16:00:18,924:INFO:             fastapi: Not installed
2023-06-19 16:00:18,924:INFO:             uvicorn: Not installed
2023-06-19 16:00:18,924:INFO:              m2cgen: Not installed
2023-06-19 16:00:18,924:INFO:           evidently: Not installed
2023-06-19 16:00:18,924:INFO:               fugue: Not installed
2023-06-19 16:00:18,924:INFO:           streamlit: Not installed
2023-06-19 16:00:18,924:INFO:             prophet: Not installed
2023-06-19 16:00:18,925:INFO:None
2023-06-19 16:00:18,925:INFO:Set up data.
2023-06-19 16:00:18,987:INFO:Set up train/test split.
2023-06-19 16:00:19,013:INFO:Set up index.
2023-06-19 16:00:19,014:INFO:Set up folding strategy.
2023-06-19 16:00:19,014:INFO:Assigning column types.
2023-06-19 16:00:19,028:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:00:19,110:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:00:19,111:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:19,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:00:19,263:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:19,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,303:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:00:19,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:19,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:19,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,501:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:00:19,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:19,692:INFO:Preparing preprocessing pipeline...
2023-06-19 16:00:19,695:INFO:Set up simple imputation.
2023-06-19 16:00:19,708:INFO:Set up encoding of ordinal features.
2023-06-19 16:00:19,719:INFO:Set up encoding of categorical features.
2023-06-19 16:00:19,719:INFO:Set up imbalanced handling.
2023-06-19 16:00:19,720:INFO:Set up column name cleaning.
2023-06-19 16:00:50,604:INFO:PyCaret ClassificationExperiment
2023-06-19 16:00:50,604:INFO:Logging name: clf-default-name
2023-06-19 16:00:50,604:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:00:50,604:INFO:version 3.0.2
2023-06-19 16:00:50,604:INFO:Initializing setup()
2023-06-19 16:00:50,604:INFO:self.USI: b764
2023-06-19 16:00:50,604:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:00:50,604:INFO:Checking environment
2023-06-19 16:00:50,604:INFO:python_version: 3.9.7
2023-06-19 16:00:50,604:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:00:50,605:INFO:machine: AMD64
2023-06-19 16:00:50,605:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:00:50,605:INFO:Memory: svmem(total=17120436224, available=5442576384, percent=68.2, used=11677859840, free=5442576384)
2023-06-19 16:00:50,605:INFO:Physical Core: 4
2023-06-19 16:00:50,605:INFO:Logical Core: 4
2023-06-19 16:00:50,605:INFO:Checking libraries
2023-06-19 16:00:50,605:INFO:System:
2023-06-19 16:00:50,605:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:00:50,605:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:00:50,605:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:00:50,605:INFO:PyCaret required dependencies:
2023-06-19 16:00:50,605:INFO:                 pip: 21.2.3
2023-06-19 16:00:50,605:INFO:          setuptools: 57.4.0
2023-06-19 16:00:50,605:INFO:             pycaret: 3.0.2
2023-06-19 16:00:50,605:INFO:             IPython: 7.28.0
2023-06-19 16:00:50,606:INFO:          ipywidgets: 8.0.6
2023-06-19 16:00:50,606:INFO:                tqdm: 4.64.0
2023-06-19 16:00:50,606:INFO:               numpy: 1.22.4
2023-06-19 16:00:50,606:INFO:              pandas: 1.3.5
2023-06-19 16:00:50,606:INFO:              jinja2: 3.1.2
2023-06-19 16:00:50,606:INFO:               scipy: 1.7.1
2023-06-19 16:00:50,606:INFO:              joblib: 1.2.0
2023-06-19 16:00:50,606:INFO:             sklearn: 1.1.0
2023-06-19 16:00:50,606:INFO:                pyod: 1.0.9
2023-06-19 16:00:50,606:INFO:            imblearn: 0.9.1
2023-06-19 16:00:50,606:INFO:   category_encoders: 2.6.1
2023-06-19 16:00:50,606:INFO:            lightgbm: 3.3.5
2023-06-19 16:00:50,606:INFO:               numba: 0.57.0
2023-06-19 16:00:50,606:INFO:            requests: 2.31.0
2023-06-19 16:00:50,606:INFO:          matplotlib: 3.4.3
2023-06-19 16:00:50,606:INFO:          scikitplot: 0.3.7
2023-06-19 16:00:50,607:INFO:         yellowbrick: 1.5
2023-06-19 16:00:50,607:INFO:              plotly: 5.8.0
2023-06-19 16:00:50,607:INFO:             kaleido: 0.2.1
2023-06-19 16:00:50,607:INFO:         statsmodels: 0.14.0
2023-06-19 16:00:50,607:INFO:              sktime: 0.17.0
2023-06-19 16:00:50,607:INFO:               tbats: 1.1.3
2023-06-19 16:00:50,607:INFO:            pmdarima: 2.0.3
2023-06-19 16:00:50,607:INFO:              psutil: 5.9.0
2023-06-19 16:00:50,607:INFO:PyCaret optional dependencies:
2023-06-19 16:00:50,607:INFO:                shap: Not installed
2023-06-19 16:00:50,607:INFO:           interpret: Not installed
2023-06-19 16:00:50,607:INFO:                umap: Not installed
2023-06-19 16:00:50,607:INFO:    pandas_profiling: Not installed
2023-06-19 16:00:50,607:INFO:  explainerdashboard: Not installed
2023-06-19 16:00:50,607:INFO:             autoviz: Not installed
2023-06-19 16:00:50,607:INFO:           fairlearn: Not installed
2023-06-19 16:00:50,607:INFO:             xgboost: Not installed
2023-06-19 16:00:50,607:INFO:            catboost: Not installed
2023-06-19 16:00:50,607:INFO:              kmodes: Not installed
2023-06-19 16:00:50,607:INFO:             mlxtend: Not installed
2023-06-19 16:00:50,608:INFO:       statsforecast: Not installed
2023-06-19 16:00:50,608:INFO:        tune_sklearn: Not installed
2023-06-19 16:00:50,608:INFO:                 ray: Not installed
2023-06-19 16:00:50,608:INFO:            hyperopt: Not installed
2023-06-19 16:00:50,608:INFO:              optuna: Not installed
2023-06-19 16:00:50,608:INFO:               skopt: Not installed
2023-06-19 16:00:50,608:INFO:              mlflow: Not installed
2023-06-19 16:00:50,608:INFO:              gradio: Not installed
2023-06-19 16:00:50,608:INFO:             fastapi: Not installed
2023-06-19 16:00:50,608:INFO:             uvicorn: Not installed
2023-06-19 16:00:50,608:INFO:              m2cgen: Not installed
2023-06-19 16:00:50,608:INFO:           evidently: Not installed
2023-06-19 16:00:50,608:INFO:               fugue: Not installed
2023-06-19 16:00:50,609:INFO:           streamlit: Not installed
2023-06-19 16:00:50,609:INFO:             prophet: Not installed
2023-06-19 16:00:50,609:INFO:None
2023-06-19 16:00:50,609:INFO:Set up data.
2023-06-19 16:00:50,740:INFO:Set up train/test split.
2023-06-19 16:00:50,801:INFO:Set up index.
2023-06-19 16:00:50,804:INFO:Set up folding strategy.
2023-06-19 16:00:50,805:INFO:Assigning column types.
2023-06-19 16:00:50,832:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:00:50,948:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:00:50,951:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:51,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:00:51,131:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:51,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,192:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:00:51,252:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:51,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,348:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:00:51,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,387:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:00:51,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:00:51,568:INFO:Preparing preprocessing pipeline...
2023-06-19 16:00:51,570:INFO:Set up simple imputation.
2023-06-19 16:00:51,588:INFO:Set up encoding of ordinal features.
2023-06-19 16:00:51,598:INFO:Set up encoding of categorical features.
2023-06-19 16:00:51,598:INFO:Set up imbalanced handling.
2023-06-19 16:01:07,599:INFO:PyCaret ClassificationExperiment
2023-06-19 16:01:07,599:INFO:Logging name: clf-default-name
2023-06-19 16:01:07,602:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:01:07,602:INFO:version 3.0.2
2023-06-19 16:01:07,602:INFO:Initializing setup()
2023-06-19 16:01:07,602:INFO:self.USI: 2650
2023-06-19 16:01:07,602:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:01:07,603:INFO:Checking environment
2023-06-19 16:01:07,603:INFO:python_version: 3.9.7
2023-06-19 16:01:07,603:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:01:07,603:INFO:machine: AMD64
2023-06-19 16:01:07,603:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:01:07,603:INFO:Memory: svmem(total=17120436224, available=5434159104, percent=68.3, used=11686277120, free=5434159104)
2023-06-19 16:01:07,603:INFO:Physical Core: 4
2023-06-19 16:01:07,603:INFO:Logical Core: 4
2023-06-19 16:01:07,603:INFO:Checking libraries
2023-06-19 16:01:07,604:INFO:System:
2023-06-19 16:01:07,604:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:01:07,604:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:01:07,604:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:01:07,604:INFO:PyCaret required dependencies:
2023-06-19 16:01:07,604:INFO:                 pip: 21.2.3
2023-06-19 16:01:07,604:INFO:          setuptools: 57.4.0
2023-06-19 16:01:07,604:INFO:             pycaret: 3.0.2
2023-06-19 16:01:07,604:INFO:             IPython: 7.28.0
2023-06-19 16:01:07,611:INFO:          ipywidgets: 8.0.6
2023-06-19 16:01:07,611:INFO:                tqdm: 4.64.0
2023-06-19 16:01:07,611:INFO:               numpy: 1.22.4
2023-06-19 16:01:07,611:INFO:              pandas: 1.3.5
2023-06-19 16:01:07,611:INFO:              jinja2: 3.1.2
2023-06-19 16:01:07,611:INFO:               scipy: 1.7.1
2023-06-19 16:01:07,611:INFO:              joblib: 1.2.0
2023-06-19 16:01:07,611:INFO:             sklearn: 1.1.0
2023-06-19 16:01:07,611:INFO:                pyod: 1.0.9
2023-06-19 16:01:07,611:INFO:            imblearn: 0.9.1
2023-06-19 16:01:07,612:INFO:   category_encoders: 2.6.1
2023-06-19 16:01:07,612:INFO:            lightgbm: 3.3.5
2023-06-19 16:01:07,612:INFO:               numba: 0.57.0
2023-06-19 16:01:07,612:INFO:            requests: 2.31.0
2023-06-19 16:01:07,612:INFO:          matplotlib: 3.4.3
2023-06-19 16:01:07,612:INFO:          scikitplot: 0.3.7
2023-06-19 16:01:07,612:INFO:         yellowbrick: 1.5
2023-06-19 16:01:07,612:INFO:              plotly: 5.8.0
2023-06-19 16:01:07,612:INFO:             kaleido: 0.2.1
2023-06-19 16:01:07,612:INFO:         statsmodels: 0.14.0
2023-06-19 16:01:07,612:INFO:              sktime: 0.17.0
2023-06-19 16:01:07,612:INFO:               tbats: 1.1.3
2023-06-19 16:01:07,612:INFO:            pmdarima: 2.0.3
2023-06-19 16:01:07,612:INFO:              psutil: 5.9.0
2023-06-19 16:01:07,612:INFO:PyCaret optional dependencies:
2023-06-19 16:01:07,612:INFO:                shap: Not installed
2023-06-19 16:01:07,612:INFO:           interpret: Not installed
2023-06-19 16:01:07,613:INFO:                umap: Not installed
2023-06-19 16:01:07,613:INFO:    pandas_profiling: Not installed
2023-06-19 16:01:07,613:INFO:  explainerdashboard: Not installed
2023-06-19 16:01:07,613:INFO:             autoviz: Not installed
2023-06-19 16:01:07,613:INFO:           fairlearn: Not installed
2023-06-19 16:01:07,613:INFO:             xgboost: Not installed
2023-06-19 16:01:07,613:INFO:            catboost: Not installed
2023-06-19 16:01:07,613:INFO:              kmodes: Not installed
2023-06-19 16:01:07,613:INFO:             mlxtend: Not installed
2023-06-19 16:01:07,613:INFO:       statsforecast: Not installed
2023-06-19 16:01:07,613:INFO:        tune_sklearn: Not installed
2023-06-19 16:01:07,615:INFO:                 ray: Not installed
2023-06-19 16:01:07,615:INFO:            hyperopt: Not installed
2023-06-19 16:01:07,615:INFO:              optuna: Not installed
2023-06-19 16:01:07,616:INFO:               skopt: Not installed
2023-06-19 16:01:07,616:INFO:              mlflow: Not installed
2023-06-19 16:01:07,616:INFO:              gradio: Not installed
2023-06-19 16:01:07,616:INFO:             fastapi: Not installed
2023-06-19 16:01:07,616:INFO:             uvicorn: Not installed
2023-06-19 16:01:07,617:INFO:              m2cgen: Not installed
2023-06-19 16:01:07,617:INFO:           evidently: Not installed
2023-06-19 16:01:07,617:INFO:               fugue: Not installed
2023-06-19 16:01:07,617:INFO:           streamlit: Not installed
2023-06-19 16:01:07,620:INFO:             prophet: Not installed
2023-06-19 16:01:07,620:INFO:None
2023-06-19 16:01:07,621:INFO:Set up data.
2023-06-19 16:01:07,727:INFO:Set up train/test split.
2023-06-19 16:01:07,765:INFO:Set up index.
2023-06-19 16:01:07,768:INFO:Set up folding strategy.
2023-06-19 16:01:07,768:INFO:Assigning column types.
2023-06-19 16:01:07,787:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:01:07,864:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:01:07,865:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:01:07,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:07,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:07,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:01:07,986:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:01:08,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,028:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:01:08,083:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:01:08,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,175:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:01:08,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,208:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:01:08,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:01:08,389:INFO:Preparing preprocessing pipeline...
2023-06-19 16:01:08,392:INFO:Set up simple imputation.
2023-06-19 16:01:08,404:INFO:Set up encoding of ordinal features.
2023-06-19 16:01:08,415:INFO:Set up encoding of categorical features.
2023-06-19 16:01:08,416:INFO:Set up imbalanced handling.
2023-06-19 16:02:45,120:INFO:PyCaret ClassificationExperiment
2023-06-19 16:02:45,120:INFO:Logging name: clf-default-name
2023-06-19 16:02:45,120:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:02:45,120:INFO:version 3.0.2
2023-06-19 16:02:45,120:INFO:Initializing setup()
2023-06-19 16:02:45,120:INFO:self.USI: 32fe
2023-06-19 16:02:45,120:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:02:45,120:INFO:Checking environment
2023-06-19 16:02:45,120:INFO:python_version: 3.9.7
2023-06-19 16:02:45,120:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:02:45,120:INFO:machine: AMD64
2023-06-19 16:02:45,120:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:02:45,120:INFO:Memory: svmem(total=17120436224, available=5740761088, percent=66.5, used=11379675136, free=5740761088)
2023-06-19 16:02:45,120:INFO:Physical Core: 4
2023-06-19 16:02:45,121:INFO:Logical Core: 4
2023-06-19 16:02:45,121:INFO:Checking libraries
2023-06-19 16:02:45,121:INFO:System:
2023-06-19 16:02:45,121:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:02:45,121:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:02:45,121:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:02:45,121:INFO:PyCaret required dependencies:
2023-06-19 16:02:45,121:INFO:                 pip: 21.2.3
2023-06-19 16:02:45,121:INFO:          setuptools: 57.4.0
2023-06-19 16:02:45,121:INFO:             pycaret: 3.0.2
2023-06-19 16:02:45,121:INFO:             IPython: 7.28.0
2023-06-19 16:02:45,121:INFO:          ipywidgets: 8.0.6
2023-06-19 16:02:45,121:INFO:                tqdm: 4.64.0
2023-06-19 16:02:45,121:INFO:               numpy: 1.22.4
2023-06-19 16:02:45,121:INFO:              pandas: 1.3.5
2023-06-19 16:02:45,121:INFO:              jinja2: 3.1.2
2023-06-19 16:02:45,121:INFO:               scipy: 1.7.1
2023-06-19 16:02:45,121:INFO:              joblib: 1.2.0
2023-06-19 16:02:45,122:INFO:             sklearn: 1.1.0
2023-06-19 16:02:45,122:INFO:                pyod: 1.0.9
2023-06-19 16:02:45,122:INFO:            imblearn: 0.9.1
2023-06-19 16:02:45,122:INFO:   category_encoders: 2.6.1
2023-06-19 16:02:45,122:INFO:            lightgbm: 3.3.5
2023-06-19 16:02:45,122:INFO:               numba: 0.57.0
2023-06-19 16:02:45,122:INFO:            requests: 2.31.0
2023-06-19 16:02:45,122:INFO:          matplotlib: 3.4.3
2023-06-19 16:02:45,122:INFO:          scikitplot: 0.3.7
2023-06-19 16:02:45,122:INFO:         yellowbrick: 1.5
2023-06-19 16:02:45,122:INFO:              plotly: 5.8.0
2023-06-19 16:02:45,122:INFO:             kaleido: 0.2.1
2023-06-19 16:02:45,122:INFO:         statsmodels: 0.14.0
2023-06-19 16:02:45,122:INFO:              sktime: 0.17.0
2023-06-19 16:02:45,122:INFO:               tbats: 1.1.3
2023-06-19 16:02:45,122:INFO:            pmdarima: 2.0.3
2023-06-19 16:02:45,122:INFO:              psutil: 5.9.0
2023-06-19 16:02:45,122:INFO:PyCaret optional dependencies:
2023-06-19 16:02:45,122:INFO:                shap: Not installed
2023-06-19 16:02:45,122:INFO:           interpret: Not installed
2023-06-19 16:02:45,122:INFO:                umap: Not installed
2023-06-19 16:02:45,123:INFO:    pandas_profiling: Not installed
2023-06-19 16:02:45,123:INFO:  explainerdashboard: Not installed
2023-06-19 16:02:45,123:INFO:             autoviz: Not installed
2023-06-19 16:02:45,123:INFO:           fairlearn: Not installed
2023-06-19 16:02:45,123:INFO:             xgboost: Not installed
2023-06-19 16:02:45,123:INFO:            catboost: Not installed
2023-06-19 16:02:45,123:INFO:              kmodes: Not installed
2023-06-19 16:02:45,123:INFO:             mlxtend: Not installed
2023-06-19 16:02:45,123:INFO:       statsforecast: Not installed
2023-06-19 16:02:45,123:INFO:        tune_sklearn: Not installed
2023-06-19 16:02:45,123:INFO:                 ray: Not installed
2023-06-19 16:02:45,123:INFO:            hyperopt: Not installed
2023-06-19 16:02:45,123:INFO:              optuna: Not installed
2023-06-19 16:02:45,123:INFO:               skopt: Not installed
2023-06-19 16:02:45,123:INFO:              mlflow: Not installed
2023-06-19 16:02:45,123:INFO:              gradio: Not installed
2023-06-19 16:02:45,123:INFO:             fastapi: Not installed
2023-06-19 16:02:45,123:INFO:             uvicorn: Not installed
2023-06-19 16:02:45,123:INFO:              m2cgen: Not installed
2023-06-19 16:02:45,123:INFO:           evidently: Not installed
2023-06-19 16:02:45,124:INFO:               fugue: Not installed
2023-06-19 16:02:45,124:INFO:           streamlit: Not installed
2023-06-19 16:02:45,124:INFO:             prophet: Not installed
2023-06-19 16:02:45,124:INFO:None
2023-06-19 16:02:45,124:INFO:Set up data.
2023-06-19 16:02:45,183:INFO:Set up train/test split.
2023-06-19 16:02:45,206:INFO:Set up index.
2023-06-19 16:02:45,206:INFO:Set up folding strategy.
2023-06-19 16:02:45,207:INFO:Assigning column types.
2023-06-19 16:02:45,218:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:02:45,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:02:45,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:02:45,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,377:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:02:45,379:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:02:45,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,431:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:02:45,520:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:02:45,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:02:45,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,668:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:02:45,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:45,973:INFO:Preparing preprocessing pipeline...
2023-06-19 16:02:45,977:INFO:Set up simple imputation.
2023-06-19 16:02:46,006:INFO:Set up encoding of ordinal features.
2023-06-19 16:02:46,026:INFO:Set up encoding of categorical features.
2023-06-19 16:02:46,027:INFO:Set up imbalanced handling.
2023-06-19 16:02:46,029:INFO:Set up column name cleaning.
2023-06-19 16:02:46,585:INFO:Finished creating preprocessing pipeline.
2023-06-19 16:02:46,634:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 16:02:46,636:INFO:Creating final display dataframe.
2023-06-19 16:02:46,852:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 55)
5   Transformed train set shape       (51162, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16                Fix imbalance              True
17         Fix imbalance method             SMOTE
18               Fold Generator   StratifiedKFold
19                  Fold Number                 5
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              32fe
2023-06-19 16:02:46,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:46,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:47,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:47,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:47,059:INFO:setup() successfully completed in 2.81s...............
2023-06-19 16:02:59,660:INFO:PyCaret ClassificationExperiment
2023-06-19 16:02:59,660:INFO:Logging name: clf-default-name
2023-06-19 16:02:59,660:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:02:59,660:INFO:version 3.0.2
2023-06-19 16:02:59,660:INFO:Initializing setup()
2023-06-19 16:02:59,660:INFO:self.USI: c455
2023-06-19 16:02:59,661:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:02:59,661:INFO:Checking environment
2023-06-19 16:02:59,661:INFO:python_version: 3.9.7
2023-06-19 16:02:59,661:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:02:59,661:INFO:machine: AMD64
2023-06-19 16:02:59,661:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:02:59,661:INFO:Memory: svmem(total=17120436224, available=5658591232, percent=66.9, used=11461844992, free=5658591232)
2023-06-19 16:02:59,661:INFO:Physical Core: 4
2023-06-19 16:02:59,661:INFO:Logical Core: 4
2023-06-19 16:02:59,661:INFO:Checking libraries
2023-06-19 16:02:59,661:INFO:System:
2023-06-19 16:02:59,661:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:02:59,661:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:02:59,661:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:02:59,661:INFO:PyCaret required dependencies:
2023-06-19 16:02:59,662:INFO:                 pip: 21.2.3
2023-06-19 16:02:59,662:INFO:          setuptools: 57.4.0
2023-06-19 16:02:59,662:INFO:             pycaret: 3.0.2
2023-06-19 16:02:59,662:INFO:             IPython: 7.28.0
2023-06-19 16:02:59,662:INFO:          ipywidgets: 8.0.6
2023-06-19 16:02:59,662:INFO:                tqdm: 4.64.0
2023-06-19 16:02:59,662:INFO:               numpy: 1.22.4
2023-06-19 16:02:59,662:INFO:              pandas: 1.3.5
2023-06-19 16:02:59,662:INFO:              jinja2: 3.1.2
2023-06-19 16:02:59,662:INFO:               scipy: 1.7.1
2023-06-19 16:02:59,662:INFO:              joblib: 1.2.0
2023-06-19 16:02:59,662:INFO:             sklearn: 1.1.0
2023-06-19 16:02:59,662:INFO:                pyod: 1.0.9
2023-06-19 16:02:59,662:INFO:            imblearn: 0.9.1
2023-06-19 16:02:59,662:INFO:   category_encoders: 2.6.1
2023-06-19 16:02:59,662:INFO:            lightgbm: 3.3.5
2023-06-19 16:02:59,662:INFO:               numba: 0.57.0
2023-06-19 16:02:59,662:INFO:            requests: 2.31.0
2023-06-19 16:02:59,662:INFO:          matplotlib: 3.4.3
2023-06-19 16:02:59,662:INFO:          scikitplot: 0.3.7
2023-06-19 16:02:59,663:INFO:         yellowbrick: 1.5
2023-06-19 16:02:59,663:INFO:              plotly: 5.8.0
2023-06-19 16:02:59,663:INFO:             kaleido: 0.2.1
2023-06-19 16:02:59,663:INFO:         statsmodels: 0.14.0
2023-06-19 16:02:59,663:INFO:              sktime: 0.17.0
2023-06-19 16:02:59,663:INFO:               tbats: 1.1.3
2023-06-19 16:02:59,663:INFO:            pmdarima: 2.0.3
2023-06-19 16:02:59,663:INFO:              psutil: 5.9.0
2023-06-19 16:02:59,663:INFO:PyCaret optional dependencies:
2023-06-19 16:02:59,663:INFO:                shap: Not installed
2023-06-19 16:02:59,663:INFO:           interpret: Not installed
2023-06-19 16:02:59,663:INFO:                umap: Not installed
2023-06-19 16:02:59,663:INFO:    pandas_profiling: Not installed
2023-06-19 16:02:59,663:INFO:  explainerdashboard: Not installed
2023-06-19 16:02:59,663:INFO:             autoviz: Not installed
2023-06-19 16:02:59,663:INFO:           fairlearn: Not installed
2023-06-19 16:02:59,663:INFO:             xgboost: Not installed
2023-06-19 16:02:59,663:INFO:            catboost: Not installed
2023-06-19 16:02:59,663:INFO:              kmodes: Not installed
2023-06-19 16:02:59,664:INFO:             mlxtend: Not installed
2023-06-19 16:02:59,664:INFO:       statsforecast: Not installed
2023-06-19 16:02:59,664:INFO:        tune_sklearn: Not installed
2023-06-19 16:02:59,664:INFO:                 ray: Not installed
2023-06-19 16:02:59,664:INFO:            hyperopt: Not installed
2023-06-19 16:02:59,664:INFO:              optuna: Not installed
2023-06-19 16:02:59,664:INFO:               skopt: Not installed
2023-06-19 16:02:59,664:INFO:              mlflow: Not installed
2023-06-19 16:02:59,664:INFO:              gradio: Not installed
2023-06-19 16:02:59,664:INFO:             fastapi: Not installed
2023-06-19 16:02:59,664:INFO:             uvicorn: Not installed
2023-06-19 16:02:59,664:INFO:              m2cgen: Not installed
2023-06-19 16:02:59,664:INFO:           evidently: Not installed
2023-06-19 16:02:59,664:INFO:               fugue: Not installed
2023-06-19 16:02:59,665:INFO:           streamlit: Not installed
2023-06-19 16:02:59,665:INFO:             prophet: Not installed
2023-06-19 16:02:59,665:INFO:None
2023-06-19 16:02:59,665:INFO:Set up data.
2023-06-19 16:02:59,725:INFO:Set up train/test split.
2023-06-19 16:02:59,749:INFO:Set up index.
2023-06-19 16:02:59,751:INFO:Set up folding strategy.
2023-06-19 16:02:59,751:INFO:Assigning column types.
2023-06-19 16:02:59,768:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:02:59,834:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:02:59,835:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:02:59,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:02:59,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:03:00,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:03:00,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,053:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:03:00,149:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:03:00,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:03:00,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,346:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:03:00,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:00,553:INFO:Preparing preprocessing pipeline...
2023-06-19 16:03:00,555:INFO:Set up simple imputation.
2023-06-19 16:03:00,567:INFO:Set up encoding of ordinal features.
2023-06-19 16:03:00,577:INFO:Set up encoding of categorical features.
2023-06-19 16:03:00,578:INFO:Set up column name cleaning.
2023-06-19 16:03:00,959:INFO:Finished creating preprocessing pipeline.
2023-06-19 16:03:01,040:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 16:03:01,041:INFO:Creating final display dataframe.
2023-06-19 16:03:01,266:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (41185, 55)
5   Transformed train set shape       (28829, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              c455
2023-06-19 16:03:01,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:01,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:01,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:01,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:03:01,465:INFO:setup() successfully completed in 2.65s...............
2023-06-19 16:13:55,328:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\imblearn\over_sampling\_smote\base.py:467: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  [cat not in np.arange(self.n_features_) for cat in categorical_features]

2023-06-19 16:16:23,322:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\imblearn\over_sampling\_smote\base.py:467: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  [cat not in np.arange(self.n_features_) for cat in categorical_features]

2023-06-19 16:18:00,409:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\imblearn\over_sampling\_smote\base.py:467: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  [cat not in np.arange(self.n_features_) for cat in categorical_features]

2023-06-19 16:18:31,941:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\imblearn\over_sampling\_smote\base.py:467: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  [cat not in np.arange(self.n_features_) for cat in categorical_features]

2023-06-19 16:20:11,609:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\imblearn\over_sampling\_smote\base.py:467: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  [cat not in np.arange(self.n_features_) for cat in categorical_features]

2023-06-19 16:30:43,373:INFO:PyCaret ClassificationExperiment
2023-06-19 16:30:43,374:INFO:Logging name: clf-default-name
2023-06-19 16:30:43,374:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:30:43,374:INFO:version 3.0.2
2023-06-19 16:30:43,374:INFO:Initializing setup()
2023-06-19 16:30:43,374:INFO:self.USI: be46
2023-06-19 16:30:43,374:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:30:43,374:INFO:Checking environment
2023-06-19 16:30:43,374:INFO:python_version: 3.9.7
2023-06-19 16:30:43,374:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:30:43,374:INFO:machine: AMD64
2023-06-19 16:30:43,374:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:30:43,374:INFO:Memory: svmem(total=17120436224, available=5839532032, percent=65.9, used=11280904192, free=5839532032)
2023-06-19 16:30:43,374:INFO:Physical Core: 4
2023-06-19 16:30:43,374:INFO:Logical Core: 4
2023-06-19 16:30:43,374:INFO:Checking libraries
2023-06-19 16:30:43,375:INFO:System:
2023-06-19 16:30:43,375:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:30:43,375:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:30:43,375:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:30:43,375:INFO:PyCaret required dependencies:
2023-06-19 16:30:43,375:INFO:                 pip: 21.2.3
2023-06-19 16:30:43,375:INFO:          setuptools: 57.4.0
2023-06-19 16:30:43,375:INFO:             pycaret: 3.0.2
2023-06-19 16:30:43,375:INFO:             IPython: 7.28.0
2023-06-19 16:30:43,375:INFO:          ipywidgets: 8.0.6
2023-06-19 16:30:43,375:INFO:                tqdm: 4.64.0
2023-06-19 16:30:43,375:INFO:               numpy: 1.22.4
2023-06-19 16:30:43,375:INFO:              pandas: 1.3.5
2023-06-19 16:30:43,376:INFO:              jinja2: 3.1.2
2023-06-19 16:30:43,376:INFO:               scipy: 1.7.1
2023-06-19 16:30:43,376:INFO:              joblib: 1.2.0
2023-06-19 16:30:43,376:INFO:             sklearn: 1.1.0
2023-06-19 16:30:43,376:INFO:                pyod: 1.0.9
2023-06-19 16:30:43,376:INFO:            imblearn: 0.9.1
2023-06-19 16:30:43,376:INFO:   category_encoders: 2.6.1
2023-06-19 16:30:43,376:INFO:            lightgbm: 3.3.5
2023-06-19 16:30:43,376:INFO:               numba: 0.57.0
2023-06-19 16:30:43,376:INFO:            requests: 2.31.0
2023-06-19 16:30:43,376:INFO:          matplotlib: 3.4.3
2023-06-19 16:30:43,376:INFO:          scikitplot: 0.3.7
2023-06-19 16:30:43,376:INFO:         yellowbrick: 1.5
2023-06-19 16:30:43,376:INFO:              plotly: 5.8.0
2023-06-19 16:30:43,377:INFO:             kaleido: 0.2.1
2023-06-19 16:30:43,377:INFO:         statsmodels: 0.14.0
2023-06-19 16:30:43,377:INFO:              sktime: 0.17.0
2023-06-19 16:30:43,377:INFO:               tbats: 1.1.3
2023-06-19 16:30:43,377:INFO:            pmdarima: 2.0.3
2023-06-19 16:30:43,377:INFO:              psutil: 5.9.0
2023-06-19 16:30:43,377:INFO:PyCaret optional dependencies:
2023-06-19 16:30:43,377:INFO:                shap: Not installed
2023-06-19 16:30:43,377:INFO:           interpret: Not installed
2023-06-19 16:30:43,377:INFO:                umap: Not installed
2023-06-19 16:30:43,377:INFO:    pandas_profiling: Not installed
2023-06-19 16:30:43,377:INFO:  explainerdashboard: Not installed
2023-06-19 16:30:43,378:INFO:             autoviz: Not installed
2023-06-19 16:30:43,378:INFO:           fairlearn: Not installed
2023-06-19 16:30:43,378:INFO:             xgboost: Not installed
2023-06-19 16:30:43,378:INFO:            catboost: Not installed
2023-06-19 16:30:43,378:INFO:              kmodes: Not installed
2023-06-19 16:30:43,378:INFO:             mlxtend: Not installed
2023-06-19 16:30:43,378:INFO:       statsforecast: Not installed
2023-06-19 16:30:43,378:INFO:        tune_sklearn: Not installed
2023-06-19 16:30:43,378:INFO:                 ray: Not installed
2023-06-19 16:30:43,378:INFO:            hyperopt: Not installed
2023-06-19 16:30:43,378:INFO:              optuna: Not installed
2023-06-19 16:30:43,378:INFO:               skopt: Not installed
2023-06-19 16:30:43,378:INFO:              mlflow: Not installed
2023-06-19 16:30:43,378:INFO:              gradio: Not installed
2023-06-19 16:30:43,378:INFO:             fastapi: Not installed
2023-06-19 16:30:43,378:INFO:             uvicorn: Not installed
2023-06-19 16:30:43,378:INFO:              m2cgen: Not installed
2023-06-19 16:30:43,378:INFO:           evidently: Not installed
2023-06-19 16:30:43,378:INFO:               fugue: Not installed
2023-06-19 16:30:43,378:INFO:           streamlit: Not installed
2023-06-19 16:30:43,378:INFO:             prophet: Not installed
2023-06-19 16:30:43,379:INFO:None
2023-06-19 16:30:43,379:INFO:Set up data.
2023-06-19 16:30:43,459:INFO:Set up train/test split.
2023-06-19 16:30:43,459:INFO:Set up data.
2023-06-19 16:30:43,492:INFO:Set up index.
2023-06-19 16:33:55,206:INFO:PyCaret ClassificationExperiment
2023-06-19 16:33:55,206:INFO:Logging name: clf-default-name
2023-06-19 16:33:55,206:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:33:55,206:INFO:version 3.0.2
2023-06-19 16:33:55,206:INFO:Initializing setup()
2023-06-19 16:33:55,206:INFO:self.USI: 730b
2023-06-19 16:33:55,206:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:33:55,206:INFO:Checking environment
2023-06-19 16:33:55,206:INFO:python_version: 3.9.7
2023-06-19 16:33:55,206:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:33:55,206:INFO:machine: AMD64
2023-06-19 16:33:55,206:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:33:55,206:INFO:Memory: svmem(total=17120436224, available=6013325312, percent=64.9, used=11107110912, free=6013325312)
2023-06-19 16:33:55,206:INFO:Physical Core: 4
2023-06-19 16:33:55,206:INFO:Logical Core: 4
2023-06-19 16:33:55,206:INFO:Checking libraries
2023-06-19 16:33:55,207:INFO:System:
2023-06-19 16:33:55,207:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:33:55,207:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:33:55,207:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:33:55,207:INFO:PyCaret required dependencies:
2023-06-19 16:33:55,207:INFO:                 pip: 21.2.3
2023-06-19 16:33:55,207:INFO:          setuptools: 57.4.0
2023-06-19 16:33:55,207:INFO:             pycaret: 3.0.2
2023-06-19 16:33:55,207:INFO:             IPython: 7.28.0
2023-06-19 16:33:55,207:INFO:          ipywidgets: 8.0.6
2023-06-19 16:33:55,207:INFO:                tqdm: 4.64.0
2023-06-19 16:33:55,207:INFO:               numpy: 1.22.4
2023-06-19 16:33:55,207:INFO:              pandas: 1.3.5
2023-06-19 16:33:55,207:INFO:              jinja2: 3.1.2
2023-06-19 16:33:55,207:INFO:               scipy: 1.7.1
2023-06-19 16:33:55,207:INFO:              joblib: 1.2.0
2023-06-19 16:33:55,207:INFO:             sklearn: 1.1.0
2023-06-19 16:33:55,207:INFO:                pyod: 1.0.9
2023-06-19 16:33:55,208:INFO:            imblearn: 0.9.1
2023-06-19 16:33:55,208:INFO:   category_encoders: 2.6.1
2023-06-19 16:33:55,208:INFO:            lightgbm: 3.3.5
2023-06-19 16:33:55,208:INFO:               numba: 0.57.0
2023-06-19 16:33:55,208:INFO:            requests: 2.31.0
2023-06-19 16:33:55,208:INFO:          matplotlib: 3.4.3
2023-06-19 16:33:55,208:INFO:          scikitplot: 0.3.7
2023-06-19 16:33:55,208:INFO:         yellowbrick: 1.5
2023-06-19 16:33:55,208:INFO:              plotly: 5.8.0
2023-06-19 16:33:55,208:INFO:             kaleido: 0.2.1
2023-06-19 16:33:55,208:INFO:         statsmodels: 0.14.0
2023-06-19 16:33:55,209:INFO:              sktime: 0.17.0
2023-06-19 16:33:55,209:INFO:               tbats: 1.1.3
2023-06-19 16:33:55,209:INFO:            pmdarima: 2.0.3
2023-06-19 16:33:55,209:INFO:              psutil: 5.9.0
2023-06-19 16:33:55,209:INFO:PyCaret optional dependencies:
2023-06-19 16:33:55,209:INFO:                shap: Not installed
2023-06-19 16:33:55,209:INFO:           interpret: Not installed
2023-06-19 16:33:55,209:INFO:                umap: Not installed
2023-06-19 16:33:55,209:INFO:    pandas_profiling: Not installed
2023-06-19 16:33:55,209:INFO:  explainerdashboard: Not installed
2023-06-19 16:33:55,209:INFO:             autoviz: Not installed
2023-06-19 16:33:55,209:INFO:           fairlearn: Not installed
2023-06-19 16:33:55,209:INFO:             xgboost: Not installed
2023-06-19 16:33:55,210:INFO:            catboost: Not installed
2023-06-19 16:33:55,210:INFO:              kmodes: Not installed
2023-06-19 16:33:55,210:INFO:             mlxtend: Not installed
2023-06-19 16:33:55,210:INFO:       statsforecast: Not installed
2023-06-19 16:33:55,210:INFO:        tune_sklearn: Not installed
2023-06-19 16:33:55,210:INFO:                 ray: Not installed
2023-06-19 16:33:55,210:INFO:            hyperopt: Not installed
2023-06-19 16:33:55,210:INFO:              optuna: Not installed
2023-06-19 16:33:55,210:INFO:               skopt: Not installed
2023-06-19 16:33:55,210:INFO:              mlflow: Not installed
2023-06-19 16:33:55,210:INFO:              gradio: Not installed
2023-06-19 16:33:55,210:INFO:             fastapi: Not installed
2023-06-19 16:33:55,210:INFO:             uvicorn: Not installed
2023-06-19 16:33:55,210:INFO:              m2cgen: Not installed
2023-06-19 16:33:55,210:INFO:           evidently: Not installed
2023-06-19 16:33:55,210:INFO:               fugue: Not installed
2023-06-19 16:33:55,210:INFO:           streamlit: Not installed
2023-06-19 16:33:55,210:INFO:             prophet: Not installed
2023-06-19 16:33:55,210:INFO:None
2023-06-19 16:33:55,210:INFO:Set up data.
2023-06-19 16:33:55,295:INFO:Set up train/test split.
2023-06-19 16:33:55,296:INFO:Set up data.
2023-06-19 16:33:55,334:INFO:Set up index.
2023-06-19 16:37:04,021:INFO:PyCaret ClassificationExperiment
2023-06-19 16:37:04,022:INFO:Logging name: clf-default-name
2023-06-19 16:37:04,022:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:37:04,022:INFO:version 3.0.2
2023-06-19 16:37:04,022:INFO:Initializing setup()
2023-06-19 16:37:04,022:INFO:self.USI: 1422
2023-06-19 16:37:04,022:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:37:04,022:INFO:Checking environment
2023-06-19 16:37:04,022:INFO:python_version: 3.9.7
2023-06-19 16:37:04,022:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:37:04,022:INFO:machine: AMD64
2023-06-19 16:37:04,022:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:37:04,023:INFO:Memory: svmem(total=17120436224, available=5569359872, percent=67.5, used=11551076352, free=5569359872)
2023-06-19 16:37:04,023:INFO:Physical Core: 4
2023-06-19 16:37:04,023:INFO:Logical Core: 4
2023-06-19 16:37:04,023:INFO:Checking libraries
2023-06-19 16:37:04,023:INFO:System:
2023-06-19 16:37:04,023:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:37:04,023:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:37:04,023:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:37:04,023:INFO:PyCaret required dependencies:
2023-06-19 16:37:04,023:INFO:                 pip: 21.2.3
2023-06-19 16:37:04,023:INFO:          setuptools: 57.4.0
2023-06-19 16:37:04,023:INFO:             pycaret: 3.0.2
2023-06-19 16:37:04,023:INFO:             IPython: 7.28.0
2023-06-19 16:37:04,023:INFO:          ipywidgets: 8.0.6
2023-06-19 16:37:04,023:INFO:                tqdm: 4.64.0
2023-06-19 16:37:04,023:INFO:               numpy: 1.22.4
2023-06-19 16:37:04,023:INFO:              pandas: 1.3.5
2023-06-19 16:37:04,023:INFO:              jinja2: 3.1.2
2023-06-19 16:37:04,023:INFO:               scipy: 1.7.1
2023-06-19 16:37:04,024:INFO:              joblib: 1.2.0
2023-06-19 16:37:04,024:INFO:             sklearn: 1.1.0
2023-06-19 16:37:04,024:INFO:                pyod: 1.0.9
2023-06-19 16:37:04,024:INFO:            imblearn: 0.9.1
2023-06-19 16:37:04,024:INFO:   category_encoders: 2.6.1
2023-06-19 16:37:04,024:INFO:            lightgbm: 3.3.5
2023-06-19 16:37:04,024:INFO:               numba: 0.57.0
2023-06-19 16:37:04,024:INFO:            requests: 2.31.0
2023-06-19 16:37:04,024:INFO:          matplotlib: 3.4.3
2023-06-19 16:37:04,024:INFO:          scikitplot: 0.3.7
2023-06-19 16:37:04,024:INFO:         yellowbrick: 1.5
2023-06-19 16:37:04,024:INFO:              plotly: 5.8.0
2023-06-19 16:37:04,024:INFO:             kaleido: 0.2.1
2023-06-19 16:37:04,024:INFO:         statsmodels: 0.14.0
2023-06-19 16:37:04,024:INFO:              sktime: 0.17.0
2023-06-19 16:37:04,024:INFO:               tbats: 1.1.3
2023-06-19 16:37:04,024:INFO:            pmdarima: 2.0.3
2023-06-19 16:37:04,024:INFO:              psutil: 5.9.0
2023-06-19 16:37:04,024:INFO:PyCaret optional dependencies:
2023-06-19 16:37:04,024:INFO:                shap: Not installed
2023-06-19 16:37:04,024:INFO:           interpret: Not installed
2023-06-19 16:37:04,025:INFO:                umap: Not installed
2023-06-19 16:37:04,025:INFO:    pandas_profiling: Not installed
2023-06-19 16:37:04,025:INFO:  explainerdashboard: Not installed
2023-06-19 16:37:04,025:INFO:             autoviz: Not installed
2023-06-19 16:37:04,025:INFO:           fairlearn: Not installed
2023-06-19 16:37:04,025:INFO:             xgboost: Not installed
2023-06-19 16:37:04,025:INFO:            catboost: Not installed
2023-06-19 16:37:04,025:INFO:              kmodes: Not installed
2023-06-19 16:37:04,025:INFO:             mlxtend: Not installed
2023-06-19 16:37:04,025:INFO:       statsforecast: Not installed
2023-06-19 16:37:04,025:INFO:        tune_sklearn: Not installed
2023-06-19 16:37:04,025:INFO:                 ray: Not installed
2023-06-19 16:37:04,025:INFO:            hyperopt: Not installed
2023-06-19 16:37:04,025:INFO:              optuna: Not installed
2023-06-19 16:37:04,025:INFO:               skopt: Not installed
2023-06-19 16:37:04,025:INFO:              mlflow: Not installed
2023-06-19 16:37:04,026:INFO:              gradio: Not installed
2023-06-19 16:37:04,026:INFO:             fastapi: Not installed
2023-06-19 16:37:04,026:INFO:             uvicorn: Not installed
2023-06-19 16:37:04,026:INFO:              m2cgen: Not installed
2023-06-19 16:37:04,026:INFO:           evidently: Not installed
2023-06-19 16:37:04,026:INFO:               fugue: Not installed
2023-06-19 16:37:04,026:INFO:           streamlit: Not installed
2023-06-19 16:37:04,026:INFO:             prophet: Not installed
2023-06-19 16:37:04,026:INFO:None
2023-06-19 16:37:04,026:INFO:Set up data.
2023-06-19 16:37:04,108:INFO:Set up train/test split.
2023-06-19 16:37:04,108:INFO:Set up data.
2023-06-19 16:37:04,143:INFO:Set up index.
2023-06-19 16:38:46,822:INFO:PyCaret ClassificationExperiment
2023-06-19 16:38:46,822:INFO:Logging name: clf-default-name
2023-06-19 16:38:46,822:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:38:46,822:INFO:version 3.0.2
2023-06-19 16:38:46,822:INFO:Initializing setup()
2023-06-19 16:38:46,822:INFO:self.USI: 569a
2023-06-19 16:38:46,822:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:38:46,822:INFO:Checking environment
2023-06-19 16:38:46,823:INFO:python_version: 3.9.7
2023-06-19 16:38:46,823:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:38:46,823:INFO:machine: AMD64
2023-06-19 16:38:46,823:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:38:46,823:INFO:Memory: svmem(total=17120436224, available=5853409280, percent=65.8, used=11267026944, free=5853409280)
2023-06-19 16:38:46,823:INFO:Physical Core: 4
2023-06-19 16:38:46,823:INFO:Logical Core: 4
2023-06-19 16:38:46,823:INFO:Checking libraries
2023-06-19 16:38:46,823:INFO:System:
2023-06-19 16:38:46,823:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:38:46,823:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:38:46,823:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:38:46,823:INFO:PyCaret required dependencies:
2023-06-19 16:38:46,823:INFO:                 pip: 21.2.3
2023-06-19 16:38:46,823:INFO:          setuptools: 57.4.0
2023-06-19 16:38:46,823:INFO:             pycaret: 3.0.2
2023-06-19 16:38:46,823:INFO:             IPython: 7.28.0
2023-06-19 16:38:46,823:INFO:          ipywidgets: 8.0.6
2023-06-19 16:38:46,823:INFO:                tqdm: 4.64.0
2023-06-19 16:38:46,824:INFO:               numpy: 1.22.4
2023-06-19 16:38:46,824:INFO:              pandas: 1.3.5
2023-06-19 16:38:46,824:INFO:              jinja2: 3.1.2
2023-06-19 16:38:46,824:INFO:               scipy: 1.7.1
2023-06-19 16:38:46,824:INFO:              joblib: 1.2.0
2023-06-19 16:38:46,824:INFO:             sklearn: 1.1.0
2023-06-19 16:38:46,824:INFO:                pyod: 1.0.9
2023-06-19 16:38:46,824:INFO:            imblearn: 0.9.1
2023-06-19 16:38:46,824:INFO:   category_encoders: 2.6.1
2023-06-19 16:38:46,824:INFO:            lightgbm: 3.3.5
2023-06-19 16:38:46,824:INFO:               numba: 0.57.0
2023-06-19 16:38:46,824:INFO:            requests: 2.31.0
2023-06-19 16:38:46,824:INFO:          matplotlib: 3.4.3
2023-06-19 16:38:46,824:INFO:          scikitplot: 0.3.7
2023-06-19 16:38:46,824:INFO:         yellowbrick: 1.5
2023-06-19 16:38:46,824:INFO:              plotly: 5.8.0
2023-06-19 16:38:46,825:INFO:             kaleido: 0.2.1
2023-06-19 16:38:46,825:INFO:         statsmodels: 0.14.0
2023-06-19 16:38:46,825:INFO:              sktime: 0.17.0
2023-06-19 16:38:46,825:INFO:               tbats: 1.1.3
2023-06-19 16:38:46,825:INFO:            pmdarima: 2.0.3
2023-06-19 16:38:46,825:INFO:              psutil: 5.9.0
2023-06-19 16:38:46,825:INFO:PyCaret optional dependencies:
2023-06-19 16:38:46,825:INFO:                shap: Not installed
2023-06-19 16:38:46,825:INFO:           interpret: Not installed
2023-06-19 16:38:46,825:INFO:                umap: Not installed
2023-06-19 16:38:46,825:INFO:    pandas_profiling: Not installed
2023-06-19 16:38:46,825:INFO:  explainerdashboard: Not installed
2023-06-19 16:38:46,825:INFO:             autoviz: Not installed
2023-06-19 16:38:46,825:INFO:           fairlearn: Not installed
2023-06-19 16:38:46,825:INFO:             xgboost: Not installed
2023-06-19 16:38:46,825:INFO:            catboost: Not installed
2023-06-19 16:38:46,825:INFO:              kmodes: Not installed
2023-06-19 16:38:46,826:INFO:             mlxtend: Not installed
2023-06-19 16:38:46,826:INFO:       statsforecast: Not installed
2023-06-19 16:38:46,826:INFO:        tune_sklearn: Not installed
2023-06-19 16:38:46,826:INFO:                 ray: Not installed
2023-06-19 16:38:46,826:INFO:            hyperopt: Not installed
2023-06-19 16:38:46,826:INFO:              optuna: Not installed
2023-06-19 16:38:46,826:INFO:               skopt: Not installed
2023-06-19 16:38:46,826:INFO:              mlflow: Not installed
2023-06-19 16:38:46,826:INFO:              gradio: Not installed
2023-06-19 16:38:46,826:INFO:             fastapi: Not installed
2023-06-19 16:38:46,826:INFO:             uvicorn: Not installed
2023-06-19 16:38:46,826:INFO:              m2cgen: Not installed
2023-06-19 16:38:46,826:INFO:           evidently: Not installed
2023-06-19 16:38:46,826:INFO:               fugue: Not installed
2023-06-19 16:38:46,826:INFO:           streamlit: Not installed
2023-06-19 16:38:46,826:INFO:             prophet: Not installed
2023-06-19 16:38:46,826:INFO:None
2023-06-19 16:38:46,826:INFO:Set up data.
2023-06-19 16:38:46,902:INFO:Set up train/test split.
2023-06-19 16:38:46,903:INFO:Set up data.
2023-06-19 16:38:46,955:INFO:Set up index.
2023-06-19 16:38:46,958:INFO:Set up folding strategy.
2023-06-19 16:38:46,958:INFO:Assigning column types.
2023-06-19 16:38:46,977:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:38:47,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:38:47,073:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:38:47,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,196:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:38:47,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:38:47,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,230:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:38:47,282:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:38:47,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,366:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:38:47,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,401:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:38:47,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:47,574:INFO:Preparing preprocessing pipeline...
2023-06-19 16:38:47,576:INFO:Set up simple imputation.
2023-06-19 16:38:47,596:INFO:Set up encoding of ordinal features.
2023-06-19 16:38:47,610:INFO:Set up encoding of categorical features.
2023-06-19 16:38:47,612:INFO:Set up column name cleaning.
2023-06-19 16:38:48,930:INFO:Finished creating preprocessing pipeline.
2023-06-19 16:38:48,977:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 16:38:48,977:INFO:Creating final display dataframe.
2023-06-19 16:38:50,017:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 55)
5   Transformed train set shape       (51190, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              569a
2023-06-19 16:38:50,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:50,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:50,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:50,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:38:50,253:INFO:setup() successfully completed in 4.4s...............
2023-06-19 16:39:14,314:INFO:Initializing create_model()
2023-06-19 16:39:14,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 16:39:14,314:INFO:Checking exceptions
2023-06-19 16:39:14,350:INFO:Importing libraries
2023-06-19 16:39:14,350:INFO:Copying training dataset
2023-06-19 16:39:14,375:INFO:Defining folds
2023-06-19 16:39:14,376:INFO:Declaring metric variables
2023-06-19 16:39:14,380:INFO:Importing untrained model
2023-06-19 16:39:14,387:INFO:Logistic Regression Imported successfully
2023-06-19 16:39:14,398:INFO:Starting cross validation
2023-06-19 16:39:14,401:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 16:39:36,659:INFO:Calculating mean and std
2023-06-19 16:39:36,660:INFO:Creating metrics dataframe
2023-06-19 16:39:36,671:INFO:Finalizing model
2023-06-19 16:39:43,845:INFO:Uploading results into container
2023-06-19 16:39:43,846:INFO:Uploading model into container now
2023-06-19 16:39:43,864:INFO:_master_model_container: 1
2023-06-19 16:39:43,864:INFO:_display_container: 2
2023-06-19 16:39:43,864:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 16:39:43,865:INFO:create_model() successfully completed......................................
2023-06-19 16:39:44,969:INFO:Initializing evaluate_model()
2023-06-19 16:39:44,969:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 16:39:45,000:INFO:Initializing plot_model()
2023-06-19 16:39:45,000:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, system=True)
2023-06-19 16:39:45,000:INFO:Checking exceptions
2023-06-19 16:39:45,017:INFO:Preloading libraries
2023-06-19 16:39:45,017:INFO:Copying training dataset
2023-06-19 16:39:45,017:INFO:Plot type: pipeline
2023-06-19 16:39:45,212:INFO:Visual Rendered Successfully
2023-06-19 16:39:45,294:INFO:plot_model() successfully completed......................................
2023-06-19 16:39:53,100:INFO:Initializing plot_model()
2023-06-19 16:39:53,100:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, system=True)
2023-06-19 16:39:53,100:INFO:Checking exceptions
2023-06-19 16:39:53,108:INFO:Preloading libraries
2023-06-19 16:39:53,109:INFO:Copying training dataset
2023-06-19 16:39:53,109:INFO:Plot type: parameter
2023-06-19 16:39:53,113:INFO:Visual Rendered Successfully
2023-06-19 16:39:53,192:INFO:plot_model() successfully completed......................................
2023-06-19 16:39:54,369:INFO:Initializing plot_model()
2023-06-19 16:39:54,369:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, system=True)
2023-06-19 16:39:54,369:INFO:Checking exceptions
2023-06-19 16:39:54,379:INFO:Preloading libraries
2023-06-19 16:39:54,379:INFO:Copying training dataset
2023-06-19 16:39:54,379:INFO:Plot type: auc
2023-06-19 16:39:54,633:INFO:Fitting Model
2023-06-19 16:39:54,634:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 16:39:54,635:INFO:Scoring test/hold-out set
2023-06-19 16:39:54,878:INFO:Visual Rendered Successfully
2023-06-19 16:39:54,969:INFO:plot_model() successfully completed......................................
2023-06-19 16:40:23,440:INFO:Initializing plot_model()
2023-06-19 16:40:23,441:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, system=True)
2023-06-19 16:40:23,441:INFO:Checking exceptions
2023-06-19 16:40:23,449:INFO:Preloading libraries
2023-06-19 16:40:23,450:INFO:Copying training dataset
2023-06-19 16:40:23,450:INFO:Plot type: feature_all
2023-06-19 16:40:24,562:INFO:Visual Rendered Successfully
2023-06-19 16:40:24,637:INFO:plot_model() successfully completed......................................
2023-06-19 16:40:34,113:INFO:Initializing plot_model()
2023-06-19 16:40:34,113:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, system=True)
2023-06-19 16:40:34,113:INFO:Checking exceptions
2023-06-19 16:40:34,122:INFO:Preloading libraries
2023-06-19 16:40:34,122:INFO:Copying training dataset
2023-06-19 16:40:34,123:INFO:Plot type: calibration
2023-06-19 16:40:34,140:INFO:Scoring test/hold-out set
2023-06-19 16:40:34,351:INFO:Visual Rendered Successfully
2023-06-19 16:40:34,421:INFO:plot_model() successfully completed......................................
2023-06-19 16:40:36,793:INFO:Initializing plot_model()
2023-06-19 16:40:36,793:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, system=True)
2023-06-19 16:40:36,794:INFO:Checking exceptions
2023-06-19 16:40:36,803:INFO:Preloading libraries
2023-06-19 16:40:36,804:INFO:Copying training dataset
2023-06-19 16:40:36,804:INFO:Plot type: pipeline
2023-06-19 16:40:36,923:INFO:Visual Rendered Successfully
2023-06-19 16:40:36,992:INFO:plot_model() successfully completed......................................
2023-06-19 16:40:48,793:INFO:Initializing plot_model()
2023-06-19 16:40:48,794:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, system=True)
2023-06-19 16:40:48,794:INFO:Checking exceptions
2023-06-19 16:40:48,803:INFO:Preloading libraries
2023-06-19 16:40:48,803:INFO:Copying training dataset
2023-06-19 16:40:48,803:INFO:Plot type: parameter
2023-06-19 16:40:48,808:INFO:Visual Rendered Successfully
2023-06-19 16:40:48,883:INFO:plot_model() successfully completed......................................
2023-06-19 16:40:50,954:INFO:Initializing plot_model()
2023-06-19 16:40:50,954:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, system=True)
2023-06-19 16:40:50,954:INFO:Checking exceptions
2023-06-19 16:40:50,964:INFO:Preloading libraries
2023-06-19 16:40:50,964:INFO:Copying training dataset
2023-06-19 16:40:50,965:INFO:Plot type: auc
2023-06-19 16:40:51,176:INFO:Fitting Model
2023-06-19 16:40:51,177:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 16:40:51,178:INFO:Scoring test/hold-out set
2023-06-19 16:40:51,372:INFO:Visual Rendered Successfully
2023-06-19 16:40:51,459:INFO:plot_model() successfully completed......................................
2023-06-19 16:40:56,303:INFO:Initializing predict_model()
2023-06-19 16:40:56,303:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C2B1026BB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C2B1531F70>)
2023-06-19 16:40:56,304:INFO:Checking exceptions
2023-06-19 16:40:56,304:INFO:Preloading libraries
2023-06-19 16:41:14,914:INFO:PyCaret ClassificationExperiment
2023-06-19 16:41:14,915:INFO:Logging name: clf-default-name
2023-06-19 16:41:14,915:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:41:14,915:INFO:version 3.0.2
2023-06-19 16:41:14,915:INFO:Initializing setup()
2023-06-19 16:41:14,915:INFO:self.USI: b7ce
2023-06-19 16:41:14,915:INFO:self._variable_keys: {'data', 'y', 'fold_groups_param', '_available_plots', 'n_jobs_param', 'X', 'logging_param', 'memory', 'pipeline', 'USI', 'X_test', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'is_multiclass', '_ml_usecase', 'target_param', 'fold_generator', 'gpu_param', 'log_plots_param', 'seed', 'exp_name_log', 'y_test', 'idx', 'html_param'}
2023-06-19 16:41:14,915:INFO:Checking environment
2023-06-19 16:41:14,915:INFO:python_version: 3.9.7
2023-06-19 16:41:14,915:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:41:14,915:INFO:machine: AMD64
2023-06-19 16:41:14,915:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:41:14,915:INFO:Memory: svmem(total=17120436224, available=5393076224, percent=68.5, used=11727360000, free=5393076224)
2023-06-19 16:41:14,915:INFO:Physical Core: 4
2023-06-19 16:41:14,915:INFO:Logical Core: 4
2023-06-19 16:41:14,915:INFO:Checking libraries
2023-06-19 16:41:14,916:INFO:System:
2023-06-19 16:41:14,916:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:41:14,916:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:41:14,916:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:41:14,916:INFO:PyCaret required dependencies:
2023-06-19 16:41:14,916:INFO:                 pip: 21.2.3
2023-06-19 16:41:14,916:INFO:          setuptools: 57.4.0
2023-06-19 16:41:14,916:INFO:             pycaret: 3.0.2
2023-06-19 16:41:14,916:INFO:             IPython: 7.28.0
2023-06-19 16:41:14,916:INFO:          ipywidgets: 8.0.6
2023-06-19 16:41:14,916:INFO:                tqdm: 4.64.0
2023-06-19 16:41:14,916:INFO:               numpy: 1.22.4
2023-06-19 16:41:14,916:INFO:              pandas: 1.3.5
2023-06-19 16:41:14,916:INFO:              jinja2: 3.1.2
2023-06-19 16:41:14,916:INFO:               scipy: 1.7.1
2023-06-19 16:41:14,916:INFO:              joblib: 1.2.0
2023-06-19 16:41:14,916:INFO:             sklearn: 1.1.0
2023-06-19 16:41:14,916:INFO:                pyod: 1.0.9
2023-06-19 16:41:14,917:INFO:            imblearn: 0.9.1
2023-06-19 16:41:14,917:INFO:   category_encoders: 2.6.1
2023-06-19 16:41:14,917:INFO:            lightgbm: 3.3.5
2023-06-19 16:41:14,917:INFO:               numba: 0.57.0
2023-06-19 16:41:14,917:INFO:            requests: 2.31.0
2023-06-19 16:41:14,917:INFO:          matplotlib: 3.4.3
2023-06-19 16:41:14,917:INFO:          scikitplot: 0.3.7
2023-06-19 16:41:14,917:INFO:         yellowbrick: 1.5
2023-06-19 16:41:14,917:INFO:              plotly: 5.8.0
2023-06-19 16:41:14,917:INFO:             kaleido: 0.2.1
2023-06-19 16:41:14,917:INFO:         statsmodels: 0.14.0
2023-06-19 16:41:14,917:INFO:              sktime: 0.17.0
2023-06-19 16:41:14,917:INFO:               tbats: 1.1.3
2023-06-19 16:41:14,917:INFO:            pmdarima: 2.0.3
2023-06-19 16:41:14,917:INFO:              psutil: 5.9.0
2023-06-19 16:41:14,917:INFO:PyCaret optional dependencies:
2023-06-19 16:41:14,917:INFO:                shap: Not installed
2023-06-19 16:41:14,917:INFO:           interpret: Not installed
2023-06-19 16:41:14,917:INFO:                umap: Not installed
2023-06-19 16:41:14,917:INFO:    pandas_profiling: Not installed
2023-06-19 16:41:14,918:INFO:  explainerdashboard: Not installed
2023-06-19 16:41:14,918:INFO:             autoviz: Not installed
2023-06-19 16:41:14,918:INFO:           fairlearn: Not installed
2023-06-19 16:41:14,918:INFO:             xgboost: Not installed
2023-06-19 16:41:14,918:INFO:            catboost: Not installed
2023-06-19 16:41:14,918:INFO:              kmodes: Not installed
2023-06-19 16:41:14,918:INFO:             mlxtend: Not installed
2023-06-19 16:41:14,918:INFO:       statsforecast: Not installed
2023-06-19 16:41:14,918:INFO:        tune_sklearn: Not installed
2023-06-19 16:41:14,918:INFO:                 ray: Not installed
2023-06-19 16:41:14,918:INFO:            hyperopt: Not installed
2023-06-19 16:41:14,918:INFO:              optuna: Not installed
2023-06-19 16:41:14,918:INFO:               skopt: Not installed
2023-06-19 16:41:14,918:INFO:              mlflow: Not installed
2023-06-19 16:41:14,918:INFO:              gradio: Not installed
2023-06-19 16:41:14,918:INFO:             fastapi: Not installed
2023-06-19 16:41:14,918:INFO:             uvicorn: Not installed
2023-06-19 16:41:14,918:INFO:              m2cgen: Not installed
2023-06-19 16:41:14,918:INFO:           evidently: Not installed
2023-06-19 16:41:14,918:INFO:               fugue: Not installed
2023-06-19 16:41:14,918:INFO:           streamlit: Not installed
2023-06-19 16:41:14,919:INFO:             prophet: Not installed
2023-06-19 16:41:14,919:INFO:None
2023-06-19 16:41:14,919:INFO:Set up data.
2023-06-19 16:41:15,008:INFO:Set up train/test split.
2023-06-19 16:41:15,008:INFO:Set up data.
2023-06-19 16:41:15,046:INFO:Set up index.
2023-06-19 16:41:15,049:INFO:Set up folding strategy.
2023-06-19 16:41:15,049:INFO:Assigning column types.
2023-06-19 16:41:15,066:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:41:15,125:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:41:15,126:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:41:15,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,226:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:41:15,227:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:41:15,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,265:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:41:15,321:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:41:15,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,412:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:41:15,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,444:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:41:15,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:15,621:INFO:Preparing preprocessing pipeline...
2023-06-19 16:41:15,624:INFO:Set up simple imputation.
2023-06-19 16:41:15,642:INFO:Set up encoding of ordinal features.
2023-06-19 16:41:15,660:INFO:Set up encoding of categorical features.
2023-06-19 16:41:15,661:INFO:Set up column name cleaning.
2023-06-19 16:41:16,359:INFO:Finished creating preprocessing pipeline.
2023-06-19 16:41:16,404:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 16:41:16,404:INFO:Creating final display dataframe.
2023-06-19 16:41:17,378:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 55)
5   Transformed train set shape       (51190, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              b7ce
2023-06-19 16:41:17,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:17,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:17,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:17,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:41:17,568:INFO:setup() successfully completed in 3.54s...............
2023-06-19 16:43:41,227:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:43:41,227:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:43:41,227:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:43:41,227:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:43:42,334:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 16:43:43,290:INFO:PyCaret ClassificationExperiment
2023-06-19 16:43:43,291:INFO:Logging name: clf-default-name
2023-06-19 16:43:43,291:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:43:43,291:INFO:version 3.0.2
2023-06-19 16:43:43,291:INFO:Initializing setup()
2023-06-19 16:43:43,291:INFO:self.USI: 3961
2023-06-19 16:43:43,291:INFO:self._variable_keys: {'X_test', 'target_param', 'X', 'exp_id', 'seed', 'gpu_n_jobs_param', '_available_plots', 'fold_shuffle_param', 'memory', '_ml_usecase', 'y_test', 'fold_generator', 'y_train', 'log_plots_param', 'exp_name_log', 'pipeline', 'USI', 'gpu_param', 'idx', 'fold_groups_param', 'X_train', 'data', 'html_param', 'y', 'is_multiclass', 'logging_param', 'n_jobs_param', 'fix_imbalance'}
2023-06-19 16:43:43,291:INFO:Checking environment
2023-06-19 16:43:43,291:INFO:python_version: 3.9.7
2023-06-19 16:43:43,291:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:43:43,291:INFO:machine: AMD64
2023-06-19 16:43:43,291:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:43:43,291:INFO:Memory: svmem(total=17120436224, available=5912051712, percent=65.5, used=11208384512, free=5912051712)
2023-06-19 16:43:43,291:INFO:Physical Core: 4
2023-06-19 16:43:43,291:INFO:Logical Core: 4
2023-06-19 16:43:43,291:INFO:Checking libraries
2023-06-19 16:43:43,291:INFO:System:
2023-06-19 16:43:43,291:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:43:43,292:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:43:43,292:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:43:43,292:INFO:PyCaret required dependencies:
2023-06-19 16:43:43,292:INFO:                 pip: 21.2.3
2023-06-19 16:43:43,292:INFO:          setuptools: 57.4.0
2023-06-19 16:43:43,292:INFO:             pycaret: 3.0.2
2023-06-19 16:43:43,292:INFO:             IPython: 7.28.0
2023-06-19 16:43:43,292:INFO:          ipywidgets: 8.0.6
2023-06-19 16:43:43,292:INFO:                tqdm: 4.64.0
2023-06-19 16:43:43,292:INFO:               numpy: 1.22.4
2023-06-19 16:43:43,292:INFO:              pandas: 1.3.5
2023-06-19 16:43:43,292:INFO:              jinja2: 3.1.2
2023-06-19 16:43:43,292:INFO:               scipy: 1.7.1
2023-06-19 16:43:43,292:INFO:              joblib: 1.2.0
2023-06-19 16:43:43,292:INFO:             sklearn: 1.1.0
2023-06-19 16:43:43,292:INFO:                pyod: 1.0.9
2023-06-19 16:43:43,292:INFO:            imblearn: 0.9.1
2023-06-19 16:43:43,293:INFO:   category_encoders: 2.6.1
2023-06-19 16:43:43,293:INFO:            lightgbm: 3.3.5
2023-06-19 16:43:43,293:INFO:               numba: 0.57.0
2023-06-19 16:43:43,293:INFO:            requests: 2.31.0
2023-06-19 16:43:43,293:INFO:          matplotlib: 3.4.3
2023-06-19 16:43:43,293:INFO:          scikitplot: 0.3.7
2023-06-19 16:43:43,293:INFO:         yellowbrick: 1.5
2023-06-19 16:43:43,293:INFO:              plotly: 5.8.0
2023-06-19 16:43:43,293:INFO:             kaleido: 0.2.1
2023-06-19 16:43:43,293:INFO:         statsmodels: 0.14.0
2023-06-19 16:43:43,293:INFO:              sktime: 0.17.0
2023-06-19 16:43:43,293:INFO:               tbats: 1.1.3
2023-06-19 16:43:43,293:INFO:            pmdarima: 2.0.3
2023-06-19 16:43:43,293:INFO:              psutil: 5.9.0
2023-06-19 16:43:43,293:INFO:PyCaret optional dependencies:
2023-06-19 16:43:43,315:INFO:                shap: Not installed
2023-06-19 16:43:43,315:INFO:           interpret: Not installed
2023-06-19 16:43:43,315:INFO:                umap: Not installed
2023-06-19 16:43:43,315:INFO:    pandas_profiling: Not installed
2023-06-19 16:43:43,315:INFO:  explainerdashboard: Not installed
2023-06-19 16:43:43,315:INFO:             autoviz: Not installed
2023-06-19 16:43:43,315:INFO:           fairlearn: Not installed
2023-06-19 16:43:43,315:INFO:             xgboost: Not installed
2023-06-19 16:43:43,315:INFO:            catboost: Not installed
2023-06-19 16:43:43,315:INFO:              kmodes: Not installed
2023-06-19 16:43:43,315:INFO:             mlxtend: Not installed
2023-06-19 16:43:43,316:INFO:       statsforecast: Not installed
2023-06-19 16:43:43,316:INFO:        tune_sklearn: Not installed
2023-06-19 16:43:43,316:INFO:                 ray: Not installed
2023-06-19 16:43:43,316:INFO:            hyperopt: Not installed
2023-06-19 16:43:43,316:INFO:              optuna: Not installed
2023-06-19 16:43:43,316:INFO:               skopt: Not installed
2023-06-19 16:43:43,316:INFO:              mlflow: Not installed
2023-06-19 16:43:43,316:INFO:              gradio: Not installed
2023-06-19 16:43:43,316:INFO:             fastapi: Not installed
2023-06-19 16:43:43,316:INFO:             uvicorn: Not installed
2023-06-19 16:43:43,316:INFO:              m2cgen: Not installed
2023-06-19 16:43:43,316:INFO:           evidently: Not installed
2023-06-19 16:43:43,316:INFO:               fugue: Not installed
2023-06-19 16:43:43,316:INFO:           streamlit: Not installed
2023-06-19 16:43:43,316:INFO:             prophet: Not installed
2023-06-19 16:43:43,316:INFO:None
2023-06-19 16:43:43,316:INFO:Set up data.
2023-06-19 16:43:43,395:INFO:Set up train/test split.
2023-06-19 16:43:43,395:INFO:Set up data.
2023-06-19 16:43:43,425:INFO:Set up index.
2023-06-19 16:43:43,427:INFO:Set up folding strategy.
2023-06-19 16:43:43,428:INFO:Assigning column types.
2023-06-19 16:43:43,442:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:43:43,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:43:43,498:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:43:43,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,641:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:43:43,642:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:43:43,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,674:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:43:43,726:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:43:43,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,811:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:43:43,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,848:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:43:43,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:43,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:44,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:44,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:44,019:INFO:Preparing preprocessing pipeline...
2023-06-19 16:43:44,022:INFO:Set up simple imputation.
2023-06-19 16:43:44,039:INFO:Set up encoding of ordinal features.
2023-06-19 16:43:44,052:INFO:Set up encoding of categorical features.
2023-06-19 16:43:44,054:INFO:Set up column name cleaning.
2023-06-19 16:43:45,294:INFO:Finished creating preprocessing pipeline.
2023-06-19 16:43:45,344:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 16:43:45,344:INFO:Creating final display dataframe.
2023-06-19 16:43:46,339:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 55)
5   Transformed train set shape       (51190, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              3961
2023-06-19 16:43:46,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:46,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:46,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:46,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:43:46,543:INFO:setup() successfully completed in 4.1s...............
2023-06-19 16:44:05,243:INFO:Initializing create_model()
2023-06-19 16:44:05,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E670EF3D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 16:44:05,244:INFO:Checking exceptions
2023-06-19 16:44:05,282:INFO:Importing libraries
2023-06-19 16:44:05,283:INFO:Copying training dataset
2023-06-19 16:44:05,309:INFO:Defining folds
2023-06-19 16:44:05,309:INFO:Declaring metric variables
2023-06-19 16:44:05,314:INFO:Importing untrained model
2023-06-19 16:44:05,336:INFO:Logistic Regression Imported successfully
2023-06-19 16:44:05,346:INFO:Starting cross validation
2023-06-19 16:44:05,349:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 16:44:26,376:INFO:Calculating mean and std
2023-06-19 16:44:26,377:INFO:Creating metrics dataframe
2023-06-19 16:44:26,384:INFO:Finalizing model
2023-06-19 16:44:33,299:INFO:Uploading results into container
2023-06-19 16:44:33,300:INFO:Uploading model into container now
2023-06-19 16:44:33,321:INFO:_master_model_container: 1
2023-06-19 16:44:33,321:INFO:_display_container: 2
2023-06-19 16:44:33,322:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 16:44:33,322:INFO:create_model() successfully completed......................................
2023-06-19 16:44:33,418:INFO:Initializing evaluate_model()
2023-06-19 16:44:33,418:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E670EF3D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 16:44:33,446:INFO:Initializing plot_model()
2023-06-19 16:44:33,446:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E670EF3D0>, system=True)
2023-06-19 16:44:33,446:INFO:Checking exceptions
2023-06-19 16:44:33,459:INFO:Preloading libraries
2023-06-19 16:44:33,459:INFO:Copying training dataset
2023-06-19 16:44:33,459:INFO:Plot type: pipeline
2023-06-19 16:44:33,666:INFO:Visual Rendered Successfully
2023-06-19 16:44:33,734:INFO:plot_model() successfully completed......................................
2023-06-19 16:44:53,467:INFO:Initializing plot_model()
2023-06-19 16:44:53,467:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E670EF3D0>, system=True)
2023-06-19 16:44:53,468:INFO:Checking exceptions
2023-06-19 16:44:53,478:INFO:Preloading libraries
2023-06-19 16:44:53,478:INFO:Copying training dataset
2023-06-19 16:44:53,478:INFO:Plot type: parameter
2023-06-19 16:44:53,483:INFO:Visual Rendered Successfully
2023-06-19 16:44:53,552:INFO:plot_model() successfully completed......................................
2023-06-19 16:44:56,106:INFO:Initializing plot_model()
2023-06-19 16:44:56,106:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E670EF3D0>, system=True)
2023-06-19 16:44:56,106:INFO:Checking exceptions
2023-06-19 16:44:56,115:INFO:Preloading libraries
2023-06-19 16:44:56,115:INFO:Copying training dataset
2023-06-19 16:44:56,115:INFO:Plot type: auc
2023-06-19 16:44:56,327:INFO:Fitting Model
2023-06-19 16:44:56,328:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 16:44:56,329:INFO:Scoring test/hold-out set
2023-06-19 16:44:56,566:INFO:Visual Rendered Successfully
2023-06-19 16:44:56,656:INFO:plot_model() successfully completed......................................
2023-06-19 16:45:01,713:INFO:Initializing plot_model()
2023-06-19 16:45:01,713:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E670EF3D0>, system=True)
2023-06-19 16:45:01,713:INFO:Checking exceptions
2023-06-19 16:45:01,723:INFO:Preloading libraries
2023-06-19 16:45:01,723:INFO:Copying training dataset
2023-06-19 16:45:01,723:INFO:Plot type: confusion_matrix
2023-06-19 16:45:01,930:INFO:Fitting Model
2023-06-19 16:45:01,930:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 16:45:01,931:INFO:Scoring test/hold-out set
2023-06-19 16:45:02,044:INFO:Visual Rendered Successfully
2023-06-19 16:45:02,125:INFO:plot_model() successfully completed......................................
2023-06-19 16:45:10,674:INFO:Initializing plot_model()
2023-06-19 16:45:10,675:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026E670EF3D0>, system=True)
2023-06-19 16:45:10,675:INFO:Checking exceptions
2023-06-19 16:45:10,684:INFO:Preloading libraries
2023-06-19 16:45:10,685:INFO:Copying training dataset
2023-06-19 16:45:10,685:INFO:Plot type: rfe
2023-06-19 16:45:10,909:INFO:Fitting Model
2023-06-19 16:49:43,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:49:43,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:49:43,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:49:43,046:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:49:44,884:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 16:50:02,209:INFO:PyCaret ClassificationExperiment
2023-06-19 16:50:02,209:INFO:Logging name: clf-default-name
2023-06-19 16:50:02,209:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:50:02,209:INFO:version 3.0.2
2023-06-19 16:50:02,209:INFO:Initializing setup()
2023-06-19 16:50:02,209:INFO:self.USI: b585
2023-06-19 16:50:02,209:INFO:self._variable_keys: {'USI', 'data', 'y', 'X_train', 'is_multiclass', 'exp_id', 'memory', 'fold_generator', 'y_test', '_ml_usecase', 'target_param', 'gpu_n_jobs_param', 'logging_param', 'fix_imbalance', 'X_test', 'html_param', 'idx', 'fold_shuffle_param', 'seed', 'y_train', '_available_plots', 'exp_name_log', 'gpu_param', 'pipeline', 'log_plots_param', 'X', 'fold_groups_param', 'n_jobs_param'}
2023-06-19 16:50:02,209:INFO:Checking environment
2023-06-19 16:50:02,209:INFO:python_version: 3.9.7
2023-06-19 16:50:02,209:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:50:02,209:INFO:machine: AMD64
2023-06-19 16:50:02,209:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:50:02,210:INFO:Memory: svmem(total=17120436224, available=5882089472, percent=65.6, used=11238346752, free=5882089472)
2023-06-19 16:50:02,210:INFO:Physical Core: 4
2023-06-19 16:50:02,210:INFO:Logical Core: 4
2023-06-19 16:50:02,210:INFO:Checking libraries
2023-06-19 16:50:02,210:INFO:System:
2023-06-19 16:50:02,212:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:50:02,212:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:50:02,212:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:50:02,212:INFO:PyCaret required dependencies:
2023-06-19 16:50:02,213:INFO:                 pip: 21.2.3
2023-06-19 16:50:02,213:INFO:          setuptools: 57.4.0
2023-06-19 16:50:02,213:INFO:             pycaret: 3.0.2
2023-06-19 16:50:02,214:INFO:             IPython: 7.28.0
2023-06-19 16:50:02,214:INFO:          ipywidgets: 8.0.6
2023-06-19 16:50:02,214:INFO:                tqdm: 4.64.0
2023-06-19 16:50:02,215:INFO:               numpy: 1.22.4
2023-06-19 16:50:02,215:INFO:              pandas: 1.3.5
2023-06-19 16:50:02,215:INFO:              jinja2: 3.1.2
2023-06-19 16:50:02,215:INFO:               scipy: 1.7.1
2023-06-19 16:50:02,215:INFO:              joblib: 1.2.0
2023-06-19 16:50:02,215:INFO:             sklearn: 1.1.0
2023-06-19 16:50:02,215:INFO:                pyod: 1.0.9
2023-06-19 16:50:02,215:INFO:            imblearn: 0.9.1
2023-06-19 16:50:02,217:INFO:   category_encoders: 2.6.1
2023-06-19 16:50:02,217:INFO:            lightgbm: 3.3.5
2023-06-19 16:50:02,217:INFO:               numba: 0.57.0
2023-06-19 16:50:02,217:INFO:            requests: 2.31.0
2023-06-19 16:50:02,217:INFO:          matplotlib: 3.4.3
2023-06-19 16:50:02,217:INFO:          scikitplot: 0.3.7
2023-06-19 16:50:02,218:INFO:         yellowbrick: 1.5
2023-06-19 16:50:02,218:INFO:              plotly: 5.8.0
2023-06-19 16:50:02,218:INFO:             kaleido: 0.2.1
2023-06-19 16:50:02,218:INFO:         statsmodels: 0.14.0
2023-06-19 16:50:02,218:INFO:              sktime: 0.17.0
2023-06-19 16:50:02,218:INFO:               tbats: 1.1.3
2023-06-19 16:50:02,218:INFO:            pmdarima: 2.0.3
2023-06-19 16:50:02,218:INFO:              psutil: 5.9.0
2023-06-19 16:50:02,218:INFO:PyCaret optional dependencies:
2023-06-19 16:50:02,261:INFO:                shap: Not installed
2023-06-19 16:50:02,261:INFO:           interpret: Not installed
2023-06-19 16:50:02,261:INFO:                umap: Not installed
2023-06-19 16:50:02,261:INFO:    pandas_profiling: Not installed
2023-06-19 16:50:02,261:INFO:  explainerdashboard: Not installed
2023-06-19 16:50:02,261:INFO:             autoviz: Not installed
2023-06-19 16:50:02,262:INFO:           fairlearn: Not installed
2023-06-19 16:50:02,262:INFO:             xgboost: Not installed
2023-06-19 16:50:02,262:INFO:            catboost: Not installed
2023-06-19 16:50:02,262:INFO:              kmodes: Not installed
2023-06-19 16:50:02,262:INFO:             mlxtend: Not installed
2023-06-19 16:50:02,262:INFO:       statsforecast: Not installed
2023-06-19 16:50:02,262:INFO:        tune_sklearn: Not installed
2023-06-19 16:50:02,263:INFO:                 ray: Not installed
2023-06-19 16:50:02,263:INFO:            hyperopt: Not installed
2023-06-19 16:50:02,263:INFO:              optuna: Not installed
2023-06-19 16:50:02,263:INFO:               skopt: Not installed
2023-06-19 16:50:02,263:INFO:              mlflow: Not installed
2023-06-19 16:50:02,263:INFO:              gradio: Not installed
2023-06-19 16:50:02,263:INFO:             fastapi: Not installed
2023-06-19 16:50:02,263:INFO:             uvicorn: Not installed
2023-06-19 16:50:02,263:INFO:              m2cgen: Not installed
2023-06-19 16:50:02,263:INFO:           evidently: Not installed
2023-06-19 16:50:02,263:INFO:               fugue: Not installed
2023-06-19 16:50:02,263:INFO:           streamlit: Not installed
2023-06-19 16:50:02,263:INFO:             prophet: Not installed
2023-06-19 16:50:02,263:INFO:None
2023-06-19 16:50:02,264:INFO:Set up data.
2023-06-19 16:50:02,413:INFO:Set up train/test split.
2023-06-19 16:50:02,414:INFO:Set up data.
2023-06-19 16:50:02,505:INFO:Set up index.
2023-06-19 16:50:02,519:INFO:Set up folding strategy.
2023-06-19 16:50:02,522:INFO:Assigning column types.
2023-06-19 16:50:33,124:INFO:PyCaret ClassificationExperiment
2023-06-19 16:50:33,124:INFO:Logging name: clf-default-name
2023-06-19 16:50:33,124:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:50:33,124:INFO:version 3.0.2
2023-06-19 16:50:33,124:INFO:Initializing setup()
2023-06-19 16:50:33,124:INFO:self.USI: 2036
2023-06-19 16:50:33,124:INFO:self._variable_keys: {'USI', 'data', 'y', 'X_train', 'is_multiclass', 'exp_id', 'memory', 'fold_generator', 'y_test', '_ml_usecase', 'target_param', 'gpu_n_jobs_param', 'logging_param', 'fix_imbalance', 'X_test', 'html_param', 'idx', 'fold_shuffle_param', 'seed', 'y_train', '_available_plots', 'exp_name_log', 'gpu_param', 'pipeline', 'log_plots_param', 'X', 'fold_groups_param', 'n_jobs_param'}
2023-06-19 16:50:33,125:INFO:Checking environment
2023-06-19 16:50:33,125:INFO:python_version: 3.9.7
2023-06-19 16:50:33,125:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:50:33,125:INFO:machine: AMD64
2023-06-19 16:50:33,125:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:50:33,125:INFO:Memory: svmem(total=17120436224, available=5860925440, percent=65.8, used=11259510784, free=5860925440)
2023-06-19 16:50:33,125:INFO:Physical Core: 4
2023-06-19 16:50:33,125:INFO:Logical Core: 4
2023-06-19 16:50:33,126:INFO:Checking libraries
2023-06-19 16:50:33,127:INFO:System:
2023-06-19 16:50:33,127:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:50:33,127:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:50:33,127:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:50:33,127:INFO:PyCaret required dependencies:
2023-06-19 16:50:33,127:INFO:                 pip: 21.2.3
2023-06-19 16:50:33,127:INFO:          setuptools: 57.4.0
2023-06-19 16:50:33,127:INFO:             pycaret: 3.0.2
2023-06-19 16:50:33,127:INFO:             IPython: 7.28.0
2023-06-19 16:50:33,128:INFO:          ipywidgets: 8.0.6
2023-06-19 16:50:33,128:INFO:                tqdm: 4.64.0
2023-06-19 16:50:33,128:INFO:               numpy: 1.22.4
2023-06-19 16:50:33,128:INFO:              pandas: 1.3.5
2023-06-19 16:50:33,128:INFO:              jinja2: 3.1.2
2023-06-19 16:50:33,128:INFO:               scipy: 1.7.1
2023-06-19 16:50:33,128:INFO:              joblib: 1.2.0
2023-06-19 16:50:33,128:INFO:             sklearn: 1.1.0
2023-06-19 16:50:33,128:INFO:                pyod: 1.0.9
2023-06-19 16:50:33,128:INFO:            imblearn: 0.9.1
2023-06-19 16:50:33,128:INFO:   category_encoders: 2.6.1
2023-06-19 16:50:33,128:INFO:            lightgbm: 3.3.5
2023-06-19 16:50:33,128:INFO:               numba: 0.57.0
2023-06-19 16:50:33,128:INFO:            requests: 2.31.0
2023-06-19 16:50:33,128:INFO:          matplotlib: 3.4.3
2023-06-19 16:50:33,128:INFO:          scikitplot: 0.3.7
2023-06-19 16:50:33,128:INFO:         yellowbrick: 1.5
2023-06-19 16:50:33,129:INFO:              plotly: 5.8.0
2023-06-19 16:50:33,129:INFO:             kaleido: 0.2.1
2023-06-19 16:50:33,129:INFO:         statsmodels: 0.14.0
2023-06-19 16:50:33,129:INFO:              sktime: 0.17.0
2023-06-19 16:50:33,129:INFO:               tbats: 1.1.3
2023-06-19 16:50:33,129:INFO:            pmdarima: 2.0.3
2023-06-19 16:50:33,129:INFO:              psutil: 5.9.0
2023-06-19 16:50:33,129:INFO:PyCaret optional dependencies:
2023-06-19 16:50:33,129:INFO:                shap: Not installed
2023-06-19 16:50:33,129:INFO:           interpret: Not installed
2023-06-19 16:50:33,130:INFO:                umap: Not installed
2023-06-19 16:50:33,130:INFO:    pandas_profiling: Not installed
2023-06-19 16:50:33,130:INFO:  explainerdashboard: Not installed
2023-06-19 16:50:33,130:INFO:             autoviz: Not installed
2023-06-19 16:50:33,130:INFO:           fairlearn: Not installed
2023-06-19 16:50:33,130:INFO:             xgboost: Not installed
2023-06-19 16:50:33,130:INFO:            catboost: Not installed
2023-06-19 16:50:33,131:INFO:              kmodes: Not installed
2023-06-19 16:50:33,131:INFO:             mlxtend: Not installed
2023-06-19 16:50:33,132:INFO:       statsforecast: Not installed
2023-06-19 16:50:33,132:INFO:        tune_sklearn: Not installed
2023-06-19 16:50:33,132:INFO:                 ray: Not installed
2023-06-19 16:50:33,132:INFO:            hyperopt: Not installed
2023-06-19 16:50:33,132:INFO:              optuna: Not installed
2023-06-19 16:50:33,132:INFO:               skopt: Not installed
2023-06-19 16:50:33,132:INFO:              mlflow: Not installed
2023-06-19 16:50:33,132:INFO:              gradio: Not installed
2023-06-19 16:50:33,132:INFO:             fastapi: Not installed
2023-06-19 16:50:33,132:INFO:             uvicorn: Not installed
2023-06-19 16:50:33,132:INFO:              m2cgen: Not installed
2023-06-19 16:50:33,132:INFO:           evidently: Not installed
2023-06-19 16:50:33,132:INFO:               fugue: Not installed
2023-06-19 16:50:33,132:INFO:           streamlit: Not installed
2023-06-19 16:50:33,132:INFO:             prophet: Not installed
2023-06-19 16:50:33,132:INFO:None
2023-06-19 16:50:33,133:INFO:Set up data.
2023-06-19 16:50:33,261:INFO:Set up train/test split.
2023-06-19 16:50:33,261:INFO:Set up data.
2023-06-19 16:50:33,349:INFO:Set up index.
2023-06-19 16:50:33,355:INFO:Set up folding strategy.
2023-06-19 16:50:33,356:INFO:Assigning column types.
2023-06-19 16:50:33,488:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:50:33,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:50:33,570:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:50:33,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:33,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:33,815:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:50:33,818:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:50:33,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:33,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:33,880:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:50:33,973:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:50:34,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:34,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:34,125:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:50:34,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:34,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:34,177:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:50:34,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:34,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:34,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:34,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:34,448:INFO:Preparing preprocessing pipeline...
2023-06-19 16:50:34,458:INFO:Set up simple imputation.
2023-06-19 16:50:34,474:INFO:Set up column name cleaning.
2023-06-19 16:50:34,729:INFO:Finished creating preprocessing pipeline.
2023-06-19 16:50:34,745:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 16:50:34,746:INFO:Creating final display dataframe.
2023-06-19 16:50:35,497:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 55)
4        Transformed data shape       (63546, 55)
5   Transformed train set shape       (51190, 55)
6    Transformed test set shape       (12356, 55)
7              Numeric features                54
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              2036
2023-06-19 16:50:35,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:35,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:35,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:35,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:50:35,881:INFO:setup() successfully completed in 4.42s...............
2023-06-19 16:50:40,587:INFO:Initializing create_model()
2023-06-19 16:50:40,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD209820>, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[20, 15, 10], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 16:50:40,588:INFO:Checking exceptions
2023-06-19 16:50:40,629:INFO:Importing libraries
2023-06-19 16:50:40,630:INFO:Copying training dataset
2023-06-19 16:50:40,763:INFO:Defining folds
2023-06-19 16:50:40,763:INFO:Declaring metric variables
2023-06-19 16:50:40,773:INFO:Importing untrained model
2023-06-19 16:50:40,773:INFO:Declaring custom model
2023-06-19 16:50:40,779:INFO:MLP Classifier Imported successfully
2023-06-19 16:50:40,797:INFO:Starting cross validation
2023-06-19 16:50:40,798:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 16:55:19,152:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:55:19,152:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:55:19,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:55:19,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 16:55:20,179:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 16:55:21,180:INFO:PyCaret ClassificationExperiment
2023-06-19 16:55:21,180:INFO:Logging name: clf-default-name
2023-06-19 16:55:21,181:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 16:55:21,181:INFO:version 3.0.2
2023-06-19 16:55:21,181:INFO:Initializing setup()
2023-06-19 16:55:21,181:INFO:self.USI: c635
2023-06-19 16:55:21,181:INFO:self._variable_keys: {'X_train', '_ml_usecase', 'exp_id', 'log_plots_param', '_available_plots', 'target_param', 'fold_generator', 'seed', 'gpu_n_jobs_param', 'fold_shuffle_param', 'USI', 'n_jobs_param', 'y_train', 'logging_param', 'exp_name_log', 'data', 'y_test', 'is_multiclass', 'fold_groups_param', 'X', 'pipeline', 'idx', 'html_param', 'gpu_param', 'memory', 'y', 'X_test', 'fix_imbalance'}
2023-06-19 16:55:21,181:INFO:Checking environment
2023-06-19 16:55:21,181:INFO:python_version: 3.9.7
2023-06-19 16:55:21,181:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 16:55:21,181:INFO:machine: AMD64
2023-06-19 16:55:21,181:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 16:55:21,181:INFO:Memory: svmem(total=17120436224, available=7021993984, percent=59.0, used=10098442240, free=7021993984)
2023-06-19 16:55:21,181:INFO:Physical Core: 4
2023-06-19 16:55:21,181:INFO:Logical Core: 4
2023-06-19 16:55:21,182:INFO:Checking libraries
2023-06-19 16:55:21,182:INFO:System:
2023-06-19 16:55:21,182:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 16:55:21,182:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 16:55:21,182:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 16:55:21,182:INFO:PyCaret required dependencies:
2023-06-19 16:55:21,182:INFO:                 pip: 21.2.3
2023-06-19 16:55:21,182:INFO:          setuptools: 57.4.0
2023-06-19 16:55:21,182:INFO:             pycaret: 3.0.2
2023-06-19 16:55:21,182:INFO:             IPython: 7.28.0
2023-06-19 16:55:21,182:INFO:          ipywidgets: 8.0.6
2023-06-19 16:55:21,182:INFO:                tqdm: 4.64.0
2023-06-19 16:55:21,182:INFO:               numpy: 1.22.4
2023-06-19 16:55:21,182:INFO:              pandas: 1.3.5
2023-06-19 16:55:21,182:INFO:              jinja2: 3.1.2
2023-06-19 16:55:21,182:INFO:               scipy: 1.7.1
2023-06-19 16:55:21,182:INFO:              joblib: 1.2.0
2023-06-19 16:55:21,182:INFO:             sklearn: 1.1.0
2023-06-19 16:55:21,183:INFO:                pyod: 1.0.9
2023-06-19 16:55:21,183:INFO:            imblearn: 0.9.1
2023-06-19 16:55:21,183:INFO:   category_encoders: 2.6.1
2023-06-19 16:55:21,183:INFO:            lightgbm: 3.3.5
2023-06-19 16:55:21,183:INFO:               numba: 0.57.0
2023-06-19 16:55:21,183:INFO:            requests: 2.31.0
2023-06-19 16:55:21,183:INFO:          matplotlib: 3.4.3
2023-06-19 16:55:21,183:INFO:          scikitplot: 0.3.7
2023-06-19 16:55:21,183:INFO:         yellowbrick: 1.5
2023-06-19 16:55:21,183:INFO:              plotly: 5.8.0
2023-06-19 16:55:21,183:INFO:             kaleido: 0.2.1
2023-06-19 16:55:21,183:INFO:         statsmodels: 0.14.0
2023-06-19 16:55:21,183:INFO:              sktime: 0.17.0
2023-06-19 16:55:21,183:INFO:               tbats: 1.1.3
2023-06-19 16:55:21,183:INFO:            pmdarima: 2.0.3
2023-06-19 16:55:21,183:INFO:              psutil: 5.9.0
2023-06-19 16:55:21,183:INFO:PyCaret optional dependencies:
2023-06-19 16:55:21,205:INFO:                shap: Not installed
2023-06-19 16:55:21,205:INFO:           interpret: Not installed
2023-06-19 16:55:21,205:INFO:                umap: Not installed
2023-06-19 16:55:21,205:INFO:    pandas_profiling: Not installed
2023-06-19 16:55:21,205:INFO:  explainerdashboard: Not installed
2023-06-19 16:55:21,205:INFO:             autoviz: Not installed
2023-06-19 16:55:21,206:INFO:           fairlearn: Not installed
2023-06-19 16:55:21,206:INFO:             xgboost: Not installed
2023-06-19 16:55:21,206:INFO:            catboost: Not installed
2023-06-19 16:55:21,206:INFO:              kmodes: Not installed
2023-06-19 16:55:21,206:INFO:             mlxtend: Not installed
2023-06-19 16:55:21,206:INFO:       statsforecast: Not installed
2023-06-19 16:55:21,206:INFO:        tune_sklearn: Not installed
2023-06-19 16:55:21,206:INFO:                 ray: Not installed
2023-06-19 16:55:21,206:INFO:            hyperopt: Not installed
2023-06-19 16:55:21,206:INFO:              optuna: Not installed
2023-06-19 16:55:21,206:INFO:               skopt: Not installed
2023-06-19 16:55:21,206:INFO:              mlflow: Not installed
2023-06-19 16:55:21,206:INFO:              gradio: Not installed
2023-06-19 16:55:21,206:INFO:             fastapi: Not installed
2023-06-19 16:55:21,206:INFO:             uvicorn: Not installed
2023-06-19 16:55:21,206:INFO:              m2cgen: Not installed
2023-06-19 16:55:21,206:INFO:           evidently: Not installed
2023-06-19 16:55:21,206:INFO:               fugue: Not installed
2023-06-19 16:55:21,206:INFO:           streamlit: Not installed
2023-06-19 16:55:21,207:INFO:             prophet: Not installed
2023-06-19 16:55:21,207:INFO:None
2023-06-19 16:55:21,207:INFO:Set up data.
2023-06-19 16:55:21,278:INFO:Set up train/test split.
2023-06-19 16:55:21,278:INFO:Set up data.
2023-06-19 16:55:21,324:INFO:Set up index.
2023-06-19 16:55:21,328:INFO:Set up folding strategy.
2023-06-19 16:55:21,328:INFO:Assigning column types.
2023-06-19 16:55:21,399:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 16:55:21,450:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:55:21,452:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:55:21,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,593:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 16:55:21,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:55:21,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,625:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 16:55:21,677:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:55:21,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,761:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 16:55:21,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,793:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 16:55:21,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:21,971:INFO:Preparing preprocessing pipeline...
2023-06-19 16:55:21,980:INFO:Set up simple imputation.
2023-06-19 16:55:21,989:INFO:Set up column name cleaning.
2023-06-19 16:55:22,132:INFO:Finished creating preprocessing pipeline.
2023-06-19 16:55:22,139:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 16:55:22,139:INFO:Creating final display dataframe.
2023-06-19 16:55:22,457:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 55)
4        Transformed data shape       (63546, 55)
5   Transformed train set shape       (51190, 55)
6    Transformed test set shape       (12356, 55)
7              Numeric features                54
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c635
2023-06-19 16:55:22,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:22,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:22,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:22,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 16:55:22,730:INFO:setup() successfully completed in 2.38s...............
2023-06-19 16:55:25,138:INFO:Initializing create_model()
2023-06-19 16:55:25,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022059645E80>, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 16:55:25,138:INFO:Checking exceptions
2023-06-19 16:55:25,184:INFO:Importing libraries
2023-06-19 16:55:25,184:INFO:Copying training dataset
2023-06-19 16:55:25,277:INFO:Defining folds
2023-06-19 16:55:25,277:INFO:Declaring metric variables
2023-06-19 16:55:25,291:INFO:Importing untrained model
2023-06-19 16:55:25,291:INFO:Declaring custom model
2023-06-19 16:55:25,298:INFO:MLP Classifier Imported successfully
2023-06-19 16:55:25,314:INFO:Starting cross validation
2023-06-19 16:55:25,315:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 16:56:33,826:INFO:Calculating mean and std
2023-06-19 16:56:33,830:INFO:Creating metrics dataframe
2023-06-19 16:56:33,839:INFO:Finalizing model
2023-06-19 16:57:12,630:INFO:Uploading results into container
2023-06-19 16:57:12,631:INFO:Uploading model into container now
2023-06-19 16:57:12,650:INFO:_master_model_container: 1
2023-06-19 16:57:12,651:INFO:_display_container: 2
2023-06-19 16:57:12,651:INFO:MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-19 16:57:12,651:INFO:create_model() successfully completed......................................
2023-06-19 16:57:12,756:INFO:Initializing evaluate_model()
2023-06-19 16:57:12,756:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022059645E80>, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 16:57:12,810:INFO:Initializing plot_model()
2023-06-19 16:57:12,810:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022059645E80>, system=True)
2023-06-19 16:57:12,810:INFO:Checking exceptions
2023-06-19 16:57:12,863:INFO:Preloading libraries
2023-06-19 16:57:12,865:INFO:Copying training dataset
2023-06-19 16:57:12,865:INFO:Plot type: pipeline
2023-06-19 16:57:13,023:INFO:Visual Rendered Successfully
2023-06-19 16:57:13,093:INFO:plot_model() successfully completed......................................
2023-06-19 16:57:22,875:INFO:Initializing plot_model()
2023-06-19 16:57:22,875:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022059645E80>, system=True)
2023-06-19 16:57:22,876:INFO:Checking exceptions
2023-06-19 16:57:22,903:INFO:Preloading libraries
2023-06-19 16:57:22,904:INFO:Copying training dataset
2023-06-19 16:57:22,904:INFO:Plot type: parameter
2023-06-19 16:57:22,910:INFO:Visual Rendered Successfully
2023-06-19 16:57:23,030:INFO:plot_model() successfully completed......................................
2023-06-19 16:57:30,738:INFO:Initializing plot_model()
2023-06-19 16:57:30,738:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022059645E80>, system=True)
2023-06-19 16:57:30,738:INFO:Checking exceptions
2023-06-19 16:57:30,764:INFO:Preloading libraries
2023-06-19 16:57:30,765:INFO:Copying training dataset
2023-06-19 16:57:30,765:INFO:Plot type: auc
2023-06-19 16:57:31,008:INFO:Fitting Model
2023-06-19 16:57:31,009:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 16:57:31,010:INFO:Scoring test/hold-out set
2023-06-19 16:57:31,222:INFO:Visual Rendered Successfully
2023-06-19 16:57:31,324:INFO:plot_model() successfully completed......................................
2023-06-19 16:57:49,091:INFO:Initializing plot_model()
2023-06-19 16:57:49,091:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022059645E80>, system=True)
2023-06-19 16:57:49,091:INFO:Checking exceptions
2023-06-19 16:57:49,123:INFO:Preloading libraries
2023-06-19 16:57:49,123:INFO:Copying training dataset
2023-06-19 16:57:49,124:INFO:Plot type: confusion_matrix
2023-06-19 16:57:49,366:INFO:Fitting Model
2023-06-19 16:57:49,366:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 16:57:49,367:INFO:Scoring test/hold-out set
2023-06-19 16:57:49,492:INFO:Visual Rendered Successfully
2023-06-19 16:57:49,575:INFO:plot_model() successfully completed......................................
2023-06-19 16:57:55,500:INFO:Initializing plot_model()
2023-06-19 16:57:55,500:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022059645E80>, system=True)
2023-06-19 16:57:55,500:INFO:Checking exceptions
2023-06-19 16:57:55,527:INFO:Preloading libraries
2023-06-19 16:57:55,528:INFO:Copying training dataset
2023-06-19 16:57:55,528:INFO:Plot type: threshold
2023-06-19 16:57:55,819:INFO:Fitting Model
2023-06-19 17:12:32,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 17:12:32,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 17:12:32,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 17:12:32,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 17:12:33,921:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 17:12:35,084:INFO:PyCaret ClassificationExperiment
2023-06-19 17:12:35,084:INFO:Logging name: clf-default-name
2023-06-19 17:12:35,084:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 17:12:35,084:INFO:version 3.0.2
2023-06-19 17:12:35,085:INFO:Initializing setup()
2023-06-19 17:12:35,085:INFO:self.USI: c6b2
2023-06-19 17:12:35,085:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'html_param', 'USI', 'logging_param', 'n_jobs_param', 'memory', 'X', 'y', 'fold_groups_param', 'log_plots_param', 'fix_imbalance', 'target_param', 'X_test', 'gpu_n_jobs_param', 'exp_id', 'exp_name_log', 'y_train', 'X_train', '_ml_usecase', 'fold_generator', 'y_test', 'is_multiclass', 'data', 'idx', 'pipeline', 'seed', '_available_plots'}
2023-06-19 17:12:35,086:INFO:Checking environment
2023-06-19 17:12:35,086:INFO:python_version: 3.9.7
2023-06-19 17:12:35,086:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 17:12:35,086:INFO:machine: AMD64
2023-06-19 17:12:35,086:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 17:12:35,086:INFO:Memory: svmem(total=17120436224, available=7257018368, percent=57.6, used=9863417856, free=7257018368)
2023-06-19 17:12:35,087:INFO:Physical Core: 4
2023-06-19 17:12:35,087:INFO:Logical Core: 4
2023-06-19 17:12:35,087:INFO:Checking libraries
2023-06-19 17:12:35,087:INFO:System:
2023-06-19 17:12:35,087:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 17:12:35,087:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 17:12:35,087:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 17:12:35,087:INFO:PyCaret required dependencies:
2023-06-19 17:12:35,087:INFO:                 pip: 21.2.3
2023-06-19 17:12:35,087:INFO:          setuptools: 57.4.0
2023-06-19 17:12:35,087:INFO:             pycaret: 3.0.2
2023-06-19 17:12:35,087:INFO:             IPython: 7.28.0
2023-06-19 17:12:35,087:INFO:          ipywidgets: 8.0.6
2023-06-19 17:12:35,088:INFO:                tqdm: 4.64.0
2023-06-19 17:12:35,088:INFO:               numpy: 1.22.4
2023-06-19 17:12:35,088:INFO:              pandas: 1.3.5
2023-06-19 17:12:35,088:INFO:              jinja2: 3.1.2
2023-06-19 17:12:35,088:INFO:               scipy: 1.7.1
2023-06-19 17:12:35,088:INFO:              joblib: 1.2.0
2023-06-19 17:12:35,088:INFO:             sklearn: 1.1.0
2023-06-19 17:12:35,088:INFO:                pyod: 1.0.9
2023-06-19 17:12:35,088:INFO:            imblearn: 0.9.1
2023-06-19 17:12:35,088:INFO:   category_encoders: 2.6.1
2023-06-19 17:12:35,088:INFO:            lightgbm: 3.3.5
2023-06-19 17:12:35,088:INFO:               numba: 0.57.0
2023-06-19 17:12:35,088:INFO:            requests: 2.31.0
2023-06-19 17:12:35,088:INFO:          matplotlib: 3.4.3
2023-06-19 17:12:35,088:INFO:          scikitplot: 0.3.7
2023-06-19 17:12:35,089:INFO:         yellowbrick: 1.5
2023-06-19 17:12:35,089:INFO:              plotly: 5.8.0
2023-06-19 17:12:35,089:INFO:             kaleido: 0.2.1
2023-06-19 17:12:35,089:INFO:         statsmodels: 0.14.0
2023-06-19 17:12:35,089:INFO:              sktime: 0.17.0
2023-06-19 17:12:35,089:INFO:               tbats: 1.1.3
2023-06-19 17:12:35,089:INFO:            pmdarima: 2.0.3
2023-06-19 17:12:35,089:INFO:              psutil: 5.9.0
2023-06-19 17:12:35,089:INFO:PyCaret optional dependencies:
2023-06-19 17:12:35,111:INFO:                shap: Not installed
2023-06-19 17:12:35,111:INFO:           interpret: Not installed
2023-06-19 17:12:35,111:INFO:                umap: Not installed
2023-06-19 17:12:35,111:INFO:    pandas_profiling: Not installed
2023-06-19 17:12:35,111:INFO:  explainerdashboard: Not installed
2023-06-19 17:12:35,111:INFO:             autoviz: Not installed
2023-06-19 17:12:35,111:INFO:           fairlearn: Not installed
2023-06-19 17:12:35,111:INFO:             xgboost: Not installed
2023-06-19 17:12:35,111:INFO:            catboost: Not installed
2023-06-19 17:12:35,111:INFO:              kmodes: Not installed
2023-06-19 17:12:35,111:INFO:             mlxtend: Not installed
2023-06-19 17:12:35,111:INFO:       statsforecast: Not installed
2023-06-19 17:12:35,111:INFO:        tune_sklearn: Not installed
2023-06-19 17:12:35,113:INFO:                 ray: Not installed
2023-06-19 17:12:35,113:INFO:            hyperopt: Not installed
2023-06-19 17:12:35,113:INFO:              optuna: Not installed
2023-06-19 17:12:35,113:INFO:               skopt: Not installed
2023-06-19 17:12:35,113:INFO:              mlflow: Not installed
2023-06-19 17:12:35,113:INFO:              gradio: Not installed
2023-06-19 17:12:35,113:INFO:             fastapi: Not installed
2023-06-19 17:12:35,114:INFO:             uvicorn: Not installed
2023-06-19 17:12:35,114:INFO:              m2cgen: Not installed
2023-06-19 17:12:35,114:INFO:           evidently: Not installed
2023-06-19 17:12:35,114:INFO:               fugue: Not installed
2023-06-19 17:12:35,114:INFO:           streamlit: Not installed
2023-06-19 17:12:35,114:INFO:             prophet: Not installed
2023-06-19 17:12:35,114:INFO:None
2023-06-19 17:12:35,114:INFO:Set up data.
2023-06-19 17:12:35,195:INFO:Set up train/test split.
2023-06-19 17:12:35,196:INFO:Set up data.
2023-06-19 17:12:35,248:INFO:Set up index.
2023-06-19 17:12:35,252:INFO:Set up folding strategy.
2023-06-19 17:12:35,252:INFO:Assigning column types.
2023-06-19 17:12:35,333:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 17:12:35,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 17:12:35,396:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 17:12:35,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,548:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 17:12:35,549:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 17:12:35,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,591:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 17:12:35,650:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 17:12:35,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 17:12:35,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,784:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 17:12:35,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:35,990:INFO:Preparing preprocessing pipeline...
2023-06-19 17:12:36,004:INFO:Set up simple imputation.
2023-06-19 17:12:36,014:INFO:Set up column name cleaning.
2023-06-19 17:12:36,150:INFO:Finished creating preprocessing pipeline.
2023-06-19 17:12:36,158:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 17:12:36,158:INFO:Creating final display dataframe.
2023-06-19 17:12:36,548:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 55)
4        Transformed data shape       (63546, 55)
5   Transformed train set shape       (51190, 55)
6    Transformed test set shape       (12356, 55)
7              Numeric features                54
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c6b2
2023-06-19 17:12:36,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:36,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:36,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:36,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 17:12:36,776:INFO:setup() successfully completed in 2.67s...............
2023-06-19 17:12:44,655:INFO:Initializing create_model()
2023-06-19 17:12:44,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 17:12:44,655:INFO:Checking exceptions
2023-06-19 17:12:44,695:INFO:Importing libraries
2023-06-19 17:12:44,695:INFO:Copying training dataset
2023-06-19 17:12:44,816:INFO:Defining folds
2023-06-19 17:12:44,816:INFO:Declaring metric variables
2023-06-19 17:12:44,829:INFO:Importing untrained model
2023-06-19 17:12:44,830:INFO:Declaring custom model
2023-06-19 17:12:44,837:INFO:MLP Classifier Imported successfully
2023-06-19 17:12:44,871:INFO:Starting cross validation
2023-06-19 17:12:44,872:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 17:13:55,357:INFO:Calculating mean and std
2023-06-19 17:13:55,360:INFO:Creating metrics dataframe
2023-06-19 17:13:55,370:INFO:Finalizing model
2023-06-19 17:14:19,885:INFO:Uploading results into container
2023-06-19 17:14:19,887:INFO:Uploading model into container now
2023-06-19 17:14:19,911:INFO:_master_model_container: 1
2023-06-19 17:14:19,911:INFO:_display_container: 2
2023-06-19 17:14:19,912:INFO:MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-19 17:14:19,912:INFO:create_model() successfully completed......................................
2023-06-19 17:14:20,021:INFO:Initializing evaluate_model()
2023-06-19 17:14:20,021:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 17:14:20,075:INFO:Initializing plot_model()
2023-06-19 17:14:20,075:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:14:20,075:INFO:Checking exceptions
2023-06-19 17:14:20,126:INFO:Preloading libraries
2023-06-19 17:14:20,126:INFO:Copying training dataset
2023-06-19 17:14:20,127:INFO:Plot type: pipeline
2023-06-19 17:14:20,294:INFO:Visual Rendered Successfully
2023-06-19 17:14:20,365:INFO:plot_model() successfully completed......................................
2023-06-19 17:14:30,723:INFO:Initializing plot_model()
2023-06-19 17:14:30,724:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:14:30,724:INFO:Checking exceptions
2023-06-19 17:14:30,752:INFO:Preloading libraries
2023-06-19 17:14:30,753:INFO:Copying training dataset
2023-06-19 17:14:30,753:INFO:Plot type: auc
2023-06-19 17:14:31,190:INFO:Fitting Model
2023-06-19 17:14:31,191:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:14:31,192:INFO:Scoring test/hold-out set
2023-06-19 17:14:31,432:INFO:Visual Rendered Successfully
2023-06-19 17:14:31,524:INFO:plot_model() successfully completed......................................
2023-06-19 17:14:37,130:INFO:Initializing plot_model()
2023-06-19 17:14:37,131:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:14:37,131:INFO:Checking exceptions
2023-06-19 17:14:37,158:INFO:Preloading libraries
2023-06-19 17:14:37,159:INFO:Copying training dataset
2023-06-19 17:14:37,160:INFO:Plot type: parameter
2023-06-19 17:14:37,164:INFO:Visual Rendered Successfully
2023-06-19 17:14:37,229:INFO:plot_model() successfully completed......................................
2023-06-19 17:14:50,947:INFO:Initializing plot_model()
2023-06-19 17:14:50,947:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:14:50,948:INFO:Checking exceptions
2023-06-19 17:14:50,977:INFO:Preloading libraries
2023-06-19 17:14:50,978:INFO:Copying training dataset
2023-06-19 17:14:50,978:INFO:Plot type: auc
2023-06-19 17:14:51,244:INFO:Fitting Model
2023-06-19 17:14:51,245:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:14:51,246:INFO:Scoring test/hold-out set
2023-06-19 17:14:51,503:INFO:Visual Rendered Successfully
2023-06-19 17:14:51,622:INFO:plot_model() successfully completed......................................
2023-06-19 17:14:52,628:INFO:Initializing plot_model()
2023-06-19 17:14:52,629:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:14:52,629:INFO:Checking exceptions
2023-06-19 17:14:52,657:INFO:Preloading libraries
2023-06-19 17:14:52,658:INFO:Copying training dataset
2023-06-19 17:14:52,658:INFO:Plot type: confusion_matrix
2023-06-19 17:14:52,957:INFO:Fitting Model
2023-06-19 17:14:52,957:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:14:52,958:INFO:Scoring test/hold-out set
2023-06-19 17:14:53,186:INFO:Visual Rendered Successfully
2023-06-19 17:14:53,334:INFO:plot_model() successfully completed......................................
2023-06-19 17:15:13,579:INFO:Initializing plot_model()
2023-06-19 17:15:13,579:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:15:13,580:INFO:Checking exceptions
2023-06-19 17:15:13,622:INFO:Preloading libraries
2023-06-19 17:15:13,623:INFO:Copying training dataset
2023-06-19 17:15:13,623:INFO:Plot type: confusion_matrix
2023-06-19 17:15:14,022:INFO:Fitting Model
2023-06-19 17:15:14,023:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:15:14,023:INFO:Scoring test/hold-out set
2023-06-19 17:15:14,202:INFO:Visual Rendered Successfully
2023-06-19 17:15:14,343:INFO:plot_model() successfully completed......................................
2023-06-19 17:15:24,253:INFO:Initializing plot_model()
2023-06-19 17:15:24,253:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=percentage, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:15:24,254:INFO:Checking exceptions
2023-06-19 17:15:24,284:INFO:Preloading libraries
2023-06-19 17:15:24,286:INFO:Copying training dataset
2023-06-19 17:15:24,286:INFO:Plot type: confusion_matrix
2023-06-19 17:34:13,186:INFO:Initializing plot_model()
2023-06-19 17:34:13,186:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:34:13,187:INFO:Checking exceptions
2023-06-19 17:34:13,223:INFO:Preloading libraries
2023-06-19 17:34:13,225:INFO:Copying training dataset
2023-06-19 17:34:13,225:INFO:Plot type: auc
2023-06-19 17:34:13,697:INFO:Fitting Model
2023-06-19 17:34:13,698:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:34:13,699:INFO:Scoring test/hold-out set
2023-06-19 17:34:13,929:INFO:Visual Rendered Successfully
2023-06-19 17:34:14,050:INFO:plot_model() successfully completed......................................
2023-06-19 17:44:07,968:INFO:Initializing plot_model()
2023-06-19 17:44:07,968:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:44:07,968:INFO:Checking exceptions
2023-06-19 17:44:07,998:INFO:Preloading libraries
2023-06-19 17:44:07,999:INFO:Copying training dataset
2023-06-19 17:44:08,000:INFO:Plot type: auc
2023-06-19 17:44:08,284:INFO:Fitting Model
2023-06-19 17:44:08,285:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:44:08,286:INFO:Scoring test/hold-out set
2023-06-19 17:44:08,514:INFO:Visual Rendered Successfully
2023-06-19 17:44:08,603:INFO:plot_model() successfully completed......................................
2023-06-19 17:44:13,994:INFO:Initializing plot_model()
2023-06-19 17:44:13,994:INFO:plot_model(plot=auc, fold=None, use_train_data=True, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:44:13,994:INFO:Checking exceptions
2023-06-19 17:44:14,024:INFO:Preloading libraries
2023-06-19 17:44:14,025:INFO:Copying training dataset
2023-06-19 17:44:14,025:INFO:Plot type: auc
2023-06-19 17:44:14,365:INFO:Fitting Model
2023-06-19 17:44:14,366:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:44:14,367:INFO:Scoring test/hold-out set
2023-06-19 17:44:14,572:INFO:Visual Rendered Successfully
2023-06-19 17:44:14,652:INFO:plot_model() successfully completed......................................
2023-06-19 17:44:24,061:INFO:Initializing plot_model()
2023-06-19 17:44:24,062:INFO:plot_model(plot=auc, fold=None, use_train_data=True, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:44:24,062:INFO:Checking exceptions
2023-06-19 17:44:24,090:INFO:Preloading libraries
2023-06-19 17:44:24,091:INFO:Copying training dataset
2023-06-19 17:44:24,092:INFO:Plot type: auc
2023-06-19 17:44:24,425:INFO:Fitting Model
2023-06-19 17:44:24,427:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:44:24,427:INFO:Scoring test/hold-out set
2023-06-19 17:44:24,740:INFO:Visual Rendered Successfully
2023-06-19 17:44:24,870:INFO:plot_model() successfully completed......................................
2023-06-19 17:44:28,195:INFO:Initializing plot_model()
2023-06-19 17:44:28,195:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:44:28,196:INFO:Checking exceptions
2023-06-19 17:44:28,226:INFO:Preloading libraries
2023-06-19 17:44:28,227:INFO:Copying training dataset
2023-06-19 17:44:28,228:INFO:Plot type: auc
2023-06-19 17:44:28,517:INFO:Fitting Model
2023-06-19 17:44:28,518:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:44:28,519:INFO:Scoring test/hold-out set
2023-06-19 17:44:28,711:INFO:Visual Rendered Successfully
2023-06-19 17:44:28,787:INFO:plot_model() successfully completed......................................
2023-06-19 17:44:30,854:INFO:Initializing plot_model()
2023-06-19 17:44:30,854:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:44:30,854:INFO:Checking exceptions
2023-06-19 17:44:30,885:INFO:Preloading libraries
2023-06-19 17:44:30,887:INFO:Copying training dataset
2023-06-19 17:44:30,887:INFO:Plot type: auc
2023-06-19 17:44:31,150:INFO:Fitting Model
2023-06-19 17:44:31,152:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:44:31,152:INFO:Scoring test/hold-out set
2023-06-19 17:44:31,348:INFO:Visual Rendered Successfully
2023-06-19 17:44:31,421:INFO:plot_model() successfully completed......................................
2023-06-19 17:44:34,063:INFO:Initializing plot_model()
2023-06-19 17:44:34,064:INFO:plot_model(plot=auc, fold=None, use_train_data=True, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002590FF168B0>, system=True)
2023-06-19 17:44:34,064:INFO:Checking exceptions
2023-06-19 17:44:34,099:INFO:Preloading libraries
2023-06-19 17:44:34,101:INFO:Copying training dataset
2023-06-19 17:44:34,101:INFO:Plot type: auc
2023-06-19 17:44:34,429:INFO:Fitting Model
2023-06-19 17:44:34,430:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 17:44:34,431:INFO:Scoring test/hold-out set
2023-06-19 17:44:34,629:INFO:Visual Rendered Successfully
2023-06-19 17:44:34,705:INFO:plot_model() successfully completed......................................
2023-06-19 18:46:31,437:INFO:PyCaret ClassificationExperiment
2023-06-19 18:46:31,438:INFO:Logging name: clf-default-name
2023-06-19 18:46:31,438:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 18:46:31,438:INFO:version 3.0.2
2023-06-19 18:46:31,438:INFO:Initializing setup()
2023-06-19 18:46:31,438:INFO:self.USI: 9d80
2023-06-19 18:46:31,438:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'html_param', 'USI', 'logging_param', 'n_jobs_param', 'memory', 'X', 'y', 'fold_groups_param', 'log_plots_param', 'fix_imbalance', 'target_param', 'X_test', 'gpu_n_jobs_param', 'exp_id', 'exp_name_log', 'y_train', 'X_train', '_ml_usecase', 'fold_generator', 'y_test', 'is_multiclass', 'data', 'idx', 'pipeline', 'seed', '_available_plots'}
2023-06-19 18:46:31,438:INFO:Checking environment
2023-06-19 18:46:31,438:INFO:python_version: 3.9.7
2023-06-19 18:46:31,439:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 18:46:31,439:INFO:machine: AMD64
2023-06-19 18:46:31,439:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 18:46:31,439:INFO:Memory: svmem(total=17120436224, available=6898761728, percent=59.7, used=10221674496, free=6898761728)
2023-06-19 18:46:31,439:INFO:Physical Core: 4
2023-06-19 18:46:31,439:INFO:Logical Core: 4
2023-06-19 18:46:31,439:INFO:Checking libraries
2023-06-19 18:46:31,439:INFO:System:
2023-06-19 18:46:31,439:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 18:46:31,439:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 18:46:31,439:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 18:46:31,439:INFO:PyCaret required dependencies:
2023-06-19 18:46:31,439:INFO:                 pip: 21.2.3
2023-06-19 18:46:31,439:INFO:          setuptools: 57.4.0
2023-06-19 18:46:31,439:INFO:             pycaret: 3.0.2
2023-06-19 18:46:31,439:INFO:             IPython: 7.28.0
2023-06-19 18:46:31,439:INFO:          ipywidgets: 8.0.6
2023-06-19 18:46:31,440:INFO:                tqdm: 4.64.0
2023-06-19 18:46:31,440:INFO:               numpy: 1.22.4
2023-06-19 18:46:31,440:INFO:              pandas: 1.3.5
2023-06-19 18:46:31,440:INFO:              jinja2: 3.1.2
2023-06-19 18:46:31,440:INFO:               scipy: 1.7.1
2023-06-19 18:46:31,440:INFO:              joblib: 1.2.0
2023-06-19 18:46:31,440:INFO:             sklearn: 1.1.0
2023-06-19 18:46:31,440:INFO:                pyod: 1.0.9
2023-06-19 18:46:31,440:INFO:            imblearn: 0.9.1
2023-06-19 18:46:31,440:INFO:   category_encoders: 2.6.1
2023-06-19 18:46:31,440:INFO:            lightgbm: 3.3.5
2023-06-19 18:46:31,440:INFO:               numba: 0.57.0
2023-06-19 18:46:31,440:INFO:            requests: 2.31.0
2023-06-19 18:46:31,440:INFO:          matplotlib: 3.4.3
2023-06-19 18:46:31,440:INFO:          scikitplot: 0.3.7
2023-06-19 18:46:31,440:INFO:         yellowbrick: 1.5
2023-06-19 18:46:31,440:INFO:              plotly: 5.8.0
2023-06-19 18:46:31,440:INFO:             kaleido: 0.2.1
2023-06-19 18:46:31,440:INFO:         statsmodels: 0.14.0
2023-06-19 18:46:31,441:INFO:              sktime: 0.17.0
2023-06-19 18:46:31,441:INFO:               tbats: 1.1.3
2023-06-19 18:46:31,441:INFO:            pmdarima: 2.0.3
2023-06-19 18:46:31,441:INFO:              psutil: 5.9.0
2023-06-19 18:46:31,441:INFO:PyCaret optional dependencies:
2023-06-19 18:46:31,441:INFO:                shap: Not installed
2023-06-19 18:46:31,441:INFO:           interpret: Not installed
2023-06-19 18:46:31,441:INFO:                umap: Not installed
2023-06-19 18:46:31,441:INFO:    pandas_profiling: Not installed
2023-06-19 18:46:31,441:INFO:  explainerdashboard: Not installed
2023-06-19 18:46:31,441:INFO:             autoviz: Not installed
2023-06-19 18:46:31,441:INFO:           fairlearn: Not installed
2023-06-19 18:46:31,441:INFO:             xgboost: Not installed
2023-06-19 18:46:31,441:INFO:            catboost: Not installed
2023-06-19 18:46:31,441:INFO:              kmodes: Not installed
2023-06-19 18:46:31,442:INFO:             mlxtend: Not installed
2023-06-19 18:46:31,442:INFO:       statsforecast: Not installed
2023-06-19 18:46:31,442:INFO:        tune_sklearn: Not installed
2023-06-19 18:46:31,442:INFO:                 ray: Not installed
2023-06-19 18:46:31,442:INFO:            hyperopt: Not installed
2023-06-19 18:46:31,442:INFO:              optuna: Not installed
2023-06-19 18:46:31,442:INFO:               skopt: Not installed
2023-06-19 18:46:31,442:INFO:              mlflow: Not installed
2023-06-19 18:46:31,442:INFO:              gradio: Not installed
2023-06-19 18:46:31,442:INFO:             fastapi: Not installed
2023-06-19 18:46:31,442:INFO:             uvicorn: Not installed
2023-06-19 18:46:31,442:INFO:              m2cgen: Not installed
2023-06-19 18:46:31,442:INFO:           evidently: Not installed
2023-06-19 18:46:31,442:INFO:               fugue: Not installed
2023-06-19 18:46:31,442:INFO:           streamlit: Not installed
2023-06-19 18:46:31,442:INFO:             prophet: Not installed
2023-06-19 18:46:31,443:INFO:None
2023-06-19 18:46:31,443:INFO:Set up data.
2023-06-19 18:46:31,574:INFO:Set up train/test split.
2023-06-19 18:46:31,575:INFO:Set up data.
2023-06-19 18:46:34,848:INFO:Set up index.
2023-06-19 18:46:34,851:INFO:Set up folding strategy.
2023-06-19 18:46:34,851:INFO:Assigning column types.
2023-06-19 18:46:34,937:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 18:46:34,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 18:46:34,993:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 18:46:35,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 18:46:35,082:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 18:46:35,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,119:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 18:46:35,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 18:46:35,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,268:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 18:46:35,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,304:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 18:46:35,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:35,483:INFO:Preparing preprocessing pipeline...
2023-06-19 18:46:35,494:INFO:Set up simple imputation.
2023-06-19 18:46:35,505:INFO:Set up column name cleaning.
2023-06-19 18:46:35,666:INFO:Finished creating preprocessing pipeline.
2023-06-19 18:46:35,672:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 18:46:35,672:INFO:Creating final display dataframe.
2023-06-19 18:46:35,990:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 55)
4        Transformed data shape       (63546, 55)
5   Transformed train set shape       (51190, 55)
6    Transformed test set shape       (12356, 55)
7              Numeric features                54
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              9d80
2023-06-19 18:46:36,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:36,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:36,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:36,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:46:36,217:INFO:setup() successfully completed in 6.21s...............
2023-06-19 18:48:11,506:INFO:PyCaret ClassificationExperiment
2023-06-19 18:48:11,506:INFO:Logging name: clf-default-name
2023-06-19 18:48:11,506:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 18:48:11,506:INFO:version 3.0.2
2023-06-19 18:48:11,506:INFO:Initializing setup()
2023-06-19 18:48:11,506:INFO:self.USI: 710b
2023-06-19 18:48:11,506:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'html_param', 'USI', 'logging_param', 'n_jobs_param', 'memory', 'X', 'y', 'fold_groups_param', 'log_plots_param', 'fix_imbalance', 'target_param', 'X_test', 'gpu_n_jobs_param', 'exp_id', 'exp_name_log', 'y_train', 'X_train', '_ml_usecase', 'fold_generator', 'y_test', 'is_multiclass', 'data', 'idx', 'pipeline', 'seed', '_available_plots'}
2023-06-19 18:48:11,506:INFO:Checking environment
2023-06-19 18:48:11,506:INFO:python_version: 3.9.7
2023-06-19 18:48:11,506:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 18:48:11,507:INFO:machine: AMD64
2023-06-19 18:48:11,507:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 18:48:11,507:INFO:Memory: svmem(total=17120436224, available=6493417472, percent=62.1, used=10627018752, free=6493417472)
2023-06-19 18:48:11,507:INFO:Physical Core: 4
2023-06-19 18:48:11,507:INFO:Logical Core: 4
2023-06-19 18:48:11,507:INFO:Checking libraries
2023-06-19 18:48:11,507:INFO:System:
2023-06-19 18:48:11,507:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 18:48:11,507:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 18:48:11,507:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 18:48:11,507:INFO:PyCaret required dependencies:
2023-06-19 18:48:11,507:INFO:                 pip: 21.2.3
2023-06-19 18:48:11,507:INFO:          setuptools: 57.4.0
2023-06-19 18:48:11,507:INFO:             pycaret: 3.0.2
2023-06-19 18:48:11,507:INFO:             IPython: 7.28.0
2023-06-19 18:48:11,507:INFO:          ipywidgets: 8.0.6
2023-06-19 18:48:11,507:INFO:                tqdm: 4.64.0
2023-06-19 18:48:11,507:INFO:               numpy: 1.22.4
2023-06-19 18:48:11,507:INFO:              pandas: 1.3.5
2023-06-19 18:48:11,507:INFO:              jinja2: 3.1.2
2023-06-19 18:48:11,508:INFO:               scipy: 1.7.1
2023-06-19 18:48:11,508:INFO:              joblib: 1.2.0
2023-06-19 18:48:11,508:INFO:             sklearn: 1.1.0
2023-06-19 18:48:11,508:INFO:                pyod: 1.0.9
2023-06-19 18:48:11,508:INFO:            imblearn: 0.9.1
2023-06-19 18:48:11,508:INFO:   category_encoders: 2.6.1
2023-06-19 18:48:11,508:INFO:            lightgbm: 3.3.5
2023-06-19 18:48:11,508:INFO:               numba: 0.57.0
2023-06-19 18:48:11,508:INFO:            requests: 2.31.0
2023-06-19 18:48:11,508:INFO:          matplotlib: 3.4.3
2023-06-19 18:48:11,508:INFO:          scikitplot: 0.3.7
2023-06-19 18:48:11,508:INFO:         yellowbrick: 1.5
2023-06-19 18:48:11,508:INFO:              plotly: 5.8.0
2023-06-19 18:48:11,508:INFO:             kaleido: 0.2.1
2023-06-19 18:48:11,508:INFO:         statsmodels: 0.14.0
2023-06-19 18:48:11,508:INFO:              sktime: 0.17.0
2023-06-19 18:48:11,508:INFO:               tbats: 1.1.3
2023-06-19 18:48:11,508:INFO:            pmdarima: 2.0.3
2023-06-19 18:48:11,508:INFO:              psutil: 5.9.0
2023-06-19 18:48:11,508:INFO:PyCaret optional dependencies:
2023-06-19 18:48:11,509:INFO:                shap: Not installed
2023-06-19 18:48:11,509:INFO:           interpret: Not installed
2023-06-19 18:48:11,509:INFO:                umap: Not installed
2023-06-19 18:48:11,509:INFO:    pandas_profiling: Not installed
2023-06-19 18:48:11,509:INFO:  explainerdashboard: Not installed
2023-06-19 18:48:11,509:INFO:             autoviz: Not installed
2023-06-19 18:48:11,509:INFO:           fairlearn: Not installed
2023-06-19 18:48:11,509:INFO:             xgboost: Not installed
2023-06-19 18:48:11,509:INFO:            catboost: Not installed
2023-06-19 18:48:11,509:INFO:              kmodes: Not installed
2023-06-19 18:48:11,509:INFO:             mlxtend: Not installed
2023-06-19 18:48:11,509:INFO:       statsforecast: Not installed
2023-06-19 18:48:11,509:INFO:        tune_sklearn: Not installed
2023-06-19 18:48:11,509:INFO:                 ray: Not installed
2023-06-19 18:48:11,509:INFO:            hyperopt: Not installed
2023-06-19 18:48:11,509:INFO:              optuna: Not installed
2023-06-19 18:48:11,509:INFO:               skopt: Not installed
2023-06-19 18:48:11,509:INFO:              mlflow: Not installed
2023-06-19 18:48:11,509:INFO:              gradio: Not installed
2023-06-19 18:48:11,509:INFO:             fastapi: Not installed
2023-06-19 18:48:11,509:INFO:             uvicorn: Not installed
2023-06-19 18:48:11,510:INFO:              m2cgen: Not installed
2023-06-19 18:48:11,510:INFO:           evidently: Not installed
2023-06-19 18:48:11,510:INFO:               fugue: Not installed
2023-06-19 18:48:11,510:INFO:           streamlit: Not installed
2023-06-19 18:48:11,510:INFO:             prophet: Not installed
2023-06-19 18:48:11,510:INFO:None
2023-06-19 18:48:11,510:INFO:Set up data.
2023-06-19 18:48:11,622:INFO:Set up train/test split.
2023-06-19 18:48:11,622:INFO:Set up data.
2023-06-19 18:48:11,712:INFO:Set up index.
2023-06-19 18:48:11,719:INFO:Set up folding strategy.
2023-06-19 18:48:11,719:INFO:Assigning column types.
2023-06-19 18:48:56,447:INFO:PyCaret ClassificationExperiment
2023-06-19 18:48:56,447:INFO:Logging name: clf-default-name
2023-06-19 18:48:56,448:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 18:48:56,448:INFO:version 3.0.2
2023-06-19 18:48:56,448:INFO:Initializing setup()
2023-06-19 18:48:56,448:INFO:self.USI: e5b3
2023-06-19 18:48:56,448:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'html_param', 'USI', 'logging_param', 'n_jobs_param', 'memory', 'X', 'y', 'fold_groups_param', 'log_plots_param', 'fix_imbalance', 'target_param', 'X_test', 'gpu_n_jobs_param', 'exp_id', 'exp_name_log', 'y_train', 'X_train', '_ml_usecase', 'fold_generator', 'y_test', 'is_multiclass', 'data', 'idx', 'pipeline', 'seed', '_available_plots'}
2023-06-19 18:48:56,448:INFO:Checking environment
2023-06-19 18:48:56,448:INFO:python_version: 3.9.7
2023-06-19 18:48:56,448:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 18:48:56,448:INFO:machine: AMD64
2023-06-19 18:48:56,448:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 18:48:56,448:INFO:Memory: svmem(total=17120436224, available=6453407744, percent=62.3, used=10667028480, free=6453407744)
2023-06-19 18:48:56,448:INFO:Physical Core: 4
2023-06-19 18:48:56,448:INFO:Logical Core: 4
2023-06-19 18:48:56,448:INFO:Checking libraries
2023-06-19 18:48:56,448:INFO:System:
2023-06-19 18:48:56,448:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 18:48:56,449:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 18:48:56,449:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 18:48:56,449:INFO:PyCaret required dependencies:
2023-06-19 18:48:56,449:INFO:                 pip: 21.2.3
2023-06-19 18:48:56,449:INFO:          setuptools: 57.4.0
2023-06-19 18:48:56,449:INFO:             pycaret: 3.0.2
2023-06-19 18:48:56,449:INFO:             IPython: 7.28.0
2023-06-19 18:48:56,449:INFO:          ipywidgets: 8.0.6
2023-06-19 18:48:56,449:INFO:                tqdm: 4.64.0
2023-06-19 18:48:56,449:INFO:               numpy: 1.22.4
2023-06-19 18:48:56,449:INFO:              pandas: 1.3.5
2023-06-19 18:48:56,449:INFO:              jinja2: 3.1.2
2023-06-19 18:48:56,449:INFO:               scipy: 1.7.1
2023-06-19 18:48:56,449:INFO:              joblib: 1.2.0
2023-06-19 18:48:56,449:INFO:             sklearn: 1.1.0
2023-06-19 18:48:56,449:INFO:                pyod: 1.0.9
2023-06-19 18:48:56,449:INFO:            imblearn: 0.9.1
2023-06-19 18:48:56,449:INFO:   category_encoders: 2.6.1
2023-06-19 18:48:56,449:INFO:            lightgbm: 3.3.5
2023-06-19 18:48:56,450:INFO:               numba: 0.57.0
2023-06-19 18:48:56,450:INFO:            requests: 2.31.0
2023-06-19 18:48:56,450:INFO:          matplotlib: 3.4.3
2023-06-19 18:48:56,450:INFO:          scikitplot: 0.3.7
2023-06-19 18:48:56,450:INFO:         yellowbrick: 1.5
2023-06-19 18:48:56,450:INFO:              plotly: 5.8.0
2023-06-19 18:48:56,450:INFO:             kaleido: 0.2.1
2023-06-19 18:48:56,450:INFO:         statsmodels: 0.14.0
2023-06-19 18:48:56,450:INFO:              sktime: 0.17.0
2023-06-19 18:48:56,450:INFO:               tbats: 1.1.3
2023-06-19 18:48:56,450:INFO:            pmdarima: 2.0.3
2023-06-19 18:48:56,450:INFO:              psutil: 5.9.0
2023-06-19 18:48:56,450:INFO:PyCaret optional dependencies:
2023-06-19 18:48:56,450:INFO:                shap: Not installed
2023-06-19 18:48:56,450:INFO:           interpret: Not installed
2023-06-19 18:48:56,450:INFO:                umap: Not installed
2023-06-19 18:48:56,450:INFO:    pandas_profiling: Not installed
2023-06-19 18:48:56,450:INFO:  explainerdashboard: Not installed
2023-06-19 18:48:56,450:INFO:             autoviz: Not installed
2023-06-19 18:48:56,450:INFO:           fairlearn: Not installed
2023-06-19 18:48:56,450:INFO:             xgboost: Not installed
2023-06-19 18:48:56,450:INFO:            catboost: Not installed
2023-06-19 18:48:56,451:INFO:              kmodes: Not installed
2023-06-19 18:48:56,451:INFO:             mlxtend: Not installed
2023-06-19 18:48:56,451:INFO:       statsforecast: Not installed
2023-06-19 18:48:56,451:INFO:        tune_sklearn: Not installed
2023-06-19 18:48:56,451:INFO:                 ray: Not installed
2023-06-19 18:48:56,451:INFO:            hyperopt: Not installed
2023-06-19 18:48:56,451:INFO:              optuna: Not installed
2023-06-19 18:48:56,451:INFO:               skopt: Not installed
2023-06-19 18:48:56,451:INFO:              mlflow: Not installed
2023-06-19 18:48:56,451:INFO:              gradio: Not installed
2023-06-19 18:48:56,451:INFO:             fastapi: Not installed
2023-06-19 18:48:56,451:INFO:             uvicorn: Not installed
2023-06-19 18:48:56,451:INFO:              m2cgen: Not installed
2023-06-19 18:48:56,451:INFO:           evidently: Not installed
2023-06-19 18:48:56,451:INFO:               fugue: Not installed
2023-06-19 18:48:56,451:INFO:           streamlit: Not installed
2023-06-19 18:48:56,451:INFO:             prophet: Not installed
2023-06-19 18:48:56,451:INFO:None
2023-06-19 18:48:56,452:INFO:Set up data.
2023-06-19 18:48:56,525:INFO:Set up train/test split.
2023-06-19 18:48:56,525:INFO:Set up data.
2023-06-19 18:48:56,569:INFO:Set up index.
2023-06-19 18:48:56,573:INFO:Set up folding strategy.
2023-06-19 18:48:56,573:INFO:Assigning column types.
2023-06-19 18:49:02,139:INFO:PyCaret ClassificationExperiment
2023-06-19 18:49:02,139:INFO:Logging name: clf-default-name
2023-06-19 18:49:02,139:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 18:49:02,140:INFO:version 3.0.2
2023-06-19 18:49:02,140:INFO:Initializing setup()
2023-06-19 18:49:02,140:INFO:self.USI: 9f76
2023-06-19 18:49:02,140:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'html_param', 'USI', 'logging_param', 'n_jobs_param', 'memory', 'X', 'y', 'fold_groups_param', 'log_plots_param', 'fix_imbalance', 'target_param', 'X_test', 'gpu_n_jobs_param', 'exp_id', 'exp_name_log', 'y_train', 'X_train', '_ml_usecase', 'fold_generator', 'y_test', 'is_multiclass', 'data', 'idx', 'pipeline', 'seed', '_available_plots'}
2023-06-19 18:49:02,140:INFO:Checking environment
2023-06-19 18:49:02,140:INFO:python_version: 3.9.7
2023-06-19 18:49:02,140:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 18:49:02,140:INFO:machine: AMD64
2023-06-19 18:49:02,140:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 18:49:02,140:INFO:Memory: svmem(total=17120436224, available=6398689280, percent=62.6, used=10721746944, free=6398689280)
2023-06-19 18:49:02,140:INFO:Physical Core: 4
2023-06-19 18:49:02,140:INFO:Logical Core: 4
2023-06-19 18:49:02,140:INFO:Checking libraries
2023-06-19 18:49:02,140:INFO:System:
2023-06-19 18:49:02,140:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 18:49:02,140:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 18:49:02,141:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 18:49:02,141:INFO:PyCaret required dependencies:
2023-06-19 18:49:02,141:INFO:                 pip: 21.2.3
2023-06-19 18:49:02,141:INFO:          setuptools: 57.4.0
2023-06-19 18:49:02,141:INFO:             pycaret: 3.0.2
2023-06-19 18:49:02,141:INFO:             IPython: 7.28.0
2023-06-19 18:49:02,141:INFO:          ipywidgets: 8.0.6
2023-06-19 18:49:02,141:INFO:                tqdm: 4.64.0
2023-06-19 18:49:02,141:INFO:               numpy: 1.22.4
2023-06-19 18:49:02,141:INFO:              pandas: 1.3.5
2023-06-19 18:49:02,141:INFO:              jinja2: 3.1.2
2023-06-19 18:49:02,141:INFO:               scipy: 1.7.1
2023-06-19 18:49:02,141:INFO:              joblib: 1.2.0
2023-06-19 18:49:02,141:INFO:             sklearn: 1.1.0
2023-06-19 18:49:02,141:INFO:                pyod: 1.0.9
2023-06-19 18:49:02,141:INFO:            imblearn: 0.9.1
2023-06-19 18:49:02,141:INFO:   category_encoders: 2.6.1
2023-06-19 18:49:02,141:INFO:            lightgbm: 3.3.5
2023-06-19 18:49:02,141:INFO:               numba: 0.57.0
2023-06-19 18:49:02,141:INFO:            requests: 2.31.0
2023-06-19 18:49:02,142:INFO:          matplotlib: 3.4.3
2023-06-19 18:49:02,142:INFO:          scikitplot: 0.3.7
2023-06-19 18:49:02,142:INFO:         yellowbrick: 1.5
2023-06-19 18:49:02,142:INFO:              plotly: 5.8.0
2023-06-19 18:49:02,142:INFO:             kaleido: 0.2.1
2023-06-19 18:49:02,142:INFO:         statsmodels: 0.14.0
2023-06-19 18:49:02,142:INFO:              sktime: 0.17.0
2023-06-19 18:49:02,142:INFO:               tbats: 1.1.3
2023-06-19 18:49:02,142:INFO:            pmdarima: 2.0.3
2023-06-19 18:49:02,142:INFO:              psutil: 5.9.0
2023-06-19 18:49:02,142:INFO:PyCaret optional dependencies:
2023-06-19 18:49:02,142:INFO:                shap: Not installed
2023-06-19 18:49:02,142:INFO:           interpret: Not installed
2023-06-19 18:49:02,142:INFO:                umap: Not installed
2023-06-19 18:49:02,142:INFO:    pandas_profiling: Not installed
2023-06-19 18:49:02,142:INFO:  explainerdashboard: Not installed
2023-06-19 18:49:02,142:INFO:             autoviz: Not installed
2023-06-19 18:49:02,142:INFO:           fairlearn: Not installed
2023-06-19 18:49:02,142:INFO:             xgboost: Not installed
2023-06-19 18:49:02,142:INFO:            catboost: Not installed
2023-06-19 18:49:02,142:INFO:              kmodes: Not installed
2023-06-19 18:49:02,143:INFO:             mlxtend: Not installed
2023-06-19 18:49:02,143:INFO:       statsforecast: Not installed
2023-06-19 18:49:02,143:INFO:        tune_sklearn: Not installed
2023-06-19 18:49:02,143:INFO:                 ray: Not installed
2023-06-19 18:49:02,143:INFO:            hyperopt: Not installed
2023-06-19 18:49:02,143:INFO:              optuna: Not installed
2023-06-19 18:49:02,143:INFO:               skopt: Not installed
2023-06-19 18:49:02,143:INFO:              mlflow: Not installed
2023-06-19 18:49:02,143:INFO:              gradio: Not installed
2023-06-19 18:49:02,143:INFO:             fastapi: Not installed
2023-06-19 18:49:02,143:INFO:             uvicorn: Not installed
2023-06-19 18:49:02,143:INFO:              m2cgen: Not installed
2023-06-19 18:49:02,143:INFO:           evidently: Not installed
2023-06-19 18:49:02,143:INFO:               fugue: Not installed
2023-06-19 18:49:02,143:INFO:           streamlit: Not installed
2023-06-19 18:49:02,143:INFO:             prophet: Not installed
2023-06-19 18:49:02,143:INFO:None
2023-06-19 18:49:02,143:INFO:Set up data.
2023-06-19 18:49:02,226:INFO:Set up train/test split.
2023-06-19 18:49:02,226:INFO:Set up data.
2023-06-19 18:49:02,282:INFO:Set up index.
2023-06-19 18:49:02,287:INFO:Set up folding strategy.
2023-06-19 18:49:02,287:INFO:Assigning column types.
2023-06-19 18:49:02,371:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 18:49:02,427:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 18:49:02,428:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 18:49:02,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 18:49:02,517:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 18:49:02,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,551:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 18:49:02,604:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 18:49:02,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,690:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 18:49:02,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,724:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 18:49:02,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:02,895:INFO:Preparing preprocessing pipeline...
2023-06-19 18:49:02,905:INFO:Set up simple imputation.
2023-06-19 18:49:02,918:INFO:Set up column name cleaning.
2023-06-19 18:49:03,046:INFO:Finished creating preprocessing pipeline.
2023-06-19 18:49:03,051:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 18:49:03,051:INFO:Creating final display dataframe.
2023-06-19 18:49:03,333:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 55)
4        Transformed data shape       (63546, 55)
5   Transformed train set shape       (51190, 55)
6    Transformed test set shape       (12356, 55)
7              Numeric features                54
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              9f76
2023-06-19 18:49:03,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:03,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:03,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:03,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 18:49:03,529:INFO:setup() successfully completed in 2.38s...............
2023-06-19 18:49:12,883:INFO:Initializing create_model()
2023-06-19 18:49:12,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002592963D3A0>, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 18:49:12,883:INFO:Checking exceptions
2023-06-19 18:49:12,918:INFO:Importing libraries
2023-06-19 18:49:12,918:INFO:Copying training dataset
2023-06-19 18:49:13,013:INFO:Defining folds
2023-06-19 18:49:13,013:INFO:Declaring metric variables
2023-06-19 18:49:13,018:INFO:Importing untrained model
2023-06-19 18:49:13,018:INFO:Declaring custom model
2023-06-19 18:49:13,023:INFO:MLP Classifier Imported successfully
2023-06-19 18:49:13,037:INFO:Starting cross validation
2023-06-19 18:49:13,038:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 18:49:29,156:INFO:Calculating mean and std
2023-06-19 18:49:29,158:INFO:Creating metrics dataframe
2023-06-19 18:49:29,171:INFO:Finalizing model
2023-06-19 18:49:30,501:INFO:Uploading results into container
2023-06-19 18:49:30,504:INFO:Uploading model into container now
2023-06-19 18:49:30,524:INFO:_master_model_container: 1
2023-06-19 18:49:30,525:INFO:_display_container: 2
2023-06-19 18:49:30,525:INFO:MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-19 18:49:30,526:INFO:create_model() successfully completed......................................
2023-06-19 18:49:31,657:INFO:Initializing evaluate_model()
2023-06-19 18:49:31,657:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002592963D3A0>, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 18:49:31,759:INFO:Initializing plot_model()
2023-06-19 18:49:31,759:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002592963D3A0>, system=True)
2023-06-19 18:49:31,760:INFO:Checking exceptions
2023-06-19 18:49:31,813:INFO:Preloading libraries
2023-06-19 18:49:31,814:INFO:Copying training dataset
2023-06-19 18:49:31,814:INFO:Plot type: pipeline
2023-06-19 18:49:31,935:INFO:Visual Rendered Successfully
2023-06-19 18:49:32,013:INFO:plot_model() successfully completed......................................
2023-06-19 18:49:36,171:INFO:Initializing plot_model()
2023-06-19 18:49:36,171:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002592963D3A0>, system=True)
2023-06-19 18:49:36,171:INFO:Checking exceptions
2023-06-19 18:49:36,200:INFO:Preloading libraries
2023-06-19 18:49:36,201:INFO:Copying training dataset
2023-06-19 18:49:36,201:INFO:Plot type: auc
2023-06-19 18:49:36,611:INFO:Fitting Model
2023-06-19 18:49:36,612:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 18:49:36,613:INFO:Scoring test/hold-out set
2023-06-19 18:49:36,831:INFO:Visual Rendered Successfully
2023-06-19 18:49:37,012:INFO:plot_model() successfully completed......................................
2023-06-19 19:01:42,456:INFO:Initializing plot_model()
2023-06-19 19:01:42,456:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='tanh', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[5, 5, 5], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002592963D3A0>, system=True)
2023-06-19 19:01:42,457:INFO:Checking exceptions
2023-06-19 19:01:42,488:INFO:Preloading libraries
2023-06-19 19:01:42,489:INFO:Copying training dataset
2023-06-19 19:01:42,490:INFO:Plot type: confusion_matrix
2023-06-19 19:01:42,860:INFO:Fitting Model
2023-06-19 19:01:42,860:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-19 19:01:42,861:INFO:Scoring test/hold-out set
2023-06-19 19:01:43,003:INFO:Visual Rendered Successfully
2023-06-19 19:01:43,123:INFO:plot_model() successfully completed......................................
2023-06-19 19:15:20,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 19:15:20,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 19:15:20,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 19:15:20,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 19:15:22,432:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 19:15:44,253:INFO:PyCaret ClassificationExperiment
2023-06-19 19:15:44,253:INFO:Logging name: clf-default-name
2023-06-19 19:15:44,253:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 19:15:44,253:INFO:version 3.0.2
2023-06-19 19:15:44,253:INFO:Initializing setup()
2023-06-19 19:15:44,253:INFO:self.USI: c28d
2023-06-19 19:15:44,253:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 19:15:44,253:INFO:Checking environment
2023-06-19 19:15:44,253:INFO:python_version: 3.9.7
2023-06-19 19:15:44,253:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 19:15:44,253:INFO:machine: AMD64
2023-06-19 19:15:44,253:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 19:15:44,253:INFO:Memory: svmem(total=17120436224, available=6131408896, percent=64.2, used=10989027328, free=6131408896)
2023-06-19 19:15:44,253:INFO:Physical Core: 4
2023-06-19 19:15:44,254:INFO:Logical Core: 4
2023-06-19 19:15:44,254:INFO:Checking libraries
2023-06-19 19:15:44,254:INFO:System:
2023-06-19 19:15:44,254:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 19:15:44,254:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 19:15:44,254:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 19:15:44,254:INFO:PyCaret required dependencies:
2023-06-19 19:15:44,254:INFO:                 pip: 21.2.3
2023-06-19 19:15:44,254:INFO:          setuptools: 57.4.0
2023-06-19 19:15:44,254:INFO:             pycaret: 3.0.2
2023-06-19 19:15:44,254:INFO:             IPython: 7.28.0
2023-06-19 19:15:44,254:INFO:          ipywidgets: 8.0.6
2023-06-19 19:15:44,254:INFO:                tqdm: 4.64.0
2023-06-19 19:15:44,254:INFO:               numpy: 1.22.4
2023-06-19 19:15:44,254:INFO:              pandas: 1.3.5
2023-06-19 19:15:44,254:INFO:              jinja2: 3.1.2
2023-06-19 19:15:44,254:INFO:               scipy: 1.7.1
2023-06-19 19:15:44,254:INFO:              joblib: 1.2.0
2023-06-19 19:15:44,254:INFO:             sklearn: 1.1.0
2023-06-19 19:15:44,254:INFO:                pyod: 1.0.9
2023-06-19 19:15:44,254:INFO:            imblearn: 0.9.1
2023-06-19 19:15:44,255:INFO:   category_encoders: 2.6.1
2023-06-19 19:15:44,255:INFO:            lightgbm: 3.3.5
2023-06-19 19:15:44,255:INFO:               numba: 0.57.0
2023-06-19 19:15:44,255:INFO:            requests: 2.31.0
2023-06-19 19:15:44,255:INFO:          matplotlib: 3.4.3
2023-06-19 19:15:44,255:INFO:          scikitplot: 0.3.7
2023-06-19 19:15:44,255:INFO:         yellowbrick: 1.5
2023-06-19 19:15:44,255:INFO:              plotly: 5.8.0
2023-06-19 19:15:44,255:INFO:             kaleido: 0.2.1
2023-06-19 19:15:44,255:INFO:         statsmodels: 0.14.0
2023-06-19 19:15:44,255:INFO:              sktime: 0.17.0
2023-06-19 19:15:44,255:INFO:               tbats: 1.1.3
2023-06-19 19:15:44,255:INFO:            pmdarima: 2.0.3
2023-06-19 19:15:44,255:INFO:              psutil: 5.9.0
2023-06-19 19:15:44,255:INFO:PyCaret optional dependencies:
2023-06-19 19:15:44,312:INFO:                shap: Not installed
2023-06-19 19:15:44,313:INFO:           interpret: Not installed
2023-06-19 19:15:44,313:INFO:                umap: Not installed
2023-06-19 19:15:44,313:INFO:    pandas_profiling: Not installed
2023-06-19 19:15:44,313:INFO:  explainerdashboard: Not installed
2023-06-19 19:15:44,313:INFO:             autoviz: Not installed
2023-06-19 19:15:44,313:INFO:           fairlearn: Not installed
2023-06-19 19:15:44,313:INFO:             xgboost: Not installed
2023-06-19 19:15:44,313:INFO:            catboost: Not installed
2023-06-19 19:15:44,313:INFO:              kmodes: Not installed
2023-06-19 19:15:44,313:INFO:             mlxtend: Not installed
2023-06-19 19:15:44,313:INFO:       statsforecast: Not installed
2023-06-19 19:15:44,313:INFO:        tune_sklearn: Not installed
2023-06-19 19:15:44,313:INFO:                 ray: Not installed
2023-06-19 19:15:44,313:INFO:            hyperopt: Not installed
2023-06-19 19:15:44,313:INFO:              optuna: Not installed
2023-06-19 19:15:44,313:INFO:               skopt: Not installed
2023-06-19 19:15:44,313:INFO:              mlflow: Not installed
2023-06-19 19:15:44,313:INFO:              gradio: Not installed
2023-06-19 19:15:44,314:INFO:             fastapi: Not installed
2023-06-19 19:15:44,314:INFO:             uvicorn: Not installed
2023-06-19 19:15:44,314:INFO:              m2cgen: Not installed
2023-06-19 19:15:44,314:INFO:           evidently: Not installed
2023-06-19 19:15:44,314:INFO:               fugue: Not installed
2023-06-19 19:15:44,314:INFO:           streamlit: Not installed
2023-06-19 19:15:44,314:INFO:             prophet: Not installed
2023-06-19 19:15:44,314:INFO:None
2023-06-19 19:15:44,314:INFO:Set up data.
2023-06-19 19:15:44,460:INFO:Set up train/test split.
2023-06-19 19:15:44,460:INFO:Set up data.
2023-06-19 19:15:44,497:INFO:Set up index.
2023-06-19 19:15:44,499:INFO:Set up folding strategy.
2023-06-19 19:15:44,499:INFO:Assigning column types.
2023-06-19 19:15:44,514:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 19:15:44,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:15:44,573:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:15:44,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:44,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:44,755:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:15:44,756:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:15:44,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:44,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:44,791:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 19:15:44,846:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:15:44,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:44,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:44,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:15:44,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:44,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:44,974:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 19:15:45,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:45,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:45,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:45,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:45,154:INFO:Preparing preprocessing pipeline...
2023-06-19 19:15:45,158:INFO:Set up simple imputation.
2023-06-19 19:15:45,177:INFO:Set up encoding of ordinal features.
2023-06-19 19:15:45,190:INFO:Set up encoding of categorical features.
2023-06-19 19:15:45,190:INFO:Set up feature selection.
2023-06-19 19:15:45,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:45,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:45,288:INFO:Set up column name cleaning.
2023-06-19 19:15:46,748:INFO:Finished creating preprocessing pipeline.
2023-06-19 19:15:46,800:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001E497CF7160>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 19:15:46,800:INFO:Creating final display dataframe.
2023-06-19 19:15:47,948:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16            Feature selection              True
17     Feature selection method        univariate
18  Feature selection estimator          lightgbm
19  Number of features selected                15
20               Fold Generator   StratifiedKFold
21                  Fold Number                 5
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              c28d
2023-06-19 19:15:48,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:48,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:48,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:48,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:15:48,155:INFO:setup() successfully completed in 5.01s...............
2023-06-19 19:16:13,829:INFO:Initializing create_model()
2023-06-19 19:16:13,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 19:16:13,830:INFO:Checking exceptions
2023-06-19 19:16:13,871:INFO:Importing libraries
2023-06-19 19:16:13,871:INFO:Copying training dataset
2023-06-19 19:16:13,895:INFO:Defining folds
2023-06-19 19:16:13,895:INFO:Declaring metric variables
2023-06-19 19:16:13,900:INFO:Importing untrained model
2023-06-19 19:16:13,904:INFO:Logistic Regression Imported successfully
2023-06-19 19:16:13,913:INFO:Starting cross validation
2023-06-19 19:16:13,916:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 19:16:33,575:INFO:Calculating mean and std
2023-06-19 19:16:33,576:INFO:Creating metrics dataframe
2023-06-19 19:16:33,587:INFO:Finalizing model
2023-06-19 19:16:36,812:INFO:Uploading results into container
2023-06-19 19:16:36,813:INFO:Uploading model into container now
2023-06-19 19:16:36,831:INFO:_master_model_container: 1
2023-06-19 19:16:36,831:INFO:_display_container: 2
2023-06-19 19:16:36,833:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 19:16:36,833:INFO:create_model() successfully completed......................................
2023-06-19 19:16:37,040:INFO:Initializing evaluate_model()
2023-06-19 19:16:37,040:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 19:16:37,083:INFO:Initializing plot_model()
2023-06-19 19:16:37,084:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:16:37,084:INFO:Checking exceptions
2023-06-19 19:16:37,098:INFO:Preloading libraries
2023-06-19 19:16:37,098:INFO:Copying training dataset
2023-06-19 19:16:37,098:INFO:Plot type: pipeline
2023-06-19 19:16:37,361:INFO:Visual Rendered Successfully
2023-06-19 19:16:37,454:INFO:plot_model() successfully completed......................................
2023-06-19 19:16:50,388:INFO:Initializing plot_model()
2023-06-19 19:16:50,389:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:16:50,389:INFO:Checking exceptions
2023-06-19 19:16:50,398:INFO:Preloading libraries
2023-06-19 19:16:50,399:INFO:Copying training dataset
2023-06-19 19:16:50,399:INFO:Plot type: parameter
2023-06-19 19:16:50,403:INFO:Visual Rendered Successfully
2023-06-19 19:16:50,486:INFO:plot_model() successfully completed......................................
2023-06-19 19:16:51,513:INFO:Initializing plot_model()
2023-06-19 19:16:51,513:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:16:51,513:INFO:Checking exceptions
2023-06-19 19:16:51,522:INFO:Preloading libraries
2023-06-19 19:16:51,522:INFO:Copying training dataset
2023-06-19 19:16:51,522:INFO:Plot type: auc
2023-06-19 19:16:51,679:INFO:Fitting Model
2023-06-19 19:16:51,690:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 19:16:51,692:INFO:Scoring test/hold-out set
2023-06-19 19:16:51,901:INFO:Visual Rendered Successfully
2023-06-19 19:16:51,991:INFO:plot_model() successfully completed......................................
2023-06-19 19:17:24,659:INFO:Initializing create_model()
2023-06-19 19:17:24,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 19:17:24,659:INFO:Checking exceptions
2023-06-19 19:17:24,692:INFO:Importing libraries
2023-06-19 19:17:24,692:INFO:Copying training dataset
2023-06-19 19:17:24,717:INFO:Defining folds
2023-06-19 19:17:24,718:INFO:Declaring metric variables
2023-06-19 19:17:24,723:INFO:Importing untrained model
2023-06-19 19:17:24,728:INFO:Logistic Regression Imported successfully
2023-06-19 19:17:24,737:INFO:Starting cross validation
2023-06-19 19:17:24,740:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 19:17:32,931:INFO:Calculating mean and std
2023-06-19 19:17:32,932:INFO:Creating metrics dataframe
2023-06-19 19:17:32,945:INFO:Finalizing model
2023-06-19 19:17:35,227:INFO:Uploading results into container
2023-06-19 19:17:35,231:INFO:Uploading model into container now
2023-06-19 19:17:35,251:INFO:_master_model_container: 2
2023-06-19 19:17:35,252:INFO:_display_container: 3
2023-06-19 19:17:35,252:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 19:17:35,253:INFO:create_model() successfully completed......................................
2023-06-19 19:17:35,391:INFO:Initializing evaluate_model()
2023-06-19 19:17:35,391:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 19:17:35,438:INFO:Initializing plot_model()
2023-06-19 19:17:35,439:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:17:35,439:INFO:Checking exceptions
2023-06-19 19:17:35,451:INFO:Preloading libraries
2023-06-19 19:17:35,452:INFO:Copying training dataset
2023-06-19 19:17:35,452:INFO:Plot type: pipeline
2023-06-19 19:17:35,827:INFO:Visual Rendered Successfully
2023-06-19 19:17:35,924:INFO:plot_model() successfully completed......................................
2023-06-19 19:18:55,216:INFO:Initializing plot_model()
2023-06-19 19:18:55,216:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:18:55,216:INFO:Checking exceptions
2023-06-19 19:18:55,224:INFO:Preloading libraries
2023-06-19 19:18:55,225:INFO:Copying training dataset
2023-06-19 19:18:55,225:INFO:Plot type: parameter
2023-06-19 19:18:55,230:INFO:Visual Rendered Successfully
2023-06-19 19:18:55,415:INFO:plot_model() successfully completed......................................
2023-06-19 19:18:56,023:INFO:Initializing plot_model()
2023-06-19 19:18:56,024:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:18:56,024:INFO:Checking exceptions
2023-06-19 19:18:56,033:INFO:Preloading libraries
2023-06-19 19:18:56,033:INFO:Copying training dataset
2023-06-19 19:18:56,033:INFO:Plot type: auc
2023-06-19 19:18:56,250:INFO:Fitting Model
2023-06-19 19:18:56,251:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 19:18:56,252:INFO:Scoring test/hold-out set
2023-06-19 19:18:56,507:INFO:Visual Rendered Successfully
2023-06-19 19:18:56,650:INFO:plot_model() successfully completed......................................
2023-06-19 19:19:00,909:INFO:Initializing plot_model()
2023-06-19 19:19:00,909:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:19:00,909:INFO:Checking exceptions
2023-06-19 19:19:00,919:INFO:Preloading libraries
2023-06-19 19:19:00,919:INFO:Copying training dataset
2023-06-19 19:19:00,919:INFO:Plot type: confusion_matrix
2023-06-19 19:19:01,136:INFO:Fitting Model
2023-06-19 19:19:01,136:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 19:19:01,147:INFO:Scoring test/hold-out set
2023-06-19 19:19:01,308:INFO:Visual Rendered Successfully
2023-06-19 19:19:01,428:INFO:plot_model() successfully completed......................................
2023-06-19 19:19:02,510:INFO:Initializing plot_model()
2023-06-19 19:19:02,510:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:19:02,511:INFO:Checking exceptions
2023-06-19 19:19:02,520:INFO:Preloading libraries
2023-06-19 19:19:02,520:INFO:Copying training dataset
2023-06-19 19:19:02,520:INFO:Plot type: pr
2023-06-19 19:19:02,741:INFO:Fitting Model
2023-06-19 19:19:02,742:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 19:19:02,743:INFO:Scoring test/hold-out set
2023-06-19 19:19:02,981:INFO:Visual Rendered Successfully
2023-06-19 19:19:03,229:INFO:plot_model() successfully completed......................................
2023-06-19 19:19:19,600:INFO:Initializing plot_model()
2023-06-19 19:19:19,601:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:19:19,601:INFO:Checking exceptions
2023-06-19 19:19:19,610:INFO:Preloading libraries
2023-06-19 19:19:19,611:INFO:Copying training dataset
2023-06-19 19:19:19,611:INFO:Plot type: feature
2023-06-19 19:19:19,964:INFO:Visual Rendered Successfully
2023-06-19 19:19:20,044:INFO:plot_model() successfully completed......................................
2023-06-19 19:19:25,519:INFO:Initializing plot_model()
2023-06-19 19:19:25,520:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49D54BB20>, system=True)
2023-06-19 19:19:25,520:INFO:Checking exceptions
2023-06-19 19:19:25,529:INFO:Preloading libraries
2023-06-19 19:19:25,529:INFO:Copying training dataset
2023-06-19 19:19:25,529:INFO:Plot type: feature_all
2023-06-19 19:19:25,921:INFO:Visual Rendered Successfully
2023-06-19 19:19:25,999:INFO:plot_model() successfully completed......................................
2023-06-19 19:30:05,226:INFO:PyCaret ClassificationExperiment
2023-06-19 19:30:05,226:INFO:Logging name: clf-default-name
2023-06-19 19:30:05,226:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 19:30:05,226:INFO:version 3.0.2
2023-06-19 19:30:05,226:INFO:Initializing setup()
2023-06-19 19:30:05,226:INFO:self.USI: 948f
2023-06-19 19:30:05,226:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 19:30:05,226:INFO:Checking environment
2023-06-19 19:30:05,226:INFO:python_version: 3.9.7
2023-06-19 19:30:05,226:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 19:30:05,227:INFO:machine: AMD64
2023-06-19 19:30:05,227:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 19:30:05,227:INFO:Memory: svmem(total=17120436224, available=6514704384, percent=61.9, used=10605731840, free=6514704384)
2023-06-19 19:30:05,227:INFO:Physical Core: 4
2023-06-19 19:30:05,227:INFO:Logical Core: 4
2023-06-19 19:30:05,227:INFO:Checking libraries
2023-06-19 19:30:05,227:INFO:System:
2023-06-19 19:30:05,227:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 19:30:05,227:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 19:30:05,227:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 19:30:05,227:INFO:PyCaret required dependencies:
2023-06-19 19:30:05,227:INFO:                 pip: 21.2.3
2023-06-19 19:30:05,227:INFO:          setuptools: 57.4.0
2023-06-19 19:30:05,227:INFO:             pycaret: 3.0.2
2023-06-19 19:30:05,227:INFO:             IPython: 7.28.0
2023-06-19 19:30:05,227:INFO:          ipywidgets: 8.0.6
2023-06-19 19:30:05,227:INFO:                tqdm: 4.64.0
2023-06-19 19:30:05,227:INFO:               numpy: 1.22.4
2023-06-19 19:30:05,228:INFO:              pandas: 1.3.5
2023-06-19 19:30:05,228:INFO:              jinja2: 3.1.2
2023-06-19 19:30:05,228:INFO:               scipy: 1.7.1
2023-06-19 19:30:05,228:INFO:              joblib: 1.2.0
2023-06-19 19:30:05,228:INFO:             sklearn: 1.1.0
2023-06-19 19:30:05,228:INFO:                pyod: 1.0.9
2023-06-19 19:30:05,228:INFO:            imblearn: 0.9.1
2023-06-19 19:30:05,228:INFO:   category_encoders: 2.6.1
2023-06-19 19:30:05,228:INFO:            lightgbm: 3.3.5
2023-06-19 19:30:05,228:INFO:               numba: 0.57.0
2023-06-19 19:30:05,228:INFO:            requests: 2.31.0
2023-06-19 19:30:05,228:INFO:          matplotlib: 3.4.3
2023-06-19 19:30:05,228:INFO:          scikitplot: 0.3.7
2023-06-19 19:30:05,228:INFO:         yellowbrick: 1.5
2023-06-19 19:30:05,228:INFO:              plotly: 5.8.0
2023-06-19 19:30:05,229:INFO:             kaleido: 0.2.1
2023-06-19 19:30:05,229:INFO:         statsmodels: 0.14.0
2023-06-19 19:30:05,229:INFO:              sktime: 0.17.0
2023-06-19 19:30:05,229:INFO:               tbats: 1.1.3
2023-06-19 19:30:05,229:INFO:            pmdarima: 2.0.3
2023-06-19 19:30:05,229:INFO:              psutil: 5.9.0
2023-06-19 19:30:05,229:INFO:PyCaret optional dependencies:
2023-06-19 19:30:05,229:INFO:                shap: Not installed
2023-06-19 19:30:05,229:INFO:           interpret: Not installed
2023-06-19 19:30:05,229:INFO:                umap: Not installed
2023-06-19 19:30:05,229:INFO:    pandas_profiling: Not installed
2023-06-19 19:30:05,229:INFO:  explainerdashboard: Not installed
2023-06-19 19:30:05,229:INFO:             autoviz: Not installed
2023-06-19 19:30:05,229:INFO:           fairlearn: Not installed
2023-06-19 19:30:05,230:INFO:             xgboost: Not installed
2023-06-19 19:30:05,230:INFO:            catboost: Not installed
2023-06-19 19:30:05,230:INFO:              kmodes: Not installed
2023-06-19 19:30:05,230:INFO:             mlxtend: Not installed
2023-06-19 19:30:05,230:INFO:       statsforecast: Not installed
2023-06-19 19:30:05,230:INFO:        tune_sklearn: Not installed
2023-06-19 19:30:05,230:INFO:                 ray: Not installed
2023-06-19 19:30:05,230:INFO:            hyperopt: Not installed
2023-06-19 19:30:05,231:INFO:              optuna: Not installed
2023-06-19 19:30:05,231:INFO:               skopt: Not installed
2023-06-19 19:30:05,231:INFO:              mlflow: Not installed
2023-06-19 19:30:05,231:INFO:              gradio: Not installed
2023-06-19 19:30:05,231:INFO:             fastapi: Not installed
2023-06-19 19:30:05,231:INFO:             uvicorn: Not installed
2023-06-19 19:30:05,231:INFO:              m2cgen: Not installed
2023-06-19 19:30:05,231:INFO:           evidently: Not installed
2023-06-19 19:30:05,231:INFO:               fugue: Not installed
2023-06-19 19:30:05,232:INFO:           streamlit: Not installed
2023-06-19 19:30:05,232:INFO:             prophet: Not installed
2023-06-19 19:30:05,232:INFO:None
2023-06-19 19:30:05,232:INFO:Set up data.
2023-06-19 19:30:05,331:INFO:Set up train/test split.
2023-06-19 19:30:05,332:INFO:Set up data.
2023-06-19 19:30:05,366:INFO:Set up index.
2023-06-19 19:30:05,368:INFO:Set up folding strategy.
2023-06-19 19:30:05,368:INFO:Assigning column types.
2023-06-19 19:30:05,382:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 19:30:05,444:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:30:05,445:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:30:05,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,539:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:30:05,539:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:30:05,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,573:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 19:30:05,626:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:30:05,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,710:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:30:05,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,743:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 19:30:05,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:05,910:INFO:Preparing preprocessing pipeline...
2023-06-19 19:30:05,913:INFO:Set up simple imputation.
2023-06-19 19:30:05,930:INFO:Set up encoding of ordinal features.
2023-06-19 19:30:05,943:INFO:Set up encoding of categorical features.
2023-06-19 19:30:05,943:INFO:Set up feature selection.
2023-06-19 19:30:06,028:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:06,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:06,033:INFO:Set up column name cleaning.
2023-06-19 19:30:27,400:INFO:PyCaret ClassificationExperiment
2023-06-19 19:30:27,400:INFO:Logging name: clf-default-name
2023-06-19 19:30:27,400:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 19:30:27,400:INFO:version 3.0.2
2023-06-19 19:30:27,400:INFO:Initializing setup()
2023-06-19 19:30:27,400:INFO:self.USI: 8b4a
2023-06-19 19:30:27,400:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 19:30:27,400:INFO:Checking environment
2023-06-19 19:30:27,401:INFO:python_version: 3.9.7
2023-06-19 19:30:27,401:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 19:30:27,401:INFO:machine: AMD64
2023-06-19 19:30:27,401:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 19:30:27,401:INFO:Memory: svmem(total=17120436224, available=6382686208, percent=62.7, used=10737750016, free=6382686208)
2023-06-19 19:30:27,401:INFO:Physical Core: 4
2023-06-19 19:30:27,401:INFO:Logical Core: 4
2023-06-19 19:30:27,401:INFO:Checking libraries
2023-06-19 19:30:27,401:INFO:System:
2023-06-19 19:30:27,401:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 19:30:27,401:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 19:30:27,402:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 19:30:27,402:INFO:PyCaret required dependencies:
2023-06-19 19:30:27,402:INFO:                 pip: 21.2.3
2023-06-19 19:30:27,402:INFO:          setuptools: 57.4.0
2023-06-19 19:30:27,402:INFO:             pycaret: 3.0.2
2023-06-19 19:30:27,402:INFO:             IPython: 7.28.0
2023-06-19 19:30:27,402:INFO:          ipywidgets: 8.0.6
2023-06-19 19:30:27,402:INFO:                tqdm: 4.64.0
2023-06-19 19:30:27,402:INFO:               numpy: 1.22.4
2023-06-19 19:30:27,402:INFO:              pandas: 1.3.5
2023-06-19 19:30:27,402:INFO:              jinja2: 3.1.2
2023-06-19 19:30:27,402:INFO:               scipy: 1.7.1
2023-06-19 19:30:27,402:INFO:              joblib: 1.2.0
2023-06-19 19:30:27,402:INFO:             sklearn: 1.1.0
2023-06-19 19:30:27,402:INFO:                pyod: 1.0.9
2023-06-19 19:30:27,402:INFO:            imblearn: 0.9.1
2023-06-19 19:30:27,402:INFO:   category_encoders: 2.6.1
2023-06-19 19:30:27,402:INFO:            lightgbm: 3.3.5
2023-06-19 19:30:27,402:INFO:               numba: 0.57.0
2023-06-19 19:30:27,402:INFO:            requests: 2.31.0
2023-06-19 19:30:27,402:INFO:          matplotlib: 3.4.3
2023-06-19 19:30:27,403:INFO:          scikitplot: 0.3.7
2023-06-19 19:30:27,403:INFO:         yellowbrick: 1.5
2023-06-19 19:30:27,403:INFO:              plotly: 5.8.0
2023-06-19 19:30:27,403:INFO:             kaleido: 0.2.1
2023-06-19 19:30:27,403:INFO:         statsmodels: 0.14.0
2023-06-19 19:30:27,403:INFO:              sktime: 0.17.0
2023-06-19 19:30:27,403:INFO:               tbats: 1.1.3
2023-06-19 19:30:27,403:INFO:            pmdarima: 2.0.3
2023-06-19 19:30:27,403:INFO:              psutil: 5.9.0
2023-06-19 19:30:27,403:INFO:PyCaret optional dependencies:
2023-06-19 19:30:27,403:INFO:                shap: Not installed
2023-06-19 19:30:27,403:INFO:           interpret: Not installed
2023-06-19 19:30:27,403:INFO:                umap: Not installed
2023-06-19 19:30:27,403:INFO:    pandas_profiling: Not installed
2023-06-19 19:30:27,403:INFO:  explainerdashboard: Not installed
2023-06-19 19:30:27,403:INFO:             autoviz: Not installed
2023-06-19 19:30:27,403:INFO:           fairlearn: Not installed
2023-06-19 19:30:27,403:INFO:             xgboost: Not installed
2023-06-19 19:30:27,403:INFO:            catboost: Not installed
2023-06-19 19:30:27,403:INFO:              kmodes: Not installed
2023-06-19 19:30:27,403:INFO:             mlxtend: Not installed
2023-06-19 19:30:27,404:INFO:       statsforecast: Not installed
2023-06-19 19:30:27,404:INFO:        tune_sklearn: Not installed
2023-06-19 19:30:27,404:INFO:                 ray: Not installed
2023-06-19 19:30:27,404:INFO:            hyperopt: Not installed
2023-06-19 19:30:27,404:INFO:              optuna: Not installed
2023-06-19 19:30:27,404:INFO:               skopt: Not installed
2023-06-19 19:30:27,404:INFO:              mlflow: Not installed
2023-06-19 19:30:27,404:INFO:              gradio: Not installed
2023-06-19 19:30:27,404:INFO:             fastapi: Not installed
2023-06-19 19:30:27,404:INFO:             uvicorn: Not installed
2023-06-19 19:30:27,404:INFO:              m2cgen: Not installed
2023-06-19 19:30:27,404:INFO:           evidently: Not installed
2023-06-19 19:30:27,404:INFO:               fugue: Not installed
2023-06-19 19:30:27,404:INFO:           streamlit: Not installed
2023-06-19 19:30:27,404:INFO:             prophet: Not installed
2023-06-19 19:30:27,404:INFO:None
2023-06-19 19:30:27,404:INFO:Set up data.
2023-06-19 19:30:27,493:INFO:Set up train/test split.
2023-06-19 19:30:27,493:INFO:Set up data.
2023-06-19 19:30:27,583:INFO:Set up index.
2023-06-19 19:30:27,586:INFO:Set up folding strategy.
2023-06-19 19:30:27,586:INFO:Assigning column types.
2023-06-19 19:30:27,618:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 19:30:27,694:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:30:27,695:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:30:27,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:27,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:27,789:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:30:27,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:30:27,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:27,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:27,823:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 19:30:27,876:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:30:27,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:27,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:27,960:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:30:27,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:27,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:27,992:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 19:30:28,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:28,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:28,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:28,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:28,163:INFO:Preparing preprocessing pipeline...
2023-06-19 19:30:28,166:INFO:Set up simple imputation.
2023-06-19 19:30:28,184:INFO:Set up encoding of ordinal features.
2023-06-19 19:30:28,197:INFO:Set up encoding of categorical features.
2023-06-19 19:30:28,197:INFO:Set up feature selection.
2023-06-19 19:30:28,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:28,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:28,286:INFO:Set up column name cleaning.
2023-06-19 19:30:28,881:INFO:Finished creating preprocessing pipeline.
2023-06-19 19:30:28,929:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=9,
                                                            score_func=<function f_classif at 0x000001E497CF7160>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 19:30:28,930:INFO:Creating final display dataframe.
2023-06-19 19:30:29,757:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 10)
5   Transformed train set shape       (51190, 10)
6    Transformed test set shape       (12356, 10)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16            Feature selection              True
17     Feature selection method        univariate
18  Feature selection estimator          lightgbm
19  Number of features selected               0.5
20               Fold Generator   StratifiedKFold
21                  Fold Number                 5
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              8b4a
2023-06-19 19:30:29,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:29,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:29,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:29,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:30:29,957:INFO:setup() successfully completed in 3.51s...............
2023-06-19 19:30:38,013:INFO:Initializing create_model()
2023-06-19 19:30:38,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49B03B6D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 19:30:38,013:INFO:Checking exceptions
2023-06-19 19:30:38,048:INFO:Importing libraries
2023-06-19 19:30:38,048:INFO:Copying training dataset
2023-06-19 19:30:38,072:INFO:Defining folds
2023-06-19 19:30:38,072:INFO:Declaring metric variables
2023-06-19 19:30:38,076:INFO:Importing untrained model
2023-06-19 19:30:38,081:INFO:Logistic Regression Imported successfully
2023-06-19 19:30:38,094:INFO:Starting cross validation
2023-06-19 19:30:38,097:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 19:30:47,951:INFO:Calculating mean and std
2023-06-19 19:30:47,953:INFO:Creating metrics dataframe
2023-06-19 19:30:47,961:INFO:Finalizing model
2023-06-19 19:30:49,820:INFO:Uploading results into container
2023-06-19 19:30:49,821:INFO:Uploading model into container now
2023-06-19 19:30:49,837:INFO:_master_model_container: 1
2023-06-19 19:30:49,837:INFO:_display_container: 2
2023-06-19 19:30:49,837:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 19:30:49,837:INFO:create_model() successfully completed......................................
2023-06-19 19:30:49,927:INFO:Initializing evaluate_model()
2023-06-19 19:30:49,927:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49B03B6D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 19:30:49,955:INFO:Initializing plot_model()
2023-06-19 19:30:49,955:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49B03B6D0>, system=True)
2023-06-19 19:30:49,955:INFO:Checking exceptions
2023-06-19 19:30:49,968:INFO:Preloading libraries
2023-06-19 19:30:49,969:INFO:Copying training dataset
2023-06-19 19:30:49,969:INFO:Plot type: pipeline
2023-06-19 19:30:50,153:INFO:Visual Rendered Successfully
2023-06-19 19:30:50,253:INFO:plot_model() successfully completed......................................
2023-06-19 19:30:54,240:INFO:Initializing plot_model()
2023-06-19 19:30:54,240:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49B03B6D0>, system=True)
2023-06-19 19:30:54,240:INFO:Checking exceptions
2023-06-19 19:30:54,249:INFO:Preloading libraries
2023-06-19 19:30:54,250:INFO:Copying training dataset
2023-06-19 19:30:54,250:INFO:Plot type: auc
2023-06-19 19:30:54,408:INFO:Fitting Model
2023-06-19 19:30:54,409:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 19:30:54,410:INFO:Scoring test/hold-out set
2023-06-19 19:30:54,624:INFO:Visual Rendered Successfully
2023-06-19 19:30:54,718:INFO:plot_model() successfully completed......................................
2023-06-19 19:31:35,709:INFO:PyCaret ClassificationExperiment
2023-06-19 19:31:35,709:INFO:Logging name: clf-default-name
2023-06-19 19:31:35,709:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 19:31:35,709:INFO:version 3.0.2
2023-06-19 19:31:35,709:INFO:Initializing setup()
2023-06-19 19:31:35,710:INFO:self.USI: 2799
2023-06-19 19:31:35,710:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 19:31:35,710:INFO:Checking environment
2023-06-19 19:31:35,710:INFO:python_version: 3.9.7
2023-06-19 19:31:35,710:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 19:31:35,710:INFO:machine: AMD64
2023-06-19 19:31:35,710:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 19:31:35,710:INFO:Memory: svmem(total=17120436224, available=5952139264, percent=65.2, used=11168296960, free=5952139264)
2023-06-19 19:31:35,710:INFO:Physical Core: 4
2023-06-19 19:31:35,710:INFO:Logical Core: 4
2023-06-19 19:31:35,710:INFO:Checking libraries
2023-06-19 19:31:35,710:INFO:System:
2023-06-19 19:31:35,710:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 19:31:35,710:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 19:31:35,710:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 19:31:35,710:INFO:PyCaret required dependencies:
2023-06-19 19:31:35,710:INFO:                 pip: 21.2.3
2023-06-19 19:31:35,711:INFO:          setuptools: 57.4.0
2023-06-19 19:31:35,711:INFO:             pycaret: 3.0.2
2023-06-19 19:31:35,711:INFO:             IPython: 7.28.0
2023-06-19 19:31:35,711:INFO:          ipywidgets: 8.0.6
2023-06-19 19:31:35,711:INFO:                tqdm: 4.64.0
2023-06-19 19:31:35,711:INFO:               numpy: 1.22.4
2023-06-19 19:31:35,711:INFO:              pandas: 1.3.5
2023-06-19 19:31:35,711:INFO:              jinja2: 3.1.2
2023-06-19 19:31:35,711:INFO:               scipy: 1.7.1
2023-06-19 19:31:35,711:INFO:              joblib: 1.2.0
2023-06-19 19:31:35,711:INFO:             sklearn: 1.1.0
2023-06-19 19:31:35,711:INFO:                pyod: 1.0.9
2023-06-19 19:31:35,711:INFO:            imblearn: 0.9.1
2023-06-19 19:31:35,711:INFO:   category_encoders: 2.6.1
2023-06-19 19:31:35,711:INFO:            lightgbm: 3.3.5
2023-06-19 19:31:35,711:INFO:               numba: 0.57.0
2023-06-19 19:31:35,711:INFO:            requests: 2.31.0
2023-06-19 19:31:35,711:INFO:          matplotlib: 3.4.3
2023-06-19 19:31:35,712:INFO:          scikitplot: 0.3.7
2023-06-19 19:31:35,712:INFO:         yellowbrick: 1.5
2023-06-19 19:31:35,712:INFO:              plotly: 5.8.0
2023-06-19 19:31:35,712:INFO:             kaleido: 0.2.1
2023-06-19 19:31:35,712:INFO:         statsmodels: 0.14.0
2023-06-19 19:31:35,712:INFO:              sktime: 0.17.0
2023-06-19 19:31:35,712:INFO:               tbats: 1.1.3
2023-06-19 19:31:35,712:INFO:            pmdarima: 2.0.3
2023-06-19 19:31:35,712:INFO:              psutil: 5.9.0
2023-06-19 19:31:35,712:INFO:PyCaret optional dependencies:
2023-06-19 19:31:35,712:INFO:                shap: Not installed
2023-06-19 19:31:35,712:INFO:           interpret: Not installed
2023-06-19 19:31:35,712:INFO:                umap: Not installed
2023-06-19 19:31:35,712:INFO:    pandas_profiling: Not installed
2023-06-19 19:31:35,712:INFO:  explainerdashboard: Not installed
2023-06-19 19:31:35,712:INFO:             autoviz: Not installed
2023-06-19 19:31:35,712:INFO:           fairlearn: Not installed
2023-06-19 19:31:35,712:INFO:             xgboost: Not installed
2023-06-19 19:31:35,712:INFO:            catboost: Not installed
2023-06-19 19:31:35,712:INFO:              kmodes: Not installed
2023-06-19 19:31:35,713:INFO:             mlxtend: Not installed
2023-06-19 19:31:35,713:INFO:       statsforecast: Not installed
2023-06-19 19:31:35,713:INFO:        tune_sklearn: Not installed
2023-06-19 19:31:35,713:INFO:                 ray: Not installed
2023-06-19 19:31:35,713:INFO:            hyperopt: Not installed
2023-06-19 19:31:35,713:INFO:              optuna: Not installed
2023-06-19 19:31:35,713:INFO:               skopt: Not installed
2023-06-19 19:31:35,713:INFO:              mlflow: Not installed
2023-06-19 19:31:35,713:INFO:              gradio: Not installed
2023-06-19 19:31:35,713:INFO:             fastapi: Not installed
2023-06-19 19:31:35,713:INFO:             uvicorn: Not installed
2023-06-19 19:31:35,713:INFO:              m2cgen: Not installed
2023-06-19 19:31:35,713:INFO:           evidently: Not installed
2023-06-19 19:31:35,713:INFO:               fugue: Not installed
2023-06-19 19:31:35,713:INFO:           streamlit: Not installed
2023-06-19 19:31:35,713:INFO:             prophet: Not installed
2023-06-19 19:31:35,713:INFO:None
2023-06-19 19:31:35,713:INFO:Set up data.
2023-06-19 19:31:35,792:INFO:Set up train/test split.
2023-06-19 19:31:35,792:INFO:Set up data.
2023-06-19 19:31:35,821:INFO:Set up index.
2023-06-19 19:31:35,823:INFO:Set up folding strategy.
2023-06-19 19:31:35,824:INFO:Assigning column types.
2023-06-19 19:31:35,842:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 19:31:35,912:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:31:35,913:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:31:35,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:35,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,011:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:31:36,012:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:31:36,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,046:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 19:31:36,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:31:36,138:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,254:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:31:36,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,286:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 19:31:36,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,455:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,456:INFO:Preparing preprocessing pipeline...
2023-06-19 19:31:36,459:INFO:Set up simple imputation.
2023-06-19 19:31:36,476:INFO:Set up encoding of ordinal features.
2023-06-19 19:31:36,491:INFO:Set up encoding of categorical features.
2023-06-19 19:31:36,491:INFO:Set up feature selection.
2023-06-19 19:31:36,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:36,579:INFO:Set up column name cleaning.
2023-06-19 19:31:37,178:INFO:Finished creating preprocessing pipeline.
2023-06-19 19:31:37,226:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=14,
                                                            score_func=<function f_classif at 0x000001E497CF7160>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 19:31:37,226:INFO:Creating final display dataframe.
2023-06-19 19:31:38,064:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 15)
5   Transformed train set shape       (51190, 15)
6    Transformed test set shape       (12356, 15)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16            Feature selection              True
17     Feature selection method        univariate
18  Feature selection estimator          lightgbm
19  Number of features selected              0.75
20               Fold Generator   StratifiedKFold
21                  Fold Number                 5
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              2799
2023-06-19 19:31:38,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:38,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:38,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:38,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:31:38,270:INFO:setup() successfully completed in 3.48s...............
2023-06-19 19:32:13,969:INFO:PyCaret ClassificationExperiment
2023-06-19 19:32:13,969:INFO:Logging name: clf-default-name
2023-06-19 19:32:13,969:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 19:32:13,969:INFO:version 3.0.2
2023-06-19 19:32:13,969:INFO:Initializing setup()
2023-06-19 19:32:13,969:INFO:self.USI: e681
2023-06-19 19:32:13,969:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 19:32:13,969:INFO:Checking environment
2023-06-19 19:32:13,969:INFO:python_version: 3.9.7
2023-06-19 19:32:13,969:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 19:32:13,969:INFO:machine: AMD64
2023-06-19 19:32:13,969:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 19:32:13,969:INFO:Memory: svmem(total=17120436224, available=5844160512, percent=65.9, used=11276275712, free=5844160512)
2023-06-19 19:32:13,970:INFO:Physical Core: 4
2023-06-19 19:32:13,970:INFO:Logical Core: 4
2023-06-19 19:32:13,970:INFO:Checking libraries
2023-06-19 19:32:13,970:INFO:System:
2023-06-19 19:32:13,970:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 19:32:13,970:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 19:32:13,970:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 19:32:13,970:INFO:PyCaret required dependencies:
2023-06-19 19:32:13,970:INFO:                 pip: 21.2.3
2023-06-19 19:32:13,970:INFO:          setuptools: 57.4.0
2023-06-19 19:32:13,970:INFO:             pycaret: 3.0.2
2023-06-19 19:32:13,970:INFO:             IPython: 7.28.0
2023-06-19 19:32:13,970:INFO:          ipywidgets: 8.0.6
2023-06-19 19:32:13,970:INFO:                tqdm: 4.64.0
2023-06-19 19:32:13,970:INFO:               numpy: 1.22.4
2023-06-19 19:32:13,970:INFO:              pandas: 1.3.5
2023-06-19 19:32:13,970:INFO:              jinja2: 3.1.2
2023-06-19 19:32:13,970:INFO:               scipy: 1.7.1
2023-06-19 19:32:13,970:INFO:              joblib: 1.2.0
2023-06-19 19:32:13,971:INFO:             sklearn: 1.1.0
2023-06-19 19:32:13,971:INFO:                pyod: 1.0.9
2023-06-19 19:32:13,971:INFO:            imblearn: 0.9.1
2023-06-19 19:32:13,971:INFO:   category_encoders: 2.6.1
2023-06-19 19:32:13,971:INFO:            lightgbm: 3.3.5
2023-06-19 19:32:13,971:INFO:               numba: 0.57.0
2023-06-19 19:32:13,971:INFO:            requests: 2.31.0
2023-06-19 19:32:13,971:INFO:          matplotlib: 3.4.3
2023-06-19 19:32:13,971:INFO:          scikitplot: 0.3.7
2023-06-19 19:32:13,971:INFO:         yellowbrick: 1.5
2023-06-19 19:32:13,971:INFO:              plotly: 5.8.0
2023-06-19 19:32:13,971:INFO:             kaleido: 0.2.1
2023-06-19 19:32:13,971:INFO:         statsmodels: 0.14.0
2023-06-19 19:32:13,971:INFO:              sktime: 0.17.0
2023-06-19 19:32:13,971:INFO:               tbats: 1.1.3
2023-06-19 19:32:13,971:INFO:            pmdarima: 2.0.3
2023-06-19 19:32:13,971:INFO:              psutil: 5.9.0
2023-06-19 19:32:13,971:INFO:PyCaret optional dependencies:
2023-06-19 19:32:13,971:INFO:                shap: Not installed
2023-06-19 19:32:13,972:INFO:           interpret: Not installed
2023-06-19 19:32:13,972:INFO:                umap: Not installed
2023-06-19 19:32:13,972:INFO:    pandas_profiling: Not installed
2023-06-19 19:32:13,972:INFO:  explainerdashboard: Not installed
2023-06-19 19:32:13,972:INFO:             autoviz: Not installed
2023-06-19 19:32:13,972:INFO:           fairlearn: Not installed
2023-06-19 19:32:13,972:INFO:             xgboost: Not installed
2023-06-19 19:32:13,972:INFO:            catboost: Not installed
2023-06-19 19:32:13,972:INFO:              kmodes: Not installed
2023-06-19 19:32:13,972:INFO:             mlxtend: Not installed
2023-06-19 19:32:13,972:INFO:       statsforecast: Not installed
2023-06-19 19:32:13,972:INFO:        tune_sklearn: Not installed
2023-06-19 19:32:13,972:INFO:                 ray: Not installed
2023-06-19 19:32:13,972:INFO:            hyperopt: Not installed
2023-06-19 19:32:13,973:INFO:              optuna: Not installed
2023-06-19 19:32:13,973:INFO:               skopt: Not installed
2023-06-19 19:32:13,973:INFO:              mlflow: Not installed
2023-06-19 19:32:13,973:INFO:              gradio: Not installed
2023-06-19 19:32:13,973:INFO:             fastapi: Not installed
2023-06-19 19:32:13,973:INFO:             uvicorn: Not installed
2023-06-19 19:32:13,973:INFO:              m2cgen: Not installed
2023-06-19 19:32:13,973:INFO:           evidently: Not installed
2023-06-19 19:32:13,973:INFO:               fugue: Not installed
2023-06-19 19:32:13,973:INFO:           streamlit: Not installed
2023-06-19 19:32:13,973:INFO:             prophet: Not installed
2023-06-19 19:32:13,973:INFO:None
2023-06-19 19:32:13,973:INFO:Set up data.
2023-06-19 19:32:14,077:INFO:Set up train/test split.
2023-06-19 19:32:14,080:INFO:Set up data.
2023-06-19 19:32:14,120:INFO:Set up index.
2023-06-19 19:32:14,122:INFO:Set up folding strategy.
2023-06-19 19:32:14,123:INFO:Assigning column types.
2023-06-19 19:32:14,144:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 19:32:14,199:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:32:14,200:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:32:14,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:32:14,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:32:14,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,324:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 19:32:14,376:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:32:14,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,461:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:32:14,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,493:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 19:32:14,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,660:INFO:Preparing preprocessing pipeline...
2023-06-19 19:32:14,663:INFO:Set up simple imputation.
2023-06-19 19:32:14,682:INFO:Set up encoding of ordinal features.
2023-06-19 19:32:14,694:INFO:Set up encoding of categorical features.
2023-06-19 19:32:14,694:INFO:Set up removing multicollinearity.
2023-06-19 19:32:14,694:INFO:Set up feature selection.
2023-06-19 19:32:14,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:14,783:INFO:Set up column name cleaning.
2023-06-19 19:32:15,980:INFO:Finished creating preprocessing pipeline.
2023-06-19 19:32:16,030:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=14,
                                                            score_func=<function f_classif at 0x000001E497CF7160>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 19:32:16,030:INFO:Creating final display dataframe.
2023-06-19 19:32:16,924:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 15)
5   Transformed train set shape       (51190, 15)
6    Transformed test set shape       (12356, 15)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                -1
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.8
18            Feature selection              True
19     Feature selection method        univariate
20  Feature selection estimator          lightgbm
21  Number of features selected              0.75
22               Fold Generator   StratifiedKFold
23                  Fold Number                 5
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  clf-default-name
28                          USI              e681
2023-06-19 19:32:17,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:17,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:17,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:17,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:32:17,175:INFO:setup() successfully completed in 4.23s...............
2023-06-19 19:32:29,313:INFO:Initializing create_model()
2023-06-19 19:32:29,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 19:32:29,314:INFO:Checking exceptions
2023-06-19 19:32:29,351:INFO:Importing libraries
2023-06-19 19:32:29,351:INFO:Copying training dataset
2023-06-19 19:32:29,374:INFO:Defining folds
2023-06-19 19:32:29,374:INFO:Declaring metric variables
2023-06-19 19:32:29,378:INFO:Importing untrained model
2023-06-19 19:32:29,384:INFO:Logistic Regression Imported successfully
2023-06-19 19:32:29,397:INFO:Starting cross validation
2023-06-19 19:32:29,399:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 19:32:36,620:INFO:Calculating mean and std
2023-06-19 19:32:36,621:INFO:Creating metrics dataframe
2023-06-19 19:32:36,631:INFO:Finalizing model
2023-06-19 19:32:38,927:INFO:Uploading results into container
2023-06-19 19:32:38,928:INFO:Uploading model into container now
2023-06-19 19:32:38,949:INFO:_master_model_container: 1
2023-06-19 19:32:38,949:INFO:_display_container: 2
2023-06-19 19:32:38,949:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 19:32:38,950:INFO:create_model() successfully completed......................................
2023-06-19 19:32:39,051:INFO:Initializing evaluate_model()
2023-06-19 19:32:39,051:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 19:32:39,083:INFO:Initializing plot_model()
2023-06-19 19:32:39,083:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, system=True)
2023-06-19 19:32:39,083:INFO:Checking exceptions
2023-06-19 19:32:39,097:INFO:Preloading libraries
2023-06-19 19:32:39,097:INFO:Copying training dataset
2023-06-19 19:32:39,097:INFO:Plot type: pipeline
2023-06-19 19:32:39,447:INFO:Visual Rendered Successfully
2023-06-19 19:32:39,519:INFO:plot_model() successfully completed......................................
2023-06-19 19:32:45,183:INFO:Initializing plot_model()
2023-06-19 19:32:45,184:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, system=True)
2023-06-19 19:32:45,184:INFO:Checking exceptions
2023-06-19 19:32:45,193:INFO:Preloading libraries
2023-06-19 19:32:45,194:INFO:Copying training dataset
2023-06-19 19:32:45,194:INFO:Plot type: auc
2023-06-19 19:32:45,349:INFO:Fitting Model
2023-06-19 19:32:45,350:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 19:32:45,351:INFO:Scoring test/hold-out set
2023-06-19 19:32:45,524:INFO:Visual Rendered Successfully
2023-06-19 19:32:45,669:INFO:plot_model() successfully completed......................................
2023-06-19 19:32:49,463:INFO:Initializing plot_model()
2023-06-19 19:32:49,464:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, system=True)
2023-06-19 19:32:49,464:INFO:Checking exceptions
2023-06-19 19:32:49,474:INFO:Preloading libraries
2023-06-19 19:32:49,474:INFO:Copying training dataset
2023-06-19 19:32:49,474:INFO:Plot type: confusion_matrix
2023-06-19 19:32:49,628:INFO:Fitting Model
2023-06-19 19:32:49,628:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 19:32:49,629:INFO:Scoring test/hold-out set
2023-06-19 19:32:49,731:INFO:Visual Rendered Successfully
2023-06-19 19:32:49,809:INFO:plot_model() successfully completed......................................
2023-06-19 19:32:52,048:INFO:Initializing plot_model()
2023-06-19 19:32:52,048:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, system=True)
2023-06-19 19:32:52,048:INFO:Checking exceptions
2023-06-19 19:32:52,058:INFO:Preloading libraries
2023-06-19 19:32:52,058:INFO:Copying training dataset
2023-06-19 19:32:52,058:INFO:Plot type: pipeline
2023-06-19 19:32:52,199:INFO:Visual Rendered Successfully
2023-06-19 19:32:52,265:INFO:plot_model() successfully completed......................................
2023-06-19 19:32:52,960:INFO:Initializing plot_model()
2023-06-19 19:32:52,960:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, system=True)
2023-06-19 19:32:52,960:INFO:Checking exceptions
2023-06-19 19:32:52,969:INFO:Preloading libraries
2023-06-19 19:32:52,970:INFO:Copying training dataset
2023-06-19 19:32:52,970:INFO:Plot type: feature_all
2023-06-19 19:32:53,262:INFO:Visual Rendered Successfully
2023-06-19 19:32:53,329:INFO:plot_model() successfully completed......................................
2023-06-19 19:32:54,391:INFO:Initializing plot_model()
2023-06-19 19:32:54,391:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, system=True)
2023-06-19 19:32:54,392:INFO:Checking exceptions
2023-06-19 19:32:54,401:INFO:Preloading libraries
2023-06-19 19:32:54,401:INFO:Copying training dataset
2023-06-19 19:32:54,401:INFO:Plot type: pipeline
2023-06-19 19:32:54,547:INFO:Visual Rendered Successfully
2023-06-19 19:32:54,614:INFO:plot_model() successfully completed......................................
2023-06-19 19:33:10,856:INFO:Initializing plot_model()
2023-06-19 19:33:10,856:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49C948880>, system=True)
2023-06-19 19:33:10,856:INFO:Checking exceptions
2023-06-19 19:33:10,866:INFO:Preloading libraries
2023-06-19 19:33:10,866:INFO:Copying training dataset
2023-06-19 19:33:10,866:INFO:Plot type: feature_all
2023-06-19 19:33:11,253:INFO:Visual Rendered Successfully
2023-06-19 19:33:11,318:INFO:plot_model() successfully completed......................................
2023-06-19 19:38:05,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 19:38:05,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 19:38:05,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 19:38:05,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-19 19:38:06,661:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-19 19:38:07,868:INFO:PyCaret ClassificationExperiment
2023-06-19 19:38:07,868:INFO:Logging name: clf-default-name
2023-06-19 19:38:07,868:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 19:38:07,868:INFO:version 3.0.2
2023-06-19 19:38:07,868:INFO:Initializing setup()
2023-06-19 19:38:07,868:INFO:self.USI: 1f3f
2023-06-19 19:38:07,868:INFO:self._variable_keys: {'seed', 'html_param', 'n_jobs_param', '_available_plots', 'X_test', 'fold_shuffle_param', 'exp_id', 'pipeline', 'gpu_param', 'X_train', 'y', 'is_multiclass', 'data', 'fold_groups_param', 'log_plots_param', 'y_train', 'target_param', 'fix_imbalance', 'idx', '_ml_usecase', 'exp_name_log', 'y_test', 'fold_generator', 'X', 'gpu_n_jobs_param', 'USI', 'logging_param', 'memory'}
2023-06-19 19:38:07,869:INFO:Checking environment
2023-06-19 19:38:07,869:INFO:python_version: 3.9.7
2023-06-19 19:38:07,869:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 19:38:07,869:INFO:machine: AMD64
2023-06-19 19:38:07,869:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 19:38:07,869:INFO:Memory: svmem(total=17120436224, available=6208307200, percent=63.7, used=10912129024, free=6208307200)
2023-06-19 19:38:07,869:INFO:Physical Core: 4
2023-06-19 19:38:07,869:INFO:Logical Core: 4
2023-06-19 19:38:07,869:INFO:Checking libraries
2023-06-19 19:38:07,869:INFO:System:
2023-06-19 19:38:07,869:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 19:38:07,869:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 19:38:07,870:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 19:38:07,870:INFO:PyCaret required dependencies:
2023-06-19 19:38:07,870:INFO:                 pip: 21.2.3
2023-06-19 19:38:07,870:INFO:          setuptools: 57.4.0
2023-06-19 19:38:07,870:INFO:             pycaret: 3.0.2
2023-06-19 19:38:07,870:INFO:             IPython: 7.28.0
2023-06-19 19:38:07,870:INFO:          ipywidgets: 8.0.6
2023-06-19 19:38:07,870:INFO:                tqdm: 4.64.0
2023-06-19 19:38:07,870:INFO:               numpy: 1.22.4
2023-06-19 19:38:07,870:INFO:              pandas: 1.3.5
2023-06-19 19:38:07,870:INFO:              jinja2: 3.1.2
2023-06-19 19:38:07,870:INFO:               scipy: 1.7.1
2023-06-19 19:38:07,870:INFO:              joblib: 1.2.0
2023-06-19 19:38:07,870:INFO:             sklearn: 1.1.0
2023-06-19 19:38:07,870:INFO:                pyod: 1.0.9
2023-06-19 19:38:07,870:INFO:            imblearn: 0.9.1
2023-06-19 19:38:07,870:INFO:   category_encoders: 2.6.1
2023-06-19 19:38:07,870:INFO:            lightgbm: 3.3.5
2023-06-19 19:38:07,870:INFO:               numba: 0.57.0
2023-06-19 19:38:07,871:INFO:            requests: 2.31.0
2023-06-19 19:38:07,871:INFO:          matplotlib: 3.4.3
2023-06-19 19:38:07,871:INFO:          scikitplot: 0.3.7
2023-06-19 19:38:07,871:INFO:         yellowbrick: 1.5
2023-06-19 19:38:07,871:INFO:              plotly: 5.8.0
2023-06-19 19:38:07,871:INFO:             kaleido: 0.2.1
2023-06-19 19:38:07,871:INFO:         statsmodels: 0.14.0
2023-06-19 19:38:07,871:INFO:              sktime: 0.17.0
2023-06-19 19:38:07,871:INFO:               tbats: 1.1.3
2023-06-19 19:38:07,871:INFO:            pmdarima: 2.0.3
2023-06-19 19:38:07,871:INFO:              psutil: 5.9.0
2023-06-19 19:38:07,871:INFO:PyCaret optional dependencies:
2023-06-19 19:38:07,893:INFO:                shap: Not installed
2023-06-19 19:38:07,894:INFO:           interpret: Not installed
2023-06-19 19:38:07,894:INFO:                umap: Not installed
2023-06-19 19:38:07,894:INFO:    pandas_profiling: Not installed
2023-06-19 19:38:07,894:INFO:  explainerdashboard: Not installed
2023-06-19 19:38:07,894:INFO:             autoviz: Not installed
2023-06-19 19:38:07,894:INFO:           fairlearn: Not installed
2023-06-19 19:38:07,894:INFO:             xgboost: Not installed
2023-06-19 19:38:07,894:INFO:            catboost: Not installed
2023-06-19 19:38:07,894:INFO:              kmodes: Not installed
2023-06-19 19:38:07,895:INFO:             mlxtend: Not installed
2023-06-19 19:38:07,895:INFO:       statsforecast: Not installed
2023-06-19 19:38:07,895:INFO:        tune_sklearn: Not installed
2023-06-19 19:38:07,895:INFO:                 ray: Not installed
2023-06-19 19:38:07,895:INFO:            hyperopt: Not installed
2023-06-19 19:38:07,895:INFO:              optuna: Not installed
2023-06-19 19:38:07,895:INFO:               skopt: Not installed
2023-06-19 19:38:07,895:INFO:              mlflow: Not installed
2023-06-19 19:38:07,895:INFO:              gradio: Not installed
2023-06-19 19:38:07,895:INFO:             fastapi: Not installed
2023-06-19 19:38:07,895:INFO:             uvicorn: Not installed
2023-06-19 19:38:07,895:INFO:              m2cgen: Not installed
2023-06-19 19:38:07,895:INFO:           evidently: Not installed
2023-06-19 19:38:07,895:INFO:               fugue: Not installed
2023-06-19 19:38:07,895:INFO:           streamlit: Not installed
2023-06-19 19:38:07,895:INFO:             prophet: Not installed
2023-06-19 19:38:07,895:INFO:None
2023-06-19 19:38:07,895:INFO:Set up data.
2023-06-19 19:38:07,956:INFO:Set up train/test split.
2023-06-19 19:38:07,982:INFO:Set up index.
2023-06-19 19:38:07,983:INFO:Set up folding strategy.
2023-06-19 19:38:07,983:INFO:Assigning column types.
2023-06-19 19:38:07,995:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 19:38:08,048:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:38:08,050:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:38:08,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,194:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 19:38:08,195:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:38:08,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,231:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 19:38:08,285:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:38:08,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,372:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 19:38:08,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,406:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 19:38:08,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:08,584:INFO:Preparing preprocessing pipeline...
2023-06-19 19:38:08,586:INFO:Set up simple imputation.
2023-06-19 19:38:08,598:INFO:Set up encoding of ordinal features.
2023-06-19 19:38:08,608:INFO:Set up encoding of categorical features.
2023-06-19 19:38:08,609:INFO:Set up column name cleaning.
2023-06-19 19:38:09,012:INFO:Finished creating preprocessing pipeline.
2023-06-19 19:38:09,061:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 19:38:09,061:INFO:Creating final display dataframe.
2023-06-19 19:38:09,297:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (41185, 55)
5   Transformed train set shape       (28829, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                 5
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              1f3f
2023-06-19 19:38:09,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:09,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:09,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:09,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 19:38:09,500:INFO:setup() successfully completed in 2.6s...............
2023-06-19 19:38:12,729:INFO:Initializing create_model()
2023-06-19 19:38:12,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017210D94DF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 19:38:12,729:INFO:Checking exceptions
2023-06-19 19:38:12,768:INFO:Importing libraries
2023-06-19 19:38:12,768:INFO:Copying training dataset
2023-06-19 19:38:12,785:INFO:Defining folds
2023-06-19 19:38:12,785:INFO:Declaring metric variables
2023-06-19 19:38:12,790:INFO:Importing untrained model
2023-06-19 19:38:12,790:INFO:Declaring custom model
2023-06-19 19:38:12,795:INFO:Random Forest Classifier Imported successfully
2023-06-19 19:38:12,803:INFO:Starting cross validation
2023-06-19 19:38:12,806:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 19:38:22,927:INFO:Calculating mean and std
2023-06-19 19:38:22,929:INFO:Creating metrics dataframe
2023-06-19 19:38:22,939:INFO:Finalizing model
2023-06-19 19:38:24,539:INFO:Uploading results into container
2023-06-19 19:38:24,540:INFO:Uploading model into container now
2023-06-19 19:38:24,559:INFO:_master_model_container: 1
2023-06-19 19:38:24,559:INFO:_display_container: 2
2023-06-19 19:38:24,559:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 19:38:24,559:INFO:create_model() successfully completed......................................
2023-06-19 19:38:24,639:INFO:Initializing evaluate_model()
2023-06-19 19:38:24,639:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017210D94DF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 19:38:24,671:INFO:Initializing plot_model()
2023-06-19 19:38:24,671:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017210D94DF0>, system=True)
2023-06-19 19:38:24,671:INFO:Checking exceptions
2023-06-19 19:38:24,695:INFO:Preloading libraries
2023-06-19 19:38:24,699:INFO:Copying training dataset
2023-06-19 19:38:24,700:INFO:Plot type: pipeline
2023-06-19 19:38:25,062:INFO:Visual Rendered Successfully
2023-06-19 19:38:25,131:INFO:plot_model() successfully completed......................................
2023-06-19 19:44:26,482:INFO:Initializing plot_model()
2023-06-19 19:44:26,483:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017210D94DF0>, system=True)
2023-06-19 19:44:26,483:INFO:Checking exceptions
2023-06-19 19:44:26,505:INFO:Preloading libraries
2023-06-19 19:44:26,509:INFO:Copying training dataset
2023-06-19 19:44:26,509:INFO:Plot type: feature_all
2023-06-19 19:44:26,564:WARNING:No coef_ found. Trying feature_importances_
2023-06-19 19:44:27,407:INFO:Visual Rendered Successfully
2023-06-19 19:44:27,531:INFO:plot_model() successfully completed......................................
2023-06-19 19:45:38,336:INFO:Initializing plot_model()
2023-06-19 19:45:38,337:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017210D94DF0>, system=True)
2023-06-19 19:45:38,337:INFO:Checking exceptions
2023-06-19 19:45:38,364:INFO:Preloading libraries
2023-06-19 19:45:38,367:INFO:Copying training dataset
2023-06-19 19:45:38,367:INFO:Plot type: feature
2023-06-19 19:45:38,368:WARNING:No coef_ found. Trying feature_importances_
2023-06-19 19:45:38,598:INFO:Visual Rendered Successfully
2023-06-19 19:45:38,661:INFO:plot_model() successfully completed......................................
2023-06-19 21:18:02,812:INFO:PyCaret ClassificationExperiment
2023-06-19 21:18:02,813:INFO:Logging name: clf-default-name
2023-06-19 21:18:02,814:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 21:18:02,814:INFO:version 3.0.2
2023-06-19 21:18:02,814:INFO:Initializing setup()
2023-06-19 21:18:02,814:INFO:self.USI: f0c3
2023-06-19 21:18:02,814:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 21:18:02,814:INFO:Checking environment
2023-06-19 21:18:02,814:INFO:python_version: 3.9.7
2023-06-19 21:18:02,814:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 21:18:02,815:INFO:machine: AMD64
2023-06-19 21:18:02,815:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 21:18:02,816:INFO:Memory: svmem(total=17120436224, available=6078140416, percent=64.5, used=11042295808, free=6078140416)
2023-06-19 21:18:02,816:INFO:Physical Core: 4
2023-06-19 21:18:02,816:INFO:Logical Core: 4
2023-06-19 21:18:02,816:INFO:Checking libraries
2023-06-19 21:18:02,816:INFO:System:
2023-06-19 21:18:02,816:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 21:18:02,816:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 21:18:02,816:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 21:18:02,816:INFO:PyCaret required dependencies:
2023-06-19 21:18:02,817:INFO:                 pip: 21.2.3
2023-06-19 21:18:02,817:INFO:          setuptools: 57.4.0
2023-06-19 21:18:02,817:INFO:             pycaret: 3.0.2
2023-06-19 21:18:02,817:INFO:             IPython: 7.28.0
2023-06-19 21:18:02,817:INFO:          ipywidgets: 8.0.6
2023-06-19 21:18:02,817:INFO:                tqdm: 4.64.0
2023-06-19 21:18:02,817:INFO:               numpy: 1.22.4
2023-06-19 21:18:02,817:INFO:              pandas: 1.3.5
2023-06-19 21:18:02,817:INFO:              jinja2: 3.1.2
2023-06-19 21:18:02,817:INFO:               scipy: 1.7.1
2023-06-19 21:18:02,817:INFO:              joblib: 1.2.0
2023-06-19 21:18:02,817:INFO:             sklearn: 1.1.0
2023-06-19 21:18:02,817:INFO:                pyod: 1.0.9
2023-06-19 21:18:02,817:INFO:            imblearn: 0.9.1
2023-06-19 21:18:02,817:INFO:   category_encoders: 2.6.1
2023-06-19 21:18:02,817:INFO:            lightgbm: 3.3.5
2023-06-19 21:18:02,817:INFO:               numba: 0.57.0
2023-06-19 21:18:02,818:INFO:            requests: 2.31.0
2023-06-19 21:18:02,818:INFO:          matplotlib: 3.4.3
2023-06-19 21:18:02,818:INFO:          scikitplot: 0.3.7
2023-06-19 21:18:02,818:INFO:         yellowbrick: 1.5
2023-06-19 21:18:02,818:INFO:              plotly: 5.8.0
2023-06-19 21:18:02,818:INFO:             kaleido: 0.2.1
2023-06-19 21:18:02,818:INFO:         statsmodels: 0.14.0
2023-06-19 21:18:02,818:INFO:              sktime: 0.17.0
2023-06-19 21:18:02,818:INFO:               tbats: 1.1.3
2023-06-19 21:18:02,818:INFO:            pmdarima: 2.0.3
2023-06-19 21:18:02,818:INFO:              psutil: 5.9.0
2023-06-19 21:18:02,818:INFO:PyCaret optional dependencies:
2023-06-19 21:18:02,818:INFO:                shap: Not installed
2023-06-19 21:18:02,818:INFO:           interpret: Not installed
2023-06-19 21:18:02,818:INFO:                umap: Not installed
2023-06-19 21:18:02,818:INFO:    pandas_profiling: Not installed
2023-06-19 21:18:02,818:INFO:  explainerdashboard: Not installed
2023-06-19 21:18:02,819:INFO:             autoviz: Not installed
2023-06-19 21:18:02,819:INFO:           fairlearn: Not installed
2023-06-19 21:18:02,819:INFO:             xgboost: Not installed
2023-06-19 21:18:02,819:INFO:            catboost: Not installed
2023-06-19 21:18:02,819:INFO:              kmodes: Not installed
2023-06-19 21:18:02,819:INFO:             mlxtend: Not installed
2023-06-19 21:18:02,819:INFO:       statsforecast: Not installed
2023-06-19 21:18:02,819:INFO:        tune_sklearn: Not installed
2023-06-19 21:18:02,819:INFO:                 ray: Not installed
2023-06-19 21:18:02,819:INFO:            hyperopt: Not installed
2023-06-19 21:18:02,819:INFO:              optuna: Not installed
2023-06-19 21:18:02,819:INFO:               skopt: Not installed
2023-06-19 21:18:02,819:INFO:              mlflow: Not installed
2023-06-19 21:18:02,819:INFO:              gradio: Not installed
2023-06-19 21:18:02,819:INFO:             fastapi: Not installed
2023-06-19 21:18:02,819:INFO:             uvicorn: Not installed
2023-06-19 21:18:02,819:INFO:              m2cgen: Not installed
2023-06-19 21:18:02,819:INFO:           evidently: Not installed
2023-06-19 21:18:02,819:INFO:               fugue: Not installed
2023-06-19 21:18:02,819:INFO:           streamlit: Not installed
2023-06-19 21:18:02,819:INFO:             prophet: Not installed
2023-06-19 21:18:02,819:INFO:None
2023-06-19 21:18:02,820:INFO:Set up data.
2023-06-19 21:18:02,913:INFO:Set up train/test split.
2023-06-19 21:18:02,913:INFO:Set up data.
2023-06-19 21:18:02,955:INFO:Set up index.
2023-06-19 21:18:02,959:INFO:Set up folding strategy.
2023-06-19 21:18:02,959:INFO:Assigning column types.
2023-06-19 21:18:10,687:INFO:PyCaret ClassificationExperiment
2023-06-19 21:18:10,687:INFO:Logging name: clf-default-name
2023-06-19 21:18:10,687:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 21:18:10,687:INFO:version 3.0.2
2023-06-19 21:18:10,687:INFO:Initializing setup()
2023-06-19 21:18:10,687:INFO:self.USI: b9ca
2023-06-19 21:18:10,687:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 21:18:10,687:INFO:Checking environment
2023-06-19 21:18:10,687:INFO:python_version: 3.9.7
2023-06-19 21:18:10,687:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 21:18:10,687:INFO:machine: AMD64
2023-06-19 21:18:10,687:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 21:18:10,688:INFO:Memory: svmem(total=17120436224, available=6064115712, percent=64.6, used=11056320512, free=6064115712)
2023-06-19 21:18:10,688:INFO:Physical Core: 4
2023-06-19 21:18:10,688:INFO:Logical Core: 4
2023-06-19 21:18:10,688:INFO:Checking libraries
2023-06-19 21:18:10,688:INFO:System:
2023-06-19 21:18:10,688:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 21:18:10,688:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 21:18:10,688:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 21:18:10,688:INFO:PyCaret required dependencies:
2023-06-19 21:18:10,688:INFO:                 pip: 21.2.3
2023-06-19 21:18:10,688:INFO:          setuptools: 57.4.0
2023-06-19 21:18:10,688:INFO:             pycaret: 3.0.2
2023-06-19 21:18:10,688:INFO:             IPython: 7.28.0
2023-06-19 21:18:10,688:INFO:          ipywidgets: 8.0.6
2023-06-19 21:18:10,688:INFO:                tqdm: 4.64.0
2023-06-19 21:18:10,689:INFO:               numpy: 1.22.4
2023-06-19 21:18:10,689:INFO:              pandas: 1.3.5
2023-06-19 21:18:10,689:INFO:              jinja2: 3.1.2
2023-06-19 21:18:10,689:INFO:               scipy: 1.7.1
2023-06-19 21:18:10,689:INFO:              joblib: 1.2.0
2023-06-19 21:18:10,689:INFO:             sklearn: 1.1.0
2023-06-19 21:18:10,689:INFO:                pyod: 1.0.9
2023-06-19 21:18:10,689:INFO:            imblearn: 0.9.1
2023-06-19 21:18:10,689:INFO:   category_encoders: 2.6.1
2023-06-19 21:18:10,689:INFO:            lightgbm: 3.3.5
2023-06-19 21:18:10,689:INFO:               numba: 0.57.0
2023-06-19 21:18:10,689:INFO:            requests: 2.31.0
2023-06-19 21:18:10,689:INFO:          matplotlib: 3.4.3
2023-06-19 21:18:10,689:INFO:          scikitplot: 0.3.7
2023-06-19 21:18:10,689:INFO:         yellowbrick: 1.5
2023-06-19 21:18:10,689:INFO:              plotly: 5.8.0
2023-06-19 21:18:10,689:INFO:             kaleido: 0.2.1
2023-06-19 21:18:10,689:INFO:         statsmodels: 0.14.0
2023-06-19 21:18:10,689:INFO:              sktime: 0.17.0
2023-06-19 21:18:10,689:INFO:               tbats: 1.1.3
2023-06-19 21:18:10,689:INFO:            pmdarima: 2.0.3
2023-06-19 21:18:10,689:INFO:              psutil: 5.9.0
2023-06-19 21:18:10,690:INFO:PyCaret optional dependencies:
2023-06-19 21:18:10,690:INFO:                shap: Not installed
2023-06-19 21:18:10,690:INFO:           interpret: Not installed
2023-06-19 21:18:10,690:INFO:                umap: Not installed
2023-06-19 21:18:10,690:INFO:    pandas_profiling: Not installed
2023-06-19 21:18:10,690:INFO:  explainerdashboard: Not installed
2023-06-19 21:18:10,690:INFO:             autoviz: Not installed
2023-06-19 21:18:10,690:INFO:           fairlearn: Not installed
2023-06-19 21:18:10,690:INFO:             xgboost: Not installed
2023-06-19 21:18:10,690:INFO:            catboost: Not installed
2023-06-19 21:18:10,690:INFO:              kmodes: Not installed
2023-06-19 21:18:10,690:INFO:             mlxtend: Not installed
2023-06-19 21:18:10,690:INFO:       statsforecast: Not installed
2023-06-19 21:18:10,690:INFO:        tune_sklearn: Not installed
2023-06-19 21:18:10,690:INFO:                 ray: Not installed
2023-06-19 21:18:10,690:INFO:            hyperopt: Not installed
2023-06-19 21:18:10,690:INFO:              optuna: Not installed
2023-06-19 21:18:10,690:INFO:               skopt: Not installed
2023-06-19 21:18:10,690:INFO:              mlflow: Not installed
2023-06-19 21:18:10,690:INFO:              gradio: Not installed
2023-06-19 21:18:10,690:INFO:             fastapi: Not installed
2023-06-19 21:18:10,691:INFO:             uvicorn: Not installed
2023-06-19 21:18:10,691:INFO:              m2cgen: Not installed
2023-06-19 21:18:10,691:INFO:           evidently: Not installed
2023-06-19 21:18:10,691:INFO:               fugue: Not installed
2023-06-19 21:18:10,691:INFO:           streamlit: Not installed
2023-06-19 21:18:10,691:INFO:             prophet: Not installed
2023-06-19 21:18:10,691:INFO:None
2023-06-19 21:18:10,691:INFO:Set up data.
2023-06-19 21:18:10,784:INFO:Set up train/test split.
2023-06-19 21:18:10,784:INFO:Set up data.
2023-06-19 21:18:10,819:INFO:Set up index.
2023-06-19 21:18:10,822:INFO:Set up folding strategy.
2023-06-19 21:18:10,822:INFO:Assigning column types.
2023-06-19 21:18:44,784:INFO:PyCaret ClassificationExperiment
2023-06-19 21:18:44,784:INFO:Logging name: clf-default-name
2023-06-19 21:18:44,784:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 21:18:44,784:INFO:version 3.0.2
2023-06-19 21:18:44,784:INFO:Initializing setup()
2023-06-19 21:18:44,784:INFO:self.USI: 2a2d
2023-06-19 21:18:44,784:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 21:18:44,784:INFO:Checking environment
2023-06-19 21:18:44,784:INFO:python_version: 3.9.7
2023-06-19 21:18:44,784:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 21:18:44,785:INFO:machine: AMD64
2023-06-19 21:18:44,785:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 21:18:44,785:INFO:Memory: svmem(total=17120436224, available=5959294976, percent=65.2, used=11161141248, free=5959294976)
2023-06-19 21:18:44,785:INFO:Physical Core: 4
2023-06-19 21:18:44,785:INFO:Logical Core: 4
2023-06-19 21:18:44,785:INFO:Checking libraries
2023-06-19 21:18:44,785:INFO:System:
2023-06-19 21:18:44,785:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 21:18:44,785:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 21:18:44,785:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 21:18:44,785:INFO:PyCaret required dependencies:
2023-06-19 21:18:44,785:INFO:                 pip: 21.2.3
2023-06-19 21:18:44,785:INFO:          setuptools: 57.4.0
2023-06-19 21:18:44,785:INFO:             pycaret: 3.0.2
2023-06-19 21:18:44,785:INFO:             IPython: 7.28.0
2023-06-19 21:18:44,785:INFO:          ipywidgets: 8.0.6
2023-06-19 21:18:44,785:INFO:                tqdm: 4.64.0
2023-06-19 21:18:44,785:INFO:               numpy: 1.22.4
2023-06-19 21:18:44,785:INFO:              pandas: 1.3.5
2023-06-19 21:18:44,786:INFO:              jinja2: 3.1.2
2023-06-19 21:18:44,786:INFO:               scipy: 1.7.1
2023-06-19 21:18:44,786:INFO:              joblib: 1.2.0
2023-06-19 21:18:44,786:INFO:             sklearn: 1.1.0
2023-06-19 21:18:44,786:INFO:                pyod: 1.0.9
2023-06-19 21:18:44,786:INFO:            imblearn: 0.9.1
2023-06-19 21:18:44,786:INFO:   category_encoders: 2.6.1
2023-06-19 21:18:44,786:INFO:            lightgbm: 3.3.5
2023-06-19 21:18:44,786:INFO:               numba: 0.57.0
2023-06-19 21:18:44,786:INFO:            requests: 2.31.0
2023-06-19 21:18:44,786:INFO:          matplotlib: 3.4.3
2023-06-19 21:18:44,786:INFO:          scikitplot: 0.3.7
2023-06-19 21:18:44,786:INFO:         yellowbrick: 1.5
2023-06-19 21:18:44,786:INFO:              plotly: 5.8.0
2023-06-19 21:18:44,786:INFO:             kaleido: 0.2.1
2023-06-19 21:18:44,786:INFO:         statsmodels: 0.14.0
2023-06-19 21:18:44,786:INFO:              sktime: 0.17.0
2023-06-19 21:18:44,786:INFO:               tbats: 1.1.3
2023-06-19 21:18:44,786:INFO:            pmdarima: 2.0.3
2023-06-19 21:18:44,786:INFO:              psutil: 5.9.0
2023-06-19 21:18:44,787:INFO:PyCaret optional dependencies:
2023-06-19 21:18:44,787:INFO:                shap: Not installed
2023-06-19 21:18:44,787:INFO:           interpret: Not installed
2023-06-19 21:18:44,787:INFO:                umap: Not installed
2023-06-19 21:18:44,787:INFO:    pandas_profiling: Not installed
2023-06-19 21:18:44,787:INFO:  explainerdashboard: Not installed
2023-06-19 21:18:44,787:INFO:             autoviz: Not installed
2023-06-19 21:18:44,787:INFO:           fairlearn: Not installed
2023-06-19 21:18:44,787:INFO:             xgboost: Not installed
2023-06-19 21:18:44,787:INFO:            catboost: Not installed
2023-06-19 21:18:44,787:INFO:              kmodes: Not installed
2023-06-19 21:18:44,787:INFO:             mlxtend: Not installed
2023-06-19 21:18:44,787:INFO:       statsforecast: Not installed
2023-06-19 21:18:44,787:INFO:        tune_sklearn: Not installed
2023-06-19 21:18:44,787:INFO:                 ray: Not installed
2023-06-19 21:18:44,787:INFO:            hyperopt: Not installed
2023-06-19 21:18:44,787:INFO:              optuna: Not installed
2023-06-19 21:18:44,787:INFO:               skopt: Not installed
2023-06-19 21:18:44,787:INFO:              mlflow: Not installed
2023-06-19 21:18:44,787:INFO:              gradio: Not installed
2023-06-19 21:18:44,787:INFO:             fastapi: Not installed
2023-06-19 21:18:44,788:INFO:             uvicorn: Not installed
2023-06-19 21:18:44,788:INFO:              m2cgen: Not installed
2023-06-19 21:18:44,788:INFO:           evidently: Not installed
2023-06-19 21:18:44,788:INFO:               fugue: Not installed
2023-06-19 21:18:44,788:INFO:           streamlit: Not installed
2023-06-19 21:18:44,788:INFO:             prophet: Not installed
2023-06-19 21:18:44,788:INFO:None
2023-06-19 21:18:44,788:INFO:Set up data.
2023-06-19 21:18:44,870:INFO:Set up train/test split.
2023-06-19 21:18:44,870:INFO:Set up data.
2023-06-19 21:18:44,979:INFO:Set up index.
2023-06-19 21:18:44,985:INFO:Set up folding strategy.
2023-06-19 21:18:44,985:INFO:Assigning column types.
2023-06-19 21:20:54,124:INFO:PyCaret ClassificationExperiment
2023-06-19 21:20:54,124:INFO:Logging name: clf-default-name
2023-06-19 21:20:54,124:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 21:20:54,124:INFO:version 3.0.2
2023-06-19 21:20:54,124:INFO:Initializing setup()
2023-06-19 21:20:54,124:INFO:self.USI: 0bd3
2023-06-19 21:20:54,124:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 21:20:54,124:INFO:Checking environment
2023-06-19 21:20:54,125:INFO:python_version: 3.9.7
2023-06-19 21:20:54,125:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 21:20:54,125:INFO:machine: AMD64
2023-06-19 21:20:54,125:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 21:20:54,125:INFO:Memory: svmem(total=17120436224, available=5868343296, percent=65.7, used=11252092928, free=5868343296)
2023-06-19 21:20:54,125:INFO:Physical Core: 4
2023-06-19 21:20:54,125:INFO:Logical Core: 4
2023-06-19 21:20:54,125:INFO:Checking libraries
2023-06-19 21:20:54,125:INFO:System:
2023-06-19 21:20:54,125:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 21:20:54,125:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 21:20:54,125:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 21:20:54,125:INFO:PyCaret required dependencies:
2023-06-19 21:20:54,125:INFO:                 pip: 21.2.3
2023-06-19 21:20:54,125:INFO:          setuptools: 57.4.0
2023-06-19 21:20:54,125:INFO:             pycaret: 3.0.2
2023-06-19 21:20:54,126:INFO:             IPython: 7.28.0
2023-06-19 21:20:54,126:INFO:          ipywidgets: 8.0.6
2023-06-19 21:20:54,126:INFO:                tqdm: 4.64.0
2023-06-19 21:20:54,126:INFO:               numpy: 1.22.4
2023-06-19 21:20:54,126:INFO:              pandas: 1.3.5
2023-06-19 21:20:54,126:INFO:              jinja2: 3.1.2
2023-06-19 21:20:54,126:INFO:               scipy: 1.7.1
2023-06-19 21:20:54,126:INFO:              joblib: 1.2.0
2023-06-19 21:20:54,126:INFO:             sklearn: 1.1.0
2023-06-19 21:20:54,126:INFO:                pyod: 1.0.9
2023-06-19 21:20:54,126:INFO:            imblearn: 0.9.1
2023-06-19 21:20:54,126:INFO:   category_encoders: 2.6.1
2023-06-19 21:20:54,126:INFO:            lightgbm: 3.3.5
2023-06-19 21:20:54,126:INFO:               numba: 0.57.0
2023-06-19 21:20:54,126:INFO:            requests: 2.31.0
2023-06-19 21:20:54,126:INFO:          matplotlib: 3.4.3
2023-06-19 21:20:54,126:INFO:          scikitplot: 0.3.7
2023-06-19 21:20:54,126:INFO:         yellowbrick: 1.5
2023-06-19 21:20:54,126:INFO:              plotly: 5.8.0
2023-06-19 21:20:54,126:INFO:             kaleido: 0.2.1
2023-06-19 21:20:54,126:INFO:         statsmodels: 0.14.0
2023-06-19 21:20:54,126:INFO:              sktime: 0.17.0
2023-06-19 21:20:54,126:INFO:               tbats: 1.1.3
2023-06-19 21:20:54,127:INFO:            pmdarima: 2.0.3
2023-06-19 21:20:54,127:INFO:              psutil: 5.9.0
2023-06-19 21:20:54,127:INFO:PyCaret optional dependencies:
2023-06-19 21:20:54,127:INFO:                shap: Not installed
2023-06-19 21:20:54,127:INFO:           interpret: Not installed
2023-06-19 21:20:54,127:INFO:                umap: Not installed
2023-06-19 21:20:54,127:INFO:    pandas_profiling: Not installed
2023-06-19 21:20:54,127:INFO:  explainerdashboard: Not installed
2023-06-19 21:20:54,127:INFO:             autoviz: Not installed
2023-06-19 21:20:54,127:INFO:           fairlearn: Not installed
2023-06-19 21:20:54,127:INFO:             xgboost: Not installed
2023-06-19 21:20:54,127:INFO:            catboost: Not installed
2023-06-19 21:20:54,127:INFO:              kmodes: Not installed
2023-06-19 21:20:54,127:INFO:             mlxtend: Not installed
2023-06-19 21:20:54,127:INFO:       statsforecast: Not installed
2023-06-19 21:20:54,127:INFO:        tune_sklearn: Not installed
2023-06-19 21:20:54,127:INFO:                 ray: Not installed
2023-06-19 21:20:54,127:INFO:            hyperopt: Not installed
2023-06-19 21:20:54,127:INFO:              optuna: Not installed
2023-06-19 21:20:54,127:INFO:               skopt: Not installed
2023-06-19 21:20:54,127:INFO:              mlflow: Not installed
2023-06-19 21:20:54,127:INFO:              gradio: Not installed
2023-06-19 21:20:54,128:INFO:             fastapi: Not installed
2023-06-19 21:20:54,128:INFO:             uvicorn: Not installed
2023-06-19 21:20:54,128:INFO:              m2cgen: Not installed
2023-06-19 21:20:54,128:INFO:           evidently: Not installed
2023-06-19 21:20:54,128:INFO:               fugue: Not installed
2023-06-19 21:20:54,128:INFO:           streamlit: Not installed
2023-06-19 21:20:54,128:INFO:             prophet: Not installed
2023-06-19 21:20:54,128:INFO:None
2023-06-19 21:20:54,128:INFO:Set up data.
2023-06-19 21:20:54,213:INFO:Set up train/test split.
2023-06-19 21:20:54,213:INFO:Set up data.
2023-06-19 21:20:54,257:INFO:Set up index.
2023-06-19 21:20:54,259:INFO:Set up folding strategy.
2023-06-19 21:20:54,259:INFO:Assigning column types.
2023-06-19 21:20:54,275:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 21:20:54,332:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 21:20:54,333:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:20:54,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,458:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 21:20:54,458:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:20:54,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,552:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 21:20:54,606:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:20:54,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,691:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:20:54,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,724:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 21:20:54,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:54,898:INFO:Preparing preprocessing pipeline...
2023-06-19 21:20:54,900:INFO:Set up simple imputation.
2023-06-19 21:20:54,918:INFO:Set up encoding of ordinal features.
2023-06-19 21:20:54,930:INFO:Set up encoding of categorical features.
2023-06-19 21:20:54,931:INFO:Set up column name cleaning.
2023-06-19 21:20:56,346:INFO:Finished creating preprocessing pipeline.
2023-06-19 21:20:56,529:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              st...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 21:20:56,529:INFO:Creating final display dataframe.
2023-06-19 21:20:57,889:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7               Ignore features                 1
8              Ordinal features                 3
9              Numeric features                 8
10         Categorical features                10
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                -1
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                 5
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              0bd3
2023-06-19 21:20:57,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:57,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:58,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:58,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:20:58,098:INFO:setup() successfully completed in 4.95s...............
2023-06-19 21:21:15,434:INFO:Initializing create_model()
2023-06-19 21:21:15,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49AF7A400>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 21:21:15,434:INFO:Checking exceptions
2023-06-19 21:21:15,468:INFO:Importing libraries
2023-06-19 21:21:15,468:INFO:Copying training dataset
2023-06-19 21:21:15,493:INFO:Defining folds
2023-06-19 21:21:15,493:INFO:Declaring metric variables
2023-06-19 21:21:15,497:INFO:Importing untrained model
2023-06-19 21:21:15,502:INFO:Logistic Regression Imported successfully
2023-06-19 21:21:15,512:INFO:Starting cross validation
2023-06-19 21:21:15,515:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 21:21:27,718:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-06-19 21:21:27,823:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 21:21:34,275:INFO:Calculating mean and std
2023-06-19 21:21:34,279:INFO:Creating metrics dataframe
2023-06-19 21:21:34,293:INFO:Finalizing model
2023-06-19 21:21:40,703:INFO:Uploading results into container
2023-06-19 21:21:40,704:INFO:Uploading model into container now
2023-06-19 21:21:40,722:INFO:_master_model_container: 1
2023-06-19 21:21:40,722:INFO:_display_container: 2
2023-06-19 21:21:40,722:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 21:21:40,722:INFO:create_model() successfully completed......................................
2023-06-19 21:21:41,754:INFO:Initializing evaluate_model()
2023-06-19 21:21:41,754:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49AF7A400>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 21:21:41,781:INFO:Initializing plot_model()
2023-06-19 21:21:41,781:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49AF7A400>, system=True)
2023-06-19 21:21:41,781:INFO:Checking exceptions
2023-06-19 21:21:41,793:INFO:Preloading libraries
2023-06-19 21:21:41,794:INFO:Copying training dataset
2023-06-19 21:21:41,794:INFO:Plot type: pipeline
2023-06-19 21:21:41,933:INFO:Visual Rendered Successfully
2023-06-19 21:21:42,006:INFO:plot_model() successfully completed......................................
2023-06-19 21:21:44,013:INFO:Initializing plot_model()
2023-06-19 21:21:44,013:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49AF7A400>, system=True)
2023-06-19 21:21:44,014:INFO:Checking exceptions
2023-06-19 21:21:44,022:INFO:Preloading libraries
2023-06-19 21:21:44,022:INFO:Copying training dataset
2023-06-19 21:21:44,022:INFO:Plot type: auc
2023-06-19 21:21:44,276:INFO:Fitting Model
2023-06-19 21:21:44,278:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 21:21:44,279:INFO:Scoring test/hold-out set
2023-06-19 21:21:44,555:INFO:Visual Rendered Successfully
2023-06-19 21:21:44,643:INFO:plot_model() successfully completed......................................
2023-06-19 21:21:52,059:INFO:Initializing plot_model()
2023-06-19 21:21:52,059:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49AF7A400>, system=True)
2023-06-19 21:21:52,060:INFO:Checking exceptions
2023-06-19 21:21:52,069:INFO:Preloading libraries
2023-06-19 21:21:52,069:INFO:Copying training dataset
2023-06-19 21:21:52,069:INFO:Plot type: dimension
2023-06-19 21:21:52,206:INFO:Fitting StandardScaler()
2023-06-19 21:21:52,350:INFO:Fitting PCA()
2023-06-19 21:21:52,827:INFO:Fitting & Transforming Model
2023-06-19 21:21:54,681:INFO:Visual Rendered Successfully
2023-06-19 21:21:54,768:INFO:plot_model() successfully completed......................................
2023-06-19 21:21:59,195:INFO:Initializing plot_model()
2023-06-19 21:21:59,195:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49AF7A400>, system=True)
2023-06-19 21:21:59,196:INFO:Checking exceptions
2023-06-19 21:21:59,205:INFO:Preloading libraries
2023-06-19 21:21:59,205:INFO:Copying training dataset
2023-06-19 21:21:59,205:INFO:Plot type: feature_all
2023-06-19 21:22:00,164:INFO:Visual Rendered Successfully
2023-06-19 21:22:00,231:INFO:plot_model() successfully completed......................................
2023-06-19 21:24:39,806:INFO:PyCaret ClassificationExperiment
2023-06-19 21:24:39,806:INFO:Logging name: clf-default-name
2023-06-19 21:24:39,806:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 21:24:39,806:INFO:version 3.0.2
2023-06-19 21:24:39,806:INFO:Initializing setup()
2023-06-19 21:24:39,806:INFO:self.USI: b91c
2023-06-19 21:24:39,806:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 21:24:39,806:INFO:Checking environment
2023-06-19 21:24:39,806:INFO:python_version: 3.9.7
2023-06-19 21:24:39,807:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 21:24:39,807:INFO:machine: AMD64
2023-06-19 21:24:39,807:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 21:24:39,807:INFO:Memory: svmem(total=17120436224, available=5361205248, percent=68.7, used=11759230976, free=5361205248)
2023-06-19 21:24:39,807:INFO:Physical Core: 4
2023-06-19 21:24:39,807:INFO:Logical Core: 4
2023-06-19 21:24:39,807:INFO:Checking libraries
2023-06-19 21:24:39,807:INFO:System:
2023-06-19 21:24:39,807:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 21:24:39,807:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 21:24:39,807:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 21:24:39,807:INFO:PyCaret required dependencies:
2023-06-19 21:24:39,807:INFO:                 pip: 21.2.3
2023-06-19 21:24:39,807:INFO:          setuptools: 57.4.0
2023-06-19 21:24:39,807:INFO:             pycaret: 3.0.2
2023-06-19 21:24:39,807:INFO:             IPython: 7.28.0
2023-06-19 21:24:39,807:INFO:          ipywidgets: 8.0.6
2023-06-19 21:24:39,807:INFO:                tqdm: 4.64.0
2023-06-19 21:24:39,808:INFO:               numpy: 1.22.4
2023-06-19 21:24:39,808:INFO:              pandas: 1.3.5
2023-06-19 21:24:39,808:INFO:              jinja2: 3.1.2
2023-06-19 21:24:39,808:INFO:               scipy: 1.7.1
2023-06-19 21:24:39,808:INFO:              joblib: 1.2.0
2023-06-19 21:24:39,808:INFO:             sklearn: 1.1.0
2023-06-19 21:24:39,808:INFO:                pyod: 1.0.9
2023-06-19 21:24:39,808:INFO:            imblearn: 0.9.1
2023-06-19 21:24:39,808:INFO:   category_encoders: 2.6.1
2023-06-19 21:24:39,808:INFO:            lightgbm: 3.3.5
2023-06-19 21:24:39,808:INFO:               numba: 0.57.0
2023-06-19 21:24:39,808:INFO:            requests: 2.31.0
2023-06-19 21:24:39,808:INFO:          matplotlib: 3.4.3
2023-06-19 21:24:39,808:INFO:          scikitplot: 0.3.7
2023-06-19 21:24:39,808:INFO:         yellowbrick: 1.5
2023-06-19 21:24:39,808:INFO:              plotly: 5.8.0
2023-06-19 21:24:39,808:INFO:             kaleido: 0.2.1
2023-06-19 21:24:39,808:INFO:         statsmodels: 0.14.0
2023-06-19 21:24:39,808:INFO:              sktime: 0.17.0
2023-06-19 21:24:39,808:INFO:               tbats: 1.1.3
2023-06-19 21:24:39,808:INFO:            pmdarima: 2.0.3
2023-06-19 21:24:39,808:INFO:              psutil: 5.9.0
2023-06-19 21:24:39,809:INFO:PyCaret optional dependencies:
2023-06-19 21:24:39,809:INFO:                shap: Not installed
2023-06-19 21:24:39,809:INFO:           interpret: Not installed
2023-06-19 21:24:39,809:INFO:                umap: Not installed
2023-06-19 21:24:39,809:INFO:    pandas_profiling: Not installed
2023-06-19 21:24:39,809:INFO:  explainerdashboard: Not installed
2023-06-19 21:24:39,809:INFO:             autoviz: Not installed
2023-06-19 21:24:39,809:INFO:           fairlearn: Not installed
2023-06-19 21:24:39,809:INFO:             xgboost: Not installed
2023-06-19 21:24:39,809:INFO:            catboost: Not installed
2023-06-19 21:24:39,809:INFO:              kmodes: Not installed
2023-06-19 21:24:39,809:INFO:             mlxtend: Not installed
2023-06-19 21:24:39,809:INFO:       statsforecast: Not installed
2023-06-19 21:24:39,809:INFO:        tune_sklearn: Not installed
2023-06-19 21:24:39,809:INFO:                 ray: Not installed
2023-06-19 21:24:39,809:INFO:            hyperopt: Not installed
2023-06-19 21:24:39,809:INFO:              optuna: Not installed
2023-06-19 21:24:39,809:INFO:               skopt: Not installed
2023-06-19 21:24:39,809:INFO:              mlflow: Not installed
2023-06-19 21:24:39,809:INFO:              gradio: Not installed
2023-06-19 21:24:39,809:INFO:             fastapi: Not installed
2023-06-19 21:24:39,810:INFO:             uvicorn: Not installed
2023-06-19 21:24:39,810:INFO:              m2cgen: Not installed
2023-06-19 21:24:39,810:INFO:           evidently: Not installed
2023-06-19 21:24:39,810:INFO:               fugue: Not installed
2023-06-19 21:24:39,810:INFO:           streamlit: Not installed
2023-06-19 21:24:39,810:INFO:             prophet: Not installed
2023-06-19 21:24:39,810:INFO:None
2023-06-19 21:24:39,810:INFO:Set up data.
2023-06-19 21:24:39,887:INFO:Set up train/test split.
2023-06-19 21:24:39,887:INFO:Set up data.
2023-06-19 21:24:39,931:INFO:Set up index.
2023-06-19 21:24:39,937:INFO:Set up folding strategy.
2023-06-19 21:24:39,938:INFO:Assigning column types.
2023-06-19 21:24:39,961:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 21:24:40,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 21:24:40,036:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:24:40,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,142:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 21:24:40,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:24:40,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,181:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 21:24:40,234:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:24:40,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,321:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:24:40,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,364:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 21:24:40,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:40,577:INFO:Preparing preprocessing pipeline...
2023-06-19 21:24:40,580:INFO:Set up simple imputation.
2023-06-19 21:24:40,619:INFO:Set up encoding of ordinal features.
2023-06-19 21:24:40,635:INFO:Set up encoding of categorical features.
2023-06-19 21:24:40,639:INFO:Set up column name cleaning.
2023-06-19 21:24:41,350:INFO:Finished creating preprocessing pipeline.
2023-06-19 21:24:41,399:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              st...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 21:24:41,400:INFO:Creating final display dataframe.
2023-06-19 21:24:42,393:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7               Ignore features                 1
8              Ordinal features                 3
9              Numeric features                 8
10         Categorical features                10
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                -1
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              b91c
2023-06-19 21:24:42,505:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:42,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:42,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:42,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:24:42,601:INFO:setup() successfully completed in 3.78s...............
2023-06-19 21:24:43,462:INFO:Initializing create_model()
2023-06-19 21:24:43,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CF14D90>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 21:24:43,462:INFO:Checking exceptions
2023-06-19 21:24:43,495:INFO:Importing libraries
2023-06-19 21:24:43,495:INFO:Copying training dataset
2023-06-19 21:24:43,519:INFO:Defining folds
2023-06-19 21:24:43,519:INFO:Declaring metric variables
2023-06-19 21:24:43,524:INFO:Importing untrained model
2023-06-19 21:24:43,531:INFO:Logistic Regression Imported successfully
2023-06-19 21:24:43,543:INFO:Starting cross validation
2023-06-19 21:24:43,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 21:25:19,978:INFO:Calculating mean and std
2023-06-19 21:25:19,979:INFO:Creating metrics dataframe
2023-06-19 21:25:19,991:INFO:Finalizing model
2023-06-19 21:25:21,668:INFO:Uploading results into container
2023-06-19 21:25:21,669:INFO:Uploading model into container now
2023-06-19 21:25:21,686:INFO:_master_model_container: 1
2023-06-19 21:25:21,686:INFO:_display_container: 2
2023-06-19 21:25:21,686:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 21:25:21,687:INFO:create_model() successfully completed......................................
2023-06-19 21:25:21,788:INFO:Initializing evaluate_model()
2023-06-19 21:25:21,789:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CF14D90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 21:25:21,813:INFO:Initializing plot_model()
2023-06-19 21:25:21,813:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CF14D90>, system=True)
2023-06-19 21:25:21,813:INFO:Checking exceptions
2023-06-19 21:25:21,826:INFO:Preloading libraries
2023-06-19 21:25:21,826:INFO:Copying training dataset
2023-06-19 21:25:21,826:INFO:Plot type: pipeline
2023-06-19 21:25:22,035:INFO:Visual Rendered Successfully
2023-06-19 21:25:22,114:INFO:plot_model() successfully completed......................................
2023-06-19 21:25:57,470:INFO:Initializing plot_model()
2023-06-19 21:25:57,470:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CF14D90>, system=True)
2023-06-19 21:25:57,470:INFO:Checking exceptions
2023-06-19 21:25:57,480:INFO:Preloading libraries
2023-06-19 21:25:57,481:INFO:Copying training dataset
2023-06-19 21:25:57,481:INFO:Plot type: auc
2023-06-19 21:25:57,845:INFO:Fitting Model
2023-06-19 21:25:57,846:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 21:25:57,846:INFO:Scoring test/hold-out set
2023-06-19 21:25:58,039:INFO:Visual Rendered Successfully
2023-06-19 21:25:58,135:INFO:plot_model() successfully completed......................................
2023-06-19 21:26:20,677:INFO:Initializing predict_model()
2023-06-19 21:26:20,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CF14D90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E49D321E50>)
2023-06-19 21:26:20,678:INFO:Checking exceptions
2023-06-19 21:26:20,678:INFO:Preloading libraries
2023-06-19 21:27:12,224:INFO:PyCaret ClassificationExperiment
2023-06-19 21:27:12,224:INFO:Logging name: clf-default-name
2023-06-19 21:27:12,225:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-19 21:27:12,225:INFO:version 3.0.2
2023-06-19 21:27:12,225:INFO:Initializing setup()
2023-06-19 21:27:12,225:INFO:self.USI: a32b
2023-06-19 21:27:12,225:INFO:self._variable_keys: {'log_plots_param', 'fold_generator', 'y', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'X_train', 'fold_shuffle_param', 'USI', 'exp_id', 'is_multiclass', 'logging_param', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'y_test', 'html_param', 'y_train', 'idx', 'memory', 'data', 'pipeline', 'X', 'fix_imbalance', 'target_param', 'seed', 'gpu_param'}
2023-06-19 21:27:12,225:INFO:Checking environment
2023-06-19 21:27:12,225:INFO:python_version: 3.9.7
2023-06-19 21:27:12,225:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-19 21:27:12,225:INFO:machine: AMD64
2023-06-19 21:27:12,225:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-19 21:27:12,225:INFO:Memory: svmem(total=17120436224, available=5344792576, percent=68.8, used=11775643648, free=5344792576)
2023-06-19 21:27:12,225:INFO:Physical Core: 4
2023-06-19 21:27:12,225:INFO:Logical Core: 4
2023-06-19 21:27:12,225:INFO:Checking libraries
2023-06-19 21:27:12,225:INFO:System:
2023-06-19 21:27:12,225:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-19 21:27:12,225:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-19 21:27:12,225:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-19 21:27:12,225:INFO:PyCaret required dependencies:
2023-06-19 21:27:12,226:INFO:                 pip: 21.2.3
2023-06-19 21:27:12,226:INFO:          setuptools: 57.4.0
2023-06-19 21:27:12,226:INFO:             pycaret: 3.0.2
2023-06-19 21:27:12,226:INFO:             IPython: 7.28.0
2023-06-19 21:27:12,226:INFO:          ipywidgets: 8.0.6
2023-06-19 21:27:12,226:INFO:                tqdm: 4.64.0
2023-06-19 21:27:12,226:INFO:               numpy: 1.22.4
2023-06-19 21:27:12,226:INFO:              pandas: 1.3.5
2023-06-19 21:27:12,226:INFO:              jinja2: 3.1.2
2023-06-19 21:27:12,226:INFO:               scipy: 1.7.1
2023-06-19 21:27:12,226:INFO:              joblib: 1.2.0
2023-06-19 21:27:12,226:INFO:             sklearn: 1.1.0
2023-06-19 21:27:12,226:INFO:                pyod: 1.0.9
2023-06-19 21:27:12,226:INFO:            imblearn: 0.9.1
2023-06-19 21:27:12,226:INFO:   category_encoders: 2.6.1
2023-06-19 21:27:12,226:INFO:            lightgbm: 3.3.5
2023-06-19 21:27:12,226:INFO:               numba: 0.57.0
2023-06-19 21:27:12,226:INFO:            requests: 2.31.0
2023-06-19 21:27:12,226:INFO:          matplotlib: 3.4.3
2023-06-19 21:27:12,226:INFO:          scikitplot: 0.3.7
2023-06-19 21:27:12,226:INFO:         yellowbrick: 1.5
2023-06-19 21:27:12,226:INFO:              plotly: 5.8.0
2023-06-19 21:27:12,227:INFO:             kaleido: 0.2.1
2023-06-19 21:27:12,227:INFO:         statsmodels: 0.14.0
2023-06-19 21:27:12,227:INFO:              sktime: 0.17.0
2023-06-19 21:27:12,227:INFO:               tbats: 1.1.3
2023-06-19 21:27:12,227:INFO:            pmdarima: 2.0.3
2023-06-19 21:27:12,227:INFO:              psutil: 5.9.0
2023-06-19 21:27:12,227:INFO:PyCaret optional dependencies:
2023-06-19 21:27:12,227:INFO:                shap: Not installed
2023-06-19 21:27:12,228:INFO:           interpret: Not installed
2023-06-19 21:27:12,228:INFO:                umap: Not installed
2023-06-19 21:27:12,228:INFO:    pandas_profiling: Not installed
2023-06-19 21:27:12,228:INFO:  explainerdashboard: Not installed
2023-06-19 21:27:12,228:INFO:             autoviz: Not installed
2023-06-19 21:27:12,228:INFO:           fairlearn: Not installed
2023-06-19 21:27:12,228:INFO:             xgboost: Not installed
2023-06-19 21:27:12,228:INFO:            catboost: Not installed
2023-06-19 21:27:12,228:INFO:              kmodes: Not installed
2023-06-19 21:27:12,228:INFO:             mlxtend: Not installed
2023-06-19 21:27:12,228:INFO:       statsforecast: Not installed
2023-06-19 21:27:12,228:INFO:        tune_sklearn: Not installed
2023-06-19 21:27:12,229:INFO:                 ray: Not installed
2023-06-19 21:27:12,229:INFO:            hyperopt: Not installed
2023-06-19 21:27:12,229:INFO:              optuna: Not installed
2023-06-19 21:27:12,229:INFO:               skopt: Not installed
2023-06-19 21:27:12,229:INFO:              mlflow: Not installed
2023-06-19 21:27:12,229:INFO:              gradio: Not installed
2023-06-19 21:27:12,229:INFO:             fastapi: Not installed
2023-06-19 21:27:12,229:INFO:             uvicorn: Not installed
2023-06-19 21:27:12,229:INFO:              m2cgen: Not installed
2023-06-19 21:27:12,229:INFO:           evidently: Not installed
2023-06-19 21:27:12,229:INFO:               fugue: Not installed
2023-06-19 21:27:12,229:INFO:           streamlit: Not installed
2023-06-19 21:27:12,229:INFO:             prophet: Not installed
2023-06-19 21:27:12,229:INFO:None
2023-06-19 21:27:12,229:INFO:Set up data.
2023-06-19 21:27:12,305:INFO:Set up train/test split.
2023-06-19 21:27:12,305:INFO:Set up data.
2023-06-19 21:27:12,350:INFO:Set up index.
2023-06-19 21:27:12,352:INFO:Set up folding strategy.
2023-06-19 21:27:12,352:INFO:Assigning column types.
2023-06-19 21:27:12,369:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-19 21:27:12,425:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 21:27:12,426:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:27:12,459:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,513:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-19 21:27:12,513:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:27:12,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,547:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-19 21:27:12,599:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:27:12,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-19 21:27:12,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,719:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-19 21:27:12,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:12,891:INFO:Preparing preprocessing pipeline...
2023-06-19 21:27:12,893:INFO:Set up simple imputation.
2023-06-19 21:27:12,910:INFO:Set up encoding of ordinal features.
2023-06-19 21:27:12,926:INFO:Set up encoding of categorical features.
2023-06-19 21:27:12,926:INFO:Set up feature selection.
2023-06-19 21:27:13,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:13,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:13,033:INFO:Set up column name cleaning.
2023-06-19 21:27:13,699:INFO:Finished creating preprocessing pipeline.
2023-06-19 21:27:13,756:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              st...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001E497CF7160>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-19 21:27:13,756:INFO:Creating final display dataframe.
2023-06-19 21:27:14,597:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 1
8              Ordinal features                 3
9              Numeric features                 8
10         Categorical features                10
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                -1
16              Encoding method              None
17            Feature selection              True
18     Feature selection method        univariate
19  Feature selection estimator          lightgbm
20  Number of features selected                15
21               Fold Generator   StratifiedKFold
22                  Fold Number                10
23                     CPU Jobs                -1
24                      Use GPU             False
25               Log Experiment             False
26              Experiment Name  clf-default-name
27                          USI              a32b
2023-06-19 21:27:14,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:14,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:14,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:14,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-19 21:27:14,865:INFO:setup() successfully completed in 3.85s...............
2023-06-19 21:27:24,583:INFO:Initializing create_model()
2023-06-19 21:27:24,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 21:27:24,583:INFO:Checking exceptions
2023-06-19 21:27:24,617:INFO:Importing libraries
2023-06-19 21:27:24,618:INFO:Copying training dataset
2023-06-19 21:27:24,639:INFO:Defining folds
2023-06-19 21:27:24,639:INFO:Declaring metric variables
2023-06-19 21:27:24,643:INFO:Importing untrained model
2023-06-19 21:27:24,649:INFO:Logistic Regression Imported successfully
2023-06-19 21:27:24,661:INFO:Starting cross validation
2023-06-19 21:27:24,666:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 21:27:36,631:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-06-19 21:27:42,268:INFO:Calculating mean and std
2023-06-19 21:27:42,269:INFO:Creating metrics dataframe
2023-06-19 21:27:42,277:INFO:Finalizing model
2023-06-19 21:27:44,854:INFO:Uploading results into container
2023-06-19 21:27:44,855:INFO:Uploading model into container now
2023-06-19 21:27:44,874:INFO:_master_model_container: 1
2023-06-19 21:27:44,874:INFO:_display_container: 2
2023-06-19 21:27:44,875:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-19 21:27:44,875:INFO:create_model() successfully completed......................................
2023-06-19 21:27:45,173:INFO:Initializing evaluate_model()
2023-06-19 21:27:45,173:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 21:27:45,227:INFO:Initializing plot_model()
2023-06-19 21:27:45,227:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:27:45,227:INFO:Checking exceptions
2023-06-19 21:27:45,242:INFO:Preloading libraries
2023-06-19 21:27:45,243:INFO:Copying training dataset
2023-06-19 21:27:45,243:INFO:Plot type: pipeline
2023-06-19 21:27:45,408:INFO:Visual Rendered Successfully
2023-06-19 21:27:45,490:INFO:plot_model() successfully completed......................................
2023-06-19 21:28:04,261:INFO:Initializing plot_model()
2023-06-19 21:28:04,261:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:28:04,262:INFO:Checking exceptions
2023-06-19 21:28:04,273:INFO:Preloading libraries
2023-06-19 21:28:04,273:INFO:Copying training dataset
2023-06-19 21:28:04,274:INFO:Plot type: auc
2023-06-19 21:28:04,576:INFO:Fitting Model
2023-06-19 21:28:04,577:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 21:28:04,578:INFO:Scoring test/hold-out set
2023-06-19 21:28:04,893:INFO:Visual Rendered Successfully
2023-06-19 21:28:05,047:INFO:plot_model() successfully completed......................................
2023-06-19 21:28:16,070:INFO:Initializing plot_model()
2023-06-19 21:28:16,070:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:28:16,070:INFO:Checking exceptions
2023-06-19 21:28:16,079:INFO:Preloading libraries
2023-06-19 21:28:16,079:INFO:Copying training dataset
2023-06-19 21:28:16,079:INFO:Plot type: parameter
2023-06-19 21:28:16,083:INFO:Visual Rendered Successfully
2023-06-19 21:28:16,163:INFO:plot_model() successfully completed......................................
2023-06-19 21:28:16,659:INFO:Initializing plot_model()
2023-06-19 21:28:16,659:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:28:16,659:INFO:Checking exceptions
2023-06-19 21:28:16,668:INFO:Preloading libraries
2023-06-19 21:28:16,669:INFO:Copying training dataset
2023-06-19 21:28:16,669:INFO:Plot type: auc
2023-06-19 21:28:16,915:INFO:Fitting Model
2023-06-19 21:28:16,916:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 21:28:16,917:INFO:Scoring test/hold-out set
2023-06-19 21:28:17,141:INFO:Visual Rendered Successfully
2023-06-19 21:28:17,249:INFO:plot_model() successfully completed......................................
2023-06-19 21:28:20,427:INFO:Initializing plot_model()
2023-06-19 21:28:20,427:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:28:20,427:INFO:Checking exceptions
2023-06-19 21:28:20,435:INFO:Preloading libraries
2023-06-19 21:28:20,436:INFO:Copying training dataset
2023-06-19 21:28:20,436:INFO:Plot type: confusion_matrix
2023-06-19 21:28:20,602:INFO:Fitting Model
2023-06-19 21:28:20,602:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-19 21:28:20,603:INFO:Scoring test/hold-out set
2023-06-19 21:28:20,736:INFO:Visual Rendered Successfully
2023-06-19 21:28:20,829:INFO:plot_model() successfully completed......................................
2023-06-19 21:28:24,286:INFO:Initializing predict_model()
2023-06-19 21:28:24,286:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E49D38EF70>)
2023-06-19 21:28:24,286:INFO:Checking exceptions
2023-06-19 21:28:24,286:INFO:Preloading libraries
2023-06-19 21:28:35,773:INFO:Initializing create_model()
2023-06-19 21:28:35,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 21:28:35,773:INFO:Checking exceptions
2023-06-19 21:28:35,809:INFO:Importing libraries
2023-06-19 21:28:35,809:INFO:Copying training dataset
2023-06-19 21:28:35,835:INFO:Defining folds
2023-06-19 21:28:35,835:INFO:Declaring metric variables
2023-06-19 21:28:35,839:INFO:Importing untrained model
2023-06-19 21:28:35,845:INFO:SVM - Linear Kernel Imported successfully
2023-06-19 21:28:35,853:INFO:Starting cross validation
2023-06-19 21:28:35,857:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 21:28:37,627:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:37,654:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:37,825:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:37,843:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:41,454:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:41,553:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:41,572:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:41,738:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:44,548:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:44,641:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-19 21:28:50,202:INFO:Calculating mean and std
2023-06-19 21:28:50,203:INFO:Creating metrics dataframe
2023-06-19 21:28:50,212:INFO:Finalizing model
2023-06-19 21:28:52,398:INFO:Uploading results into container
2023-06-19 21:28:52,399:INFO:Uploading model into container now
2023-06-19 21:28:52,419:INFO:_master_model_container: 2
2023-06-19 21:28:52,419:INFO:_display_container: 4
2023-06-19 21:28:52,420:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-19 21:28:52,420:INFO:create_model() successfully completed......................................
2023-06-19 21:28:52,568:INFO:Initializing calibrate_model()
2023-06-19 21:28:52,568:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-19 21:28:52,568:INFO:Checking exceptions
2023-06-19 21:28:52,588:INFO:Preloading libraries
2023-06-19 21:28:52,588:INFO:Preparing display monitor
2023-06-19 21:28:52,654:INFO:Getting model name
2023-06-19 21:28:52,654:INFO:Base model : SVM - Linear Kernel
2023-06-19 21:28:52,665:INFO:Importing untrained CalibratedClassifierCV
2023-06-19 21:28:52,666:INFO:SubProcess create_model() called ==================================
2023-06-19 21:28:52,667:INFO:Initializing create_model()
2023-06-19 21:28:52,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E49D3062E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-19 21:28:52,668:INFO:Checking exceptions
2023-06-19 21:28:52,668:INFO:Importing libraries
2023-06-19 21:28:52,668:INFO:Copying training dataset
2023-06-19 21:28:52,714:INFO:Defining folds
2023-06-19 21:28:52,714:INFO:Declaring metric variables
2023-06-19 21:28:52,721:INFO:Importing untrained model
2023-06-19 21:28:52,721:INFO:Declaring custom model
2023-06-19 21:28:52,729:INFO:SVM - Linear Kernel Imported successfully
2023-06-19 21:28:52,782:INFO:Starting cross validation
2023-06-19 21:28:52,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 21:29:10,460:INFO:Calculating mean and std
2023-06-19 21:29:10,463:INFO:Creating metrics dataframe
2023-06-19 21:29:10,470:INFO:Finalizing model
2023-06-19 21:29:13,767:INFO:Uploading results into container
2023-06-19 21:29:13,767:INFO:Uploading model into container now
2023-06-19 21:29:13,768:INFO:_master_model_container: 3
2023-06-19 21:29:13,768:INFO:_display_container: 5
2023-06-19 21:29:13,771:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 21:29:13,771:INFO:create_model() successfully completed......................................
2023-06-19 21:29:13,855:INFO:SubProcess create_model() end ==================================
2023-06-19 21:29:13,883:INFO:_master_model_container: 3
2023-06-19 21:29:13,884:INFO:_display_container: 5
2023-06-19 21:29:13,885:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-19 21:29:13,885:INFO:calibrate_model() successfully completed......................................
2023-06-19 21:29:13,989:INFO:Initializing evaluate_model()
2023-06-19 21:29:13,990:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 21:29:14,019:INFO:Initializing plot_model()
2023-06-19 21:29:14,019:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:29:14,019:INFO:Checking exceptions
2023-06-19 21:29:14,029:INFO:Preloading libraries
2023-06-19 21:29:14,029:INFO:Copying training dataset
2023-06-19 21:29:14,029:INFO:Plot type: pipeline
2023-06-19 21:29:14,278:INFO:Visual Rendered Successfully
2023-06-19 21:29:14,358:INFO:plot_model() successfully completed......................................
2023-06-19 21:29:21,548:INFO:Initializing plot_model()
2023-06-19 21:29:21,548:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:29:21,548:INFO:Checking exceptions
2023-06-19 21:29:22,861:INFO:Initializing plot_model()
2023-06-19 21:29:22,862:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:29:22,863:INFO:Checking exceptions
2023-06-19 21:29:22,872:INFO:Preloading libraries
2023-06-19 21:29:22,872:INFO:Copying training dataset
2023-06-19 21:29:22,872:INFO:Plot type: parameter
2023-06-19 21:29:22,877:INFO:Visual Rendered Successfully
2023-06-19 21:29:24,038:INFO:plot_model() successfully completed......................................
2023-06-19 21:29:41,645:INFO:Initializing create_model()
2023-06-19 21:29:41,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-19 21:29:41,646:INFO:Checking exceptions
2023-06-19 21:29:41,679:INFO:Importing libraries
2023-06-19 21:29:41,679:INFO:Copying training dataset
2023-06-19 21:29:41,704:INFO:Defining folds
2023-06-19 21:29:41,704:INFO:Declaring metric variables
2023-06-19 21:29:41,711:INFO:Importing untrained model
2023-06-19 21:29:41,711:INFO:Declaring custom model
2023-06-19 21:29:41,732:INFO:Random Forest Classifier Imported successfully
2023-06-19 21:29:41,743:INFO:Starting cross validation
2023-06-19 21:29:41,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-19 21:35:59,799:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-19 21:37:42,306:INFO:Calculating mean and std
2023-06-19 21:37:42,307:INFO:Creating metrics dataframe
2023-06-19 21:37:42,317:INFO:Finalizing model
2023-06-19 21:38:43,338:INFO:Uploading results into container
2023-06-19 21:38:43,339:INFO:Uploading model into container now
2023-06-19 21:38:43,354:INFO:_master_model_container: 4
2023-06-19 21:38:43,354:INFO:_display_container: 6
2023-06-19 21:38:43,355:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-19 21:38:43,355:INFO:create_model() successfully completed......................................
2023-06-19 21:38:43,437:INFO:Initializing evaluate_model()
2023-06-19 21:38:43,437:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-19 21:38:43,462:INFO:Initializing plot_model()
2023-06-19 21:38:43,462:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=150, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E49CFD7430>, system=True)
2023-06-19 21:38:43,463:INFO:Checking exceptions
2023-06-19 21:38:43,490:INFO:Preloading libraries
2023-06-19 21:38:43,502:INFO:Copying training dataset
2023-06-19 21:38:43,502:INFO:Plot type: pipeline
2023-06-19 21:38:43,633:INFO:Visual Rendered Successfully
2023-06-19 21:38:43,709:INFO:plot_model() successfully completed......................................
2023-06-20 13:29:19,709:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 13:29:19,709:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 13:29:19,709:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 13:29:19,709:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 13:29:22,114:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-20 13:29:23,965:INFO:PyCaret ClassificationExperiment
2023-06-20 13:29:23,965:INFO:Logging name: clf-default-name
2023-06-20 13:29:23,965:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-20 13:29:23,966:INFO:version 3.0.2
2023-06-20 13:29:23,966:INFO:Initializing setup()
2023-06-20 13:29:23,966:INFO:self.USI: d187
2023-06-20 13:29:23,966:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'gpu_param', 'target_param', 'data', '_ml_usecase', 'fix_imbalance', 'html_param', 'memory', 'n_jobs_param', 'pipeline', 'y', 'logging_param', 'X', 'log_plots_param', 'y_train', 'idx', '_available_plots', 'X_test', 'y_test', 'X_train', 'USI', 'fold_shuffle_param', 'seed', 'exp_name_log', 'fold_generator', 'gpu_n_jobs_param', 'is_multiclass'}
2023-06-20 13:29:23,966:INFO:Checking environment
2023-06-20 13:29:23,966:INFO:python_version: 3.9.7
2023-06-20 13:29:23,966:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-20 13:29:23,966:INFO:machine: AMD64
2023-06-20 13:29:23,966:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-20 13:29:23,966:INFO:Memory: svmem(total=17120436224, available=8149962752, percent=52.4, used=8970473472, free=8149962752)
2023-06-20 13:29:23,966:INFO:Physical Core: 4
2023-06-20 13:29:23,966:INFO:Logical Core: 4
2023-06-20 13:29:23,967:INFO:Checking libraries
2023-06-20 13:29:23,967:INFO:System:
2023-06-20 13:29:23,967:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-20 13:29:23,967:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-20 13:29:23,967:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-20 13:29:23,967:INFO:PyCaret required dependencies:
2023-06-20 13:29:23,967:INFO:                 pip: 21.2.3
2023-06-20 13:29:23,967:INFO:          setuptools: 57.4.0
2023-06-20 13:29:23,967:INFO:             pycaret: 3.0.2
2023-06-20 13:29:23,967:INFO:             IPython: 7.28.0
2023-06-20 13:29:23,967:INFO:          ipywidgets: 8.0.6
2023-06-20 13:29:23,967:INFO:                tqdm: 4.64.0
2023-06-20 13:29:23,967:INFO:               numpy: 1.22.4
2023-06-20 13:29:23,967:INFO:              pandas: 1.3.5
2023-06-20 13:29:23,967:INFO:              jinja2: 3.1.2
2023-06-20 13:29:23,968:INFO:               scipy: 1.7.1
2023-06-20 13:29:23,968:INFO:              joblib: 1.2.0
2023-06-20 13:29:23,968:INFO:             sklearn: 1.1.0
2023-06-20 13:29:23,968:INFO:                pyod: 1.0.9
2023-06-20 13:29:23,968:INFO:            imblearn: 0.9.1
2023-06-20 13:29:23,968:INFO:   category_encoders: 2.6.1
2023-06-20 13:29:23,968:INFO:            lightgbm: 3.3.5
2023-06-20 13:29:23,968:INFO:               numba: 0.57.0
2023-06-20 13:29:23,968:INFO:            requests: 2.31.0
2023-06-20 13:29:23,968:INFO:          matplotlib: 3.4.3
2023-06-20 13:29:23,968:INFO:          scikitplot: 0.3.7
2023-06-20 13:29:23,968:INFO:         yellowbrick: 1.5
2023-06-20 13:29:23,968:INFO:              plotly: 5.8.0
2023-06-20 13:29:23,968:INFO:             kaleido: 0.2.1
2023-06-20 13:29:23,968:INFO:         statsmodels: 0.14.0
2023-06-20 13:29:23,969:INFO:              sktime: 0.17.0
2023-06-20 13:29:23,969:INFO:               tbats: 1.1.3
2023-06-20 13:29:23,969:INFO:            pmdarima: 2.0.3
2023-06-20 13:29:23,969:INFO:              psutil: 5.9.0
2023-06-20 13:29:23,969:INFO:PyCaret optional dependencies:
2023-06-20 13:29:23,994:INFO:                shap: Not installed
2023-06-20 13:29:23,994:INFO:           interpret: Not installed
2023-06-20 13:29:23,994:INFO:                umap: Not installed
2023-06-20 13:29:23,994:INFO:    pandas_profiling: Not installed
2023-06-20 13:29:23,994:INFO:  explainerdashboard: Not installed
2023-06-20 13:29:23,994:INFO:             autoviz: Not installed
2023-06-20 13:29:23,994:INFO:           fairlearn: Not installed
2023-06-20 13:29:23,994:INFO:             xgboost: Not installed
2023-06-20 13:29:23,994:INFO:            catboost: Not installed
2023-06-20 13:29:23,994:INFO:              kmodes: Not installed
2023-06-20 13:29:23,994:INFO:             mlxtend: Not installed
2023-06-20 13:29:23,994:INFO:       statsforecast: Not installed
2023-06-20 13:29:23,995:INFO:        tune_sklearn: Not installed
2023-06-20 13:29:23,995:INFO:                 ray: Not installed
2023-06-20 13:29:23,995:INFO:            hyperopt: Not installed
2023-06-20 13:29:23,995:INFO:              optuna: Not installed
2023-06-20 13:29:23,995:INFO:               skopt: Not installed
2023-06-20 13:29:23,995:INFO:              mlflow: Not installed
2023-06-20 13:29:23,996:INFO:              gradio: Not installed
2023-06-20 13:29:23,996:INFO:             fastapi: Not installed
2023-06-20 13:29:23,996:INFO:             uvicorn: Not installed
2023-06-20 13:29:23,996:INFO:              m2cgen: Not installed
2023-06-20 13:29:23,997:INFO:           evidently: Not installed
2023-06-20 13:29:23,997:INFO:               fugue: Not installed
2023-06-20 13:29:23,998:INFO:           streamlit: Not installed
2023-06-20 13:29:23,998:INFO:             prophet: Not installed
2023-06-20 13:29:23,999:INFO:None
2023-06-20 13:29:23,999:INFO:Set up data.
2023-06-20 13:29:24,086:INFO:Set up train/test split.
2023-06-20 13:29:24,086:INFO:Set up data.
2023-06-20 13:29:24,120:INFO:Set up index.
2023-06-20 13:29:24,122:INFO:Set up folding strategy.
2023-06-20 13:29:24,123:INFO:Assigning column types.
2023-06-20 13:29:24,139:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-20 13:29:24,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 13:29:24,199:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 13:29:24,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,486:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 13:29:24,487:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 13:29:24,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,540:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-20 13:29:24,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 13:29:24,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 13:29:24,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,737:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-20 13:29:24,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:24,962:INFO:Preparing preprocessing pipeline...
2023-06-20 13:29:24,967:INFO:Set up simple imputation.
2023-06-20 13:29:24,986:INFO:Set up encoding of ordinal features.
2023-06-20 13:29:24,998:INFO:Set up encoding of categorical features.
2023-06-20 13:29:24,999:INFO:Set up feature selection.
2023-06-20 13:29:25,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:25,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:25,090:INFO:Set up column name cleaning.
2023-06-20 13:29:26,585:INFO:Finished creating preprocessing pipeline.
2023-06-20 13:29:26,637:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              st...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001AEE14F6EE0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-20 13:29:26,637:INFO:Creating final display dataframe.
2023-06-20 13:29:27,587:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 1
8              Ordinal features                 3
9              Numeric features                 8
10         Categorical features                10
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                -1
16              Encoding method              None
17            Feature selection              True
18     Feature selection method        univariate
19  Feature selection estimator          lightgbm
20  Number of features selected                15
21               Fold Generator   StratifiedKFold
22                  Fold Number                10
23                     CPU Jobs                -1
24                      Use GPU             False
25               Log Experiment             False
26              Experiment Name  clf-default-name
27                          USI              d187
2023-06-20 13:29:27,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:27,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:27,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:27,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 13:29:27,773:INFO:setup() successfully completed in 5.46s...............
2023-06-20 13:29:29,710:INFO:Initializing create_model()
2023-06-20 13:29:29,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 13:29:29,710:INFO:Checking exceptions
2023-06-20 13:29:29,749:INFO:Importing libraries
2023-06-20 13:29:29,749:INFO:Copying training dataset
2023-06-20 13:29:29,775:INFO:Defining folds
2023-06-20 13:29:29,775:INFO:Declaring metric variables
2023-06-20 13:29:29,779:INFO:Importing untrained model
2023-06-20 13:29:29,786:INFO:Logistic Regression Imported successfully
2023-06-20 13:29:29,796:INFO:Starting cross validation
2023-06-20 13:29:29,800:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 13:29:51,175:INFO:Calculating mean and std
2023-06-20 13:29:51,177:INFO:Creating metrics dataframe
2023-06-20 13:29:51,184:INFO:Finalizing model
2023-06-20 13:29:53,975:INFO:Uploading results into container
2023-06-20 13:29:53,977:INFO:Uploading model into container now
2023-06-20 13:29:53,995:INFO:_master_model_container: 1
2023-06-20 13:29:53,996:INFO:_display_container: 2
2023-06-20 13:29:53,996:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 13:29:53,996:INFO:create_model() successfully completed......................................
2023-06-20 13:29:54,097:INFO:Initializing evaluate_model()
2023-06-20 13:29:54,097:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 13:29:54,130:INFO:Initializing plot_model()
2023-06-20 13:29:54,130:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:29:54,130:INFO:Checking exceptions
2023-06-20 13:29:54,143:INFO:Preloading libraries
2023-06-20 13:29:54,143:INFO:Copying training dataset
2023-06-20 13:29:54,143:INFO:Plot type: pipeline
2023-06-20 13:29:54,373:INFO:Visual Rendered Successfully
2023-06-20 13:29:54,442:INFO:plot_model() successfully completed......................................
2023-06-20 13:29:59,767:INFO:Initializing plot_model()
2023-06-20 13:29:59,767:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:29:59,767:INFO:Checking exceptions
2023-06-20 13:29:59,777:INFO:Preloading libraries
2023-06-20 13:29:59,777:INFO:Copying training dataset
2023-06-20 13:29:59,777:INFO:Plot type: parameter
2023-06-20 13:29:59,781:INFO:Visual Rendered Successfully
2023-06-20 13:29:59,847:INFO:plot_model() successfully completed......................................
2023-06-20 13:30:00,748:INFO:Initializing plot_model()
2023-06-20 13:30:00,748:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:30:00,748:INFO:Checking exceptions
2023-06-20 13:30:00,758:INFO:Preloading libraries
2023-06-20 13:30:00,758:INFO:Copying training dataset
2023-06-20 13:30:00,758:INFO:Plot type: auc
2023-06-20 13:30:00,916:INFO:Fitting Model
2023-06-20 13:30:00,927:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 13:30:00,928:INFO:Scoring test/hold-out set
2023-06-20 13:30:01,140:INFO:Visual Rendered Successfully
2023-06-20 13:30:01,272:INFO:plot_model() successfully completed......................................
2023-06-20 13:30:07,612:INFO:Initializing plot_model()
2023-06-20 13:30:07,613:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:30:07,613:INFO:Checking exceptions
2023-06-20 13:30:07,622:INFO:Preloading libraries
2023-06-20 13:30:07,622:INFO:Copying training dataset
2023-06-20 13:30:07,622:INFO:Plot type: gain
2023-06-20 13:30:07,622:INFO:Generating predictions / predict_proba on X_test
2023-06-20 13:30:07,861:INFO:Visual Rendered Successfully
2023-06-20 13:30:07,926:INFO:plot_model() successfully completed......................................
2023-06-20 13:30:13,127:INFO:Initializing plot_model()
2023-06-20 13:30:13,127:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:30:13,127:INFO:Checking exceptions
2023-06-20 13:30:13,136:INFO:Preloading libraries
2023-06-20 13:30:13,136:INFO:Copying training dataset
2023-06-20 13:30:13,137:INFO:Plot type: lift
2023-06-20 13:30:13,137:INFO:Generating predictions / predict_proba on X_test
2023-06-20 13:30:13,362:INFO:Visual Rendered Successfully
2023-06-20 13:30:13,428:INFO:plot_model() successfully completed......................................
2023-06-20 13:30:15,813:INFO:Initializing plot_model()
2023-06-20 13:30:15,813:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:30:15,813:INFO:Checking exceptions
2023-06-20 13:30:15,822:INFO:Preloading libraries
2023-06-20 13:30:15,822:INFO:Copying training dataset
2023-06-20 13:30:15,822:INFO:Plot type: gain
2023-06-20 13:30:15,822:INFO:Generating predictions / predict_proba on X_test
2023-06-20 13:30:16,077:INFO:Visual Rendered Successfully
2023-06-20 13:30:16,164:INFO:plot_model() successfully completed......................................
2023-06-20 13:32:51,822:INFO:Initializing plot_model()
2023-06-20 13:32:51,822:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:32:51,822:INFO:Checking exceptions
2023-06-20 13:32:51,832:INFO:Preloading libraries
2023-06-20 13:32:51,833:INFO:Copying training dataset
2023-06-20 13:32:51,833:INFO:Plot type: auc
2023-06-20 13:32:51,989:INFO:Fitting Model
2023-06-20 13:32:51,989:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 13:32:51,990:INFO:Scoring test/hold-out set
2023-06-20 13:32:52,187:INFO:Visual Rendered Successfully
2023-06-20 13:32:52,276:INFO:plot_model() successfully completed......................................
2023-06-20 13:32:59,603:INFO:Initializing plot_model()
2023-06-20 13:32:59,604:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:32:59,604:INFO:Checking exceptions
2023-06-20 13:32:59,613:INFO:Preloading libraries
2023-06-20 13:32:59,613:INFO:Copying training dataset
2023-06-20 13:32:59,613:INFO:Plot type: gain
2023-06-20 13:32:59,614:INFO:Generating predictions / predict_proba on X_test
2023-06-20 13:32:59,834:INFO:Visual Rendered Successfully
2023-06-20 13:32:59,921:INFO:plot_model() successfully completed......................................
2023-06-20 13:33:48,613:INFO:Initializing plot_model()
2023-06-20 13:33:48,613:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:33:48,613:INFO:Checking exceptions
2023-06-20 13:33:48,623:INFO:Preloading libraries
2023-06-20 13:33:48,623:INFO:Copying training dataset
2023-06-20 13:33:48,623:INFO:Plot type: lift
2023-06-20 13:33:48,624:INFO:Generating predictions / predict_proba on X_test
2023-06-20 13:33:48,887:INFO:Visual Rendered Successfully
2023-06-20 13:33:49,014:INFO:plot_model() successfully completed......................................
2023-06-20 13:40:56,616:INFO:Initializing plot_model()
2023-06-20 13:40:56,616:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 13:40:56,616:INFO:Checking exceptions
2023-06-20 13:40:56,626:INFO:Preloading libraries
2023-06-20 13:40:56,627:INFO:Copying training dataset
2023-06-20 13:40:56,627:INFO:Plot type: gain
2023-06-20 13:40:56,627:INFO:Generating predictions / predict_proba on X_test
2023-06-20 13:40:56,840:INFO:Visual Rendered Successfully
2023-06-20 13:40:56,912:INFO:plot_model() successfully completed......................................
2023-06-20 14:16:37,027:INFO:Initializing predict_model()
2023-06-20 14:16:37,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AEEF5C23A0>)
2023-06-20 14:16:37,027:INFO:Checking exceptions
2023-06-20 14:16:37,027:INFO:Preloading libraries
2023-06-20 14:16:44,509:INFO:Initializing create_model()
2023-06-20 14:16:44,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 14:16:44,510:INFO:Checking exceptions
2023-06-20 14:16:44,545:INFO:Importing libraries
2023-06-20 14:16:44,545:INFO:Copying training dataset
2023-06-20 14:16:44,571:INFO:Defining folds
2023-06-20 14:16:44,571:INFO:Declaring metric variables
2023-06-20 14:16:44,593:INFO:Importing untrained model
2023-06-20 14:16:44,594:INFO:Declaring custom model
2023-06-20 14:16:44,599:INFO:Random Forest Classifier Imported successfully
2023-06-20 14:16:44,610:INFO:Starting cross validation
2023-06-20 14:16:44,612:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 14:25:16,260:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-20 14:27:30,011:INFO:Calculating mean and std
2023-06-20 14:27:30,013:INFO:Creating metrics dataframe
2023-06-20 14:27:30,036:INFO:Finalizing model
2023-06-20 14:28:53,851:INFO:Uploading results into container
2023-06-20 14:28:53,852:INFO:Uploading model into container now
2023-06-20 14:28:53,867:INFO:_master_model_container: 2
2023-06-20 14:28:53,867:INFO:_display_container: 4
2023-06-20 14:28:53,868:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-20 14:28:53,868:INFO:create_model() successfully completed......................................
2023-06-20 14:28:53,960:INFO:Initializing tune_model()
2023-06-20 14:28:53,960:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, n_iter=5, custom_grid={'n_estimators': [25], 'max_depth': [2, 5, 8, 15], 'min_samples_split': [2, 5, 10], 'min_samples_leaf': [2, 3, 4, 5], 'criterion': ['gini', 'entropy']}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>)
2023-06-20 14:28:53,960:INFO:Checking exceptions
2023-06-20 14:28:54,001:INFO:Copying training dataset
2023-06-20 14:28:54,017:INFO:Checking base model
2023-06-20 14:28:54,017:INFO:Base model : Random Forest Classifier
2023-06-20 14:28:54,021:INFO:Declaring metric variables
2023-06-20 14:28:54,027:INFO:Defining Hyperparameters
2023-06-20 14:28:54,096:INFO:custom_grid: {'actual_estimator__n_estimators': [25], 'actual_estimator__max_depth': [2, 5, 8, 15], 'actual_estimator__min_samples_split': [2, 5, 10], 'actual_estimator__min_samples_leaf': [2, 3, 4, 5], 'actual_estimator__criterion': ['gini', 'entropy']}
2023-06-20 14:28:54,097:INFO:Tuning with n_jobs=-1
2023-06-20 14:28:54,097:INFO:Initializing RandomizedSearchCV
2023-06-20 14:31:46,954:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-20 14:37:31,417:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-20 14:38:19,859:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-20 14:39:33,534:INFO:best_params: {'actual_estimator__n_estimators': 25, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'entropy'}
2023-06-20 14:39:33,535:INFO:Hyperparameter search completed
2023-06-20 14:39:33,536:INFO:SubProcess create_model() called ==================================
2023-06-20 14:39:33,536:INFO:Initializing create_model()
2023-06-20 14:39:33,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AEEF6B9CD0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 25, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_depth': 8, 'criterion': 'entropy'})
2023-06-20 14:39:33,537:INFO:Checking exceptions
2023-06-20 14:39:33,537:INFO:Importing libraries
2023-06-20 14:39:33,537:INFO:Copying training dataset
2023-06-20 14:39:33,562:INFO:Defining folds
2023-06-20 14:39:33,562:INFO:Declaring metric variables
2023-06-20 14:39:33,565:INFO:Importing untrained model
2023-06-20 14:39:33,566:INFO:Declaring custom model
2023-06-20 14:39:33,571:INFO:Random Forest Classifier Imported successfully
2023-06-20 14:39:33,579:INFO:Starting cross validation
2023-06-20 14:39:33,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 14:39:46,075:INFO:Calculating mean and std
2023-06-20 14:39:46,076:INFO:Creating metrics dataframe
2023-06-20 14:39:46,086:INFO:Finalizing model
2023-06-20 14:40:09,212:INFO:Uploading results into container
2023-06-20 14:40:09,213:INFO:Uploading model into container now
2023-06-20 14:40:09,214:INFO:_master_model_container: 3
2023-06-20 14:40:09,214:INFO:_display_container: 5
2023-06-20 14:40:09,215:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=8, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=25, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-20 14:40:09,217:INFO:create_model() successfully completed......................................
2023-06-20 14:40:09,326:INFO:SubProcess create_model() end ==================================
2023-06-20 14:40:09,326:INFO:choose_better activated
2023-06-20 14:40:09,331:INFO:SubProcess create_model() called ==================================
2023-06-20 14:40:09,331:INFO:Initializing create_model()
2023-06-20 14:40:09,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 14:40:09,332:INFO:Checking exceptions
2023-06-20 14:40:09,334:INFO:Importing libraries
2023-06-20 14:40:09,334:INFO:Copying training dataset
2023-06-20 14:40:09,360:INFO:Defining folds
2023-06-20 14:40:09,360:INFO:Declaring metric variables
2023-06-20 14:40:09,361:INFO:Importing untrained model
2023-06-20 14:40:09,361:INFO:Declaring custom model
2023-06-20 14:40:09,363:INFO:Random Forest Classifier Imported successfully
2023-06-20 14:40:09,364:INFO:Starting cross validation
2023-06-20 14:40:09,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 14:40:24,608:INFO:Calculating mean and std
2023-06-20 14:40:24,609:INFO:Creating metrics dataframe
2023-06-20 14:40:24,612:INFO:Finalizing model
2023-06-20 14:40:26,534:INFO:Uploading results into container
2023-06-20 14:40:26,535:INFO:Uploading model into container now
2023-06-20 14:40:26,535:INFO:_master_model_container: 4
2023-06-20 14:40:26,535:INFO:_display_container: 6
2023-06-20 14:40:26,536:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-20 14:40:26,536:INFO:create_model() successfully completed......................................
2023-06-20 14:40:26,602:INFO:SubProcess create_model() end ==================================
2023-06-20 14:40:26,603:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False) result for Accuracy is 0.7718
2023-06-20 14:40:26,603:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='entropy', max_depth=8, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=25, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False) result for Accuracy is 0.7626
2023-06-20 14:40:26,603:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False) is best model
2023-06-20 14:40:26,604:INFO:choose_better completed
2023-06-20 14:40:26,604:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-20 14:40:26,620:INFO:_master_model_container: 4
2023-06-20 14:40:26,620:INFO:_display_container: 5
2023-06-20 14:40:26,621:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-20 14:40:26,621:INFO:tune_model() successfully completed......................................
2023-06-20 14:40:27,770:INFO:Initializing evaluate_model()
2023-06-20 14:40:27,770:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 14:40:27,798:INFO:Initializing plot_model()
2023-06-20 14:40:27,798:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 14:40:27,798:INFO:Checking exceptions
2023-06-20 14:40:27,829:INFO:Preloading libraries
2023-06-20 14:40:27,858:INFO:Copying training dataset
2023-06-20 14:40:27,858:INFO:Plot type: pipeline
2023-06-20 14:40:27,995:INFO:Visual Rendered Successfully
2023-06-20 14:40:28,063:INFO:plot_model() successfully completed......................................
2023-06-20 15:00:02,417:INFO:Initializing plot_model()
2023-06-20 15:00:02,417:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 15:00:02,417:INFO:Checking exceptions
2023-06-20 15:00:02,571:INFO:Preloading libraries
2023-06-20 15:00:02,602:INFO:Copying training dataset
2023-06-20 15:00:02,602:INFO:Plot type: parameter
2023-06-20 15:00:02,609:INFO:Visual Rendered Successfully
2023-06-20 15:00:02,713:INFO:plot_model() successfully completed......................................
2023-06-20 15:00:07,982:INFO:Initializing plot_model()
2023-06-20 15:00:07,983:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 15:00:07,983:INFO:Checking exceptions
2023-06-20 15:00:08,017:INFO:Preloading libraries
2023-06-20 15:00:08,041:INFO:Copying training dataset
2023-06-20 15:00:08,042:INFO:Plot type: auc
2023-06-20 15:00:08,210:INFO:Fitting Model
2023-06-20 15:00:08,211:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-20 15:00:08,212:INFO:Scoring test/hold-out set
2023-06-20 15:00:08,525:INFO:Visual Rendered Successfully
2023-06-20 15:00:08,605:INFO:plot_model() successfully completed......................................
2023-06-20 15:00:14,312:INFO:Initializing plot_model()
2023-06-20 15:00:14,312:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 15:00:14,312:INFO:Checking exceptions
2023-06-20 15:00:14,344:INFO:Preloading libraries
2023-06-20 15:00:14,370:INFO:Copying training dataset
2023-06-20 15:00:14,370:INFO:Plot type: confusion_matrix
2023-06-20 15:00:14,522:INFO:Fitting Model
2023-06-20 15:00:14,522:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-20 15:00:14,523:INFO:Scoring test/hold-out set
2023-06-20 15:00:14,769:INFO:Visual Rendered Successfully
2023-06-20 15:00:14,844:INFO:plot_model() successfully completed......................................
2023-06-20 15:07:18,857:INFO:Initializing create_model()
2023-06-20 15:07:18,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 15:07:18,858:INFO:Checking exceptions
2023-06-20 15:07:18,896:INFO:Importing libraries
2023-06-20 15:07:18,896:INFO:Copying training dataset
2023-06-20 15:07:18,921:INFO:Defining folds
2023-06-20 15:07:18,921:INFO:Declaring metric variables
2023-06-20 15:07:18,932:INFO:Importing untrained model
2023-06-20 15:07:18,932:INFO:Declaring custom model
2023-06-20 15:07:18,946:INFO:Random Forest Classifier Imported successfully
2023-06-20 15:07:18,957:INFO:Starting cross validation
2023-06-20 15:07:18,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 15:15:03,950:INFO:Calculating mean and std
2023-06-20 15:15:03,951:INFO:Creating metrics dataframe
2023-06-20 15:15:03,963:INFO:Finalizing model
2023-06-20 15:16:12,007:INFO:Uploading results into container
2023-06-20 15:16:12,007:INFO:Uploading model into container now
2023-06-20 15:16:12,028:INFO:_master_model_container: 5
2023-06-20 15:16:12,028:INFO:_display_container: 6
2023-06-20 15:16:12,028:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-20 15:16:12,028:INFO:create_model() successfully completed......................................
2023-06-20 15:16:12,145:INFO:Initializing evaluate_model()
2023-06-20 15:16:12,146:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 15:16:12,178:INFO:Initializing plot_model()
2023-06-20 15:16:12,179:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 15:16:12,179:INFO:Checking exceptions
2023-06-20 15:16:12,203:INFO:Preloading libraries
2023-06-20 15:16:12,212:INFO:Copying training dataset
2023-06-20 15:16:12,212:INFO:Plot type: pipeline
2023-06-20 15:16:12,363:INFO:Visual Rendered Successfully
2023-06-20 15:16:12,435:INFO:plot_model() successfully completed......................................
2023-06-20 15:16:37,899:INFO:Initializing plot_model()
2023-06-20 15:16:37,900:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 15:16:37,900:INFO:Checking exceptions
2023-06-20 15:16:37,929:INFO:Preloading libraries
2023-06-20 15:16:37,937:INFO:Copying training dataset
2023-06-20 15:16:37,937:INFO:Plot type: parameter
2023-06-20 15:16:37,941:INFO:Visual Rendered Successfully
2023-06-20 15:16:38,028:INFO:plot_model() successfully completed......................................
2023-06-20 15:16:43,200:INFO:Initializing plot_model()
2023-06-20 15:16:43,200:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 15:16:43,200:INFO:Checking exceptions
2023-06-20 15:16:43,231:INFO:Preloading libraries
2023-06-20 15:16:43,239:INFO:Copying training dataset
2023-06-20 15:16:43,239:INFO:Plot type: auc
2023-06-20 15:16:43,393:INFO:Fitting Model
2023-06-20 15:16:43,394:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-20 15:16:43,395:INFO:Scoring test/hold-out set
2023-06-20 15:16:43,669:INFO:Visual Rendered Successfully
2023-06-20 15:16:43,816:INFO:plot_model() successfully completed......................................
2023-06-20 15:17:19,241:INFO:Initializing plot_model()
2023-06-20 15:17:19,241:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 15:17:19,241:INFO:Checking exceptions
2023-06-20 15:17:19,273:INFO:Preloading libraries
2023-06-20 15:17:19,280:INFO:Copying training dataset
2023-06-20 15:17:19,280:INFO:Plot type: confusion_matrix
2023-06-20 15:17:19,432:INFO:Fitting Model
2023-06-20 15:17:19,433:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-20 15:17:19,434:INFO:Scoring test/hold-out set
2023-06-20 15:17:19,624:INFO:Visual Rendered Successfully
2023-06-20 15:17:19,707:INFO:plot_model() successfully completed......................................
2023-06-20 15:17:33,513:INFO:Initializing plot_model()
2023-06-20 15:17:33,513:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AEE114CC40>, system=True)
2023-06-20 15:17:33,513:INFO:Checking exceptions
2023-06-20 15:17:33,542:INFO:Preloading libraries
2023-06-20 15:17:33,549:INFO:Copying training dataset
2023-06-20 15:17:33,549:INFO:Plot type: feature_all
2023-06-20 15:17:33,595:WARNING:No coef_ found. Trying feature_importances_
2023-06-20 15:17:33,823:INFO:Visual Rendered Successfully
2023-06-20 15:17:33,894:INFO:plot_model() successfully completed......................................
2023-06-20 15:31:40,674:INFO:PyCaret ClassificationExperiment
2023-06-20 15:31:40,674:INFO:Logging name: clf-default-name
2023-06-20 15:31:40,674:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-20 15:31:40,674:INFO:version 3.0.2
2023-06-20 15:31:40,674:INFO:Initializing setup()
2023-06-20 15:31:40,674:INFO:self.USI: 20fc
2023-06-20 15:31:40,674:INFO:self._variable_keys: {'exp_id', 'fold_groups_param', 'gpu_param', 'target_param', 'data', '_ml_usecase', 'fix_imbalance', 'html_param', 'memory', 'n_jobs_param', 'pipeline', 'y', 'logging_param', 'X', 'log_plots_param', 'y_train', 'idx', '_available_plots', 'X_test', 'y_test', 'X_train', 'USI', 'fold_shuffle_param', 'seed', 'exp_name_log', 'fold_generator', 'gpu_n_jobs_param', 'is_multiclass'}
2023-06-20 15:31:40,674:INFO:Checking environment
2023-06-20 15:31:40,674:INFO:python_version: 3.9.7
2023-06-20 15:31:40,674:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-20 15:31:40,675:INFO:machine: AMD64
2023-06-20 15:31:40,675:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-20 15:31:40,675:INFO:Memory: svmem(total=17120436224, available=6492864512, percent=62.1, used=10627571712, free=6492864512)
2023-06-20 15:31:40,675:INFO:Physical Core: 4
2023-06-20 15:31:40,675:INFO:Logical Core: 4
2023-06-20 15:31:40,675:INFO:Checking libraries
2023-06-20 15:31:40,675:INFO:System:
2023-06-20 15:31:40,675:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-20 15:31:40,675:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-20 15:31:40,675:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-20 15:31:40,675:INFO:PyCaret required dependencies:
2023-06-20 15:31:40,675:INFO:                 pip: 21.2.3
2023-06-20 15:31:40,675:INFO:          setuptools: 57.4.0
2023-06-20 15:31:40,675:INFO:             pycaret: 3.0.2
2023-06-20 15:31:40,675:INFO:             IPython: 7.28.0
2023-06-20 15:31:40,675:INFO:          ipywidgets: 8.0.6
2023-06-20 15:31:40,675:INFO:                tqdm: 4.64.0
2023-06-20 15:31:40,675:INFO:               numpy: 1.22.4
2023-06-20 15:31:40,676:INFO:              pandas: 1.3.5
2023-06-20 15:31:40,676:INFO:              jinja2: 3.1.2
2023-06-20 15:31:40,676:INFO:               scipy: 1.7.1
2023-06-20 15:31:40,676:INFO:              joblib: 1.2.0
2023-06-20 15:31:40,676:INFO:             sklearn: 1.1.0
2023-06-20 15:31:40,676:INFO:                pyod: 1.0.9
2023-06-20 15:31:40,676:INFO:            imblearn: 0.9.1
2023-06-20 15:31:40,676:INFO:   category_encoders: 2.6.1
2023-06-20 15:31:40,676:INFO:            lightgbm: 3.3.5
2023-06-20 15:31:40,676:INFO:               numba: 0.57.0
2023-06-20 15:31:40,676:INFO:            requests: 2.31.0
2023-06-20 15:31:40,676:INFO:          matplotlib: 3.4.3
2023-06-20 15:31:40,676:INFO:          scikitplot: 0.3.7
2023-06-20 15:31:40,676:INFO:         yellowbrick: 1.5
2023-06-20 15:31:40,676:INFO:              plotly: 5.8.0
2023-06-20 15:31:40,676:INFO:             kaleido: 0.2.1
2023-06-20 15:31:40,676:INFO:         statsmodels: 0.14.0
2023-06-20 15:31:40,676:INFO:              sktime: 0.17.0
2023-06-20 15:31:40,676:INFO:               tbats: 1.1.3
2023-06-20 15:31:40,676:INFO:            pmdarima: 2.0.3
2023-06-20 15:31:40,677:INFO:              psutil: 5.9.0
2023-06-20 15:31:40,677:INFO:PyCaret optional dependencies:
2023-06-20 15:31:40,677:INFO:                shap: Not installed
2023-06-20 15:31:40,677:INFO:           interpret: Not installed
2023-06-20 15:31:40,677:INFO:                umap: Not installed
2023-06-20 15:31:40,677:INFO:    pandas_profiling: Not installed
2023-06-20 15:31:40,677:INFO:  explainerdashboard: Not installed
2023-06-20 15:31:40,677:INFO:             autoviz: Not installed
2023-06-20 15:31:40,677:INFO:           fairlearn: Not installed
2023-06-20 15:31:40,677:INFO:             xgboost: Not installed
2023-06-20 15:31:40,677:INFO:            catboost: Not installed
2023-06-20 15:31:40,677:INFO:              kmodes: Not installed
2023-06-20 15:31:40,677:INFO:             mlxtend: Not installed
2023-06-20 15:31:40,677:INFO:       statsforecast: Not installed
2023-06-20 15:31:40,677:INFO:        tune_sklearn: Not installed
2023-06-20 15:31:40,677:INFO:                 ray: Not installed
2023-06-20 15:31:40,677:INFO:            hyperopt: Not installed
2023-06-20 15:31:40,677:INFO:              optuna: Not installed
2023-06-20 15:31:40,677:INFO:               skopt: Not installed
2023-06-20 15:31:40,677:INFO:              mlflow: Not installed
2023-06-20 15:31:40,678:INFO:              gradio: Not installed
2023-06-20 15:31:40,678:INFO:             fastapi: Not installed
2023-06-20 15:31:40,678:INFO:             uvicorn: Not installed
2023-06-20 15:31:40,678:INFO:              m2cgen: Not installed
2023-06-20 15:31:40,678:INFO:           evidently: Not installed
2023-06-20 15:31:40,678:INFO:               fugue: Not installed
2023-06-20 15:31:40,678:INFO:           streamlit: Not installed
2023-06-20 15:31:40,678:INFO:             prophet: Not installed
2023-06-20 15:31:40,678:INFO:None
2023-06-20 15:31:40,678:INFO:Set up data.
2023-06-20 15:31:40,781:INFO:Set up train/test split.
2023-06-20 15:31:40,781:INFO:Set up data.
2023-06-20 15:31:40,819:INFO:Set up index.
2023-06-20 15:31:40,821:INFO:Set up folding strategy.
2023-06-20 15:31:40,822:INFO:Assigning column types.
2023-06-20 15:31:40,838:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-20 15:31:40,892:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 15:31:40,893:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 15:31:40,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:40,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:40,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 15:31:40,985:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 15:31:41,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,020:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-20 15:31:41,077:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 15:31:41,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,175:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 15:31:41,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,220:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-20 15:31:41,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:41,410:INFO:Preparing preprocessing pipeline...
2023-06-20 15:31:41,413:INFO:Set up simple imputation.
2023-06-20 15:31:41,437:INFO:Set up encoding of ordinal features.
2023-06-20 15:31:41,451:INFO:Set up encoding of categorical features.
2023-06-20 15:31:41,452:INFO:Set up column name cleaning.
2023-06-20 15:31:41,904:INFO:Finished creating preprocessing pipeline.
2023-06-20 15:31:41,954:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              st...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-20 15:31:41,954:INFO:Creating final display dataframe.
2023-06-20 15:31:42,919:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7               Ignore features                 1
8              Ordinal features                 3
9              Numeric features                 8
10         Categorical features                10
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                -1
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              20fc
2023-06-20 15:31:43,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:43,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:43,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:43,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 15:31:43,127:INFO:setup() successfully completed in 3.94s...............
2023-06-20 16:19:18,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 16:19:18,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 16:19:18,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 16:19:18,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 16:19:18,704:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-20 16:19:20,423:INFO:PyCaret ClassificationExperiment
2023-06-20 16:19:20,423:INFO:Logging name: clf-default-name
2023-06-20 16:19:20,423:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-20 16:19:20,423:INFO:version 3.0.2
2023-06-20 16:19:20,423:INFO:Initializing setup()
2023-06-20 16:19:20,423:INFO:self.USI: 1c6f
2023-06-20 16:19:20,423:INFO:self._variable_keys: {'fix_imbalance', 'fold_generator', 'exp_id', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', '_available_plots', 'pipeline', 'html_param', 'USI', '_ml_usecase', 'gpu_param', 'X', 'log_plots_param', 'seed', 'fold_groups_param', 'y_test', 'data', 'n_jobs_param', 'memory', 'X_train', 'y', 'idx', 'y_train', 'target_param', 'logging_param', 'fold_shuffle_param', 'is_multiclass'}
2023-06-20 16:19:20,423:INFO:Checking environment
2023-06-20 16:19:20,423:INFO:python_version: 3.9.7
2023-06-20 16:19:20,423:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-20 16:19:20,423:INFO:machine: AMD64
2023-06-20 16:19:20,423:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-20 16:19:20,423:INFO:Memory: svmem(total=17120436224, available=6497517568, percent=62.0, used=10622918656, free=6497517568)
2023-06-20 16:19:20,423:INFO:Physical Core: 4
2023-06-20 16:19:20,423:INFO:Logical Core: 4
2023-06-20 16:19:20,423:INFO:Checking libraries
2023-06-20 16:19:20,423:INFO:System:
2023-06-20 16:19:20,423:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-20 16:19:20,423:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-20 16:19:20,423:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-20 16:19:20,423:INFO:PyCaret required dependencies:
2023-06-20 16:19:20,425:INFO:                 pip: 21.2.3
2023-06-20 16:19:20,425:INFO:          setuptools: 57.4.0
2023-06-20 16:19:20,425:INFO:             pycaret: 3.0.2
2023-06-20 16:19:20,425:INFO:             IPython: 7.28.0
2023-06-20 16:19:20,425:INFO:          ipywidgets: 8.0.6
2023-06-20 16:19:20,425:INFO:                tqdm: 4.64.0
2023-06-20 16:19:20,425:INFO:               numpy: 1.22.4
2023-06-20 16:19:20,425:INFO:              pandas: 1.3.5
2023-06-20 16:19:20,425:INFO:              jinja2: 3.1.2
2023-06-20 16:19:20,425:INFO:               scipy: 1.7.1
2023-06-20 16:19:20,425:INFO:              joblib: 1.2.0
2023-06-20 16:19:20,425:INFO:             sklearn: 1.1.0
2023-06-20 16:19:20,425:INFO:                pyod: 1.0.9
2023-06-20 16:19:20,425:INFO:            imblearn: 0.9.1
2023-06-20 16:19:20,425:INFO:   category_encoders: 2.6.1
2023-06-20 16:19:20,425:INFO:            lightgbm: 3.3.5
2023-06-20 16:19:20,425:INFO:               numba: 0.57.0
2023-06-20 16:19:20,425:INFO:            requests: 2.31.0
2023-06-20 16:19:20,426:INFO:          matplotlib: 3.4.3
2023-06-20 16:19:20,426:INFO:          scikitplot: 0.3.7
2023-06-20 16:19:20,426:INFO:         yellowbrick: 1.5
2023-06-20 16:19:20,426:INFO:              plotly: 5.8.0
2023-06-20 16:19:20,426:INFO:             kaleido: 0.2.1
2023-06-20 16:19:20,426:INFO:         statsmodels: 0.14.0
2023-06-20 16:19:20,426:INFO:              sktime: 0.17.0
2023-06-20 16:19:20,427:INFO:               tbats: 1.1.3
2023-06-20 16:19:20,427:INFO:            pmdarima: 2.0.3
2023-06-20 16:19:20,427:INFO:              psutil: 5.9.0
2023-06-20 16:19:20,427:INFO:PyCaret optional dependencies:
2023-06-20 16:19:20,448:INFO:                shap: Not installed
2023-06-20 16:19:20,448:INFO:           interpret: Not installed
2023-06-20 16:19:20,448:INFO:                umap: Not installed
2023-06-20 16:19:20,448:INFO:    pandas_profiling: Not installed
2023-06-20 16:19:20,448:INFO:  explainerdashboard: Not installed
2023-06-20 16:19:20,448:INFO:             autoviz: Not installed
2023-06-20 16:19:20,448:INFO:           fairlearn: Not installed
2023-06-20 16:19:20,448:INFO:             xgboost: Not installed
2023-06-20 16:19:20,448:INFO:            catboost: Not installed
2023-06-20 16:19:20,448:INFO:              kmodes: Not installed
2023-06-20 16:19:20,448:INFO:             mlxtend: Not installed
2023-06-20 16:19:20,448:INFO:       statsforecast: Not installed
2023-06-20 16:19:20,448:INFO:        tune_sklearn: Not installed
2023-06-20 16:19:20,448:INFO:                 ray: Not installed
2023-06-20 16:19:20,448:INFO:            hyperopt: Not installed
2023-06-20 16:19:20,449:INFO:              optuna: Not installed
2023-06-20 16:19:20,449:INFO:               skopt: Not installed
2023-06-20 16:19:20,449:INFO:              mlflow: Not installed
2023-06-20 16:19:20,449:INFO:              gradio: Not installed
2023-06-20 16:19:20,449:INFO:             fastapi: Not installed
2023-06-20 16:19:20,449:INFO:             uvicorn: Not installed
2023-06-20 16:19:20,449:INFO:              m2cgen: Not installed
2023-06-20 16:19:20,449:INFO:           evidently: Not installed
2023-06-20 16:19:20,449:INFO:               fugue: Not installed
2023-06-20 16:19:20,449:INFO:           streamlit: Not installed
2023-06-20 16:19:20,449:INFO:             prophet: Not installed
2023-06-20 16:19:20,449:INFO:None
2023-06-20 16:19:20,449:INFO:Set up data.
2023-06-20 16:19:20,477:INFO:Set up train/test split.
2023-06-20 16:19:20,477:INFO:Set up data.
2023-06-20 16:19:20,496:INFO:Set up index.
2023-06-20 16:19:20,497:INFO:Set up folding strategy.
2023-06-20 16:19:20,497:INFO:Assigning column types.
2023-06-20 16:19:20,526:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-20 16:19:20,580:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 16:19:20,582:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 16:19:20,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:20,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:20,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 16:19:20,764:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 16:19:20,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:20,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:20,798:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-20 16:19:20,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 16:19:20,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:20,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:20,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 16:19:20,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:20,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:20,974:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-20 16:19:21,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:21,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:21,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:21,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:21,151:INFO:Preparing preprocessing pipeline...
2023-06-20 16:19:21,155:INFO:Set up simple imputation.
2023-06-20 16:19:21,158:INFO:Set up column name cleaning.
2023-06-20 16:19:21,223:INFO:Finished creating preprocessing pipeline.
2023-06-20 16:19:21,230:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['job_entrepreneur',
                                             'job_housemaid', 'job_unemployed',
                                             'job_retired', 'job_self-employed',
                                             'marital_divorced', 'default',
                                             'loan_no', 'contact', 'month_may',
                                             'month_mar', 'previous',
                                             'poutcome_nonexistent',
                                             'poutcome_...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-20 16:19:21,230:INFO:Creating final display dataframe.
2023-06-20 16:19:21,405:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 16)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              1c6f
2023-06-20 16:19:21,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:21,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:21,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:21,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:19:21,628:INFO:setup() successfully completed in 2.81s...............
2023-06-20 16:19:48,938:INFO:Initializing create_model()
2023-06-20 16:19:48,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 16:19:48,939:INFO:Checking exceptions
2023-06-20 16:19:48,978:INFO:Importing libraries
2023-06-20 16:19:48,979:INFO:Copying training dataset
2023-06-20 16:19:49,010:INFO:Defining folds
2023-06-20 16:19:49,010:INFO:Declaring metric variables
2023-06-20 16:19:49,017:INFO:Importing untrained model
2023-06-20 16:19:49,022:INFO:Logistic Regression Imported successfully
2023-06-20 16:19:49,030:INFO:Starting cross validation
2023-06-20 16:19:49,031:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 16:20:06,232:INFO:Calculating mean and std
2023-06-20 16:20:06,234:INFO:Creating metrics dataframe
2023-06-20 16:20:06,241:INFO:Finalizing model
2023-06-20 16:20:08,192:INFO:Uploading results into container
2023-06-20 16:20:08,193:INFO:Uploading model into container now
2023-06-20 16:20:08,213:INFO:_master_model_container: 1
2023-06-20 16:20:08,214:INFO:_display_container: 2
2023-06-20 16:20:08,214:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 16:20:08,214:INFO:create_model() successfully completed......................................
2023-06-20 16:20:08,400:INFO:Initializing evaluate_model()
2023-06-20 16:20:08,400:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 16:20:08,437:INFO:Initializing plot_model()
2023-06-20 16:20:08,437:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:08,437:INFO:Checking exceptions
2023-06-20 16:20:08,458:INFO:Preloading libraries
2023-06-20 16:20:08,458:INFO:Copying training dataset
2023-06-20 16:20:08,458:INFO:Plot type: pipeline
2023-06-20 16:20:08,660:INFO:Visual Rendered Successfully
2023-06-20 16:20:08,730:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:16,178:INFO:Initializing plot_model()
2023-06-20 16:20:16,178:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:16,178:INFO:Checking exceptions
2023-06-20 16:20:16,189:INFO:Preloading libraries
2023-06-20 16:20:16,189:INFO:Copying training dataset
2023-06-20 16:20:16,189:INFO:Plot type: parameter
2023-06-20 16:20:16,193:INFO:Visual Rendered Successfully
2023-06-20 16:20:16,259:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:16,746:INFO:Initializing plot_model()
2023-06-20 16:20:16,746:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:16,746:INFO:Checking exceptions
2023-06-20 16:20:16,758:INFO:Preloading libraries
2023-06-20 16:20:16,758:INFO:Copying training dataset
2023-06-20 16:20:16,758:INFO:Plot type: auc
2023-06-20 16:20:16,912:INFO:Fitting Model
2023-06-20 16:20:16,914:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 16:20:16,915:INFO:Scoring test/hold-out set
2023-06-20 16:20:17,110:INFO:Visual Rendered Successfully
2023-06-20 16:20:17,183:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:22,347:INFO:Initializing plot_model()
2023-06-20 16:20:22,348:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:22,348:INFO:Checking exceptions
2023-06-20 16:20:22,359:INFO:Preloading libraries
2023-06-20 16:20:22,360:INFO:Copying training dataset
2023-06-20 16:20:22,360:INFO:Plot type: feature_all
2023-06-20 16:20:22,764:INFO:Visual Rendered Successfully
2023-06-20 16:20:22,839:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:30,419:INFO:Initializing plot_model()
2023-06-20 16:20:30,419:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:30,419:INFO:Checking exceptions
2023-06-20 16:20:30,432:INFO:Preloading libraries
2023-06-20 16:20:30,432:INFO:Copying training dataset
2023-06-20 16:20:30,432:INFO:Plot type: lift
2023-06-20 16:20:30,432:INFO:Generating predictions / predict_proba on X_test
2023-06-20 16:20:30,651:INFO:Visual Rendered Successfully
2023-06-20 16:20:30,718:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:34,779:INFO:Initializing plot_model()
2023-06-20 16:20:34,779:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:34,779:INFO:Checking exceptions
2023-06-20 16:20:34,791:INFO:Preloading libraries
2023-06-20 16:20:34,791:INFO:Copying training dataset
2023-06-20 16:20:34,791:INFO:Plot type: gain
2023-06-20 16:20:34,791:INFO:Generating predictions / predict_proba on X_test
2023-06-20 16:20:34,993:INFO:Visual Rendered Successfully
2023-06-20 16:20:35,056:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:38,234:INFO:Initializing plot_model()
2023-06-20 16:20:38,234:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:38,234:INFO:Checking exceptions
2023-06-20 16:20:38,246:INFO:Preloading libraries
2023-06-20 16:20:38,246:INFO:Copying training dataset
2023-06-20 16:20:38,246:INFO:Plot type: feature
2023-06-20 16:20:38,494:INFO:Visual Rendered Successfully
2023-06-20 16:20:38,557:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:48,986:INFO:Initializing plot_model()
2023-06-20 16:20:48,987:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:48,987:INFO:Checking exceptions
2023-06-20 16:20:48,998:INFO:Preloading libraries
2023-06-20 16:20:48,999:INFO:Copying training dataset
2023-06-20 16:20:48,999:INFO:Plot type: auc
2023-06-20 16:20:49,151:INFO:Fitting Model
2023-06-20 16:20:49,152:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 16:20:49,153:INFO:Scoring test/hold-out set
2023-06-20 16:20:49,352:INFO:Visual Rendered Successfully
2023-06-20 16:20:49,463:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:49,866:INFO:Initializing plot_model()
2023-06-20 16:20:49,866:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:49,866:INFO:Checking exceptions
2023-06-20 16:20:49,878:INFO:Preloading libraries
2023-06-20 16:20:49,878:INFO:Copying training dataset
2023-06-20 16:20:49,878:INFO:Plot type: confusion_matrix
2023-06-20 16:20:50,031:INFO:Fitting Model
2023-06-20 16:20:50,031:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 16:20:50,032:INFO:Scoring test/hold-out set
2023-06-20 16:20:50,144:INFO:Visual Rendered Successfully
2023-06-20 16:20:50,219:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:52,109:INFO:Initializing plot_model()
2023-06-20 16:20:52,110:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:52,110:INFO:Checking exceptions
2023-06-20 16:20:52,122:INFO:Preloading libraries
2023-06-20 16:20:52,122:INFO:Copying training dataset
2023-06-20 16:20:52,122:INFO:Plot type: auc
2023-06-20 16:20:52,324:INFO:Fitting Model
2023-06-20 16:20:52,325:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 16:20:52,326:INFO:Scoring test/hold-out set
2023-06-20 16:20:52,610:INFO:Visual Rendered Successfully
2023-06-20 16:20:52,704:INFO:plot_model() successfully completed......................................
2023-06-20 16:20:59,146:INFO:Initializing plot_model()
2023-06-20 16:20:59,146:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:20:59,147:INFO:Checking exceptions
2023-06-20 16:20:59,159:INFO:Preloading libraries
2023-06-20 16:20:59,159:INFO:Copying training dataset
2023-06-20 16:20:59,159:INFO:Plot type: pipeline
2023-06-20 16:20:59,246:INFO:Visual Rendered Successfully
2023-06-20 16:20:59,308:INFO:plot_model() successfully completed......................................
2023-06-20 16:21:53,345:INFO:Initializing plot_model()
2023-06-20 16:21:53,345:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:21:53,346:INFO:Checking exceptions
2023-06-20 16:21:53,357:INFO:Preloading libraries
2023-06-20 16:21:53,358:INFO:Copying training dataset
2023-06-20 16:21:53,358:INFO:Plot type: parameter
2023-06-20 16:21:53,362:INFO:Visual Rendered Successfully
2023-06-20 16:21:53,447:INFO:plot_model() successfully completed......................................
2023-06-20 16:21:53,716:INFO:Initializing plot_model()
2023-06-20 16:21:53,716:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:21:53,717:INFO:Checking exceptions
2023-06-20 16:21:53,728:INFO:Preloading libraries
2023-06-20 16:21:53,729:INFO:Copying training dataset
2023-06-20 16:21:53,729:INFO:Plot type: auc
2023-06-20 16:21:53,891:INFO:Fitting Model
2023-06-20 16:21:53,892:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 16:21:53,893:INFO:Scoring test/hold-out set
2023-06-20 16:21:54,096:INFO:Visual Rendered Successfully
2023-06-20 16:21:54,181:INFO:plot_model() successfully completed......................................
2023-06-20 16:21:54,602:INFO:Initializing plot_model()
2023-06-20 16:21:54,603:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2DCC10>, system=True)
2023-06-20 16:21:54,603:INFO:Checking exceptions
2023-06-20 16:21:54,614:INFO:Preloading libraries
2023-06-20 16:21:54,615:INFO:Copying training dataset
2023-06-20 16:21:54,615:INFO:Plot type: confusion_matrix
2023-06-20 16:21:54,772:INFO:Fitting Model
2023-06-20 16:21:54,773:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 16:21:54,773:INFO:Scoring test/hold-out set
2023-06-20 16:21:54,890:INFO:Visual Rendered Successfully
2023-06-20 16:21:54,978:INFO:plot_model() successfully completed......................................
2023-06-20 16:22:13,787:WARNING:c:\Program Files\Python39\lib\site-packages\statsmodels\base\model.py:607: ConvergenceWarning: Maximum Likelihood optimization failed to converge. Check mle_retvals
  warnings.warn("Maximum Likelihood optimization failed to "

2023-06-20 16:22:14,778:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:15,551:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:16,320:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:17,126:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:17,829:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:18,375:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:19,031:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:19,753:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:20,444:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:21,098:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:21,802:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:22,930:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:23,867:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:24,461:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:25,170:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:25,768:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:26,381:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:26,965:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:27,572:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:28,146:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:28,992:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:29,455:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:30,063:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:30,621:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:31,210:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:31,755:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:32,310:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:32,893:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:33,448:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-20 16:22:37,432:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:37,433:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:37,442:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:38,585:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:38,618:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:38,627:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:38,637:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:39,250:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:39,272:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:39,388:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:39,401:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:39,787:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:39,813:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,061:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,071:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,226:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,281:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,458:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,567:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,772:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,790:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,855:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,923:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:40,987:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,036:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,039:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,059:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,107:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,312:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,319:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,319:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,342:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,524:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,525:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,535:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,549:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,710:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,738:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,762:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,796:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,891:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,956:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:41,969:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:42,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:42,122:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:42,286:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:42,461:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:42,581:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:42,694:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
50 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver sag supports only 'l2' or 'none' penalties, got l1 penalty.

--------------------------------------------------------------------------------
30 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 71, in _check_solver
    raise ValueError(
ValueError: Only 'saga' solver supports elasticnet penalty, got solver=liblinear.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got elasticnet penalty.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-20 16:22:42,695:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_search.py:953: UserWarning: One or more of the test scores are non-finite: [0.83648304        nan 0.83918427 0.82621219        nan        nan
        nan        nan 0.83920017 0.83920229]
  warnings.warn(

2023-06-20 16:22:42,815:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py:1107: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-20 16:22:43,192:WARNING:C:\Users\wyver\AppData\Local\Temp/ipykernel_23504/1812583914.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X_train_selected['subscribed'] = y_train

2023-06-20 16:22:43,193:WARNING:C:\Users\wyver\AppData\Local\Temp/ipykernel_23504/1812583914.py:8: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X_test_selected['subscribed'] = y_test

2023-06-20 16:22:44,322:INFO:PyCaret ClassificationExperiment
2023-06-20 16:22:44,322:INFO:Logging name: clf-default-name
2023-06-20 16:22:44,322:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-20 16:22:44,322:INFO:version 3.0.2
2023-06-20 16:22:44,322:INFO:Initializing setup()
2023-06-20 16:22:44,322:INFO:self.USI: 08df
2023-06-20 16:22:44,322:INFO:self._variable_keys: {'fix_imbalance', 'fold_generator', 'exp_id', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', '_available_plots', 'pipeline', 'html_param', 'USI', '_ml_usecase', 'gpu_param', 'X', 'log_plots_param', 'seed', 'fold_groups_param', 'y_test', 'data', 'n_jobs_param', 'memory', 'X_train', 'y', 'idx', 'y_train', 'target_param', 'logging_param', 'fold_shuffle_param', 'is_multiclass'}
2023-06-20 16:22:44,323:INFO:Checking environment
2023-06-20 16:22:44,323:INFO:python_version: 3.9.7
2023-06-20 16:22:44,323:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-20 16:22:44,323:INFO:machine: AMD64
2023-06-20 16:22:44,323:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-20 16:22:44,323:INFO:Memory: svmem(total=17120436224, available=5975306240, percent=65.1, used=11145129984, free=5975306240)
2023-06-20 16:22:44,323:INFO:Physical Core: 4
2023-06-20 16:22:44,323:INFO:Logical Core: 4
2023-06-20 16:22:44,323:INFO:Checking libraries
2023-06-20 16:22:44,323:INFO:System:
2023-06-20 16:22:44,323:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-20 16:22:44,323:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-20 16:22:44,323:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-20 16:22:44,323:INFO:PyCaret required dependencies:
2023-06-20 16:22:44,324:INFO:                 pip: 21.2.3
2023-06-20 16:22:44,324:INFO:          setuptools: 57.4.0
2023-06-20 16:22:44,324:INFO:             pycaret: 3.0.2
2023-06-20 16:22:44,324:INFO:             IPython: 7.28.0
2023-06-20 16:22:44,324:INFO:          ipywidgets: 8.0.6
2023-06-20 16:22:44,324:INFO:                tqdm: 4.64.0
2023-06-20 16:22:44,324:INFO:               numpy: 1.22.4
2023-06-20 16:22:44,324:INFO:              pandas: 1.3.5
2023-06-20 16:22:44,324:INFO:              jinja2: 3.1.2
2023-06-20 16:22:44,324:INFO:               scipy: 1.7.1
2023-06-20 16:22:44,324:INFO:              joblib: 1.2.0
2023-06-20 16:22:44,324:INFO:             sklearn: 1.1.0
2023-06-20 16:22:44,324:INFO:                pyod: 1.0.9
2023-06-20 16:22:44,324:INFO:            imblearn: 0.9.1
2023-06-20 16:22:44,324:INFO:   category_encoders: 2.6.1
2023-06-20 16:22:44,324:INFO:            lightgbm: 3.3.5
2023-06-20 16:22:44,324:INFO:               numba: 0.57.0
2023-06-20 16:22:44,324:INFO:            requests: 2.31.0
2023-06-20 16:22:44,324:INFO:          matplotlib: 3.4.3
2023-06-20 16:22:44,324:INFO:          scikitplot: 0.3.7
2023-06-20 16:22:44,324:INFO:         yellowbrick: 1.5
2023-06-20 16:22:44,325:INFO:              plotly: 5.8.0
2023-06-20 16:22:44,325:INFO:             kaleido: 0.2.1
2023-06-20 16:22:44,325:INFO:         statsmodels: 0.14.0
2023-06-20 16:22:44,325:INFO:              sktime: 0.17.0
2023-06-20 16:22:44,325:INFO:               tbats: 1.1.3
2023-06-20 16:22:44,325:INFO:            pmdarima: 2.0.3
2023-06-20 16:22:44,325:INFO:              psutil: 5.9.0
2023-06-20 16:22:44,325:INFO:PyCaret optional dependencies:
2023-06-20 16:22:44,325:INFO:                shap: Not installed
2023-06-20 16:22:44,325:INFO:           interpret: Not installed
2023-06-20 16:22:44,325:INFO:                umap: Not installed
2023-06-20 16:22:44,325:INFO:    pandas_profiling: Not installed
2023-06-20 16:22:44,325:INFO:  explainerdashboard: Not installed
2023-06-20 16:22:44,325:INFO:             autoviz: Not installed
2023-06-20 16:22:44,325:INFO:           fairlearn: Not installed
2023-06-20 16:22:44,325:INFO:             xgboost: Not installed
2023-06-20 16:22:44,325:INFO:            catboost: Not installed
2023-06-20 16:22:44,325:INFO:              kmodes: Not installed
2023-06-20 16:22:44,326:INFO:             mlxtend: Not installed
2023-06-20 16:22:44,326:INFO:       statsforecast: Not installed
2023-06-20 16:22:44,326:INFO:        tune_sklearn: Not installed
2023-06-20 16:22:44,326:INFO:                 ray: Not installed
2023-06-20 16:22:44,326:INFO:            hyperopt: Not installed
2023-06-20 16:22:44,326:INFO:              optuna: Not installed
2023-06-20 16:22:44,326:INFO:               skopt: Not installed
2023-06-20 16:22:44,326:INFO:              mlflow: Not installed
2023-06-20 16:22:44,326:INFO:              gradio: Not installed
2023-06-20 16:22:44,326:INFO:             fastapi: Not installed
2023-06-20 16:22:44,326:INFO:             uvicorn: Not installed
2023-06-20 16:22:44,327:INFO:              m2cgen: Not installed
2023-06-20 16:22:44,327:INFO:           evidently: Not installed
2023-06-20 16:22:44,328:INFO:               fugue: Not installed
2023-06-20 16:22:44,328:INFO:           streamlit: Not installed
2023-06-20 16:22:44,328:INFO:             prophet: Not installed
2023-06-20 16:22:44,328:INFO:None
2023-06-20 16:22:44,328:INFO:Set up data.
2023-06-20 16:22:44,349:INFO:Set up train/test split.
2023-06-20 16:22:44,349:INFO:Set up data.
2023-06-20 16:22:44,364:INFO:Set up index.
2023-06-20 16:22:44,366:INFO:Set up folding strategy.
2023-06-20 16:22:44,367:INFO:Assigning column types.
2023-06-20 16:22:44,392:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-20 16:22:44,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 16:22:44,446:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 16:22:44,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 16:22:44,533:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 16:22:44,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,566:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-20 16:22:44,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 16:22:44,652:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,706:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 16:22:44,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,742:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-20 16:22:44,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:44,916:INFO:Preparing preprocessing pipeline...
2023-06-20 16:22:44,920:INFO:Set up simple imputation.
2023-06-20 16:22:44,923:INFO:Set up column name cleaning.
2023-06-20 16:22:44,980:INFO:Finished creating preprocessing pipeline.
2023-06-20 16:22:44,985:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['job_entrepreneur',
                                             'job_housemaid', 'job_unemployed',
                                             'job_retired', 'job_self-employed',
                                             'marital_divorced', 'default',
                                             'loan_no', 'contact', 'month_may',
                                             'month_mar', 'previous',
                                             'poutcome_nonexistent',
                                             'poutcome_...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-20 16:22:44,985:INFO:Creating final display dataframe.
2023-06-20 16:22:45,153:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 16)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              08df
2023-06-20 16:22:45,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:45,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:45,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:45,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 16:22:45,347:INFO:setup() successfully completed in 2.15s...............
2023-06-20 16:22:45,375:INFO:Initializing create_model()
2023-06-20 16:22:45,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 16:22:45,375:INFO:Checking exceptions
2023-06-20 16:22:45,413:INFO:Importing libraries
2023-06-20 16:22:45,414:INFO:Copying training dataset
2023-06-20 16:22:45,446:INFO:Defining folds
2023-06-20 16:22:45,447:INFO:Declaring metric variables
2023-06-20 16:22:45,451:INFO:Importing untrained model
2023-06-20 16:22:45,456:INFO:Logistic Regression Imported successfully
2023-06-20 16:22:45,465:INFO:Starting cross validation
2023-06-20 16:22:45,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 16:22:57,198:INFO:Calculating mean and std
2023-06-20 16:22:57,199:INFO:Creating metrics dataframe
2023-06-20 16:22:57,208:INFO:Finalizing model
2023-06-20 16:22:58,756:INFO:Uploading results into container
2023-06-20 16:22:58,758:INFO:Uploading model into container now
2023-06-20 16:22:58,772:INFO:_master_model_container: 1
2023-06-20 16:22:58,772:INFO:_display_container: 2
2023-06-20 16:22:58,773:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 16:22:58,773:INFO:create_model() successfully completed......................................
2023-06-20 16:22:58,847:INFO:Initializing evaluate_model()
2023-06-20 16:22:58,847:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 16:22:58,876:INFO:Initializing plot_model()
2023-06-20 16:22:58,876:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 16:22:58,876:INFO:Checking exceptions
2023-06-20 16:22:58,895:INFO:Preloading libraries
2023-06-20 16:22:58,895:INFO:Copying training dataset
2023-06-20 16:22:58,895:INFO:Plot type: pipeline
2023-06-20 16:22:58,991:INFO:Visual Rendered Successfully
2023-06-20 16:22:59,057:INFO:plot_model() successfully completed......................................
2023-06-20 16:41:26,174:INFO:Initializing tune_model()
2023-06-20 16:41:26,174:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25], 'penalty': ['l1', 'l2', 'elasticnet'], 'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>)
2023-06-20 16:41:26,175:INFO:Checking exceptions
2023-06-20 16:41:26,222:INFO:Copying training dataset
2023-06-20 16:41:26,243:INFO:Checking base model
2023-06-20 16:41:26,243:INFO:Base model : Logistic Regression
2023-06-20 16:41:26,251:INFO:Declaring metric variables
2023-06-20 16:41:26,257:INFO:Defining Hyperparameters
2023-06-20 16:41:26,356:INFO:custom_grid: {'actual_estimator__C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25], 'actual_estimator__penalty': ['l1', 'l2', 'elasticnet'], 'actual_estimator__solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}
2023-06-20 16:41:26,356:INFO:Tuning with n_jobs=-1
2023-06-20 16:41:26,357:INFO:Initializing RandomizedSearchCV
2023-06-20 16:43:31,146:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
80 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 71, in _check_solver
    raise ValueError(
ValueError: Only 'saga' solver supports elasticnet penalty, got solver=liblinear.

--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver newton-cg supports only 'l2' or 'none' penalties, got elasticnet penalty.

--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got elasticnet penalty.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver sag supports only 'l2' or 'none' penalties, got l1 penalty.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-20 16:43:31,147:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_search.py:953: UserWarning: One or more of the test scores are non-finite: [0.75014651        nan        nan        nan 0.75157257        nan
        nan        nan        nan        nan]
  warnings.warn(

2023-06-20 16:43:32,745:INFO:best_params: {'actual_estimator__solver': 'saga', 'actual_estimator__penalty': 'l1', 'actual_estimator__C': 0.09}
2023-06-20 16:43:32,746:INFO:Hyperparameter search completed
2023-06-20 16:43:32,746:INFO:SubProcess create_model() called ==================================
2023-06-20 16:43:32,747:INFO:Initializing create_model()
2023-06-20 16:43:32,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000264585F0970>, model_only=True, return_train_score=False, kwargs={'solver': 'saga', 'penalty': 'l1', 'C': 0.09})
2023-06-20 16:43:32,747:INFO:Checking exceptions
2023-06-20 16:43:32,747:INFO:Importing libraries
2023-06-20 16:43:32,748:INFO:Copying training dataset
2023-06-20 16:43:32,776:INFO:Defining folds
2023-06-20 16:43:32,776:INFO:Declaring metric variables
2023-06-20 16:43:32,780:INFO:Importing untrained model
2023-06-20 16:43:32,780:INFO:Declaring custom model
2023-06-20 16:43:32,787:INFO:Logistic Regression Imported successfully
2023-06-20 16:43:32,795:INFO:Starting cross validation
2023-06-20 16:43:32,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 16:43:44,759:INFO:Calculating mean and std
2023-06-20 16:43:44,761:INFO:Creating metrics dataframe
2023-06-20 16:43:44,768:INFO:Finalizing model
2023-06-20 16:43:46,584:INFO:Uploading results into container
2023-06-20 16:43:46,585:INFO:Uploading model into container now
2023-06-20 16:43:46,586:INFO:_master_model_container: 2
2023-06-20 16:43:46,586:INFO:_display_container: 3
2023-06-20 16:43:46,587:INFO:LogisticRegression(C=0.09, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=420, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 16:43:46,587:INFO:create_model() successfully completed......................................
2023-06-20 16:43:46,663:INFO:SubProcess create_model() end ==================================
2023-06-20 16:43:46,663:INFO:choose_better activated
2023-06-20 16:43:46,668:INFO:SubProcess create_model() called ==================================
2023-06-20 16:43:46,669:INFO:Initializing create_model()
2023-06-20 16:43:46,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 16:43:46,669:INFO:Checking exceptions
2023-06-20 16:43:46,671:INFO:Importing libraries
2023-06-20 16:43:46,671:INFO:Copying training dataset
2023-06-20 16:43:46,698:INFO:Defining folds
2023-06-20 16:43:46,698:INFO:Declaring metric variables
2023-06-20 16:43:46,698:INFO:Importing untrained model
2023-06-20 16:43:46,698:INFO:Declaring custom model
2023-06-20 16:43:46,699:INFO:Logistic Regression Imported successfully
2023-06-20 16:43:46,699:INFO:Starting cross validation
2023-06-20 16:43:46,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 16:43:58,802:INFO:Calculating mean and std
2023-06-20 16:43:58,802:INFO:Creating metrics dataframe
2023-06-20 16:43:58,805:INFO:Finalizing model
2023-06-20 16:44:00,340:INFO:Uploading results into container
2023-06-20 16:44:00,340:INFO:Uploading model into container now
2023-06-20 16:44:00,341:INFO:_master_model_container: 3
2023-06-20 16:44:00,341:INFO:_display_container: 4
2023-06-20 16:44:00,341:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 16:44:00,341:INFO:create_model() successfully completed......................................
2023-06-20 16:44:00,414:INFO:SubProcess create_model() end ==================================
2023-06-20 16:44:00,414:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7516
2023-06-20 16:44:00,416:INFO:LogisticRegression(C=0.09, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=420, solver='saga', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7516
2023-06-20 16:44:00,417:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-06-20 16:44:00,417:INFO:choose_better completed
2023-06-20 16:44:00,417:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-20 16:44:00,432:INFO:_master_model_container: 3
2023-06-20 16:44:00,432:INFO:_display_container: 3
2023-06-20 16:44:00,434:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 16:44:00,434:INFO:tune_model() successfully completed......................................
2023-06-20 16:44:01,686:INFO:Initializing evaluate_model()
2023-06-20 16:44:01,687:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 16:44:01,715:INFO:Initializing plot_model()
2023-06-20 16:44:01,715:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 16:44:01,715:INFO:Checking exceptions
2023-06-20 16:44:01,726:INFO:Preloading libraries
2023-06-20 16:44:01,726:INFO:Copying training dataset
2023-06-20 16:44:01,726:INFO:Plot type: pipeline
2023-06-20 16:44:01,821:INFO:Visual Rendered Successfully
2023-06-20 16:44:01,887:INFO:plot_model() successfully completed......................................
2023-06-20 16:44:56,699:INFO:Initializing plot_model()
2023-06-20 16:44:56,699:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 16:44:56,699:INFO:Checking exceptions
2023-06-20 16:44:56,710:INFO:Preloading libraries
2023-06-20 16:44:56,711:INFO:Copying training dataset
2023-06-20 16:44:56,711:INFO:Plot type: parameter
2023-06-20 16:44:56,715:INFO:Visual Rendered Successfully
2023-06-20 16:44:56,780:INFO:plot_model() successfully completed......................................
2023-06-20 16:45:08,555:INFO:Initializing plot_model()
2023-06-20 16:45:08,555:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 16:45:08,555:INFO:Checking exceptions
2023-06-20 16:45:08,567:INFO:Preloading libraries
2023-06-20 16:45:08,567:INFO:Copying training dataset
2023-06-20 16:45:08,567:INFO:Plot type: auc
2023-06-20 16:45:08,718:INFO:Fitting Model
2023-06-20 16:45:08,719:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 16:45:08,720:INFO:Scoring test/hold-out set
2023-06-20 16:45:08,902:INFO:Visual Rendered Successfully
2023-06-20 16:45:08,989:INFO:plot_model() successfully completed......................................
2023-06-20 16:46:16,241:INFO:Initializing plot_model()
2023-06-20 16:46:16,241:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 16:46:16,241:INFO:Checking exceptions
2023-06-20 16:46:16,252:INFO:Preloading libraries
2023-06-20 16:46:16,252:INFO:Copying training dataset
2023-06-20 16:46:16,252:INFO:Plot type: parameter
2023-06-20 16:46:16,257:INFO:Visual Rendered Successfully
2023-06-20 16:46:16,333:INFO:plot_model() successfully completed......................................
2023-06-20 16:49:45,741:INFO:Initializing plot_model()
2023-06-20 16:49:45,741:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 16:49:45,741:INFO:Checking exceptions
2023-06-20 16:49:45,753:INFO:Preloading libraries
2023-06-20 16:49:45,753:INFO:Copying training dataset
2023-06-20 16:49:45,753:INFO:Plot type: auc
2023-06-20 16:49:45,903:INFO:Fitting Model
2023-06-20 16:49:45,904:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 16:49:45,905:INFO:Scoring test/hold-out set
2023-06-20 16:49:46,086:INFO:Visual Rendered Successfully
2023-06-20 16:49:46,201:INFO:plot_model() successfully completed......................................
2023-06-20 18:12:22,733:INFO:Initializing plot_model()
2023-06-20 18:12:22,736:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:12:22,736:INFO:Checking exceptions
2023-06-20 18:12:22,773:INFO:Preloading libraries
2023-06-20 18:12:22,775:INFO:Copying training dataset
2023-06-20 18:12:22,775:INFO:Plot type: parameter
2023-06-20 18:12:22,794:INFO:Visual Rendered Successfully
2023-06-20 18:12:23,048:INFO:plot_model() successfully completed......................................
2023-06-20 18:26:42,207:INFO:Initializing plot_model()
2023-06-20 18:26:42,207:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:26:42,207:INFO:Checking exceptions
2023-06-20 18:26:42,219:INFO:Preloading libraries
2023-06-20 18:26:42,219:INFO:Copying training dataset
2023-06-20 18:26:42,219:INFO:Plot type: auc
2023-06-20 18:26:42,380:INFO:Fitting Model
2023-06-20 18:26:42,381:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:26:42,383:INFO:Scoring test/hold-out set
2023-06-20 18:26:42,602:INFO:Visual Rendered Successfully
2023-06-20 18:26:42,688:INFO:plot_model() successfully completed......................................
2023-06-20 18:33:39,187:INFO:Initializing plot_model()
2023-06-20 18:33:39,187:INFO:plot_model(plot=auc, fold=None, use_train_data=True, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:33:39,187:INFO:Checking exceptions
2023-06-20 18:33:39,202:INFO:Preloading libraries
2023-06-20 18:33:39,202:INFO:Copying training dataset
2023-06-20 18:33:39,203:INFO:Plot type: auc
2023-06-20 18:33:39,467:INFO:Fitting Model
2023-06-20 18:33:39,468:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:33:39,469:INFO:Scoring test/hold-out set
2023-06-20 18:33:39,671:INFO:Visual Rendered Successfully
2023-06-20 18:33:39,763:INFO:plot_model() successfully completed......................................
2023-06-20 18:33:52,493:INFO:Initializing plot_model()
2023-06-20 18:33:52,493:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:33:52,493:INFO:Checking exceptions
2023-06-20 18:33:52,506:INFO:Preloading libraries
2023-06-20 18:33:52,507:INFO:Copying training dataset
2023-06-20 18:33:52,507:INFO:Plot type: auc
2023-06-20 18:33:52,755:INFO:Fitting Model
2023-06-20 18:33:52,756:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:33:52,756:INFO:Scoring test/hold-out set
2023-06-20 18:33:52,959:INFO:Visual Rendered Successfully
2023-06-20 18:33:53,041:INFO:plot_model() successfully completed......................................
2023-06-20 18:33:57,110:INFO:Initializing plot_model()
2023-06-20 18:33:57,110:INFO:plot_model(plot=auc, fold=None, use_train_data=True, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:33:57,111:INFO:Checking exceptions
2023-06-20 18:33:57,124:INFO:Preloading libraries
2023-06-20 18:33:57,124:INFO:Copying training dataset
2023-06-20 18:33:57,124:INFO:Plot type: auc
2023-06-20 18:33:57,352:INFO:Fitting Model
2023-06-20 18:33:57,353:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:33:57,354:INFO:Scoring test/hold-out set
2023-06-20 18:33:57,556:INFO:Visual Rendered Successfully
2023-06-20 18:33:57,654:INFO:plot_model() successfully completed......................................
2023-06-20 18:34:10,876:INFO:Initializing plot_model()
2023-06-20 18:34:10,876:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:34:10,876:INFO:Checking exceptions
2023-06-20 18:34:10,887:INFO:Preloading libraries
2023-06-20 18:34:10,887:INFO:Copying training dataset
2023-06-20 18:34:10,888:INFO:Plot type: confusion_matrix
2023-06-20 18:34:11,065:INFO:Fitting Model
2023-06-20 18:34:11,065:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:34:11,066:INFO:Scoring test/hold-out set
2023-06-20 18:34:11,174:INFO:Visual Rendered Successfully
2023-06-20 18:34:11,264:INFO:plot_model() successfully completed......................................
2023-06-20 18:34:17,312:INFO:Initializing plot_model()
2023-06-20 18:34:17,313:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=True, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:34:17,313:INFO:Checking exceptions
2023-06-20 18:34:17,326:INFO:Preloading libraries
2023-06-20 18:34:17,326:INFO:Copying training dataset
2023-06-20 18:34:17,327:INFO:Plot type: confusion_matrix
2023-06-20 18:34:17,546:INFO:Fitting Model
2023-06-20 18:34:17,546:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:34:17,547:INFO:Scoring test/hold-out set
2023-06-20 18:34:17,695:INFO:Visual Rendered Successfully
2023-06-20 18:34:17,774:INFO:plot_model() successfully completed......................................
2023-06-20 18:34:26,253:INFO:Initializing plot_model()
2023-06-20 18:34:26,253:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:34:26,253:INFO:Checking exceptions
2023-06-20 18:34:26,265:INFO:Preloading libraries
2023-06-20 18:34:26,266:INFO:Copying training dataset
2023-06-20 18:34:26,266:INFO:Plot type: confusion_matrix
2023-06-20 18:34:26,500:INFO:Fitting Model
2023-06-20 18:34:26,501:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:34:26,502:INFO:Scoring test/hold-out set
2023-06-20 18:34:26,621:INFO:Visual Rendered Successfully
2023-06-20 18:34:26,695:INFO:plot_model() successfully completed......................................
2023-06-20 18:35:27,456:INFO:Initializing predict_model()
2023-06-20 18:35:27,456:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264512D54C0>)
2023-06-20 18:35:27,456:INFO:Checking exceptions
2023-06-20 18:35:27,456:INFO:Preloading libraries
2023-06-20 18:35:49,939:INFO:Initializing predict_model()
2023-06-20 18:35:49,939:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264512D5700>)
2023-06-20 18:35:49,939:INFO:Checking exceptions
2023-06-20 18:35:49,940:INFO:Preloading libraries
2023-06-20 18:35:50,153:INFO:Initializing plot_model()
2023-06-20 18:35:50,153:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=       job_entrepreneur  job_housemaid  job_unemployed  job_retired  \
51190               0.0            0.0             0.0          0.0   
51191               0.0            0.0             0.0          0.0   
51192               0.0            0.0             0.0          0.0   
51193               0.0            0.0             0.0          0.0   
51194               0.0            0.0             0.0          0.0   
...                 ...            ...             ...          ...   
63541               0.0            0.0             0.0          0.0   
63542               0.0            0.0             0.0          0.0   
63543               0.0            0.0             0.0          0.0   
63544               0.0            0.0             0.0          0.0   
63545               1.0            0.0             0.0          0.0   

       job_self-employed  marital_divorced  default  loan_no  contact  \
51190                0.0               0.0      0.0      0.0      0.0   
51191                1.0               0.0      0.0      1.0      0.0   
51192                0.0               0.0      0.0      1.0      1.0   
51193                0.0               0.0      1.0      1.0      1.0   
51194                0.0               0.0      1.0      1.0      0.0   
...                  ...               ...      ...      ...      ...   
63541                0.0               0.0      0.0      0.0      0.0   
63542                1.0               0.0      0.0      1.0      0.0   
63543                0.0               0.0      1.0      1.0      1.0   
63544                0.0               0.0      0.0      1.0      0.0   
63545                0.0               0.0      0.0      1.0      0.0   

       month_may  month_mar  previous  poutcome_nonexistent  poutcome_failure  \
51190        0.0        1.0       0.0                   1.0               0.0   
51191        0.0        0.0       0.0                   1.0               0.0   
51192        1.0        0.0       0.0                   1.0               0.0   
51193        0.0        0.0       0.0                   1.0               0.0   
51194        0.0        0.0       0.0                   1.0               0.0   
...          ...        ...       ...                   ...               ...   
63541        0.0        0.0       0.0                   1.0               0.0   
63542        0.0        0.0       0.0                   1.0               0.0   
63543        0.0        0.0       0.0                   1.0               0.0   
63544        1.0        0.0       0.0                   1.0               0.0   
63545        1.0        0.0       0.0                   1.0               0.0   

       nr.employed  subscribed  prediction_label  prediction_score  
51190          0.0           0                 1            0.7179  
51191          1.0           0                 1            0.6352  
51192          2.0           0                 0            0.7285  
51193          3.0           0                 0            0.8912  
51194          3.0           0                 0            0.7846  
...            ...         ...               ...               ...  
63541          0.0           0                 1            0.5867  
63542          1.0           1                 1            0.6352  
63543          3.0           0                 0            0.8912  
63544          1.0           0                 1            0.6204  
63545          1.0           0                 0            0.5845  

[12356 rows x 18 columns], feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:35:50,153:INFO:Checking exceptions
2023-06-20 18:36:47,892:INFO:Initializing predict_model()
2023-06-20 18:36:47,892:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.25, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451308E50>)
2023-06-20 18:36:47,892:INFO:Checking exceptions
2023-06-20 18:36:47,892:INFO:Preloading libraries
2023-06-20 18:36:53,656:INFO:Initializing predict_model()
2023-06-20 18:36:53,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.44, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451317040>)
2023-06-20 18:36:53,656:INFO:Checking exceptions
2023-06-20 18:36:53,656:INFO:Preloading libraries
2023-06-20 18:36:57,582:INFO:Initializing predict_model()
2023-06-20 18:36:57,583:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264513173A0>)
2023-06-20 18:36:57,583:INFO:Checking exceptions
2023-06-20 18:36:57,584:INFO:Preloading libraries
2023-06-20 18:37:01,514:INFO:Initializing predict_model()
2023-06-20 18:37:01,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.8, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451317280>)
2023-06-20 18:37:01,514:INFO:Checking exceptions
2023-06-20 18:37:01,514:INFO:Preloading libraries
2023-06-20 18:37:05,454:INFO:Initializing predict_model()
2023-06-20 18:37:05,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.7, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451317280>)
2023-06-20 18:37:05,455:INFO:Checking exceptions
2023-06-20 18:37:05,455:INFO:Preloading libraries
2023-06-20 18:37:14,795:INFO:Initializing predict_model()
2023-06-20 18:37:14,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.9, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451317310>)
2023-06-20 18:37:14,795:INFO:Checking exceptions
2023-06-20 18:37:14,795:INFO:Preloading libraries
2023-06-20 18:37:18,075:INFO:Initializing predict_model()
2023-06-20 18:37:18,075:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.7, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264513179D0>)
2023-06-20 18:37:18,075:INFO:Checking exceptions
2023-06-20 18:37:18,075:INFO:Preloading libraries
2023-06-20 18:37:21,436:INFO:Initializing predict_model()
2023-06-20 18:37:21,436:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451317040>)
2023-06-20 18:37:21,436:INFO:Checking exceptions
2023-06-20 18:37:21,436:INFO:Preloading libraries
2023-06-20 18:37:24,922:INFO:Initializing predict_model()
2023-06-20 18:37:24,922:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.6, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451317280>)
2023-06-20 18:37:24,922:INFO:Checking exceptions
2023-06-20 18:37:24,922:INFO:Preloading libraries
2023-06-20 18:37:27,845:INFO:Initializing predict_model()
2023-06-20 18:37:27,845:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.65, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451317430>)
2023-06-20 18:37:27,845:INFO:Checking exceptions
2023-06-20 18:37:27,846:INFO:Preloading libraries
2023-06-20 18:39:41,544:INFO:Initializing interpret_model()
2023-06-20 18:39:41,545:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>)
2023-06-20 18:39:41,545:INFO:Checking exceptions
2023-06-20 18:39:41,545:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-20 18:41:02,908:INFO:Initializing interpret_model()
2023-06-20 18:41:02,908:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>)
2023-06-20 18:41:02,909:INFO:Checking exceptions
2023-06-20 18:41:02,909:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-20 18:41:17,845:INFO:Initializing interpret_model()
2023-06-20 18:41:17,845:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>)
2023-06-20 18:41:17,845:INFO:Checking exceptions
2023-06-20 18:41:17,845:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-20 18:41:31,771:INFO:Initializing interpret_model()
2023-06-20 18:41:31,771:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>)
2023-06-20 18:41:31,772:INFO:Checking exceptions
2023-06-20 18:41:31,772:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-20 18:42:11,728:INFO:Initializing interpret_model()
2023-06-20 18:42:11,728:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>)
2023-06-20 18:42:11,728:INFO:Checking exceptions
2023-06-20 18:42:11,728:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-20 18:44:10,133:INFO:Initializing interpret_model()
2023-06-20 18:44:10,133:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>)
2023-06-20 18:44:10,134:INFO:Checking exceptions
2023-06-20 18:44:10,134:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-20 18:44:13,987:INFO:Initializing predict_model()
2023-06-20 18:44:13,987:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.65, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451476790>)
2023-06-20 18:44:13,987:INFO:Checking exceptions
2023-06-20 18:44:13,987:INFO:Preloading libraries
2023-06-20 18:44:46,450:INFO:Initializing predict_model()
2023-06-20 18:44:46,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.65, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451476C10>)
2023-06-20 18:44:46,451:INFO:Checking exceptions
2023-06-20 18:44:46,451:INFO:Preloading libraries
2023-06-20 18:46:22,083:INFO:Initializing predict_model()
2023-06-20 18:46:22,084:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.75, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000264514764C0>)
2023-06-20 18:46:22,084:INFO:Checking exceptions
2023-06-20 18:46:22,084:INFO:Preloading libraries
2023-06-20 18:46:26,184:INFO:Initializing predict_model()
2023-06-20 18:46:26,184:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.8, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451476550>)
2023-06-20 18:46:26,185:INFO:Checking exceptions
2023-06-20 18:46:26,185:INFO:Preloading libraries
2023-06-20 18:46:36,748:INFO:Initializing predict_model()
2023-06-20 18:46:36,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.8, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451308E50>)
2023-06-20 18:46:36,749:INFO:Checking exceptions
2023-06-20 18:46:36,749:INFO:Preloading libraries
2023-06-20 18:46:42,718:INFO:Initializing predict_model()
2023-06-20 18:46:42,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451444280>)
2023-06-20 18:46:42,718:INFO:Checking exceptions
2023-06-20 18:46:42,718:INFO:Preloading libraries
2023-06-20 18:47:00,305:INFO:Initializing predict_model()
2023-06-20 18:47:00,305:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.66, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026451444040>)
2023-06-20 18:47:00,305:INFO:Checking exceptions
2023-06-20 18:47:00,305:INFO:Preloading libraries
2023-06-20 18:48:57,725:INFO:Initializing create_model()
2023-06-20 18:48:57,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 18:48:57,726:INFO:Checking exceptions
2023-06-20 18:48:57,748:INFO:Importing libraries
2023-06-20 18:48:57,749:INFO:Copying training dataset
2023-06-20 18:48:57,778:INFO:Defining folds
2023-06-20 18:48:57,778:INFO:Declaring metric variables
2023-06-20 18:48:57,782:INFO:Importing untrained model
2023-06-20 18:48:57,787:INFO:Logistic Regression Imported successfully
2023-06-20 18:48:57,797:INFO:Starting cross validation
2023-06-20 18:48:57,799:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 18:49:03,392:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:03,392:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:03,395:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:03,406:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:06,508:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:06,515:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:06,523:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:06,590:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:08,537:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:08,571:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:17,926:INFO:Calculating mean and std
2023-06-20 18:49:17,928:INFO:Creating metrics dataframe
2023-06-20 18:49:17,936:INFO:Finalizing model
2023-06-20 18:49:19,426:INFO:Uploading results into container
2023-06-20 18:49:19,428:INFO:Uploading model into container now
2023-06-20 18:49:19,443:INFO:_master_model_container: 4
2023-06-20 18:49:19,443:INFO:_display_container: 23
2023-06-20 18:49:19,443:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 18:49:19,443:INFO:create_model() successfully completed......................................
2023-06-20 18:49:19,538:INFO:Initializing evaluate_model()
2023-06-20 18:49:19,538:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 18:49:19,569:INFO:Initializing plot_model()
2023-06-20 18:49:19,569:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:49:19,569:INFO:Checking exceptions
2023-06-20 18:49:19,579:INFO:Preloading libraries
2023-06-20 18:49:19,579:INFO:Copying training dataset
2023-06-20 18:49:19,580:INFO:Plot type: pipeline
2023-06-20 18:49:19,683:INFO:Visual Rendered Successfully
2023-06-20 18:49:19,762:INFO:plot_model() successfully completed......................................
2023-06-20 18:49:23,229:INFO:Initializing create_model()
2023-06-20 18:49:23,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 18:49:23,230:INFO:Checking exceptions
2023-06-20 18:49:23,245:INFO:Importing libraries
2023-06-20 18:49:23,245:INFO:Copying training dataset
2023-06-20 18:49:23,274:INFO:Defining folds
2023-06-20 18:49:23,274:INFO:Declaring metric variables
2023-06-20 18:49:23,278:INFO:Importing untrained model
2023-06-20 18:49:23,283:INFO:Logistic Regression Imported successfully
2023-06-20 18:49:23,293:INFO:Starting cross validation
2023-06-20 18:49:23,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 18:49:23,332:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:23,342:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:23,350:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:23,371:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:25,128:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:25,170:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:25,270:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:25,277:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:27,195:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:27,259:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:35,228:INFO:Calculating mean and std
2023-06-20 18:49:35,229:INFO:Creating metrics dataframe
2023-06-20 18:49:35,236:INFO:Finalizing model
2023-06-20 18:49:36,750:INFO:Uploading results into container
2023-06-20 18:49:36,752:INFO:Uploading model into container now
2023-06-20 18:49:36,767:INFO:_master_model_container: 5
2023-06-20 18:49:36,767:INFO:_display_container: 24
2023-06-20 18:49:36,768:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 18:49:36,768:INFO:create_model() successfully completed......................................
2023-06-20 18:49:36,856:INFO:Initializing evaluate_model()
2023-06-20 18:49:36,856:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-06-20 18:49:36,875:INFO:Initializing plot_model()
2023-06-20 18:49:36,875:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:49:36,875:INFO:Checking exceptions
2023-06-20 18:49:36,885:INFO:Preloading libraries
2023-06-20 18:49:36,886:INFO:Copying training dataset
2023-06-20 18:49:36,886:INFO:Plot type: pipeline
2023-06-20 18:49:36,993:INFO:Visual Rendered Successfully
2023-06-20 18:49:37,063:INFO:plot_model() successfully completed......................................
2023-06-20 18:49:50,243:INFO:Initializing create_model()
2023-06-20 18:49:50,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 18:49:50,243:INFO:Checking exceptions
2023-06-20 18:49:50,256:INFO:Importing libraries
2023-06-20 18:49:50,256:INFO:Copying training dataset
2023-06-20 18:49:50,285:INFO:Defining folds
2023-06-20 18:49:50,285:INFO:Declaring metric variables
2023-06-20 18:49:50,291:INFO:Importing untrained model
2023-06-20 18:49:50,295:INFO:Logistic Regression Imported successfully
2023-06-20 18:49:50,306:INFO:Starting cross validation
2023-06-20 18:49:50,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 18:49:50,349:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:50,355:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:50,361:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:50,374:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:52,144:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:52,278:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:52,379:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:52,390:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:54,519:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:49:54,683:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:02,911:INFO:Calculating mean and std
2023-06-20 18:50:02,912:INFO:Creating metrics dataframe
2023-06-20 18:50:02,918:INFO:Finalizing model
2023-06-20 18:50:04,417:INFO:Uploading results into container
2023-06-20 18:50:04,418:INFO:Uploading model into container now
2023-06-20 18:50:04,434:INFO:_master_model_container: 6
2023-06-20 18:50:04,434:INFO:_display_container: 25
2023-06-20 18:50:04,434:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 18:50:04,434:INFO:create_model() successfully completed......................................
2023-06-20 18:50:04,612:INFO:Initializing evaluate_model()
2023-06-20 18:50:04,612:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-06-20 18:50:04,627:INFO:Initializing plot_model()
2023-06-20 18:50:04,627:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:50:04,628:INFO:Checking exceptions
2023-06-20 18:50:04,638:INFO:Preloading libraries
2023-06-20 18:50:04,638:INFO:Copying training dataset
2023-06-20 18:50:04,639:INFO:Plot type: pipeline
2023-06-20 18:50:04,745:INFO:Visual Rendered Successfully
2023-06-20 18:50:04,821:INFO:plot_model() successfully completed......................................
2023-06-20 18:50:13,927:INFO:Initializing create_model()
2023-06-20 18:50:13,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 18:50:13,927:INFO:Checking exceptions
2023-06-20 18:50:13,941:INFO:Importing libraries
2023-06-20 18:50:13,942:INFO:Copying training dataset
2023-06-20 18:50:13,971:INFO:Defining folds
2023-06-20 18:50:13,971:INFO:Declaring metric variables
2023-06-20 18:50:13,976:INFO:Importing untrained model
2023-06-20 18:50:13,981:INFO:Logistic Regression Imported successfully
2023-06-20 18:50:13,993:INFO:Starting cross validation
2023-06-20 18:50:13,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 18:50:14,063:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:14,069:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:14,075:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:14,088:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:16,068:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:16,280:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:16,303:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:16,363:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:18,217:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:18,343:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.1.2', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-20 18:50:26,294:INFO:Calculating mean and std
2023-06-20 18:50:26,295:INFO:Creating metrics dataframe
2023-06-20 18:50:26,303:INFO:Finalizing model
2023-06-20 18:50:28,091:INFO:Uploading results into container
2023-06-20 18:50:28,092:INFO:Uploading model into container now
2023-06-20 18:50:28,110:INFO:_master_model_container: 7
2023-06-20 18:50:28,111:INFO:_display_container: 26
2023-06-20 18:50:28,111:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 18:50:28,111:INFO:create_model() successfully completed......................................
2023-06-20 18:50:28,209:INFO:Initializing evaluate_model()
2023-06-20 18:50:28,209:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 18:50:28,225:INFO:Initializing plot_model()
2023-06-20 18:50:28,225:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002643E2CDB50>, system=True)
2023-06-20 18:50:28,225:INFO:Checking exceptions
2023-06-20 18:50:28,237:INFO:Preloading libraries
2023-06-20 18:50:28,238:INFO:Copying training dataset
2023-06-20 18:50:28,238:INFO:Plot type: pipeline
2023-06-20 18:50:28,408:INFO:Visual Rendered Successfully
2023-06-20 18:50:28,538:INFO:plot_model() successfully completed......................................
2023-06-20 18:52:19,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 18:52:19,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 18:52:19,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 18:52:19,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 18:52:21,135:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-20 18:52:22,439:INFO:PyCaret ClassificationExperiment
2023-06-20 18:52:22,440:INFO:Logging name: clf-default-name
2023-06-20 18:52:22,440:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-20 18:52:22,440:INFO:version 3.0.2
2023-06-20 18:52:22,440:INFO:Initializing setup()
2023-06-20 18:52:22,440:INFO:self.USI: a6e0
2023-06-20 18:52:22,440:INFO:self._variable_keys: {'X_test', 'is_multiclass', 'seed', 'logging_param', 'n_jobs_param', 'X', 'fold_groups_param', 'gpu_n_jobs_param', 'y_test', 'exp_id', '_available_plots', 'USI', 'memory', 'data', 'pipeline', 'fold_shuffle_param', 'fold_generator', 'target_param', 'X_train', 'idx', 'y_train', 'gpu_param', 'log_plots_param', 'y', 'fix_imbalance', 'exp_name_log', '_ml_usecase', 'html_param'}
2023-06-20 18:52:22,440:INFO:Checking environment
2023-06-20 18:52:22,440:INFO:python_version: 3.9.7
2023-06-20 18:52:22,440:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-20 18:52:22,440:INFO:machine: AMD64
2023-06-20 18:52:22,440:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-20 18:52:22,440:INFO:Memory: svmem(total=17120436224, available=3758735360, percent=78.0, used=13361700864, free=3758735360)
2023-06-20 18:52:22,440:INFO:Physical Core: 4
2023-06-20 18:52:22,441:INFO:Logical Core: 4
2023-06-20 18:52:22,441:INFO:Checking libraries
2023-06-20 18:52:22,441:INFO:System:
2023-06-20 18:52:22,441:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-20 18:52:22,441:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-20 18:52:22,441:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-20 18:52:22,441:INFO:PyCaret required dependencies:
2023-06-20 18:52:22,441:INFO:                 pip: 23.1.2
2023-06-20 18:52:22,441:INFO:          setuptools: 57.4.0
2023-06-20 18:52:22,441:INFO:             pycaret: 3.0.2
2023-06-20 18:52:22,441:INFO:             IPython: 7.28.0
2023-06-20 18:52:22,441:INFO:          ipywidgets: 8.0.6
2023-06-20 18:52:22,442:INFO:                tqdm: 4.64.0
2023-06-20 18:52:22,442:INFO:               numpy: 1.22.4
2023-06-20 18:52:22,442:INFO:              pandas: 1.3.5
2023-06-20 18:52:22,442:INFO:              jinja2: 3.1.2
2023-06-20 18:52:22,442:INFO:               scipy: 1.10.1
2023-06-20 18:52:22,442:INFO:              joblib: 1.2.0
2023-06-20 18:52:22,442:INFO:             sklearn: 1.1.0
2023-06-20 18:52:22,442:INFO:                pyod: 1.0.9
2023-06-20 18:52:22,442:INFO:            imblearn: 0.9.1
2023-06-20 18:52:22,442:INFO:   category_encoders: 2.6.1
2023-06-20 18:52:22,442:INFO:            lightgbm: 3.3.5
2023-06-20 18:52:22,442:INFO:               numba: 0.57.0
2023-06-20 18:52:22,442:INFO:            requests: 2.31.0
2023-06-20 18:52:22,442:INFO:          matplotlib: 3.4.3
2023-06-20 18:52:22,442:INFO:          scikitplot: 0.3.7
2023-06-20 18:52:22,442:INFO:         yellowbrick: 1.5
2023-06-20 18:52:22,442:INFO:              plotly: 5.8.0
2023-06-20 18:52:22,442:INFO:             kaleido: 0.2.1
2023-06-20 18:52:22,442:INFO:         statsmodels: 0.14.0
2023-06-20 18:52:22,443:INFO:              sktime: 0.17.0
2023-06-20 18:52:22,443:INFO:               tbats: 1.1.3
2023-06-20 18:52:22,443:INFO:            pmdarima: 2.0.3
2023-06-20 18:52:22,443:INFO:              psutil: 5.9.0
2023-06-20 18:52:22,443:INFO:PyCaret optional dependencies:
2023-06-20 18:52:22,466:INFO:                shap: 0.41.0
2023-06-20 18:52:22,467:INFO:           interpret: Not installed
2023-06-20 18:52:22,467:INFO:                umap: Not installed
2023-06-20 18:52:22,467:INFO:    pandas_profiling: Not installed
2023-06-20 18:52:22,467:INFO:  explainerdashboard: Not installed
2023-06-20 18:52:22,467:INFO:             autoviz: Not installed
2023-06-20 18:52:22,467:INFO:           fairlearn: Not installed
2023-06-20 18:52:22,467:INFO:             xgboost: Not installed
2023-06-20 18:52:22,467:INFO:            catboost: Not installed
2023-06-20 18:52:22,467:INFO:              kmodes: Not installed
2023-06-20 18:52:22,467:INFO:             mlxtend: Not installed
2023-06-20 18:52:22,467:INFO:       statsforecast: Not installed
2023-06-20 18:52:22,467:INFO:        tune_sklearn: Not installed
2023-06-20 18:52:22,467:INFO:                 ray: Not installed
2023-06-20 18:52:22,467:INFO:            hyperopt: Not installed
2023-06-20 18:52:22,467:INFO:              optuna: Not installed
2023-06-20 18:52:22,467:INFO:               skopt: Not installed
2023-06-20 18:52:22,467:INFO:              mlflow: Not installed
2023-06-20 18:52:22,467:INFO:              gradio: Not installed
2023-06-20 18:52:22,468:INFO:             fastapi: Not installed
2023-06-20 18:52:22,468:INFO:             uvicorn: Not installed
2023-06-20 18:52:22,468:INFO:              m2cgen: Not installed
2023-06-20 18:52:22,468:INFO:           evidently: Not installed
2023-06-20 18:52:22,468:INFO:               fugue: Not installed
2023-06-20 18:52:22,468:INFO:           streamlit: Not installed
2023-06-20 18:52:22,468:INFO:             prophet: Not installed
2023-06-20 18:52:22,468:INFO:None
2023-06-20 18:52:22,468:INFO:Set up data.
2023-06-20 18:52:22,492:INFO:Set up train/test split.
2023-06-20 18:52:22,492:INFO:Set up data.
2023-06-20 18:52:22,507:INFO:Set up index.
2023-06-20 18:52:22,509:INFO:Set up folding strategy.
2023-06-20 18:52:22,509:INFO:Assigning column types.
2023-06-20 18:52:22,537:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-20 18:52:22,589:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 18:52:22,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 18:52:22,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:22,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:22,742:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 18:52:22,743:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 18:52:22,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:22,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:22,775:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-20 18:52:22,828:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 18:52:22,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:22,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:22,915:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 18:52:22,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:22,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:22,948:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-20 18:52:23,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:23,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:23,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:23,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:23,129:INFO:Preparing preprocessing pipeline...
2023-06-20 18:52:23,134:INFO:Set up simple imputation.
2023-06-20 18:52:23,138:INFO:Set up column name cleaning.
2023-06-20 18:52:23,202:INFO:Finished creating preprocessing pipeline.
2023-06-20 18:52:23,209:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['job_entrepreneur',
                                             'job_housemaid', 'job_unemployed',
                                             'job_retired', 'job_self-employed',
                                             'marital_divorced', 'default',
                                             'loan_no', 'contact', 'month_may',
                                             'month_mar', 'previous',
                                             'poutcome_nonexistent',
                                             'poutcome_...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-20 18:52:23,209:INFO:Creating final display dataframe.
2023-06-20 18:52:23,389:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 16)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              a6e0
2023-06-20 18:52:23,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:23,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:23,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:23,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 18:52:23,658:INFO:setup() successfully completed in 2.41s...............
2023-06-20 18:52:39,556:INFO:Initializing create_model()
2023-06-20 18:52:39,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 18:52:39,556:INFO:Checking exceptions
2023-06-20 18:52:39,576:INFO:Importing libraries
2023-06-20 18:52:39,576:INFO:Copying training dataset
2023-06-20 18:52:39,608:INFO:Defining folds
2023-06-20 18:52:39,609:INFO:Declaring metric variables
2023-06-20 18:52:39,614:INFO:Importing untrained model
2023-06-20 18:52:39,619:INFO:Logistic Regression Imported successfully
2023-06-20 18:52:39,634:INFO:Starting cross validation
2023-06-20 18:52:39,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 18:52:55,548:INFO:Calculating mean and std
2023-06-20 18:52:55,549:INFO:Creating metrics dataframe
2023-06-20 18:52:55,556:INFO:Finalizing model
2023-06-20 18:52:57,022:INFO:Uploading results into container
2023-06-20 18:52:57,023:INFO:Uploading model into container now
2023-06-20 18:52:57,039:INFO:_master_model_container: 1
2023-06-20 18:52:57,039:INFO:_display_container: 2
2023-06-20 18:52:57,040:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 18:52:57,040:INFO:create_model() successfully completed......................................
2023-06-20 18:52:57,127:INFO:Initializing evaluate_model()
2023-06-20 18:52:57,127:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 18:52:57,156:INFO:Initializing plot_model()
2023-06-20 18:52:57,157:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 18:52:57,157:INFO:Checking exceptions
2023-06-20 18:52:57,176:INFO:Preloading libraries
2023-06-20 18:52:57,176:INFO:Copying training dataset
2023-06-20 18:52:57,176:INFO:Plot type: pipeline
2023-06-20 18:52:57,324:INFO:Visual Rendered Successfully
2023-06-20 18:52:57,388:INFO:plot_model() successfully completed......................................
2023-06-20 18:53:07,530:INFO:Initializing create_model()
2023-06-20 18:53:07,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 18:53:07,531:INFO:Checking exceptions
2023-06-20 18:53:07,550:INFO:Importing libraries
2023-06-20 18:53:07,550:INFO:Copying training dataset
2023-06-20 18:53:07,585:INFO:Defining folds
2023-06-20 18:53:07,585:INFO:Declaring metric variables
2023-06-20 18:53:07,590:INFO:Importing untrained model
2023-06-20 18:53:07,595:INFO:Logistic Regression Imported successfully
2023-06-20 18:53:07,607:INFO:Starting cross validation
2023-06-20 18:53:07,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 18:53:19,723:INFO:Calculating mean and std
2023-06-20 18:53:19,724:INFO:Creating metrics dataframe
2023-06-20 18:53:19,730:INFO:Finalizing model
2023-06-20 18:53:21,218:INFO:Uploading results into container
2023-06-20 18:53:21,220:INFO:Uploading model into container now
2023-06-20 18:53:21,238:INFO:_master_model_container: 2
2023-06-20 18:53:21,238:INFO:_display_container: 3
2023-06-20 18:53:21,239:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 18:53:21,239:INFO:create_model() successfully completed......................................
2023-06-20 18:53:21,355:INFO:Initializing evaluate_model()
2023-06-20 18:53:21,355:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-06-20 18:53:21,382:INFO:Initializing plot_model()
2023-06-20 18:53:21,383:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 18:53:21,383:INFO:Checking exceptions
2023-06-20 18:53:21,395:INFO:Preloading libraries
2023-06-20 18:53:21,395:INFO:Copying training dataset
2023-06-20 18:53:21,395:INFO:Plot type: pipeline
2023-06-20 18:53:21,506:INFO:Visual Rendered Successfully
2023-06-20 18:53:21,619:INFO:plot_model() successfully completed......................................
2023-06-20 18:53:24,677:INFO:Initializing plot_model()
2023-06-20 18:53:24,677:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 18:53:24,677:INFO:Checking exceptions
2023-06-20 18:53:24,689:INFO:Preloading libraries
2023-06-20 18:53:24,689:INFO:Copying training dataset
2023-06-20 18:53:24,689:INFO:Plot type: auc
2023-06-20 18:53:24,850:INFO:Fitting Model
2023-06-20 18:53:24,852:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:53:24,852:INFO:Scoring test/hold-out set
2023-06-20 18:53:25,048:INFO:Visual Rendered Successfully
2023-06-20 18:53:25,130:INFO:plot_model() successfully completed......................................
2023-06-20 18:53:31,808:INFO:Initializing plot_model()
2023-06-20 18:53:31,808:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 18:53:31,808:INFO:Checking exceptions
2023-06-20 18:53:31,820:INFO:Preloading libraries
2023-06-20 18:53:31,821:INFO:Copying training dataset
2023-06-20 18:53:31,821:INFO:Plot type: confusion_matrix
2023-06-20 18:53:31,978:INFO:Fitting Model
2023-06-20 18:53:31,978:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:53:31,979:INFO:Scoring test/hold-out set
2023-06-20 18:53:32,092:INFO:Visual Rendered Successfully
2023-06-20 18:53:32,177:INFO:plot_model() successfully completed......................................
2023-06-20 18:53:38,287:INFO:Initializing create_model()
2023-06-20 18:53:38,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 18:53:38,287:INFO:Checking exceptions
2023-06-20 18:53:38,305:INFO:Importing libraries
2023-06-20 18:53:38,305:INFO:Copying training dataset
2023-06-20 18:53:38,337:INFO:Defining folds
2023-06-20 18:53:38,337:INFO:Declaring metric variables
2023-06-20 18:53:38,342:INFO:Importing untrained model
2023-06-20 18:53:38,347:INFO:Logistic Regression Imported successfully
2023-06-20 18:53:38,366:INFO:Starting cross validation
2023-06-20 18:53:38,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 18:53:50,742:INFO:Calculating mean and std
2023-06-20 18:53:50,744:INFO:Creating metrics dataframe
2023-06-20 18:53:50,761:INFO:Finalizing model
2023-06-20 18:53:52,359:INFO:Uploading results into container
2023-06-20 18:53:52,360:INFO:Uploading model into container now
2023-06-20 18:53:52,379:INFO:_master_model_container: 3
2023-06-20 18:53:52,380:INFO:_display_container: 4
2023-06-20 18:53:52,380:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 18:53:52,380:INFO:create_model() successfully completed......................................
2023-06-20 18:53:52,466:INFO:Initializing evaluate_model()
2023-06-20 18:53:52,466:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 18:53:52,484:INFO:Initializing plot_model()
2023-06-20 18:53:52,484:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 18:53:52,485:INFO:Checking exceptions
2023-06-20 18:53:52,495:INFO:Preloading libraries
2023-06-20 18:53:52,496:INFO:Copying training dataset
2023-06-20 18:53:52,496:INFO:Plot type: pipeline
2023-06-20 18:53:52,612:INFO:Visual Rendered Successfully
2023-06-20 18:53:52,682:INFO:plot_model() successfully completed......................................
2023-06-20 18:53:54,713:INFO:Initializing plot_model()
2023-06-20 18:53:54,714:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 18:53:54,714:INFO:Checking exceptions
2023-06-20 18:53:54,725:INFO:Preloading libraries
2023-06-20 18:53:54,725:INFO:Copying training dataset
2023-06-20 18:53:54,725:INFO:Plot type: auc
2023-06-20 18:53:54,915:INFO:Fitting Model
2023-06-20 18:53:54,916:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:53:54,916:INFO:Scoring test/hold-out set
2023-06-20 18:53:55,103:INFO:Visual Rendered Successfully
2023-06-20 18:53:55,186:INFO:plot_model() successfully completed......................................
2023-06-20 18:53:56,726:INFO:Initializing plot_model()
2023-06-20 18:53:56,727:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 18:53:56,727:INFO:Checking exceptions
2023-06-20 18:53:56,738:INFO:Preloading libraries
2023-06-20 18:53:56,738:INFO:Copying training dataset
2023-06-20 18:53:56,739:INFO:Plot type: confusion_matrix
2023-06-20 18:53:56,893:INFO:Fitting Model
2023-06-20 18:53:56,893:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-20 18:53:56,894:INFO:Scoring test/hold-out set
2023-06-20 18:53:56,994:INFO:Visual Rendered Successfully
2023-06-20 18:53:57,073:INFO:plot_model() successfully completed......................................
2023-06-20 18:56:44,666:INFO:Initializing interpret_model()
2023-06-20 18:56:44,667:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>)
2023-06-20 18:56:44,667:INFO:Checking exceptions
2023-06-20 18:56:44,667:INFO:Soft dependency imported: shap: 0.41.0
2023-06-20 18:56:45,479:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:35: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _pt_shuffle_rec(i, indexes, index_mask, partition_tree, M, pos):

2023-06-20 18:56:45,607:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:54: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def delta_minimization_order(all_masks, max_swap_size=100, num_passes=2):

2023-06-20 18:56:45,608:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:63: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window(order, start, length):

2023-06-20 18:56:45,608:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:69: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window_score_gain(masks, order, start, length):

2023-06-20 18:56:45,608:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:77: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _mask_delta_score(m1, m2):

2023-06-20 18:56:45,613:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:5: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def identity(x):

2023-06-20 18:56:45,613:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:10: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _identity_inverse(x):

2023-06-20 18:56:45,613:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:15: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def logit(x):

2023-06-20 18:56:45,614:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:20: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _logit_inverse(x):

2023-06-20 18:56:45,614:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:363: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_single_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-20 18:56:45,615:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:385: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_multi_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-20 18:56:45,615:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:428: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _init_masks(cluster_matrix, M, indices_row_pos, indptr):

2023-06-20 18:56:45,615:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:439: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _rec_fill_masks(cluster_matrix, indices_row_pos, indptr, indices, M, ind):

2023-06-20 18:56:45,625:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:186: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _single_delta_mask(dind, masked_inputs, last_mask, data, x, noop_code):

2023-06-20 18:56:45,626:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:197: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _delta_masking(masks, x, curr_delta_inds, varying_rows_out,

2023-06-20 18:56:50,210:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_image.py:175: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _jit_build_partition_tree(xmin, xmax, ymin, ymax, zmin, zmax, total_ywidth, total_zwidth, M, clustering, q):

2023-06-20 18:56:50,228:WARNING:c:\Program Files\Python39\lib\site-packages\shap\explainers\_partition.py:676: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def lower_credit(i, value, M, values, clustering):

2023-06-20 18:56:50,251:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-20 18:56:50,251:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-20 19:01:34,112:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 19:01:34,112:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 19:01:34,112:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 19:01:34,112:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-20 19:01:35,153:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-20 19:01:36,363:INFO:PyCaret ClassificationExperiment
2023-06-20 19:01:36,363:INFO:Logging name: clf-default-name
2023-06-20 19:01:36,363:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-20 19:01:36,363:INFO:version 3.0.2
2023-06-20 19:01:36,363:INFO:Initializing setup()
2023-06-20 19:01:36,363:INFO:self.USI: 4118
2023-06-20 19:01:36,363:INFO:self._variable_keys: {'seed', 'pipeline', 'fold_groups_param', 'fold_generator', 'fold_shuffle_param', 'fix_imbalance', '_available_plots', 'gpu_param', 'target_param', 'X_test', 'idx', 'data', 'X_train', 'is_multiclass', 'exp_name_log', 'exp_id', 'memory', 'html_param', 'X', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'USI', '_ml_usecase', 'n_jobs_param', 'logging_param', 'y', 'y_test'}
2023-06-20 19:01:36,363:INFO:Checking environment
2023-06-20 19:01:36,363:INFO:python_version: 3.9.7
2023-06-20 19:01:36,363:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-20 19:01:36,363:INFO:machine: AMD64
2023-06-20 19:01:36,363:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-20 19:01:36,364:INFO:Memory: svmem(total=17120436224, available=3177844736, percent=81.4, used=13942591488, free=3177844736)
2023-06-20 19:01:36,364:INFO:Physical Core: 4
2023-06-20 19:01:36,364:INFO:Logical Core: 4
2023-06-20 19:01:36,364:INFO:Checking libraries
2023-06-20 19:01:36,364:INFO:System:
2023-06-20 19:01:36,364:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-20 19:01:36,364:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-20 19:01:36,364:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-20 19:01:36,364:INFO:PyCaret required dependencies:
2023-06-20 19:01:36,364:INFO:                 pip: 23.1.2
2023-06-20 19:01:36,364:INFO:          setuptools: 57.4.0
2023-06-20 19:01:36,364:INFO:             pycaret: 3.0.2
2023-06-20 19:01:36,364:INFO:             IPython: 7.28.0
2023-06-20 19:01:36,364:INFO:          ipywidgets: 8.0.6
2023-06-20 19:01:36,364:INFO:                tqdm: 4.64.0
2023-06-20 19:01:36,364:INFO:               numpy: 1.22.4
2023-06-20 19:01:36,364:INFO:              pandas: 1.3.5
2023-06-20 19:01:36,364:INFO:              jinja2: 3.1.2
2023-06-20 19:01:36,364:INFO:               scipy: 1.10.1
2023-06-20 19:01:36,365:INFO:              joblib: 1.2.0
2023-06-20 19:01:36,365:INFO:             sklearn: 1.1.0
2023-06-20 19:01:36,365:INFO:                pyod: 1.0.9
2023-06-20 19:01:36,365:INFO:            imblearn: 0.9.1
2023-06-20 19:01:36,365:INFO:   category_encoders: 2.6.1
2023-06-20 19:01:36,365:INFO:            lightgbm: 3.3.5
2023-06-20 19:01:36,365:INFO:               numba: 0.57.0
2023-06-20 19:01:36,365:INFO:            requests: 2.31.0
2023-06-20 19:01:36,365:INFO:          matplotlib: 3.4.3
2023-06-20 19:01:36,365:INFO:          scikitplot: 0.3.7
2023-06-20 19:01:36,365:INFO:         yellowbrick: 1.5
2023-06-20 19:01:36,365:INFO:              plotly: 5.8.0
2023-06-20 19:01:36,365:INFO:             kaleido: 0.2.1
2023-06-20 19:01:36,365:INFO:         statsmodels: 0.14.0
2023-06-20 19:01:36,365:INFO:              sktime: 0.17.0
2023-06-20 19:01:36,365:INFO:               tbats: 1.1.3
2023-06-20 19:01:36,365:INFO:            pmdarima: 2.0.3
2023-06-20 19:01:36,366:INFO:              psutil: 5.9.0
2023-06-20 19:01:36,366:INFO:PyCaret optional dependencies:
2023-06-20 19:01:36,386:INFO:                shap: 0.41.0
2023-06-20 19:01:36,386:INFO:           interpret: Not installed
2023-06-20 19:01:36,386:INFO:                umap: Not installed
2023-06-20 19:01:36,386:INFO:    pandas_profiling: Not installed
2023-06-20 19:01:36,386:INFO:  explainerdashboard: Not installed
2023-06-20 19:01:36,387:INFO:             autoviz: Not installed
2023-06-20 19:01:36,387:INFO:           fairlearn: Not installed
2023-06-20 19:01:36,387:INFO:             xgboost: Not installed
2023-06-20 19:01:36,387:INFO:            catboost: Not installed
2023-06-20 19:01:36,387:INFO:              kmodes: Not installed
2023-06-20 19:01:36,387:INFO:             mlxtend: Not installed
2023-06-20 19:01:36,387:INFO:       statsforecast: Not installed
2023-06-20 19:01:36,387:INFO:        tune_sklearn: Not installed
2023-06-20 19:01:36,387:INFO:                 ray: Not installed
2023-06-20 19:01:36,387:INFO:            hyperopt: Not installed
2023-06-20 19:01:36,387:INFO:              optuna: Not installed
2023-06-20 19:01:36,387:INFO:               skopt: Not installed
2023-06-20 19:01:36,387:INFO:              mlflow: Not installed
2023-06-20 19:01:36,387:INFO:              gradio: Not installed
2023-06-20 19:01:36,387:INFO:             fastapi: Not installed
2023-06-20 19:01:36,387:INFO:             uvicorn: Not installed
2023-06-20 19:01:36,387:INFO:              m2cgen: Not installed
2023-06-20 19:01:36,387:INFO:           evidently: Not installed
2023-06-20 19:01:36,388:INFO:               fugue: Not installed
2023-06-20 19:01:36,388:INFO:           streamlit: Not installed
2023-06-20 19:01:36,388:INFO:             prophet: Not installed
2023-06-20 19:01:36,388:INFO:None
2023-06-20 19:01:36,388:INFO:Set up data.
2023-06-20 19:01:36,458:INFO:Set up train/test split.
2023-06-20 19:01:36,458:INFO:Set up data.
2023-06-20 19:01:36,502:INFO:Set up index.
2023-06-20 19:01:36,506:INFO:Set up folding strategy.
2023-06-20 19:01:36,506:INFO:Assigning column types.
2023-06-20 19:01:36,576:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-20 19:01:36,627:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 19:01:36,629:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 19:01:36,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:36,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:36,770:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 19:01:36,771:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 19:01:36,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:36,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:36,804:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-20 19:01:36,856:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 19:01:36,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:36,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:36,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 19:01:36,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:36,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:36,971:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-20 19:01:37,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:37,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:37,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:37,141:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:37,143:INFO:Preparing preprocessing pipeline...
2023-06-20 19:01:37,152:INFO:Set up simple imputation.
2023-06-20 19:01:37,161:INFO:Set up column name cleaning.
2023-06-20 19:01:37,297:INFO:Finished creating preprocessing pipeline.
2023-06-20 19:01:37,305:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-20 19:01:37,305:INFO:Creating final display dataframe.
2023-06-20 19:01:37,697:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 54)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7              Numeric features                53
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4118
2023-06-20 19:01:37,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:37,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:37,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:37,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:01:37,948:INFO:setup() successfully completed in 2.69s...............
2023-06-20 19:02:07,308:INFO:Initializing create_model()
2023-06-20 19:02:07,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 19:02:07,308:INFO:Checking exceptions
2023-06-20 19:02:07,332:INFO:Importing libraries
2023-06-20 19:02:07,332:INFO:Copying training dataset
2023-06-20 19:02:07,420:INFO:Defining folds
2023-06-20 19:02:07,420:INFO:Declaring metric variables
2023-06-20 19:02:07,433:INFO:Importing untrained model
2023-06-20 19:02:07,434:INFO:Declaring custom model
2023-06-20 19:02:07,467:INFO:Random Forest Classifier Imported successfully
2023-06-20 19:02:07,477:INFO:Starting cross validation
2023-06-20 19:02:07,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 19:17:34,709:INFO:Calculating mean and std
2023-06-20 19:17:34,710:INFO:Creating metrics dataframe
2023-06-20 19:17:34,720:INFO:Finalizing model
2023-06-20 19:19:24,732:INFO:Uploading results into container
2023-06-20 19:19:24,733:INFO:Uploading model into container now
2023-06-20 19:19:24,748:INFO:_master_model_container: 1
2023-06-20 19:19:24,748:INFO:_display_container: 2
2023-06-20 19:19:24,748:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-20 19:19:24,748:INFO:create_model() successfully completed......................................
2023-06-20 19:19:24,826:INFO:Initializing evaluate_model()
2023-06-20 19:19:24,826:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 19:19:24,863:INFO:Initializing plot_model()
2023-06-20 19:19:24,863:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>, system=True)
2023-06-20 19:19:24,863:INFO:Checking exceptions
2023-06-20 19:19:24,919:INFO:Preloading libraries
2023-06-20 19:19:24,924:INFO:Copying training dataset
2023-06-20 19:19:24,924:INFO:Plot type: pipeline
2023-06-20 19:19:25,059:INFO:Visual Rendered Successfully
2023-06-20 19:19:25,122:INFO:plot_model() successfully completed......................................
2023-06-20 19:21:05,473:INFO:Initializing plot_model()
2023-06-20 19:21:05,474:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>, system=True)
2023-06-20 19:21:05,474:INFO:Checking exceptions
2023-06-20 19:21:05,518:INFO:Preloading libraries
2023-06-20 19:21:05,523:INFO:Copying training dataset
2023-06-20 19:21:05,523:INFO:Plot type: parameter
2023-06-20 19:21:05,528:INFO:Visual Rendered Successfully
2023-06-20 19:21:05,599:INFO:plot_model() successfully completed......................................
2023-06-20 19:21:07,695:INFO:Initializing plot_model()
2023-06-20 19:21:07,696:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>, system=True)
2023-06-20 19:21:07,696:INFO:Checking exceptions
2023-06-20 19:21:07,738:INFO:Preloading libraries
2023-06-20 19:21:07,743:INFO:Copying training dataset
2023-06-20 19:21:07,743:INFO:Plot type: auc
2023-06-20 19:21:08,114:INFO:Fitting Model
2023-06-20 19:21:08,116:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-20 19:21:08,116:INFO:Scoring test/hold-out set
2023-06-20 19:21:08,380:INFO:Visual Rendered Successfully
2023-06-20 19:21:08,465:INFO:plot_model() successfully completed......................................
2023-06-20 19:21:12,944:INFO:Initializing plot_model()
2023-06-20 19:21:12,944:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>, system=True)
2023-06-20 19:21:12,944:INFO:Checking exceptions
2023-06-20 19:21:12,986:INFO:Preloading libraries
2023-06-20 19:21:12,991:INFO:Copying training dataset
2023-06-20 19:21:12,991:INFO:Plot type: tree
2023-06-20 19:21:14,010:INFO:Plotting decision trees
2023-06-20 19:21:25,996:INFO:Initializing plot_model()
2023-06-20 19:21:25,997:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>, system=True)
2023-06-20 19:21:25,997:INFO:Checking exceptions
2023-06-20 19:21:26,044:INFO:Preloading libraries
2023-06-20 19:21:26,049:INFO:Copying training dataset
2023-06-20 19:21:26,049:INFO:Plot type: auc
2023-06-20 19:21:26,536:INFO:Fitting Model
2023-06-20 19:21:26,537:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-20 19:21:26,538:INFO:Scoring test/hold-out set
2023-06-20 19:21:26,821:INFO:Visual Rendered Successfully
2023-06-20 19:21:27,081:INFO:plot_model() successfully completed......................................
2023-06-20 19:21:51,974:INFO:Initializing interpret_model()
2023-06-20 19:21:51,975:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>)
2023-06-20 19:21:51,975:INFO:Checking exceptions
2023-06-20 19:21:51,975:INFO:Soft dependency imported: shap: 0.41.0
2023-06-20 19:21:52,334:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:35: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _pt_shuffle_rec(i, indexes, index_mask, partition_tree, M, pos):

2023-06-20 19:21:52,341:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:54: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def delta_minimization_order(all_masks, max_swap_size=100, num_passes=2):

2023-06-20 19:21:52,341:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:63: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window(order, start, length):

2023-06-20 19:21:52,342:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:69: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window_score_gain(masks, order, start, length):

2023-06-20 19:21:52,342:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:77: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _mask_delta_score(m1, m2):

2023-06-20 19:21:52,344:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:5: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def identity(x):

2023-06-20 19:21:52,345:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:10: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _identity_inverse(x):

2023-06-20 19:21:52,345:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:15: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def logit(x):

2023-06-20 19:21:52,345:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:20: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _logit_inverse(x):

2023-06-20 19:21:52,346:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:363: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_single_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-20 19:21:52,346:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:385: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_multi_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-20 19:21:52,347:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:428: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _init_masks(cluster_matrix, M, indices_row_pos, indptr):

2023-06-20 19:21:52,347:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:439: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _rec_fill_masks(cluster_matrix, indices_row_pos, indptr, indices, M, ind):

2023-06-20 19:21:52,357:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:186: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _single_delta_mask(dind, masked_inputs, last_mask, data, x, noop_code):

2023-06-20 19:21:52,357:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:197: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _delta_masking(masks, x, curr_delta_inds, varying_rows_out,

2023-06-20 19:21:54,811:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_image.py:175: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _jit_build_partition_tree(xmin, xmax, ymin, ymax, zmin, zmax, total_ywidth, total_zwidth, M, clustering, q):

2023-06-20 19:21:54,826:WARNING:c:\Program Files\Python39\lib\site-packages\shap\explainers\_partition.py:676: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def lower_credit(i, value, M, values, clustering):

2023-06-20 19:21:54,835:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-20 19:21:54,835:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-20 19:21:55,048:INFO:plot type: summary
2023-06-20 19:21:55,048:INFO:Creating TreeExplainer
2023-06-20 19:21:55,052:INFO:Compiling shap values
2023-06-20 19:21:58,526:INFO:Visual Rendered Successfully
2023-06-20 19:21:58,526:INFO:interpret_model() successfully completed......................................
2023-06-20 19:23:03,487:INFO:Initializing interpret_model()
2023-06-20 19:23:03,487:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), use_train_data=True, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>)
2023-06-20 19:23:03,487:INFO:Checking exceptions
2023-06-20 19:23:03,487:INFO:Soft dependency imported: shap: 0.41.0
2023-06-20 19:23:03,620:INFO:plot type: summary
2023-06-20 19:23:03,621:INFO:Creating TreeExplainer
2023-06-20 19:23:03,623:INFO:Compiling shap values
2023-06-20 19:23:16,176:INFO:Visual Rendered Successfully
2023-06-20 19:23:16,176:INFO:interpret_model() successfully completed......................................
2023-06-20 19:25:07,276:INFO:Initializing predict_model()
2023-06-20 19:25:07,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002251C839040>)
2023-06-20 19:25:07,277:INFO:Checking exceptions
2023-06-20 19:25:07,277:INFO:Preloading libraries
2023-06-20 19:34:12,991:INFO:Initializing predict_model()
2023-06-20 19:34:12,992:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022524762EE0>)
2023-06-20 19:34:12,992:INFO:Checking exceptions
2023-06-20 19:34:12,992:INFO:Preloading libraries
2023-06-20 19:34:12,995:INFO:Set up data.
2023-06-20 19:34:13,026:INFO:Set up index.
2023-06-20 19:35:05,960:INFO:Initializing predict_model()
2023-06-20 19:35:05,960:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002251C43FDC0>)
2023-06-20 19:35:05,960:INFO:Checking exceptions
2023-06-20 19:35:05,960:INFO:Preloading libraries
2023-06-20 19:35:05,963:INFO:Set up data.
2023-06-20 19:35:05,988:INFO:Set up index.
2023-06-20 19:47:06,392:INFO:Initializing plot_model()
2023-06-20 19:47:06,392:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=5, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EBC3044400>, system=True)
2023-06-20 19:47:06,392:INFO:Checking exceptions
2023-06-20 19:47:06,440:INFO:Preloading libraries
2023-06-20 19:47:06,446:INFO:Copying training dataset
2023-06-20 19:47:06,446:INFO:Plot type: confusion_matrix
2023-06-20 19:47:06,813:INFO:Fitting Model
2023-06-20 19:47:06,814:WARNING:X does not have valid feature names, but RandomForestClassifier was fitted with feature names

2023-06-20 19:47:06,814:INFO:Scoring test/hold-out set
2023-06-20 19:47:06,987:INFO:Visual Rendered Successfully
2023-06-20 19:47:07,183:INFO:plot_model() successfully completed......................................
2023-06-20 19:50:21,747:INFO:PyCaret ClassificationExperiment
2023-06-20 19:50:21,748:INFO:Logging name: clf-default-name
2023-06-20 19:50:21,748:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-20 19:50:21,748:INFO:version 3.0.2
2023-06-20 19:50:21,748:INFO:Initializing setup()
2023-06-20 19:50:21,748:INFO:self.USI: 64e3
2023-06-20 19:50:21,748:INFO:self._variable_keys: {'seed', 'pipeline', 'fold_groups_param', 'fold_generator', 'fold_shuffle_param', 'fix_imbalance', '_available_plots', 'gpu_param', 'target_param', 'X_test', 'idx', 'data', 'X_train', 'is_multiclass', 'exp_name_log', 'exp_id', 'memory', 'html_param', 'X', 'gpu_n_jobs_param', 'y_train', 'log_plots_param', 'USI', '_ml_usecase', 'n_jobs_param', 'logging_param', 'y', 'y_test'}
2023-06-20 19:50:21,749:INFO:Checking environment
2023-06-20 19:50:21,749:INFO:python_version: 3.9.7
2023-06-20 19:50:21,749:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-20 19:50:21,749:INFO:machine: AMD64
2023-06-20 19:50:21,749:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-20 19:50:21,749:INFO:Memory: svmem(total=17120436224, available=5053329408, percent=70.5, used=12067106816, free=5053329408)
2023-06-20 19:50:21,749:INFO:Physical Core: 4
2023-06-20 19:50:21,749:INFO:Logical Core: 4
2023-06-20 19:50:21,749:INFO:Checking libraries
2023-06-20 19:50:21,749:INFO:System:
2023-06-20 19:50:21,749:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-20 19:50:21,749:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-20 19:50:21,749:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-20 19:50:21,749:INFO:PyCaret required dependencies:
2023-06-20 19:50:21,749:INFO:                 pip: 23.1.2
2023-06-20 19:50:21,749:INFO:          setuptools: 57.4.0
2023-06-20 19:50:21,749:INFO:             pycaret: 3.0.2
2023-06-20 19:50:21,749:INFO:             IPython: 7.28.0
2023-06-20 19:50:21,750:INFO:          ipywidgets: 8.0.6
2023-06-20 19:50:21,750:INFO:                tqdm: 4.64.0
2023-06-20 19:50:21,750:INFO:               numpy: 1.22.4
2023-06-20 19:50:21,750:INFO:              pandas: 1.3.5
2023-06-20 19:50:21,750:INFO:              jinja2: 3.1.2
2023-06-20 19:50:21,750:INFO:               scipy: 1.10.1
2023-06-20 19:50:21,750:INFO:              joblib: 1.2.0
2023-06-20 19:50:21,750:INFO:             sklearn: 1.1.0
2023-06-20 19:50:21,750:INFO:                pyod: 1.0.9
2023-06-20 19:50:21,750:INFO:            imblearn: 0.9.1
2023-06-20 19:50:21,750:INFO:   category_encoders: 2.6.1
2023-06-20 19:50:21,750:INFO:            lightgbm: 3.3.5
2023-06-20 19:50:21,750:INFO:               numba: 0.57.0
2023-06-20 19:50:21,750:INFO:            requests: 2.31.0
2023-06-20 19:50:21,750:INFO:          matplotlib: 3.4.3
2023-06-20 19:50:21,750:INFO:          scikitplot: 0.3.7
2023-06-20 19:50:21,750:INFO:         yellowbrick: 1.5
2023-06-20 19:50:21,750:INFO:              plotly: 5.8.0
2023-06-20 19:50:21,750:INFO:             kaleido: 0.2.1
2023-06-20 19:50:21,750:INFO:         statsmodels: 0.14.0
2023-06-20 19:50:21,750:INFO:              sktime: 0.17.0
2023-06-20 19:50:21,751:INFO:               tbats: 1.1.3
2023-06-20 19:50:21,751:INFO:            pmdarima: 2.0.3
2023-06-20 19:50:21,751:INFO:              psutil: 5.9.0
2023-06-20 19:50:21,751:INFO:PyCaret optional dependencies:
2023-06-20 19:50:21,751:INFO:                shap: 0.41.0
2023-06-20 19:50:21,751:INFO:           interpret: Not installed
2023-06-20 19:50:21,751:INFO:                umap: Not installed
2023-06-20 19:50:21,751:INFO:    pandas_profiling: Not installed
2023-06-20 19:50:21,751:INFO:  explainerdashboard: Not installed
2023-06-20 19:50:21,751:INFO:             autoviz: Not installed
2023-06-20 19:50:21,751:INFO:           fairlearn: Not installed
2023-06-20 19:50:21,751:INFO:             xgboost: Not installed
2023-06-20 19:50:21,751:INFO:            catboost: Not installed
2023-06-20 19:50:21,751:INFO:              kmodes: Not installed
2023-06-20 19:50:21,751:INFO:             mlxtend: Not installed
2023-06-20 19:50:21,751:INFO:       statsforecast: Not installed
2023-06-20 19:50:21,751:INFO:        tune_sklearn: Not installed
2023-06-20 19:50:21,751:INFO:                 ray: Not installed
2023-06-20 19:50:21,751:INFO:            hyperopt: Not installed
2023-06-20 19:50:21,752:INFO:              optuna: Not installed
2023-06-20 19:50:21,752:INFO:               skopt: Not installed
2023-06-20 19:50:21,752:INFO:              mlflow: Not installed
2023-06-20 19:50:21,752:INFO:              gradio: Not installed
2023-06-20 19:50:21,752:INFO:             fastapi: Not installed
2023-06-20 19:50:21,752:INFO:             uvicorn: Not installed
2023-06-20 19:50:21,752:INFO:              m2cgen: Not installed
2023-06-20 19:50:21,752:INFO:           evidently: Not installed
2023-06-20 19:50:21,752:INFO:               fugue: Not installed
2023-06-20 19:50:21,752:INFO:           streamlit: Not installed
2023-06-20 19:50:21,752:INFO:             prophet: Not installed
2023-06-20 19:50:21,752:INFO:None
2023-06-20 19:50:21,752:INFO:Set up data.
2023-06-20 19:50:21,817:INFO:Set up train/test split.
2023-06-20 19:50:21,817:INFO:Set up data.
2023-06-20 19:50:21,861:INFO:Set up index.
2023-06-20 19:50:21,865:INFO:Set up folding strategy.
2023-06-20 19:50:21,865:INFO:Assigning column types.
2023-06-20 19:50:21,942:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-20 19:50:21,995:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 19:50:21,996:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 19:50:22,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-20 19:50:22,083:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 19:50:22,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,120:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-20 19:50:22,183:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 19:50:22,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,288:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-20 19:50:22,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,323:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-20 19:50:22,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:22,492:INFO:Preparing preprocessing pipeline...
2023-06-20 19:50:22,502:INFO:Set up simple imputation.
2023-06-20 19:50:22,511:INFO:Set up column name cleaning.
2023-06-20 19:50:22,646:INFO:Finished creating preprocessing pipeline.
2023-06-20 19:50:22,652:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-20 19:50:22,652:INFO:Creating final display dataframe.
2023-06-20 19:50:23,052:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 54)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7              Numeric features                53
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              64e3
2023-06-20 19:50:23,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:23,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:23,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:23,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-20 19:50:23,283:INFO:setup() successfully completed in 2.99s...............
2023-06-20 19:50:46,144:INFO:Initializing create_model()
2023-06-20 19:50:46,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 19:50:46,144:INFO:Checking exceptions
2023-06-20 19:50:46,161:INFO:Importing libraries
2023-06-20 19:50:46,162:INFO:Copying training dataset
2023-06-20 19:50:46,255:INFO:Defining folds
2023-06-20 19:50:46,255:INFO:Declaring metric variables
2023-06-20 19:50:46,260:INFO:Importing untrained model
2023-06-20 19:50:46,260:INFO:Declaring custom model
2023-06-20 19:50:46,270:INFO:Random Forest Classifier Imported successfully
2023-06-20 19:50:46,309:INFO:Starting cross validation
2023-06-20 19:50:46,310:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 19:55:30,471:INFO:Calculating mean and std
2023-06-20 19:55:30,474:INFO:Creating metrics dataframe
2023-06-20 19:55:30,482:INFO:Finalizing model
2023-06-20 19:57:03,593:INFO:Uploading results into container
2023-06-20 19:57:03,594:INFO:Uploading model into container now
2023-06-20 19:57:03,615:INFO:_master_model_container: 1
2023-06-20 19:57:03,615:INFO:_display_container: 2
2023-06-20 19:57:03,616:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-20 19:57:03,616:INFO:create_model() successfully completed......................................
2023-06-20 19:57:03,928:INFO:Initializing calibrate_model()
2023-06-20 19:57:03,928:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-20 19:57:03,928:INFO:Checking exceptions
2023-06-20 19:57:03,954:INFO:Preloading libraries
2023-06-20 19:57:03,954:INFO:Preparing display monitor
2023-06-20 19:57:03,969:INFO:Getting model name
2023-06-20 19:57:03,970:INFO:Base model : Random Forest Classifier
2023-06-20 19:57:03,984:INFO:Importing untrained CalibratedClassifierCV
2023-06-20 19:57:03,984:INFO:SubProcess create_model() called ==================================
2023-06-20 19:57:03,985:INFO:Initializing create_model()
2023-06-20 19:57:03,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=3,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=0.1,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=64,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EBD5CC8AC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-20 19:57:03,986:INFO:Checking exceptions
2023-06-20 19:57:03,986:INFO:Importing libraries
2023-06-20 19:57:03,986:INFO:Copying training dataset
2023-06-20 19:57:04,081:INFO:Defining folds
2023-06-20 19:57:04,081:INFO:Declaring metric variables
2023-06-20 19:57:04,102:INFO:Importing untrained model
2023-06-20 19:57:04,103:INFO:Declaring custom model
2023-06-20 19:57:04,108:INFO:Random Forest Classifier Imported successfully
2023-06-20 19:57:04,119:INFO:Starting cross validation
2023-06-20 19:57:04,120:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 20:08:24,341:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-20 20:11:36,545:INFO:Calculating mean and std
2023-06-20 20:11:36,547:INFO:Creating metrics dataframe
2023-06-20 20:11:36,555:INFO:Finalizing model
2023-06-20 20:18:08,272:INFO:Uploading results into container
2023-06-20 20:18:08,272:INFO:Uploading model into container now
2023-06-20 20:18:08,273:INFO:_master_model_container: 2
2023-06-20 20:18:08,275:INFO:_display_container: 3
2023-06-20 20:18:08,276:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=3,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=0.1,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=64,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-20 20:18:08,276:INFO:create_model() successfully completed......................................
2023-06-20 20:18:08,522:INFO:SubProcess create_model() end ==================================
2023-06-20 20:18:08,550:INFO:_master_model_container: 2
2023-06-20 20:18:08,551:INFO:_display_container: 3
2023-06-20 20:18:08,552:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=3,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=0.1,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=64,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-20 20:18:08,552:INFO:calibrate_model() successfully completed......................................
2023-06-20 20:18:08,802:INFO:Initializing evaluate_model()
2023-06-20 20:18:08,802:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 20:18:08,855:INFO:Initializing plot_model()
2023-06-20 20:18:08,855:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 20:18:08,855:INFO:Checking exceptions
2023-06-20 20:18:08,919:INFO:Preloading libraries
2023-06-20 20:18:08,924:INFO:Copying training dataset
2023-06-20 20:18:08,924:INFO:Plot type: pipeline
2023-06-20 20:18:09,032:INFO:Visual Rendered Successfully
2023-06-20 20:18:09,227:INFO:plot_model() successfully completed......................................
2023-06-20 20:48:27,588:INFO:Initializing plot_model()
2023-06-20 20:48:27,588:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 20:48:27,588:INFO:Checking exceptions
2023-06-20 20:48:27,888:INFO:Preloading libraries
2023-06-20 20:48:27,913:INFO:Copying training dataset
2023-06-20 20:48:27,913:INFO:Plot type: auc
2023-06-20 20:48:28,379:INFO:Fitting Model
2023-06-20 20:48:28,380:WARNING:X does not have valid feature names, but RandomForestClassifier was fitted with feature names

2023-06-20 20:48:28,381:INFO:Scoring test/hold-out set
2023-06-20 20:48:28,682:INFO:Visual Rendered Successfully
2023-06-20 20:48:28,940:INFO:plot_model() successfully completed......................................
2023-06-20 20:48:34,939:INFO:Initializing plot_model()
2023-06-20 20:48:34,939:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 20:48:34,940:INFO:Checking exceptions
2023-06-20 20:48:34,990:INFO:Preloading libraries
2023-06-20 20:48:34,995:INFO:Copying training dataset
2023-06-20 20:48:34,995:INFO:Plot type: confusion_matrix
2023-06-20 20:48:35,410:INFO:Fitting Model
2023-06-20 20:48:35,410:WARNING:X does not have valid feature names, but RandomForestClassifier was fitted with feature names

2023-06-20 20:48:35,411:INFO:Scoring test/hold-out set
2023-06-20 20:48:35,602:INFO:Visual Rendered Successfully
2023-06-20 20:48:35,828:INFO:plot_model() successfully completed......................................
2023-06-20 20:48:56,702:INFO:Initializing predict_model()
2023-06-20 20:48:56,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EC0DE76160>)
2023-06-20 20:48:56,703:INFO:Checking exceptions
2023-06-20 20:48:56,703:INFO:Preloading libraries
2023-06-20 20:49:16,692:INFO:Initializing predict_model()
2023-06-20 20:49:16,692:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=3,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=0.1,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=64,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBDB0A2280>)
2023-06-20 20:49:16,692:INFO:Checking exceptions
2023-06-20 20:49:16,692:INFO:Preloading libraries
2023-06-20 20:50:10,602:INFO:Initializing plot_model()
2023-06-20 20:50:10,602:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 20:50:10,603:INFO:Checking exceptions
2023-06-20 20:50:10,649:INFO:Preloading libraries
2023-06-20 20:50:10,653:INFO:Copying training dataset
2023-06-20 20:50:10,653:INFO:Plot type: feature_all
2023-06-20 20:50:10,803:WARNING:No coef_ found. Trying feature_importances_
2023-06-20 20:50:11,910:INFO:Visual Rendered Successfully
2023-06-20 20:50:12,114:INFO:plot_model() successfully completed......................................
2023-06-20 20:50:46,147:INFO:Initializing plot_model()
2023-06-20 20:50:46,148:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 20:50:46,148:INFO:Checking exceptions
2023-06-20 20:50:46,192:INFO:Preloading libraries
2023-06-20 20:50:46,198:INFO:Copying training dataset
2023-06-20 20:50:46,199:INFO:Plot type: feature
2023-06-20 20:50:46,199:WARNING:No coef_ found. Trying feature_importances_
2023-06-20 20:50:46,588:INFO:Visual Rendered Successfully
2023-06-20 20:50:46,776:INFO:plot_model() successfully completed......................................
2023-06-20 20:50:48,955:INFO:Initializing plot_model()
2023-06-20 20:50:48,955:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 20:50:48,955:INFO:Checking exceptions
2023-06-20 20:50:49,001:INFO:Preloading libraries
2023-06-20 20:50:49,006:INFO:Copying training dataset
2023-06-20 20:50:49,006:INFO:Plot type: feature_all
2023-06-20 20:50:49,082:WARNING:No coef_ found. Trying feature_importances_
2023-06-20 20:50:50,018:INFO:Visual Rendered Successfully
2023-06-20 20:50:50,203:INFO:plot_model() successfully completed......................................
2023-06-20 20:51:07,810:INFO:Initializing plot_model()
2023-06-20 20:51:07,810:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 20:51:07,811:INFO:Checking exceptions
2023-06-20 20:51:08,085:INFO:Preloading libraries
2023-06-20 20:51:08,090:INFO:Copying training dataset
2023-06-20 20:51:08,091:INFO:Plot type: parameter
2023-06-20 20:51:08,095:INFO:Visual Rendered Successfully
2023-06-20 20:51:08,459:INFO:plot_model() successfully completed......................................
2023-06-20 21:04:11,985:INFO:Initializing plot_model()
2023-06-20 21:04:11,986:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 21:04:11,986:INFO:Checking exceptions
2023-06-20 21:04:12,006:INFO:Preloading libraries
2023-06-20 21:04:12,006:INFO:Copying training dataset
2023-06-20 21:04:12,006:INFO:Plot type: auc
2023-06-20 21:04:12,174:INFO:Fitting Model
2023-06-20 21:04:12,176:WARNING:X does not have valid feature names, but LogisticRegression was fitted with feature names

2023-06-20 21:04:12,178:INFO:Scoring test/hold-out set
2023-06-20 21:04:12,410:INFO:Visual Rendered Successfully
2023-06-20 21:04:12,682:INFO:plot_model() successfully completed......................................
2023-06-20 21:04:48,453:INFO:Initializing plot_model()
2023-06-20 21:04:48,453:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 21:04:48,453:INFO:Checking exceptions
2023-06-20 21:04:48,464:INFO:Preloading libraries
2023-06-20 21:04:48,465:INFO:Copying training dataset
2023-06-20 21:04:48,465:INFO:Plot type: feature_all
2023-06-20 21:04:48,793:INFO:Visual Rendered Successfully
2023-06-20 21:04:48,894:INFO:plot_model() successfully completed......................................
2023-06-20 21:04:55,044:INFO:Initializing plot_model()
2023-06-20 21:04:55,044:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 21:04:55,044:INFO:Checking exceptions
2023-06-20 21:04:55,055:INFO:Preloading libraries
2023-06-20 21:04:55,055:INFO:Copying training dataset
2023-06-20 21:04:55,055:INFO:Plot type: gain
2023-06-20 21:04:55,055:INFO:Generating predictions / predict_proba on X_test
2023-06-20 21:04:55,262:INFO:Visual Rendered Successfully
2023-06-20 21:04:55,362:INFO:plot_model() successfully completed......................................
2023-06-20 21:05:33,884:INFO:Initializing plot_model()
2023-06-20 21:05:33,884:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 21:05:33,884:INFO:Checking exceptions
2023-06-20 21:05:33,896:INFO:Preloading libraries
2023-06-20 21:05:33,896:INFO:Copying training dataset
2023-06-20 21:05:33,896:INFO:Plot type: lift
2023-06-20 21:05:33,896:INFO:Generating predictions / predict_proba on X_test
2023-06-20 21:05:34,111:INFO:Visual Rendered Successfully
2023-06-20 21:05:34,211:INFO:plot_model() successfully completed......................................
2023-06-20 21:07:59,732:INFO:Initializing plot_model()
2023-06-20 21:07:59,732:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 21:07:59,733:INFO:Checking exceptions
2023-06-20 21:07:59,745:INFO:Preloading libraries
2023-06-20 21:07:59,746:INFO:Copying training dataset
2023-06-20 21:07:59,746:INFO:Plot type: threshold
2023-06-20 21:07:59,910:INFO:Fitting Model
2023-06-20 21:08:11,153:WARNING:X does not have valid feature names, but LogisticRegression was fitted with feature names

2023-06-20 21:08:11,175:INFO:Scoring test/hold-out set
2023-06-20 21:08:11,575:INFO:Visual Rendered Successfully
2023-06-20 21:08:11,706:INFO:plot_model() successfully completed......................................
2023-06-20 21:10:09,567:INFO:Initializing get_config()
2023-06-20 21:10:09,567:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, variable=X_train_selected)
2023-06-20 21:10:29,616:INFO:Initializing get_config()
2023-06-20 21:10:29,616:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, variable=train_data)
2023-06-20 21:11:25,371:INFO:Initializing plot_model()
2023-06-20 21:11:25,372:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 21:11:25,372:INFO:Checking exceptions
2023-06-20 21:11:25,385:INFO:Preloading libraries
2023-06-20 21:11:25,385:INFO:Copying training dataset
2023-06-20 21:11:25,385:INFO:Plot type: feature_all
2023-06-20 21:11:25,699:INFO:Visual Rendered Successfully
2023-06-20 21:11:25,806:INFO:plot_model() successfully completed......................................
2023-06-20 21:11:30,691:INFO:Initializing plot_model()
2023-06-20 21:11:30,691:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 21:11:30,691:INFO:Checking exceptions
2023-06-20 21:11:30,701:INFO:Preloading libraries
2023-06-20 21:11:30,701:INFO:Copying training dataset
2023-06-20 21:11:30,701:INFO:Plot type: feature
2023-06-20 21:11:30,936:INFO:Visual Rendered Successfully
2023-06-20 21:11:31,036:INFO:plot_model() successfully completed......................................
2023-06-20 21:11:31,804:INFO:Initializing plot_model()
2023-06-20 21:11:31,804:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, system=True)
2023-06-20 21:11:31,804:INFO:Checking exceptions
2023-06-20 21:11:31,815:INFO:Preloading libraries
2023-06-20 21:11:31,816:INFO:Copying training dataset
2023-06-20 21:11:31,816:INFO:Plot type: feature_all
2023-06-20 21:11:32,122:INFO:Visual Rendered Successfully
2023-06-20 21:11:32,221:INFO:plot_model() successfully completed......................................
2023-06-20 21:15:26,377:INFO:Initializing get_config()
2023-06-20 21:15:26,377:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, variable=X_train_selected)
2023-06-20 21:18:55,241:INFO:Initializing tune_model()
2023-06-20 21:18:55,241:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25], 'penalty': ['l1', 'l2', 'elasticnet'], 'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>)
2023-06-20 21:18:55,242:INFO:Checking exceptions
2023-06-20 21:18:55,270:INFO:Copying training dataset
2023-06-20 21:18:55,291:INFO:Checking base model
2023-06-20 21:18:55,291:INFO:Base model : Logistic Regression
2023-06-20 21:18:55,297:INFO:Declaring metric variables
2023-06-20 21:18:55,302:INFO:Defining Hyperparameters
2023-06-20 21:18:55,464:INFO:custom_grid: {'actual_estimator__C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25], 'actual_estimator__penalty': ['l1', 'l2', 'elasticnet'], 'actual_estimator__solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}
2023-06-20 21:18:55,464:INFO:Tuning with n_jobs=-1
2023-06-20 21:18:55,464:INFO:Initializing RandomizedSearchCV
2023-06-20 21:21:05,539:WARNING:
80 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 71, in _check_solver
    raise ValueError(
ValueError: Only 'saga' solver supports elasticnet penalty, got solver=liblinear.

--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver newton-cg supports only 'l2' or 'none' penalties, got elasticnet penalty.

--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got elasticnet penalty.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver sag supports only 'l2' or 'none' penalties, got l1 penalty.


2023-06-20 21:21:05,541:WARNING:One or more of the test scores are non-finite: [0.75014651        nan        nan        nan 0.75157257        nan
        nan        nan        nan        nan]

2023-06-20 21:21:07,120:INFO:best_params: {'actual_estimator__solver': 'lbfgs', 'actual_estimator__penalty': 'l2', 'actual_estimator__C': 0.001}
2023-06-20 21:21:07,121:INFO:Hyperparameter search completed
2023-06-20 21:21:07,122:INFO:SubProcess create_model() called ==================================
2023-06-20 21:21:07,122:INFO:Initializing create_model()
2023-06-20 21:21:07,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022523A4C4C0>, model_only=True, return_train_score=False, kwargs={'solver': 'lbfgs', 'penalty': 'l2', 'C': 0.001})
2023-06-20 21:21:07,123:INFO:Checking exceptions
2023-06-20 21:21:07,123:INFO:Importing libraries
2023-06-20 21:21:07,123:INFO:Copying training dataset
2023-06-20 21:21:07,150:INFO:Defining folds
2023-06-20 21:21:07,150:INFO:Declaring metric variables
2023-06-20 21:21:07,155:INFO:Importing untrained model
2023-06-20 21:21:07,155:INFO:Declaring custom model
2023-06-20 21:21:07,159:INFO:Logistic Regression Imported successfully
2023-06-20 21:21:07,169:INFO:Starting cross validation
2023-06-20 21:21:07,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 21:21:18,600:INFO:Calculating mean and std
2023-06-20 21:21:18,602:INFO:Creating metrics dataframe
2023-06-20 21:21:18,609:INFO:Finalizing model
2023-06-20 21:21:20,190:INFO:Uploading results into container
2023-06-20 21:21:20,192:INFO:Uploading model into container now
2023-06-20 21:21:20,193:INFO:_master_model_container: 4
2023-06-20 21:21:20,193:INFO:_display_container: 8
2023-06-20 21:21:20,193:INFO:LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 21:21:20,193:INFO:create_model() successfully completed......................................
2023-06-20 21:21:20,319:INFO:SubProcess create_model() end ==================================
2023-06-20 21:21:20,320:INFO:choose_better activated
2023-06-20 21:21:20,323:INFO:SubProcess create_model() called ==================================
2023-06-20 21:21:20,324:INFO:Initializing create_model()
2023-06-20 21:21:20,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002250B7C9E50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 21:21:20,324:INFO:Checking exceptions
2023-06-20 21:21:20,326:INFO:Importing libraries
2023-06-20 21:21:20,327:INFO:Copying training dataset
2023-06-20 21:21:20,357:INFO:Defining folds
2023-06-20 21:21:20,357:INFO:Declaring metric variables
2023-06-20 21:21:20,358:INFO:Importing untrained model
2023-06-20 21:21:20,358:INFO:Declaring custom model
2023-06-20 21:21:20,359:INFO:Logistic Regression Imported successfully
2023-06-20 21:21:20,359:INFO:Starting cross validation
2023-06-20 21:21:20,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 21:21:32,238:INFO:Calculating mean and std
2023-06-20 21:21:32,239:INFO:Creating metrics dataframe
2023-06-20 21:21:32,242:INFO:Finalizing model
2023-06-20 21:21:33,782:INFO:Uploading results into container
2023-06-20 21:21:33,783:INFO:Uploading model into container now
2023-06-20 21:21:33,784:INFO:_master_model_container: 5
2023-06-20 21:21:33,784:INFO:_display_container: 9
2023-06-20 21:21:33,785:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 21:21:33,785:INFO:create_model() successfully completed......................................
2023-06-20 21:21:33,888:INFO:SubProcess create_model() end ==================================
2023-06-20 21:21:33,888:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7516
2023-06-20 21:21:33,889:INFO:LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7501
2023-06-20 21:21:33,889:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-06-20 21:21:33,889:INFO:choose_better completed
2023-06-20 21:21:33,890:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-20 21:21:33,905:INFO:_master_model_container: 5
2023-06-20 21:21:33,906:INFO:_display_container: 8
2023-06-20 21:21:33,906:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-20 21:21:33,906:INFO:tune_model() successfully completed......................................
2023-06-20 22:08:56,647:INFO:Initializing predict_model()
2023-06-20 22:08:56,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=3,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=0.1,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=64,
                                                             n_jobs=-1,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBD9B2EF70>)
2023-06-20 22:08:56,649:INFO:Checking exceptions
2023-06-20 22:08:56,649:INFO:Preloading libraries
2023-06-20 22:09:00,429:INFO:Initializing predict_model()
2023-06-20 22:09:00,429:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EC0DDBEF70>)
2023-06-20 22:09:00,429:INFO:Checking exceptions
2023-06-20 22:09:00,429:INFO:Preloading libraries
2023-06-20 22:09:13,682:INFO:Initializing plot_model()
2023-06-20 22:09:13,682:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 22:09:13,682:INFO:Checking exceptions
2023-06-20 22:09:13,788:INFO:Preloading libraries
2023-06-20 22:09:13,794:INFO:Copying training dataset
2023-06-20 22:09:13,794:INFO:Plot type: auc
2023-06-20 22:09:14,053:INFO:Fitting Model
2023-06-20 22:09:14,054:WARNING:X does not have valid feature names, but RandomForestClassifier was fitted with feature names

2023-06-20 22:09:14,055:INFO:Scoring test/hold-out set
2023-06-20 22:09:14,309:INFO:Visual Rendered Successfully
2023-06-20 22:09:14,514:INFO:plot_model() successfully completed......................................
2023-06-20 22:09:42,413:INFO:Initializing plot_model()
2023-06-20 22:09:42,414:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 22:09:42,414:INFO:Checking exceptions
2023-06-20 22:09:42,455:INFO:Preloading libraries
2023-06-20 22:09:42,460:INFO:Copying training dataset
2023-06-20 22:09:42,460:INFO:Plot type: gain
2023-06-20 22:09:42,460:INFO:Generating predictions / predict_proba on X_test
2023-06-20 22:09:42,746:INFO:Visual Rendered Successfully
2023-06-20 22:09:42,904:INFO:plot_model() successfully completed......................................
2023-06-20 22:10:10,229:INFO:Initializing plot_model()
2023-06-20 22:10:10,230:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 22:10:10,230:INFO:Checking exceptions
2023-06-20 22:10:10,274:INFO:Preloading libraries
2023-06-20 22:10:10,278:INFO:Copying training dataset
2023-06-20 22:10:10,278:INFO:Plot type: lift
2023-06-20 22:10:10,279:INFO:Generating predictions / predict_proba on X_test
2023-06-20 22:10:10,569:INFO:Visual Rendered Successfully
2023-06-20 22:10:10,732:INFO:plot_model() successfully completed......................................
2023-06-20 22:11:38,061:INFO:Initializing plot_model()
2023-06-20 22:11:38,061:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 22:11:38,061:INFO:Checking exceptions
2023-06-20 22:11:38,128:INFO:Preloading libraries
2023-06-20 22:11:38,133:INFO:Copying training dataset
2023-06-20 22:11:38,133:INFO:Plot type: feature_all
2023-06-20 22:11:38,211:WARNING:No coef_ found. Trying feature_importances_
2023-06-20 22:11:39,100:INFO:Visual Rendered Successfully
2023-06-20 22:11:39,276:INFO:plot_model() successfully completed......................................
2023-06-20 22:11:41,462:INFO:Initializing plot_model()
2023-06-20 22:11:41,462:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 22:11:41,463:INFO:Checking exceptions
2023-06-20 22:11:41,533:INFO:Preloading libraries
2023-06-20 22:11:41,541:INFO:Copying training dataset
2023-06-20 22:11:41,541:INFO:Plot type: feature
2023-06-20 22:11:41,542:WARNING:No coef_ found. Trying feature_importances_
2023-06-20 22:11:42,146:INFO:Visual Rendered Successfully
2023-06-20 22:11:42,459:INFO:plot_model() successfully completed......................................
2023-06-20 22:13:11,158:INFO:Initializing predict_model()
2023-06-20 22:13:11,158:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBDB128670>)
2023-06-20 22:13:11,158:INFO:Checking exceptions
2023-06-20 22:13:11,159:INFO:Preloading libraries
2023-06-20 22:13:15,409:INFO:Initializing predict_model()
2023-06-20 22:13:15,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBD9B2EF70>)
2023-06-20 22:13:15,410:INFO:Checking exceptions
2023-06-20 22:13:15,410:INFO:Preloading libraries
2023-06-20 22:15:05,864:INFO:Initializing predict_model()
2023-06-20 22:15:05,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBDB0AE790>)
2023-06-20 22:15:05,864:INFO:Checking exceptions
2023-06-20 22:15:05,864:INFO:Preloading libraries
2023-06-20 22:15:05,867:INFO:Set up data.
2023-06-20 22:15:05,956:INFO:Set up index.
2023-06-20 22:15:18,094:INFO:Initializing predict_model()
2023-06-20 22:15:18,094:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EC0DDAB280>)
2023-06-20 22:15:18,094:INFO:Checking exceptions
2023-06-20 22:15:18,094:INFO:Preloading libraries
2023-06-20 22:15:18,097:INFO:Set up data.
2023-06-20 22:15:18,180:INFO:Set up index.
2023-06-20 22:17:49,869:INFO:Initializing plot_model()
2023-06-20 22:17:49,870:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 22:17:49,870:INFO:Checking exceptions
2023-06-20 22:17:50,012:INFO:Preloading libraries
2023-06-20 22:17:50,018:INFO:Copying training dataset
2023-06-20 22:17:50,018:INFO:Plot type: confusion_matrix
2023-06-20 22:17:50,258:INFO:Fitting Model
2023-06-20 22:17:50,259:WARNING:X does not have valid feature names, but RandomForestClassifier was fitted with feature names

2023-06-20 22:17:50,259:INFO:Scoring test/hold-out set
2023-06-20 22:17:50,409:INFO:Visual Rendered Successfully
2023-06-20 22:17:50,578:INFO:plot_model() successfully completed......................................
2023-06-20 22:22:28,715:INFO:Initializing create_model()
2023-06-20 22:22:28,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-20 22:22:28,716:INFO:Checking exceptions
2023-06-20 22:22:28,736:INFO:Importing libraries
2023-06-20 22:22:28,736:INFO:Copying training dataset
2023-06-20 22:22:28,831:INFO:Defining folds
2023-06-20 22:22:28,831:INFO:Declaring metric variables
2023-06-20 22:22:28,841:INFO:Importing untrained model
2023-06-20 22:22:28,841:INFO:Declaring custom model
2023-06-20 22:22:28,848:INFO:Random Forest Classifier Imported successfully
2023-06-20 22:22:28,859:INFO:Starting cross validation
2023-06-20 22:22:28,860:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-20 22:26:25,427:INFO:Calculating mean and std
2023-06-20 22:26:25,428:INFO:Creating metrics dataframe
2023-06-20 22:26:25,437:INFO:Finalizing model
2023-06-20 22:27:53,060:INFO:Uploading results into container
2023-06-20 22:27:53,062:INFO:Uploading model into container now
2023-06-20 22:27:53,109:INFO:_master_model_container: 3
2023-06-20 22:27:53,110:INFO:_display_container: 12
2023-06-20 22:27:53,111:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-20 22:27:53,111:INFO:create_model() successfully completed......................................
2023-06-20 22:27:53,656:INFO:Initializing evaluate_model()
2023-06-20 22:27:53,656:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-20 22:27:53,702:INFO:Initializing plot_model()
2023-06-20 22:27:53,702:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 22:27:53,703:INFO:Checking exceptions
2023-06-20 22:27:53,783:INFO:Preloading libraries
2023-06-20 22:27:53,791:INFO:Copying training dataset
2023-06-20 22:27:53,791:INFO:Plot type: pipeline
2023-06-20 22:27:53,978:INFO:Visual Rendered Successfully
2023-06-20 22:27:54,287:INFO:plot_model() successfully completed......................................
2023-06-20 22:28:51,566:INFO:Initializing plot_model()
2023-06-20 22:28:51,566:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, system=True)
2023-06-20 22:28:51,566:INFO:Checking exceptions
2023-06-20 22:28:51,614:INFO:Preloading libraries
2023-06-20 22:28:51,618:INFO:Copying training dataset
2023-06-20 22:28:51,618:INFO:Plot type: auc
2023-06-20 22:28:51,856:INFO:Fitting Model
2023-06-20 22:28:51,857:WARNING:X does not have valid feature names, but RandomForestClassifier was fitted with feature names

2023-06-20 22:28:51,858:INFO:Scoring test/hold-out set
2023-06-20 22:28:52,131:INFO:Visual Rendered Successfully
2023-06-20 22:28:52,377:INFO:plot_model() successfully completed......................................
2023-06-20 22:29:04,634:INFO:Initializing predict_model()
2023-06-20 22:29:04,634:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBD9CE3A60>)
2023-06-20 22:29:04,634:INFO:Checking exceptions
2023-06-20 22:29:04,635:INFO:Preloading libraries
2023-06-20 22:29:08,324:INFO:Initializing predict_model()
2023-06-20 22:29:08,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBD36AA4C0>)
2023-06-20 22:29:08,324:INFO:Checking exceptions
2023-06-20 22:29:08,324:INFO:Preloading libraries
2023-06-20 22:29:52,566:INFO:Initializing predict_model()
2023-06-20 22:29:52,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EBD3CE15E0>)
2023-06-20 22:29:52,567:INFO:Checking exceptions
2023-06-20 22:29:52,567:INFO:Preloading libraries
2023-06-20 22:29:52,570:INFO:Set up data.
2023-06-20 22:29:52,657:INFO:Set up index.
2023-06-20 22:30:03,004:INFO:Initializing interpret_model()
2023-06-20 22:30:03,004:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='log_loss', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EC0DC2BF70>)
2023-06-20 22:30:03,005:INFO:Checking exceptions
2023-06-20 22:30:03,005:INFO:Soft dependency imported: shap: 0.41.0
2023-06-20 22:30:03,072:INFO:plot type: summary
2023-06-20 22:30:03,072:INFO:Creating TreeExplainer
2023-06-20 22:30:03,077:INFO:Compiling shap values
2023-06-20 22:30:05,497:INFO:Visual Rendered Successfully
2023-06-20 22:30:05,497:INFO:interpret_model() successfully completed......................................
2023-06-21 12:23:00,981:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-21 12:23:00,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-21 12:23:00,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-21 12:23:00,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-21 12:23:03,287:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-21 12:23:05,893:INFO:PyCaret ClassificationExperiment
2023-06-21 12:23:05,893:INFO:Logging name: clf-default-name
2023-06-21 12:23:05,893:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-21 12:23:05,893:INFO:version 3.0.2
2023-06-21 12:23:05,893:INFO:Initializing setup()
2023-06-21 12:23:05,893:INFO:self.USI: d350
2023-06-21 12:23:05,894:INFO:self._variable_keys: {'X_test', 'gpu_n_jobs_param', 'y_test', 'pipeline', '_available_plots', 'logging_param', 'data', 'fold_groups_param', 'target_param', 'memory', 'idx', 'log_plots_param', 'gpu_param', 'fix_imbalance', 'exp_name_log', 'exp_id', 'fold_shuffle_param', 'is_multiclass', 'USI', 'y_train', 'html_param', 'n_jobs_param', '_ml_usecase', 'X_train', 'X', 'seed', 'y', 'fold_generator'}
2023-06-21 12:23:05,894:INFO:Checking environment
2023-06-21 12:23:05,894:INFO:python_version: 3.9.7
2023-06-21 12:23:05,894:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-21 12:23:05,894:INFO:machine: AMD64
2023-06-21 12:23:05,894:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-21 12:23:05,895:INFO:Memory: svmem(total=17120436224, available=5429141504, percent=68.3, used=11691294720, free=5429141504)
2023-06-21 12:23:05,895:INFO:Physical Core: 4
2023-06-21 12:23:05,895:INFO:Logical Core: 4
2023-06-21 12:23:05,895:INFO:Checking libraries
2023-06-21 12:23:05,895:INFO:System:
2023-06-21 12:23:05,895:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-21 12:23:05,895:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-21 12:23:05,895:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-21 12:23:05,895:INFO:PyCaret required dependencies:
2023-06-21 12:23:05,895:INFO:                 pip: 23.1.2
2023-06-21 12:23:05,895:INFO:          setuptools: 57.4.0
2023-06-21 12:23:05,895:INFO:             pycaret: 3.0.2
2023-06-21 12:23:05,895:INFO:             IPython: 7.28.0
2023-06-21 12:23:05,895:INFO:          ipywidgets: 8.0.6
2023-06-21 12:23:05,895:INFO:                tqdm: 4.64.0
2023-06-21 12:23:05,895:INFO:               numpy: 1.22.4
2023-06-21 12:23:05,895:INFO:              pandas: 1.3.5
2023-06-21 12:23:05,895:INFO:              jinja2: 3.1.2
2023-06-21 12:23:05,896:INFO:               scipy: 1.10.1
2023-06-21 12:23:05,896:INFO:              joblib: 1.2.0
2023-06-21 12:23:05,896:INFO:             sklearn: 1.1.0
2023-06-21 12:23:05,896:INFO:                pyod: 1.0.9
2023-06-21 12:23:05,896:INFO:            imblearn: 0.9.1
2023-06-21 12:23:05,896:INFO:   category_encoders: 2.6.1
2023-06-21 12:23:05,896:INFO:            lightgbm: 3.3.5
2023-06-21 12:23:05,896:INFO:               numba: 0.57.0
2023-06-21 12:23:05,896:INFO:            requests: 2.31.0
2023-06-21 12:23:05,897:INFO:          matplotlib: 3.4.3
2023-06-21 12:23:05,897:INFO:          scikitplot: 0.3.7
2023-06-21 12:23:05,897:INFO:         yellowbrick: 1.5
2023-06-21 12:23:05,897:INFO:              plotly: 5.8.0
2023-06-21 12:23:05,897:INFO:             kaleido: 0.2.1
2023-06-21 12:23:05,897:INFO:         statsmodels: 0.14.0
2023-06-21 12:23:05,897:INFO:              sktime: 0.17.0
2023-06-21 12:23:05,897:INFO:               tbats: 1.1.3
2023-06-21 12:23:05,898:INFO:            pmdarima: 2.0.3
2023-06-21 12:23:05,898:INFO:              psutil: 5.9.0
2023-06-21 12:23:05,898:INFO:PyCaret optional dependencies:
2023-06-21 12:23:05,918:INFO:                shap: 0.41.0
2023-06-21 12:23:05,918:INFO:           interpret: Not installed
2023-06-21 12:23:05,918:INFO:                umap: Not installed
2023-06-21 12:23:05,918:INFO:    pandas_profiling: Not installed
2023-06-21 12:23:05,918:INFO:  explainerdashboard: Not installed
2023-06-21 12:23:05,918:INFO:             autoviz: Not installed
2023-06-21 12:23:05,918:INFO:           fairlearn: Not installed
2023-06-21 12:23:05,918:INFO:             xgboost: Not installed
2023-06-21 12:23:05,918:INFO:            catboost: Not installed
2023-06-21 12:23:05,918:INFO:              kmodes: Not installed
2023-06-21 12:23:05,918:INFO:             mlxtend: Not installed
2023-06-21 12:23:05,918:INFO:       statsforecast: Not installed
2023-06-21 12:23:05,918:INFO:        tune_sklearn: Not installed
2023-06-21 12:23:05,918:INFO:                 ray: Not installed
2023-06-21 12:23:05,918:INFO:            hyperopt: Not installed
2023-06-21 12:23:05,919:INFO:              optuna: Not installed
2023-06-21 12:23:05,919:INFO:               skopt: Not installed
2023-06-21 12:23:05,919:INFO:              mlflow: Not installed
2023-06-21 12:23:05,919:INFO:              gradio: Not installed
2023-06-21 12:23:05,919:INFO:             fastapi: Not installed
2023-06-21 12:23:05,919:INFO:             uvicorn: Not installed
2023-06-21 12:23:05,919:INFO:              m2cgen: Not installed
2023-06-21 12:23:05,919:INFO:           evidently: Not installed
2023-06-21 12:23:05,919:INFO:               fugue: Not installed
2023-06-21 12:23:05,919:INFO:           streamlit: Not installed
2023-06-21 12:23:05,919:INFO:             prophet: Not installed
2023-06-21 12:23:05,919:INFO:None
2023-06-21 12:23:05,919:INFO:Set up data.
2023-06-21 12:23:05,946:INFO:Set up train/test split.
2023-06-21 12:23:05,946:INFO:Set up data.
2023-06-21 12:23:05,964:INFO:Set up index.
2023-06-21 12:23:05,966:INFO:Set up folding strategy.
2023-06-21 12:23:05,966:INFO:Assigning column types.
2023-06-21 12:23:05,996:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-21 12:23:06,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-21 12:23:06,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 12:23:06,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,258:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-21 12:23:06,259:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 12:23:06,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,291:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-21 12:23:06,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 12:23:06,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,428:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 12:23:06,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,461:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-21 12:23:06,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:06,633:INFO:Preparing preprocessing pipeline...
2023-06-21 12:23:06,637:INFO:Set up simple imputation.
2023-06-21 12:23:06,641:INFO:Set up column name cleaning.
2023-06-21 12:23:06,717:INFO:Finished creating preprocessing pipeline.
2023-06-21 12:23:06,725:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['job_entrepreneur',
                                             'job_housemaid', 'job_unemployed',
                                             'job_retired', 'job_self-employed',
                                             'marital_divorced', 'default',
                                             'loan_no', 'contact', 'month_may',
                                             'month_mar', 'previous',
                                             'poutcome_nonexistent',
                                             'poutcome_...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-21 12:23:06,725:INFO:Creating final display dataframe.
2023-06-21 12:23:06,915:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 16)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              d350
2023-06-21 12:23:07,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:07,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:07,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:07,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 12:23:07,120:INFO:setup() successfully completed in 3.56s...............
2023-06-21 12:23:11,268:INFO:Initializing create_model()
2023-06-21 12:23:11,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-21 12:23:11,268:INFO:Checking exceptions
2023-06-21 12:23:11,291:INFO:Importing libraries
2023-06-21 12:23:11,291:INFO:Copying training dataset
2023-06-21 12:23:11,320:INFO:Defining folds
2023-06-21 12:23:11,320:INFO:Declaring metric variables
2023-06-21 12:23:11,326:INFO:Importing untrained model
2023-06-21 12:23:11,332:INFO:Logistic Regression Imported successfully
2023-06-21 12:23:11,343:INFO:Starting cross validation
2023-06-21 12:23:11,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-21 12:23:30,529:INFO:Calculating mean and std
2023-06-21 12:23:30,531:INFO:Creating metrics dataframe
2023-06-21 12:23:30,538:INFO:Finalizing model
2023-06-21 12:23:32,704:INFO:Uploading results into container
2023-06-21 12:23:32,705:INFO:Uploading model into container now
2023-06-21 12:23:32,736:INFO:_master_model_container: 1
2023-06-21 12:23:32,736:INFO:_display_container: 2
2023-06-21 12:23:32,744:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-21 12:23:32,745:INFO:create_model() successfully completed......................................
2023-06-21 12:23:32,912:INFO:Initializing evaluate_model()
2023-06-21 12:23:32,912:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-21 12:23:32,953:INFO:Initializing plot_model()
2023-06-21 12:23:32,953:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, system=True)
2023-06-21 12:23:32,953:INFO:Checking exceptions
2023-06-21 12:23:32,989:INFO:Preloading libraries
2023-06-21 12:23:32,990:INFO:Copying training dataset
2023-06-21 12:23:32,990:INFO:Plot type: pipeline
2023-06-21 12:23:33,205:INFO:Visual Rendered Successfully
2023-06-21 12:23:33,279:INFO:plot_model() successfully completed......................................
2023-06-21 12:23:38,596:INFO:Initializing plot_model()
2023-06-21 12:23:38,596:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, system=True)
2023-06-21 12:23:38,597:INFO:Checking exceptions
2023-06-21 12:23:38,608:INFO:Preloading libraries
2023-06-21 12:23:38,609:INFO:Copying training dataset
2023-06-21 12:23:38,609:INFO:Plot type: parameter
2023-06-21 12:23:38,613:INFO:Visual Rendered Successfully
2023-06-21 12:23:38,680:INFO:plot_model() successfully completed......................................
2023-06-21 12:23:39,372:INFO:Initializing plot_model()
2023-06-21 12:23:39,372:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, system=True)
2023-06-21 12:23:39,372:INFO:Checking exceptions
2023-06-21 12:23:39,385:INFO:Preloading libraries
2023-06-21 12:23:39,385:INFO:Copying training dataset
2023-06-21 12:23:39,385:INFO:Plot type: auc
2023-06-21 12:23:39,552:INFO:Fitting Model
2023-06-21 12:23:39,554:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-21 12:23:39,555:INFO:Scoring test/hold-out set
2023-06-21 12:23:39,775:INFO:Visual Rendered Successfully
2023-06-21 12:23:39,900:INFO:plot_model() successfully completed......................................
2023-06-21 12:23:52,234:INFO:Initializing predict_model()
2023-06-21 12:23:52,234:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A29CA763A0>)
2023-06-21 12:23:52,235:INFO:Checking exceptions
2023-06-21 12:23:52,235:INFO:Preloading libraries
2023-06-21 12:23:55,348:INFO:Initializing predict_model()
2023-06-21 12:23:55,348:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001A28AF69310>)
2023-06-21 12:23:55,349:INFO:Checking exceptions
2023-06-21 12:23:55,349:INFO:Preloading libraries
2023-06-21 12:23:55,351:INFO:Set up data.
2023-06-21 12:23:55,377:INFO:Set up index.
2023-06-21 16:05:38,039:INFO:Initializing tune_model()
2023-06-21 16:05:38,040:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25], 'penalty': ['l1', 'l2', 'elasticnet'], 'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>)
2023-06-21 16:05:38,041:INFO:Checking exceptions
2023-06-21 16:05:38,175:INFO:Copying training dataset
2023-06-21 16:05:38,196:INFO:Checking base model
2023-06-21 16:05:38,197:INFO:Base model : Logistic Regression
2023-06-21 16:05:38,203:INFO:Declaring metric variables
2023-06-21 16:05:38,210:INFO:Defining Hyperparameters
2023-06-21 16:05:38,663:INFO:custom_grid: {'actual_estimator__C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25], 'actual_estimator__penalty': ['l1', 'l2', 'elasticnet'], 'actual_estimator__solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}
2023-06-21 16:05:38,663:INFO:Tuning with n_jobs=-1
2023-06-21 16:05:38,663:INFO:Initializing RandomizedSearchCV
2023-06-21 16:07:59,335:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
80 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 71, in _check_solver
    raise ValueError(
ValueError: Only 'saga' solver supports elasticnet penalty, got solver=liblinear.

--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver newton-cg supports only 'l2' or 'none' penalties, got elasticnet penalty.

--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got elasticnet penalty.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver sag supports only 'l2' or 'none' penalties, got l1 penalty.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-06-21 16:07:59,342:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_search.py:953: UserWarning: One or more of the test scores are non-finite: [0.75014651        nan        nan        nan 0.75157257        nan
        nan        nan        nan        nan]
  warnings.warn(

2023-06-21 16:08:01,005:INFO:best_params: {'actual_estimator__solver': 'lbfgs', 'actual_estimator__penalty': 'l2', 'actual_estimator__C': 0.001}
2023-06-21 16:08:01,006:INFO:Hyperparameter search completed
2023-06-21 16:08:01,007:INFO:SubProcess create_model() called ==================================
2023-06-21 16:08:01,008:INFO:Initializing create_model()
2023-06-21 16:08:01,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A29A1B9850>, model_only=True, return_train_score=False, kwargs={'solver': 'lbfgs', 'penalty': 'l2', 'C': 0.001})
2023-06-21 16:08:01,008:INFO:Checking exceptions
2023-06-21 16:08:01,009:INFO:Importing libraries
2023-06-21 16:08:01,009:INFO:Copying training dataset
2023-06-21 16:08:01,044:INFO:Defining folds
2023-06-21 16:08:01,045:INFO:Declaring metric variables
2023-06-21 16:08:01,049:INFO:Importing untrained model
2023-06-21 16:08:01,049:INFO:Declaring custom model
2023-06-21 16:08:01,056:INFO:Logistic Regression Imported successfully
2023-06-21 16:08:01,068:INFO:Starting cross validation
2023-06-21 16:08:01,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-21 16:08:16,583:INFO:Calculating mean and std
2023-06-21 16:08:16,585:INFO:Creating metrics dataframe
2023-06-21 16:08:16,595:INFO:Finalizing model
2023-06-21 16:08:18,365:INFO:Uploading results into container
2023-06-21 16:08:18,366:INFO:Uploading model into container now
2023-06-21 16:08:18,367:INFO:_master_model_container: 2
2023-06-21 16:08:18,367:INFO:_display_container: 5
2023-06-21 16:08:18,367:INFO:LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-21 16:08:18,367:INFO:create_model() successfully completed......................................
2023-06-21 16:08:18,453:INFO:SubProcess create_model() end ==================================
2023-06-21 16:08:18,453:INFO:choose_better activated
2023-06-21 16:08:18,460:INFO:SubProcess create_model() called ==================================
2023-06-21 16:08:18,460:INFO:Initializing create_model()
2023-06-21 16:08:18,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-21 16:08:18,460:INFO:Checking exceptions
2023-06-21 16:08:18,462:INFO:Importing libraries
2023-06-21 16:08:18,462:INFO:Copying training dataset
2023-06-21 16:08:18,490:INFO:Defining folds
2023-06-21 16:08:18,491:INFO:Declaring metric variables
2023-06-21 16:08:18,491:INFO:Importing untrained model
2023-06-21 16:08:18,491:INFO:Declaring custom model
2023-06-21 16:08:18,492:INFO:Logistic Regression Imported successfully
2023-06-21 16:08:18,492:INFO:Starting cross validation
2023-06-21 16:08:18,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-21 16:08:33,805:INFO:Calculating mean and std
2023-06-21 16:08:33,806:INFO:Creating metrics dataframe
2023-06-21 16:08:33,810:INFO:Finalizing model
2023-06-21 16:08:35,409:INFO:Uploading results into container
2023-06-21 16:08:35,410:INFO:Uploading model into container now
2023-06-21 16:08:35,410:INFO:_master_model_container: 3
2023-06-21 16:08:35,410:INFO:_display_container: 6
2023-06-21 16:08:35,410:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-21 16:08:35,411:INFO:create_model() successfully completed......................................
2023-06-21 16:08:35,479:INFO:SubProcess create_model() end ==================================
2023-06-21 16:08:35,480:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7516
2023-06-21 16:08:35,480:INFO:LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7501
2023-06-21 16:08:35,481:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-06-21 16:08:35,481:INFO:choose_better completed
2023-06-21 16:08:35,481:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-21 16:08:35,503:INFO:_master_model_container: 3
2023-06-21 16:08:35,503:INFO:_display_container: 5
2023-06-21 16:08:35,504:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-21 16:08:35,504:INFO:tune_model() successfully completed......................................
2023-06-21 18:15:21,438:INFO:Initializing plot_model()
2023-06-21 18:15:21,439:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, system=True)
2023-06-21 18:15:21,439:INFO:Checking exceptions
2023-06-21 18:15:21,465:INFO:Preloading libraries
2023-06-21 18:15:21,466:INFO:Copying training dataset
2023-06-21 18:15:21,466:INFO:Plot type: lift
2023-06-21 18:15:21,471:INFO:Generating predictions / predict_proba on X_test
2023-06-21 18:15:21,807:INFO:Visual Rendered Successfully
2023-06-21 18:15:22,054:INFO:plot_model() successfully completed......................................
2023-06-21 18:16:41,923:INFO:Initializing plot_model()
2023-06-21 18:16:41,923:INFO:plot_model(plot=lift, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29CA6BFA0>, system=True)
2023-06-21 18:16:41,923:INFO:Checking exceptions
2023-06-21 18:16:41,936:INFO:Preloading libraries
2023-06-21 18:16:41,936:INFO:Copying training dataset
2023-06-21 18:16:41,936:INFO:Plot type: lift
2023-06-21 18:16:41,936:INFO:Generating predictions / predict_proba on X_test
2023-06-21 18:16:42,325:INFO:Visual Rendered Successfully
2023-06-21 18:16:42,402:INFO:plot_model() successfully completed......................................
2023-06-21 18:57:34,983:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:35,747:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:36,488:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:37,370:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:38,118:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:38,703:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:39,436:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:40,182:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:40,905:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:41,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:42,331:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:43,049:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:43,756:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:44,459:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:45,141:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:45,780:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:46,432:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:47,073:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:47,681:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:48,278:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:48,904:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:49,456:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:50,065:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:50,634:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:51,229:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:51,800:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:52,410:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:53,008:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:57:53,593:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-21 18:58:08,928:WARNING:C:\Users\wyver\AppData\Local\Temp\ipykernel_18820\1812583914.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X_train_selected['subscribed'] = y_train

2023-06-21 18:58:08,929:WARNING:C:\Users\wyver\AppData\Local\Temp\ipykernel_18820\1812583914.py:8: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X_test_selected['subscribed'] = y_test

2023-06-21 18:58:10,599:INFO:PyCaret ClassificationExperiment
2023-06-21 18:58:10,599:INFO:Logging name: clf-default-name
2023-06-21 18:58:10,599:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-21 18:58:10,599:INFO:version 3.0.2
2023-06-21 18:58:10,599:INFO:Initializing setup()
2023-06-21 18:58:10,599:INFO:self.USI: bf05
2023-06-21 18:58:10,599:INFO:self._variable_keys: {'X_test', 'gpu_n_jobs_param', 'y_test', 'pipeline', '_available_plots', 'logging_param', 'data', 'fold_groups_param', 'target_param', 'memory', 'idx', 'log_plots_param', 'gpu_param', 'fix_imbalance', 'exp_name_log', 'exp_id', 'fold_shuffle_param', 'is_multiclass', 'USI', 'y_train', 'html_param', 'n_jobs_param', '_ml_usecase', 'X_train', 'X', 'seed', 'y', 'fold_generator'}
2023-06-21 18:58:10,599:INFO:Checking environment
2023-06-21 18:58:10,599:INFO:python_version: 3.9.7
2023-06-21 18:58:10,599:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-21 18:58:10,599:INFO:machine: AMD64
2023-06-21 18:58:10,599:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-21 18:58:10,600:INFO:Memory: svmem(total=17120436224, available=4023160832, percent=76.5, used=13097275392, free=4023160832)
2023-06-21 18:58:10,600:INFO:Physical Core: 4
2023-06-21 18:58:10,600:INFO:Logical Core: 4
2023-06-21 18:58:10,600:INFO:Checking libraries
2023-06-21 18:58:10,600:INFO:System:
2023-06-21 18:58:10,600:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-21 18:58:10,600:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-21 18:58:10,600:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-21 18:58:10,600:INFO:PyCaret required dependencies:
2023-06-21 18:58:10,600:INFO:                 pip: 23.1.2
2023-06-21 18:58:10,600:INFO:          setuptools: 57.4.0
2023-06-21 18:58:10,600:INFO:             pycaret: 3.0.2
2023-06-21 18:58:10,600:INFO:             IPython: 7.28.0
2023-06-21 18:58:10,600:INFO:          ipywidgets: 8.0.6
2023-06-21 18:58:10,600:INFO:                tqdm: 4.64.0
2023-06-21 18:58:10,600:INFO:               numpy: 1.22.4
2023-06-21 18:58:10,600:INFO:              pandas: 1.3.5
2023-06-21 18:58:10,600:INFO:              jinja2: 3.1.2
2023-06-21 18:58:10,600:INFO:               scipy: 1.10.1
2023-06-21 18:58:10,601:INFO:              joblib: 1.2.0
2023-06-21 18:58:10,601:INFO:             sklearn: 1.1.0
2023-06-21 18:58:10,601:INFO:                pyod: 1.0.9
2023-06-21 18:58:10,601:INFO:            imblearn: 0.9.1
2023-06-21 18:58:10,601:INFO:   category_encoders: 2.6.1
2023-06-21 18:58:10,601:INFO:            lightgbm: 3.3.5
2023-06-21 18:58:10,601:INFO:               numba: 0.57.0
2023-06-21 18:58:10,601:INFO:            requests: 2.31.0
2023-06-21 18:58:10,601:INFO:          matplotlib: 3.4.3
2023-06-21 18:58:10,601:INFO:          scikitplot: 0.3.7
2023-06-21 18:58:10,601:INFO:         yellowbrick: 1.5
2023-06-21 18:58:10,601:INFO:              plotly: 5.8.0
2023-06-21 18:58:10,601:INFO:             kaleido: 0.2.1
2023-06-21 18:58:10,601:INFO:         statsmodels: 0.14.0
2023-06-21 18:58:10,601:INFO:              sktime: 0.17.0
2023-06-21 18:58:10,601:INFO:               tbats: 1.1.3
2023-06-21 18:58:10,601:INFO:            pmdarima: 2.0.3
2023-06-21 18:58:10,601:INFO:              psutil: 5.9.0
2023-06-21 18:58:10,601:INFO:PyCaret optional dependencies:
2023-06-21 18:58:10,602:INFO:                shap: 0.41.0
2023-06-21 18:58:10,602:INFO:           interpret: Not installed
2023-06-21 18:58:10,602:INFO:                umap: Not installed
2023-06-21 18:58:10,602:INFO:    pandas_profiling: Not installed
2023-06-21 18:58:10,602:INFO:  explainerdashboard: Not installed
2023-06-21 18:58:10,602:INFO:             autoviz: Not installed
2023-06-21 18:58:10,602:INFO:           fairlearn: Not installed
2023-06-21 18:58:10,602:INFO:             xgboost: Not installed
2023-06-21 18:58:10,602:INFO:            catboost: Not installed
2023-06-21 18:58:10,602:INFO:              kmodes: Not installed
2023-06-21 18:58:10,602:INFO:             mlxtend: Not installed
2023-06-21 18:58:10,602:INFO:       statsforecast: Not installed
2023-06-21 18:58:10,602:INFO:        tune_sklearn: Not installed
2023-06-21 18:58:10,602:INFO:                 ray: Not installed
2023-06-21 18:58:10,602:INFO:            hyperopt: Not installed
2023-06-21 18:58:10,602:INFO:              optuna: Not installed
2023-06-21 18:58:10,602:INFO:               skopt: Not installed
2023-06-21 18:58:10,602:INFO:              mlflow: Not installed
2023-06-21 18:58:10,602:INFO:              gradio: Not installed
2023-06-21 18:58:10,602:INFO:             fastapi: Not installed
2023-06-21 18:58:10,602:INFO:             uvicorn: Not installed
2023-06-21 18:58:10,602:INFO:              m2cgen: Not installed
2023-06-21 18:58:10,603:INFO:           evidently: Not installed
2023-06-21 18:58:10,603:INFO:               fugue: Not installed
2023-06-21 18:58:10,603:INFO:           streamlit: Not installed
2023-06-21 18:58:10,603:INFO:             prophet: Not installed
2023-06-21 18:58:10,603:INFO:None
2023-06-21 18:58:10,603:INFO:Set up data.
2023-06-21 18:58:10,626:INFO:Set up train/test split.
2023-06-21 18:58:10,626:INFO:Set up data.
2023-06-21 18:58:10,643:INFO:Set up index.
2023-06-21 18:58:10,645:INFO:Set up folding strategy.
2023-06-21 18:58:10,645:INFO:Assigning column types.
2023-06-21 18:58:10,673:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-21 18:58:10,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-21 18:58:10,730:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 18:58:10,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:10,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:10,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-21 18:58:10,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 18:58:10,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:10,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:10,855:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-21 18:58:10,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 18:58:10,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:10,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 18:58:11,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,033:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-21 18:58:11,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,221:INFO:Preparing preprocessing pipeline...
2023-06-21 18:58:11,227:INFO:Set up simple imputation.
2023-06-21 18:58:11,230:INFO:Set up column name cleaning.
2023-06-21 18:58:11,316:INFO:Finished creating preprocessing pipeline.
2023-06-21 18:58:11,321:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['job_entrepreneur',
                                             'job_housemaid', 'job_unemployed',
                                             'job_retired', 'job_self-employed',
                                             'marital_divorced', 'default',
                                             'loan_no', 'contact', 'month_may',
                                             'month_mar', 'previous',
                                             'poutcome_nonexistent',
                                             'poutcome_...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-21 18:58:11,321:INFO:Creating final display dataframe.
2023-06-21 18:58:11,510:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 16)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              bf05
2023-06-21 18:58:11,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,733:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:58:11,734:INFO:setup() successfully completed in 2.8s...............
2023-06-21 18:58:21,588:INFO:Initializing create_model()
2023-06-21 18:58:21,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29C394550>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-21 18:58:21,589:INFO:Checking exceptions
2023-06-21 18:58:21,605:INFO:Importing libraries
2023-06-21 18:58:21,606:INFO:Copying training dataset
2023-06-21 18:58:21,636:INFO:Defining folds
2023-06-21 18:58:21,636:INFO:Declaring metric variables
2023-06-21 18:58:21,641:INFO:Importing untrained model
2023-06-21 18:58:21,645:INFO:Logistic Regression Imported successfully
2023-06-21 18:58:21,657:INFO:Starting cross validation
2023-06-21 18:58:21,659:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-21 18:58:41,076:INFO:Calculating mean and std
2023-06-21 18:58:41,078:INFO:Creating metrics dataframe
2023-06-21 18:58:41,088:INFO:Finalizing model
2023-06-21 18:58:42,659:INFO:Uploading results into container
2023-06-21 18:58:42,660:INFO:Uploading model into container now
2023-06-21 18:58:42,678:INFO:_master_model_container: 1
2023-06-21 18:58:42,678:INFO:_display_container: 2
2023-06-21 18:58:42,679:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-21 18:58:42,679:INFO:create_model() successfully completed......................................
2023-06-21 18:58:42,895:INFO:Initializing evaluate_model()
2023-06-21 18:58:42,895:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29C394550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-21 18:58:42,916:INFO:Initializing plot_model()
2023-06-21 18:58:42,916:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29C394550>, system=True)
2023-06-21 18:58:42,916:INFO:Checking exceptions
2023-06-21 18:58:42,936:INFO:Preloading libraries
2023-06-21 18:58:42,936:INFO:Copying training dataset
2023-06-21 18:58:42,936:INFO:Plot type: pipeline
2023-06-21 18:58:43,045:INFO:Visual Rendered Successfully
2023-06-21 18:58:43,116:INFO:plot_model() successfully completed......................................
2023-06-21 18:58:46,671:INFO:Initializing plot_model()
2023-06-21 18:58:46,671:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29C394550>, system=True)
2023-06-21 18:58:46,671:INFO:Checking exceptions
2023-06-21 18:58:46,682:INFO:Preloading libraries
2023-06-21 18:58:46,682:INFO:Copying training dataset
2023-06-21 18:58:46,682:INFO:Plot type: auc
2023-06-21 18:58:46,850:INFO:Fitting Model
2023-06-21 18:58:46,851:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-21 18:58:46,852:INFO:Scoring test/hold-out set
2023-06-21 18:58:47,040:INFO:Visual Rendered Successfully
2023-06-21 18:58:47,127:INFO:plot_model() successfully completed......................................
2023-06-21 18:58:54,951:INFO:Initializing plot_model()
2023-06-21 18:58:54,951:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A29C394550>, system=True)
2023-06-21 18:58:54,951:INFO:Checking exceptions
2023-06-21 18:58:54,963:INFO:Preloading libraries
2023-06-21 18:58:54,963:INFO:Copying training dataset
2023-06-21 18:58:54,964:INFO:Plot type: calibration
2023-06-21 18:58:54,980:INFO:Scoring test/hold-out set
2023-06-21 18:58:55,166:INFO:Visual Rendered Successfully
2023-06-21 18:58:55,232:INFO:plot_model() successfully completed......................................
2023-06-21 18:59:48,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-21 18:59:48,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-21 18:59:48,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-21 18:59:48,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-21 18:59:51,319:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-21 18:59:52,704:INFO:PyCaret ClassificationExperiment
2023-06-21 18:59:52,704:INFO:Logging name: clf-default-name
2023-06-21 18:59:52,704:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-21 18:59:52,704:INFO:version 3.0.2
2023-06-21 18:59:52,704:INFO:Initializing setup()
2023-06-21 18:59:52,704:INFO:self.USI: 7d66
2023-06-21 18:59:52,704:INFO:self._variable_keys: {'idx', 'logging_param', 'memory', 'X', 'fix_imbalance', '_ml_usecase', 'log_plots_param', 'data', 'is_multiclass', 'X_train', 'y', 'fold_groups_param', 'exp_id', 'fold_shuffle_param', 'USI', '_available_plots', 'gpu_param', 'n_jobs_param', 'y_test', 'exp_name_log', 'html_param', 'y_train', 'pipeline', 'X_test', 'seed', 'fold_generator', 'gpu_n_jobs_param', 'target_param'}
2023-06-21 18:59:52,704:INFO:Checking environment
2023-06-21 18:59:52,705:INFO:python_version: 3.9.7
2023-06-21 18:59:52,705:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-21 18:59:52,705:INFO:machine: AMD64
2023-06-21 18:59:52,705:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-21 18:59:52,706:INFO:Memory: svmem(total=17120436224, available=3827634176, percent=77.6, used=13292802048, free=3827634176)
2023-06-21 18:59:52,706:INFO:Physical Core: 4
2023-06-21 18:59:52,706:INFO:Logical Core: 4
2023-06-21 18:59:52,706:INFO:Checking libraries
2023-06-21 18:59:52,706:INFO:System:
2023-06-21 18:59:52,706:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-21 18:59:52,706:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-21 18:59:52,707:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-21 18:59:52,707:INFO:PyCaret required dependencies:
2023-06-21 18:59:52,707:INFO:                 pip: 23.1.2
2023-06-21 18:59:52,707:INFO:          setuptools: 57.4.0
2023-06-21 18:59:52,707:INFO:             pycaret: 3.0.2
2023-06-21 18:59:52,707:INFO:             IPython: 7.28.0
2023-06-21 18:59:52,707:INFO:          ipywidgets: 8.0.6
2023-06-21 18:59:52,707:INFO:                tqdm: 4.64.0
2023-06-21 18:59:52,707:INFO:               numpy: 1.22.4
2023-06-21 18:59:52,707:INFO:              pandas: 1.3.5
2023-06-21 18:59:52,707:INFO:              jinja2: 3.1.2
2023-06-21 18:59:52,707:INFO:               scipy: 1.10.1
2023-06-21 18:59:52,707:INFO:              joblib: 1.2.0
2023-06-21 18:59:52,707:INFO:             sklearn: 1.1.0
2023-06-21 18:59:52,708:INFO:                pyod: 1.0.9
2023-06-21 18:59:52,708:INFO:            imblearn: 0.9.1
2023-06-21 18:59:52,708:INFO:   category_encoders: 2.6.1
2023-06-21 18:59:52,708:INFO:            lightgbm: 3.3.5
2023-06-21 18:59:52,708:INFO:               numba: 0.57.0
2023-06-21 18:59:52,708:INFO:            requests: 2.31.0
2023-06-21 18:59:52,708:INFO:          matplotlib: 3.4.3
2023-06-21 18:59:52,708:INFO:          scikitplot: 0.3.7
2023-06-21 18:59:52,708:INFO:         yellowbrick: 1.5
2023-06-21 18:59:52,708:INFO:              plotly: 5.8.0
2023-06-21 18:59:52,708:INFO:             kaleido: 0.2.1
2023-06-21 18:59:52,708:INFO:         statsmodels: 0.14.0
2023-06-21 18:59:52,708:INFO:              sktime: 0.17.0
2023-06-21 18:59:52,708:INFO:               tbats: 1.1.3
2023-06-21 18:59:52,708:INFO:            pmdarima: 2.0.3
2023-06-21 18:59:52,708:INFO:              psutil: 5.9.0
2023-06-21 18:59:52,708:INFO:PyCaret optional dependencies:
2023-06-21 18:59:52,729:INFO:                shap: 0.41.0
2023-06-21 18:59:52,729:INFO:           interpret: Not installed
2023-06-21 18:59:52,729:INFO:                umap: Not installed
2023-06-21 18:59:52,729:INFO:    pandas_profiling: Not installed
2023-06-21 18:59:52,729:INFO:  explainerdashboard: Not installed
2023-06-21 18:59:52,730:INFO:             autoviz: Not installed
2023-06-21 18:59:52,730:INFO:           fairlearn: Not installed
2023-06-21 18:59:52,730:INFO:             xgboost: Not installed
2023-06-21 18:59:52,730:INFO:            catboost: Not installed
2023-06-21 18:59:52,730:INFO:              kmodes: Not installed
2023-06-21 18:59:52,730:INFO:             mlxtend: Not installed
2023-06-21 18:59:52,730:INFO:       statsforecast: Not installed
2023-06-21 18:59:52,730:INFO:        tune_sklearn: Not installed
2023-06-21 18:59:52,730:INFO:                 ray: Not installed
2023-06-21 18:59:52,730:INFO:            hyperopt: Not installed
2023-06-21 18:59:52,730:INFO:              optuna: Not installed
2023-06-21 18:59:52,730:INFO:               skopt: Not installed
2023-06-21 18:59:52,730:INFO:              mlflow: Not installed
2023-06-21 18:59:52,730:INFO:              gradio: Not installed
2023-06-21 18:59:52,730:INFO:             fastapi: Not installed
2023-06-21 18:59:52,730:INFO:             uvicorn: Not installed
2023-06-21 18:59:52,730:INFO:              m2cgen: Not installed
2023-06-21 18:59:52,730:INFO:           evidently: Not installed
2023-06-21 18:59:52,730:INFO:               fugue: Not installed
2023-06-21 18:59:52,730:INFO:           streamlit: Not installed
2023-06-21 18:59:52,731:INFO:             prophet: Not installed
2023-06-21 18:59:52,731:INFO:None
2023-06-21 18:59:52,731:INFO:Set up data.
2023-06-21 18:59:52,810:INFO:Set up train/test split.
2023-06-21 18:59:52,810:INFO:Set up data.
2023-06-21 18:59:52,861:INFO:Set up index.
2023-06-21 18:59:52,865:INFO:Set up folding strategy.
2023-06-21 18:59:52,865:INFO:Assigning column types.
2023-06-21 18:59:52,948:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-21 18:59:53,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-21 18:59:53,007:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 18:59:53,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-21 18:59:53,213:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 18:59:53,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,249:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-21 18:59:53,304:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 18:59:53,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,394:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-21 18:59:53,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,429:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-21 18:59:53,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:53,617:INFO:Preparing preprocessing pipeline...
2023-06-21 18:59:53,627:INFO:Set up simple imputation.
2023-06-21 18:59:53,636:INFO:Set up column name cleaning.
2023-06-21 18:59:53,793:INFO:Finished creating preprocessing pipeline.
2023-06-21 18:59:53,801:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-21 18:59:53,802:INFO:Creating final display dataframe.
2023-06-21 18:59:54,143:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 54)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7              Numeric features                53
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              7d66
2023-06-21 18:59:54,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:54,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:54,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:54,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-21 18:59:54,352:INFO:setup() successfully completed in 2.89s...............
2023-06-21 19:00:01,069:INFO:Initializing create_model()
2023-06-21 19:00:01,069:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E3BFA4F70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-21 19:00:01,069:INFO:Checking exceptions
2023-06-21 19:00:01,091:INFO:Importing libraries
2023-06-21 19:00:01,092:INFO:Copying training dataset
2023-06-21 19:00:01,175:INFO:Defining folds
2023-06-21 19:00:01,175:INFO:Declaring metric variables
2023-06-21 19:00:01,187:INFO:Importing untrained model
2023-06-21 19:00:01,187:INFO:Declaring custom model
2023-06-21 19:00:01,195:INFO:Random Forest Classifier Imported successfully
2023-06-21 19:00:01,207:INFO:Starting cross validation
2023-06-21 19:00:01,209:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-21 19:03:53,199:INFO:Calculating mean and std
2023-06-21 19:03:53,201:INFO:Creating metrics dataframe
2023-06-21 19:03:53,208:INFO:Finalizing model
2023-06-21 19:05:14,233:INFO:Uploading results into container
2023-06-21 19:05:14,234:INFO:Uploading model into container now
2023-06-21 19:05:14,253:INFO:_master_model_container: 1
2023-06-21 19:05:14,254:INFO:_display_container: 2
2023-06-21 19:05:14,255:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-21 19:05:14,255:INFO:create_model() successfully completed......................................
2023-06-21 19:05:14,354:INFO:Initializing evaluate_model()
2023-06-21 19:05:14,354:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E3BFA4F70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-21 19:05:14,395:INFO:Initializing plot_model()
2023-06-21 19:05:14,395:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E3BFA4F70>, system=True)
2023-06-21 19:05:14,396:INFO:Checking exceptions
2023-06-21 19:05:14,459:INFO:Preloading libraries
2023-06-21 19:05:14,466:INFO:Copying training dataset
2023-06-21 19:05:14,466:INFO:Plot type: pipeline
2023-06-21 19:05:14,771:INFO:Visual Rendered Successfully
2023-06-21 19:05:14,849:INFO:plot_model() successfully completed......................................
2023-06-21 19:13:02,302:INFO:Initializing interpret_model()
2023-06-21 19:13:02,302:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E3BFA4F70>)
2023-06-21 19:13:02,302:INFO:Checking exceptions
2023-06-21 19:13:02,302:INFO:Soft dependency imported: shap: 0.41.0
2023-06-21 19:13:03,745:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:35: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _pt_shuffle_rec(i, indexes, index_mask, partition_tree, M, pos):

2023-06-21 19:13:03,877:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:54: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def delta_minimization_order(all_masks, max_swap_size=100, num_passes=2):

2023-06-21 19:13:03,878:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:63: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window(order, start, length):

2023-06-21 19:13:03,878:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:69: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window_score_gain(masks, order, start, length):

2023-06-21 19:13:03,878:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:77: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _mask_delta_score(m1, m2):

2023-06-21 19:13:03,891:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:5: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def identity(x):

2023-06-21 19:13:03,891:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:10: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _identity_inverse(x):

2023-06-21 19:13:03,891:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:15: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def logit(x):

2023-06-21 19:13:03,892:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:20: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _logit_inverse(x):

2023-06-21 19:13:03,901:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:363: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_single_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-21 19:13:03,902:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:385: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_multi_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-21 19:13:03,902:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:428: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _init_masks(cluster_matrix, M, indices_row_pos, indptr):

2023-06-21 19:13:03,902:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:439: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _rec_fill_masks(cluster_matrix, indices_row_pos, indptr, indices, M, ind):

2023-06-21 19:13:03,928:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:186: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _single_delta_mask(dind, masked_inputs, last_mask, data, x, noop_code):

2023-06-21 19:13:03,928:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:197: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _delta_masking(masks, x, curr_delta_inds, varying_rows_out,

2023-06-21 19:13:09,403:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_image.py:175: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _jit_build_partition_tree(xmin, xmax, ymin, ymax, zmin, zmax, total_ywidth, total_zwidth, M, clustering, q):

2023-06-21 19:13:09,438:WARNING:c:\Program Files\Python39\lib\site-packages\shap\explainers\_partition.py:676: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def lower_credit(i, value, M, values, clustering):

2023-06-21 19:13:09,468:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-21 19:13:09,469:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-21 19:13:10,008:INFO:plot type: summary
2023-06-21 19:13:10,008:INFO:Creating TreeExplainer
2023-06-21 19:13:10,011:INFO:Compiling shap values
2023-06-21 19:13:12,532:INFO:Visual Rendered Successfully
2023-06-21 19:13:12,533:INFO:interpret_model() successfully completed......................................
2023-06-22 10:21:21,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 10:21:21,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 10:21:21,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 10:21:21,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 10:21:23,993:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-22 10:21:26,121:INFO:PyCaret ClassificationExperiment
2023-06-22 10:21:26,121:INFO:Logging name: clf-default-name
2023-06-22 10:21:26,122:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-22 10:21:26,122:INFO:version 3.0.2
2023-06-22 10:21:26,122:INFO:Initializing setup()
2023-06-22 10:21:26,122:INFO:self.USI: 8218
2023-06-22 10:21:26,122:INFO:self._variable_keys: {'gpu_n_jobs_param', '_ml_usecase', 'seed', 'log_plots_param', 'gpu_param', 'exp_name_log', 'y_train', 'y', 'X', 'X_test', 'pipeline', 'target_param', 'memory', 'n_jobs_param', 'fix_imbalance', 'idx', 'exp_id', 'USI', '_available_plots', 'is_multiclass', 'data', 'fold_generator', 'html_param', 'fold_groups_param', 'fold_shuffle_param', 'y_test', 'X_train', 'logging_param'}
2023-06-22 10:21:26,122:INFO:Checking environment
2023-06-22 10:21:26,122:INFO:python_version: 3.9.7
2023-06-22 10:21:26,122:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-22 10:21:26,123:INFO:machine: AMD64
2023-06-22 10:21:26,124:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-22 10:21:26,124:INFO:Memory: svmem(total=17120436224, available=7861469184, percent=54.1, used=9258967040, free=7861469184)
2023-06-22 10:21:26,124:INFO:Physical Core: 4
2023-06-22 10:21:26,124:INFO:Logical Core: 4
2023-06-22 10:21:26,124:INFO:Checking libraries
2023-06-22 10:21:26,124:INFO:System:
2023-06-22 10:21:26,124:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-22 10:21:26,124:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-22 10:21:26,124:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-22 10:21:26,124:INFO:PyCaret required dependencies:
2023-06-22 10:21:26,124:INFO:                 pip: 23.1.2
2023-06-22 10:21:26,124:INFO:          setuptools: 57.4.0
2023-06-22 10:21:26,125:INFO:             pycaret: 3.0.2
2023-06-22 10:21:26,125:INFO:             IPython: 7.28.0
2023-06-22 10:21:26,125:INFO:          ipywidgets: 8.0.6
2023-06-22 10:21:26,125:INFO:                tqdm: 4.64.0
2023-06-22 10:21:26,125:INFO:               numpy: 1.22.4
2023-06-22 10:21:26,125:INFO:              pandas: 1.3.5
2023-06-22 10:21:26,125:INFO:              jinja2: 3.1.2
2023-06-22 10:21:26,125:INFO:               scipy: 1.10.1
2023-06-22 10:21:26,125:INFO:              joblib: 1.2.0
2023-06-22 10:21:26,125:INFO:             sklearn: 1.1.0
2023-06-22 10:21:26,125:INFO:                pyod: 1.0.9
2023-06-22 10:21:26,125:INFO:            imblearn: 0.9.1
2023-06-22 10:21:26,125:INFO:   category_encoders: 2.6.1
2023-06-22 10:21:26,125:INFO:            lightgbm: 3.3.5
2023-06-22 10:21:26,125:INFO:               numba: 0.57.0
2023-06-22 10:21:26,125:INFO:            requests: 2.31.0
2023-06-22 10:21:26,125:INFO:          matplotlib: 3.4.3
2023-06-22 10:21:26,125:INFO:          scikitplot: 0.3.7
2023-06-22 10:21:26,126:INFO:         yellowbrick: 1.5
2023-06-22 10:21:26,126:INFO:              plotly: 5.8.0
2023-06-22 10:21:26,126:INFO:             kaleido: 0.2.1
2023-06-22 10:21:26,126:INFO:         statsmodels: 0.14.0
2023-06-22 10:21:26,126:INFO:              sktime: 0.17.0
2023-06-22 10:21:26,126:INFO:               tbats: 1.1.3
2023-06-22 10:21:26,126:INFO:            pmdarima: 2.0.3
2023-06-22 10:21:26,126:INFO:              psutil: 5.9.0
2023-06-22 10:21:26,126:INFO:PyCaret optional dependencies:
2023-06-22 10:21:26,146:INFO:                shap: 0.41.0
2023-06-22 10:21:26,146:INFO:           interpret: Not installed
2023-06-22 10:21:26,146:INFO:                umap: Not installed
2023-06-22 10:21:26,146:INFO:    pandas_profiling: Not installed
2023-06-22 10:21:26,146:INFO:  explainerdashboard: Not installed
2023-06-22 10:21:26,146:INFO:             autoviz: Not installed
2023-06-22 10:21:26,146:INFO:           fairlearn: Not installed
2023-06-22 10:21:26,146:INFO:             xgboost: Not installed
2023-06-22 10:21:26,146:INFO:            catboost: Not installed
2023-06-22 10:21:26,146:INFO:              kmodes: Not installed
2023-06-22 10:21:26,146:INFO:             mlxtend: Not installed
2023-06-22 10:21:26,146:INFO:       statsforecast: Not installed
2023-06-22 10:21:26,147:INFO:        tune_sklearn: Not installed
2023-06-22 10:21:26,147:INFO:                 ray: Not installed
2023-06-22 10:21:26,147:INFO:            hyperopt: Not installed
2023-06-22 10:21:26,147:INFO:              optuna: Not installed
2023-06-22 10:21:26,147:INFO:               skopt: Not installed
2023-06-22 10:21:26,147:INFO:              mlflow: Not installed
2023-06-22 10:21:26,147:INFO:              gradio: Not installed
2023-06-22 10:21:26,147:INFO:             fastapi: Not installed
2023-06-22 10:21:26,147:INFO:             uvicorn: Not installed
2023-06-22 10:21:26,147:INFO:              m2cgen: Not installed
2023-06-22 10:21:26,147:INFO:           evidently: Not installed
2023-06-22 10:21:26,147:INFO:               fugue: Not installed
2023-06-22 10:21:26,147:INFO:           streamlit: Not installed
2023-06-22 10:21:26,147:INFO:             prophet: Not installed
2023-06-22 10:21:26,147:INFO:None
2023-06-22 10:21:26,147:INFO:Set up data.
2023-06-22 10:21:26,233:INFO:Set up train/test split.
2023-06-22 10:21:26,233:INFO:Set up data.
2023-06-22 10:21:26,272:INFO:Set up index.
2023-06-22 10:21:26,274:INFO:Set up folding strategy.
2023-06-22 10:21:26,274:INFO:Assigning column types.
2023-06-22 10:21:26,293:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-22 10:21:26,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 10:21:26,351:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 10:21:26,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:26,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:26,567:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 10:21:26,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 10:21:26,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:26,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:26,610:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-22 10:21:26,671:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 10:21:26,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:26,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:26,862:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 10:21:26,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:26,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:26,926:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-22 10:21:27,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:27,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:27,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:27,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:27,224:INFO:Preparing preprocessing pipeline...
2023-06-22 10:21:27,231:INFO:Set up simple imputation.
2023-06-22 10:21:27,252:INFO:Set up encoding of ordinal features.
2023-06-22 10:21:27,281:INFO:Set up encoding of categorical features.
2023-06-22 10:21:27,285:INFO:Set up column name cleaning.
2023-06-22 10:21:29,502:INFO:Finished creating preprocessing pipeline.
2023-06-22 10:21:29,595:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              st...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'poutcome',
                                                                    'month',
                                                                    'day_of_week'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-22 10:21:29,596:INFO:Creating final display dataframe.
2023-06-22 10:21:31,456:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 20)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7               Ignore features                 1
8              Ordinal features                 3
9              Numeric features                 8
10         Categorical features                10
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                -1
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              8218
2023-06-22 10:21:31,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:31,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:31,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:31,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:21:31,708:INFO:setup() successfully completed in 7.51s...............
2023-06-22 10:34:38,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 10:34:38,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 10:34:38,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 10:34:38,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-22 10:34:40,137:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-22 10:34:41,542:INFO:PyCaret ClassificationExperiment
2023-06-22 10:34:41,543:INFO:Logging name: clf-default-name
2023-06-22 10:34:41,543:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-22 10:34:41,543:INFO:version 3.0.2
2023-06-22 10:34:41,543:INFO:Initializing setup()
2023-06-22 10:34:41,543:INFO:self.USI: 5390
2023-06-22 10:34:41,543:INFO:self._variable_keys: {'gpu_n_jobs_param', '_ml_usecase', 'fix_imbalance', 'log_plots_param', 'exp_id', 'logging_param', 'is_multiclass', 'html_param', 'X_test', 'X', 'target_param', 'seed', 'fold_generator', 'y_train', 'y_test', 'memory', 'idx', 'fold_shuffle_param', 'exp_name_log', 'data', 'fold_groups_param', 'pipeline', 'n_jobs_param', '_available_plots', 'USI', 'y', 'gpu_param', 'X_train'}
2023-06-22 10:34:41,543:INFO:Checking environment
2023-06-22 10:34:41,543:INFO:python_version: 3.9.7
2023-06-22 10:34:41,543:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-22 10:34:41,543:INFO:machine: AMD64
2023-06-22 10:34:41,543:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-22 10:34:41,543:INFO:Memory: svmem(total=17120436224, available=7629172736, percent=55.4, used=9491263488, free=7629172736)
2023-06-22 10:34:41,543:INFO:Physical Core: 4
2023-06-22 10:34:41,543:INFO:Logical Core: 4
2023-06-22 10:34:41,544:INFO:Checking libraries
2023-06-22 10:34:41,544:INFO:System:
2023-06-22 10:34:41,544:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-22 10:34:41,544:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-22 10:34:41,544:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-22 10:34:41,544:INFO:PyCaret required dependencies:
2023-06-22 10:34:41,544:INFO:                 pip: 23.1.2
2023-06-22 10:34:41,544:INFO:          setuptools: 57.4.0
2023-06-22 10:34:41,544:INFO:             pycaret: 3.0.2
2023-06-22 10:34:41,544:INFO:             IPython: 7.28.0
2023-06-22 10:34:41,544:INFO:          ipywidgets: 8.0.6
2023-06-22 10:34:41,544:INFO:                tqdm: 4.64.0
2023-06-22 10:34:41,544:INFO:               numpy: 1.22.4
2023-06-22 10:34:41,544:INFO:              pandas: 1.3.5
2023-06-22 10:34:41,544:INFO:              jinja2: 3.1.2
2023-06-22 10:34:41,544:INFO:               scipy: 1.10.1
2023-06-22 10:34:41,544:INFO:              joblib: 1.2.0
2023-06-22 10:34:41,544:INFO:             sklearn: 1.1.0
2023-06-22 10:34:41,544:INFO:                pyod: 1.0.9
2023-06-22 10:34:41,544:INFO:            imblearn: 0.9.1
2023-06-22 10:34:41,545:INFO:   category_encoders: 2.6.1
2023-06-22 10:34:41,545:INFO:            lightgbm: 3.3.5
2023-06-22 10:34:41,545:INFO:               numba: 0.57.0
2023-06-22 10:34:41,545:INFO:            requests: 2.31.0
2023-06-22 10:34:41,545:INFO:          matplotlib: 3.4.3
2023-06-22 10:34:41,545:INFO:          scikitplot: 0.3.7
2023-06-22 10:34:41,545:INFO:         yellowbrick: 1.5
2023-06-22 10:34:41,545:INFO:              plotly: 5.8.0
2023-06-22 10:34:41,545:INFO:             kaleido: 0.2.1
2023-06-22 10:34:41,545:INFO:         statsmodels: 0.14.0
2023-06-22 10:34:41,545:INFO:              sktime: 0.17.0
2023-06-22 10:34:41,545:INFO:               tbats: 1.1.3
2023-06-22 10:34:41,545:INFO:            pmdarima: 2.0.3
2023-06-22 10:34:41,545:INFO:              psutil: 5.9.0
2023-06-22 10:34:41,545:INFO:PyCaret optional dependencies:
2023-06-22 10:34:41,567:INFO:                shap: 0.41.0
2023-06-22 10:34:41,568:INFO:           interpret: Not installed
2023-06-22 10:34:41,568:INFO:                umap: Not installed
2023-06-22 10:34:41,568:INFO:    pandas_profiling: Not installed
2023-06-22 10:34:41,568:INFO:  explainerdashboard: Not installed
2023-06-22 10:34:41,568:INFO:             autoviz: Not installed
2023-06-22 10:34:41,568:INFO:           fairlearn: Not installed
2023-06-22 10:34:41,568:INFO:             xgboost: Not installed
2023-06-22 10:34:41,568:INFO:            catboost: Not installed
2023-06-22 10:34:41,568:INFO:              kmodes: Not installed
2023-06-22 10:34:41,568:INFO:             mlxtend: Not installed
2023-06-22 10:34:41,568:INFO:       statsforecast: Not installed
2023-06-22 10:34:41,568:INFO:        tune_sklearn: Not installed
2023-06-22 10:34:41,568:INFO:                 ray: Not installed
2023-06-22 10:34:41,568:INFO:            hyperopt: Not installed
2023-06-22 10:34:41,568:INFO:              optuna: Not installed
2023-06-22 10:34:41,568:INFO:               skopt: Not installed
2023-06-22 10:34:41,568:INFO:              mlflow: Not installed
2023-06-22 10:34:41,568:INFO:              gradio: Not installed
2023-06-22 10:34:41,569:INFO:             fastapi: Not installed
2023-06-22 10:34:41,569:INFO:             uvicorn: Not installed
2023-06-22 10:34:41,569:INFO:              m2cgen: Not installed
2023-06-22 10:34:41,569:INFO:           evidently: Not installed
2023-06-22 10:34:41,569:INFO:               fugue: Not installed
2023-06-22 10:34:41,569:INFO:           streamlit: Not installed
2023-06-22 10:34:41,569:INFO:             prophet: Not installed
2023-06-22 10:34:41,569:INFO:None
2023-06-22 10:34:41,569:INFO:Set up data.
2023-06-22 10:34:41,640:INFO:Set up train/test split.
2023-06-22 10:34:41,640:INFO:Set up data.
2023-06-22 10:34:41,688:INFO:Set up index.
2023-06-22 10:34:41,691:INFO:Set up folding strategy.
2023-06-22 10:34:41,691:INFO:Assigning column types.
2023-06-22 10:34:41,772:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-22 10:34:41,827:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 10:34:41,830:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 10:34:41,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:41,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:41,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-22 10:34:41,982:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 10:34:42,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,015:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-22 10:34:42,069:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 10:34:42,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,156:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-22 10:34:42,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,190:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-22 10:34:42,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,369:INFO:Preparing preprocessing pipeline...
2023-06-22 10:34:42,379:INFO:Set up simple imputation.
2023-06-22 10:34:42,388:INFO:Set up column name cleaning.
2023-06-22 10:34:42,533:INFO:Finished creating preprocessing pipeline.
2023-06-22 10:34:42,540:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-22 10:34:42,540:INFO:Creating final display dataframe.
2023-06-22 10:34:42,878:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 54)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7              Numeric features                53
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5390
2023-06-22 10:34:42,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:42,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:43,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:43,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-22 10:34:43,090:INFO:setup() successfully completed in 2.8s...............
2023-06-22 10:34:51,312:INFO:Initializing create_model()
2023-06-22 10:34:51,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-22 10:34:51,312:INFO:Checking exceptions
2023-06-22 10:34:51,334:INFO:Importing libraries
2023-06-22 10:34:51,334:INFO:Copying training dataset
2023-06-22 10:34:51,409:INFO:Defining folds
2023-06-22 10:34:51,410:INFO:Declaring metric variables
2023-06-22 10:34:51,414:INFO:Importing untrained model
2023-06-22 10:34:51,414:INFO:Declaring custom model
2023-06-22 10:34:51,421:INFO:Random Forest Classifier Imported successfully
2023-06-22 10:34:51,436:INFO:Starting cross validation
2023-06-22 10:34:51,438:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-22 10:39:45,821:INFO:Calculating mean and std
2023-06-22 10:39:45,822:INFO:Creating metrics dataframe
2023-06-22 10:39:45,829:INFO:Finalizing model
2023-06-22 10:41:19,538:INFO:Uploading results into container
2023-06-22 10:41:19,540:INFO:Uploading model into container now
2023-06-22 10:41:19,562:INFO:_master_model_container: 1
2023-06-22 10:41:19,563:INFO:_display_container: 2
2023-06-22 10:41:19,563:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-22 10:41:19,564:INFO:create_model() successfully completed......................................
2023-06-22 10:41:19,669:INFO:Initializing evaluate_model()
2023-06-22 10:41:19,669:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-22 10:41:19,723:INFO:Initializing plot_model()
2023-06-22 10:41:19,723:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>, system=True)
2023-06-22 10:41:19,723:INFO:Checking exceptions
2023-06-22 10:41:19,794:INFO:Preloading libraries
2023-06-22 10:41:19,800:INFO:Copying training dataset
2023-06-22 10:41:19,800:INFO:Plot type: pipeline
2023-06-22 10:41:19,993:INFO:Visual Rendered Successfully
2023-06-22 10:41:20,067:INFO:plot_model() successfully completed......................................
2023-06-22 10:41:25,118:INFO:Initializing plot_model()
2023-06-22 10:41:25,118:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>, system=True)
2023-06-22 10:41:25,118:INFO:Checking exceptions
2023-06-22 10:41:25,187:INFO:Preloading libraries
2023-06-22 10:41:25,193:INFO:Copying training dataset
2023-06-22 10:41:25,193:INFO:Plot type: parameter
2023-06-22 10:41:25,198:INFO:Visual Rendered Successfully
2023-06-22 10:41:25,283:INFO:plot_model() successfully completed......................................
2023-06-22 10:41:25,496:INFO:Initializing plot_model()
2023-06-22 10:41:25,496:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>, system=True)
2023-06-22 10:41:25,496:INFO:Checking exceptions
2023-06-22 10:41:25,538:INFO:Preloading libraries
2023-06-22 10:41:25,543:INFO:Copying training dataset
2023-06-22 10:41:25,543:INFO:Plot type: auc
2023-06-22 10:41:25,802:INFO:Fitting Model
2023-06-22 10:41:25,814:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-22 10:41:25,815:INFO:Scoring test/hold-out set
2023-06-22 10:41:26,078:INFO:Visual Rendered Successfully
2023-06-22 10:41:26,168:INFO:plot_model() successfully completed......................................
2023-06-22 10:41:31,178:INFO:Initializing plot_model()
2023-06-22 10:41:31,178:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>, system=True)
2023-06-22 10:41:31,179:INFO:Checking exceptions
2023-06-22 10:41:31,231:INFO:Preloading libraries
2023-06-22 10:41:31,237:INFO:Copying training dataset
2023-06-22 10:41:31,237:INFO:Plot type: confusion_matrix
2023-06-22 10:41:31,512:INFO:Fitting Model
2023-06-22 10:41:31,513:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-22 10:41:31,514:INFO:Scoring test/hold-out set
2023-06-22 10:41:31,687:INFO:Visual Rendered Successfully
2023-06-22 10:41:31,832:INFO:plot_model() successfully completed......................................
2023-06-22 10:41:52,362:INFO:Initializing plot_model()
2023-06-22 10:41:52,362:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>, system=True)
2023-06-22 10:41:52,362:INFO:Checking exceptions
2023-06-22 10:41:52,404:INFO:Preloading libraries
2023-06-22 10:41:52,408:INFO:Copying training dataset
2023-06-22 10:41:52,408:INFO:Plot type: feature
2023-06-22 10:41:52,409:WARNING:No coef_ found. Trying feature_importances_
2023-06-22 10:41:52,619:INFO:Visual Rendered Successfully
2023-06-22 10:41:52,683:INFO:plot_model() successfully completed......................................
2023-06-22 10:42:40,096:INFO:Initializing predict_model()
2023-06-22 10:42:40,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021A88CD2310>)
2023-06-22 10:42:40,096:INFO:Checking exceptions
2023-06-22 10:42:40,096:INFO:Preloading libraries
2023-06-22 10:50:10,517:INFO:Initializing interpret_model()
2023-06-22 10:50:10,517:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021AFD7BCC70>)
2023-06-22 10:50:10,517:INFO:Checking exceptions
2023-06-22 10:50:10,517:INFO:Soft dependency imported: shap: 0.41.0
2023-06-22 10:50:11,317:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:35: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _pt_shuffle_rec(i, indexes, index_mask, partition_tree, M, pos):

2023-06-22 10:50:11,425:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:54: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def delta_minimization_order(all_masks, max_swap_size=100, num_passes=2):

2023-06-22 10:50:11,426:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:63: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window(order, start, length):

2023-06-22 10:50:11,426:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:69: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window_score_gain(masks, order, start, length):

2023-06-22 10:50:11,427:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:77: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _mask_delta_score(m1, m2):

2023-06-22 10:50:11,437:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:5: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def identity(x):

2023-06-22 10:50:11,438:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:10: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _identity_inverse(x):

2023-06-22 10:50:11,438:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:15: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def logit(x):

2023-06-22 10:50:11,438:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:20: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _logit_inverse(x):

2023-06-22 10:50:11,447:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:363: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_single_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-22 10:50:11,448:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:385: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_multi_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-22 10:50:11,448:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:428: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _init_masks(cluster_matrix, M, indices_row_pos, indptr):

2023-06-22 10:50:11,448:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:439: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _rec_fill_masks(cluster_matrix, indices_row_pos, indptr, indices, M, ind):

2023-06-22 10:50:11,471:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:186: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _single_delta_mask(dind, masked_inputs, last_mask, data, x, noop_code):

2023-06-22 10:50:11,472:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:197: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _delta_masking(masks, x, curr_delta_inds, varying_rows_out,

2023-06-22 10:50:16,352:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_image.py:175: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _jit_build_partition_tree(xmin, xmax, ymin, ymax, zmin, zmax, total_ywidth, total_zwidth, M, clustering, q):

2023-06-22 10:50:16,396:WARNING:c:\Program Files\Python39\lib\site-packages\shap\explainers\_partition.py:676: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def lower_credit(i, value, M, values, clustering):

2023-06-22 10:50:16,430:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-22 10:50:16,430:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-22 10:50:16,985:INFO:plot type: summary
2023-06-22 10:50:16,985:INFO:Creating TreeExplainer
2023-06-22 10:50:16,988:INFO:Compiling shap values
2023-06-22 10:50:19,980:INFO:Visual Rendered Successfully
2023-06-22 10:50:19,980:INFO:interpret_model() successfully completed......................................
2023-06-23 17:18:09,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 17:18:09,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 17:18:09,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 17:18:09,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 17:18:11,892:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 17:18:15,413:INFO:PyCaret ClassificationExperiment
2023-06-23 17:18:15,413:INFO:Logging name: clf-default-name
2023-06-23 17:18:15,413:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 17:18:15,413:INFO:version 3.0.2
2023-06-23 17:18:15,413:INFO:Initializing setup()
2023-06-23 17:18:15,413:INFO:self.USI: 8732
2023-06-23 17:18:15,414:INFO:self._variable_keys: {'exp_name_log', 'X_test', 'html_param', 'pipeline', 'X', 'is_multiclass', 'gpu_n_jobs_param', 'memory', 'X_train', 'fold_generator', 'data', 'seed', 'fold_groups_param', '_available_plots', 'idx', 'fold_shuffle_param', 'logging_param', 'n_jobs_param', 'y_test', 'exp_id', 'y_train', 'fix_imbalance', 'y', 'gpu_param', '_ml_usecase', 'log_plots_param', 'USI', 'target_param'}
2023-06-23 17:18:15,414:INFO:Checking environment
2023-06-23 17:18:15,414:INFO:python_version: 3.9.7
2023-06-23 17:18:15,414:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-23 17:18:15,414:INFO:machine: AMD64
2023-06-23 17:18:15,414:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-23 17:18:15,414:INFO:Memory: svmem(total=17120436224, available=6531522560, percent=61.8, used=10588913664, free=6531522560)
2023-06-23 17:18:15,415:INFO:Physical Core: 4
2023-06-23 17:18:15,415:INFO:Logical Core: 4
2023-06-23 17:18:15,415:INFO:Checking libraries
2023-06-23 17:18:15,415:INFO:System:
2023-06-23 17:18:15,415:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-23 17:18:15,415:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-23 17:18:15,415:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-23 17:18:15,415:INFO:PyCaret required dependencies:
2023-06-23 17:18:15,415:INFO:                 pip: 23.1.2
2023-06-23 17:18:15,415:INFO:          setuptools: 57.4.0
2023-06-23 17:18:15,415:INFO:             pycaret: 3.0.2
2023-06-23 17:18:15,415:INFO:             IPython: 7.28.0
2023-06-23 17:18:15,415:INFO:          ipywidgets: 8.0.6
2023-06-23 17:18:15,415:INFO:                tqdm: 4.64.0
2023-06-23 17:18:15,415:INFO:               numpy: 1.22.4
2023-06-23 17:18:15,416:INFO:              pandas: 1.3.5
2023-06-23 17:18:15,416:INFO:              jinja2: 3.1.2
2023-06-23 17:18:15,416:INFO:               scipy: 1.10.1
2023-06-23 17:18:15,416:INFO:              joblib: 1.2.0
2023-06-23 17:18:15,416:INFO:             sklearn: 1.1.0
2023-06-23 17:18:15,416:INFO:                pyod: 1.0.9
2023-06-23 17:18:15,416:INFO:            imblearn: 0.9.1
2023-06-23 17:18:15,416:INFO:   category_encoders: 2.6.1
2023-06-23 17:18:15,416:INFO:            lightgbm: 3.3.5
2023-06-23 17:18:15,416:INFO:               numba: 0.57.0
2023-06-23 17:18:15,416:INFO:            requests: 2.31.0
2023-06-23 17:18:15,416:INFO:          matplotlib: 3.4.3
2023-06-23 17:18:15,416:INFO:          scikitplot: 0.3.7
2023-06-23 17:18:15,416:INFO:         yellowbrick: 1.5
2023-06-23 17:18:15,416:INFO:              plotly: 5.8.0
2023-06-23 17:18:15,416:INFO:             kaleido: 0.2.1
2023-06-23 17:18:15,416:INFO:         statsmodels: 0.14.0
2023-06-23 17:18:15,416:INFO:              sktime: 0.17.0
2023-06-23 17:18:15,416:INFO:               tbats: 1.1.3
2023-06-23 17:18:15,417:INFO:            pmdarima: 2.0.3
2023-06-23 17:18:15,417:INFO:              psutil: 5.9.0
2023-06-23 17:18:15,417:INFO:PyCaret optional dependencies:
2023-06-23 17:18:15,438:INFO:                shap: 0.41.0
2023-06-23 17:18:15,438:INFO:           interpret: Not installed
2023-06-23 17:18:15,438:INFO:                umap: Not installed
2023-06-23 17:18:15,438:INFO:    pandas_profiling: Not installed
2023-06-23 17:18:15,438:INFO:  explainerdashboard: Not installed
2023-06-23 17:18:15,438:INFO:             autoviz: Not installed
2023-06-23 17:18:15,438:INFO:           fairlearn: Not installed
2023-06-23 17:18:15,439:INFO:             xgboost: Not installed
2023-06-23 17:18:15,439:INFO:            catboost: Not installed
2023-06-23 17:18:15,439:INFO:              kmodes: Not installed
2023-06-23 17:18:15,439:INFO:             mlxtend: Not installed
2023-06-23 17:18:15,439:INFO:       statsforecast: Not installed
2023-06-23 17:18:15,439:INFO:        tune_sklearn: Not installed
2023-06-23 17:18:15,439:INFO:                 ray: Not installed
2023-06-23 17:18:15,439:INFO:            hyperopt: Not installed
2023-06-23 17:18:15,439:INFO:              optuna: Not installed
2023-06-23 17:18:15,439:INFO:               skopt: Not installed
2023-06-23 17:18:15,439:INFO:              mlflow: Not installed
2023-06-23 17:18:15,439:INFO:              gradio: Not installed
2023-06-23 17:18:15,439:INFO:             fastapi: Not installed
2023-06-23 17:18:15,439:INFO:             uvicorn: Not installed
2023-06-23 17:18:15,439:INFO:              m2cgen: Not installed
2023-06-23 17:18:15,439:INFO:           evidently: Not installed
2023-06-23 17:18:15,439:INFO:               fugue: Not installed
2023-06-23 17:18:15,439:INFO:           streamlit: Not installed
2023-06-23 17:18:15,439:INFO:             prophet: Not installed
2023-06-23 17:18:15,439:INFO:None
2023-06-23 17:18:15,440:INFO:Set up data.
2023-06-23 17:18:15,465:INFO:Set up train/test split.
2023-06-23 17:18:15,465:INFO:Set up data.
2023-06-23 17:18:15,480:INFO:Set up index.
2023-06-23 17:18:15,483:INFO:Set up folding strategy.
2023-06-23 17:18:15,483:INFO:Assigning column types.
2023-06-23 17:18:15,517:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 17:18:15,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 17:18:15,575:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 17:18:15,617:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:15,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:15,806:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 17:18:15,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 17:18:15,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:15,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:15,843:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 17:18:15,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 17:18:15,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:15,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:15,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 17:18:16,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,026:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-23 17:18:16,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,224:INFO:Preparing preprocessing pipeline...
2023-06-23 17:18:16,229:INFO:Set up simple imputation.
2023-06-23 17:18:16,234:INFO:Set up column name cleaning.
2023-06-23 17:18:16,341:INFO:Finished creating preprocessing pipeline.
2023-06-23 17:18:16,356:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['job_entrepreneur',
                                             'job_housemaid', 'job_unemployed',
                                             'job_retired', 'job_self-employed',
                                             'marital_divorced', 'default',
                                             'loan_no', 'contact', 'month_may',
                                             'month_mar', 'previous',
                                             'poutcome_nonexistent',
                                             'poutcome_...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-23 17:18:16,357:INFO:Creating final display dataframe.
2023-06-23 17:18:16,564:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 16)
4        Transformed data shape       (63546, 16)
5   Transformed train set shape       (51190, 16)
6    Transformed test set shape       (12356, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              8732
2023-06-23 17:18:16,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 17:18:16,775:INFO:setup() successfully completed in 4.66s...............
2023-06-23 17:18:29,649:INFO:Initializing create_model()
2023-06-23 17:18:29,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 17:18:29,649:INFO:Checking exceptions
2023-06-23 17:18:29,671:INFO:Importing libraries
2023-06-23 17:18:29,671:INFO:Copying training dataset
2023-06-23 17:18:29,702:INFO:Defining folds
2023-06-23 17:18:29,702:INFO:Declaring metric variables
2023-06-23 17:18:29,708:INFO:Importing untrained model
2023-06-23 17:18:29,715:INFO:Logistic Regression Imported successfully
2023-06-23 17:18:29,730:INFO:Starting cross validation
2023-06-23 17:18:29,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 17:18:47,749:INFO:Calculating mean and std
2023-06-23 17:18:47,751:INFO:Creating metrics dataframe
2023-06-23 17:18:47,757:INFO:Finalizing model
2023-06-23 17:18:49,330:INFO:Uploading results into container
2023-06-23 17:18:49,331:INFO:Uploading model into container now
2023-06-23 17:18:49,349:INFO:_master_model_container: 1
2023-06-23 17:18:49,349:INFO:_display_container: 2
2023-06-23 17:18:49,350:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 17:18:49,350:INFO:create_model() successfully completed......................................
2023-06-23 17:18:49,466:INFO:Initializing evaluate_model()
2023-06-23 17:18:49,466:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 17:18:49,493:INFO:Initializing plot_model()
2023-06-23 17:18:49,494:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>, system=True)
2023-06-23 17:18:49,495:INFO:Checking exceptions
2023-06-23 17:18:49,517:INFO:Preloading libraries
2023-06-23 17:18:49,517:INFO:Copying training dataset
2023-06-23 17:18:49,517:INFO:Plot type: pipeline
2023-06-23 17:18:49,723:INFO:Visual Rendered Successfully
2023-06-23 17:18:49,794:INFO:plot_model() successfully completed......................................
2023-06-23 17:19:01,791:INFO:Initializing plot_model()
2023-06-23 17:19:01,791:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>, system=True)
2023-06-23 17:19:01,791:INFO:Checking exceptions
2023-06-23 17:19:01,802:INFO:Preloading libraries
2023-06-23 17:19:01,802:INFO:Copying training dataset
2023-06-23 17:19:01,802:INFO:Plot type: auc
2023-06-23 17:19:01,972:INFO:Fitting Model
2023-06-23 17:19:01,984:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-23 17:19:01,985:INFO:Scoring test/hold-out set
2023-06-23 17:19:02,197:INFO:Visual Rendered Successfully
2023-06-23 17:19:02,277:INFO:plot_model() successfully completed......................................
2023-06-23 17:19:18,322:INFO:Initializing predict_model()
2023-06-23 17:19:18,322:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019369D49790>)
2023-06-23 17:19:18,322:INFO:Checking exceptions
2023-06-23 17:19:18,322:INFO:Preloading libraries
2023-06-23 17:19:32,303:INFO:Initializing interpret_model()
2023-06-23 17:19:32,303:INFO:interpret_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>)
2023-06-23 17:19:32,303:INFO:Checking exceptions
2023-06-23 17:19:32,303:INFO:Soft dependency imported: shap: 0.41.0
2023-06-23 17:19:33,099:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:35: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _pt_shuffle_rec(i, indexes, index_mask, partition_tree, M, pos):

2023-06-23 17:19:33,225:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:54: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def delta_minimization_order(all_masks, max_swap_size=100, num_passes=2):

2023-06-23 17:19:33,225:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:63: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window(order, start, length):

2023-06-23 17:19:33,225:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:69: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window_score_gain(masks, order, start, length):

2023-06-23 17:19:33,226:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:77: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _mask_delta_score(m1, m2):

2023-06-23 17:19:33,239:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:5: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def identity(x):

2023-06-23 17:19:33,239:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:10: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _identity_inverse(x):

2023-06-23 17:19:33,240:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:15: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def logit(x):

2023-06-23 17:19:33,240:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:20: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _logit_inverse(x):

2023-06-23 17:19:33,251:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:363: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_single_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-23 17:19:33,251:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:385: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_multi_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-23 17:19:33,252:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:428: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _init_masks(cluster_matrix, M, indices_row_pos, indptr):

2023-06-23 17:19:33,253:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:439: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _rec_fill_masks(cluster_matrix, indices_row_pos, indptr, indices, M, ind):

2023-06-23 17:19:33,280:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:186: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _single_delta_mask(dind, masked_inputs, last_mask, data, x, noop_code):

2023-06-23 17:19:33,281:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:197: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _delta_masking(masks, x, curr_delta_inds, varying_rows_out,

2023-06-23 17:19:38,313:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_image.py:175: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _jit_build_partition_tree(xmin, xmax, ymin, ymax, zmin, zmax, total_ywidth, total_zwidth, M, clustering, q):

2023-06-23 17:19:38,346:WARNING:c:\Program Files\Python39\lib\site-packages\shap\explainers\_partition.py:676: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def lower_credit(i, value, M, values, clustering):

2023-06-23 17:19:38,374:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-23 17:19:38,375:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-23 17:32:48,911:INFO:Initializing tune_model()
2023-06-23 17:32:48,911:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25], 'penalty': ['l1', 'l2', 'elasticnet'], 'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>)
2023-06-23 17:32:48,911:INFO:Checking exceptions
2023-06-23 17:32:48,941:INFO:Copying training dataset
2023-06-23 17:32:48,964:INFO:Checking base model
2023-06-23 17:32:48,964:INFO:Base model : Logistic Regression
2023-06-23 17:32:48,970:INFO:Declaring metric variables
2023-06-23 17:32:48,977:INFO:Defining Hyperparameters
2023-06-23 17:32:49,155:INFO:custom_grid: {'actual_estimator__C': [0.001, 0.009, 0.01, 0.09, 1, 5, 10, 25], 'actual_estimator__penalty': ['l1', 'l2', 'elasticnet'], 'actual_estimator__solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}
2023-06-23 17:32:49,155:INFO:Tuning with n_jobs=-1
2023-06-23 17:32:49,155:INFO:Initializing RandomizedSearchCV
2023-06-23 17:35:26,792:WARNING:
80 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 71, in _check_solver
    raise ValueError(
ValueError: Only 'saga' solver supports elasticnet penalty, got solver=liblinear.

--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver newton-cg supports only 'l2' or 'none' penalties, got elasticnet penalty.

--------------------------------------------------------------------------------
20 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got elasticnet penalty.

--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Program Files\Python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 1094, in fit
    solver = _check_solver(self.solver, self.penalty, self.dual)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py", line 61, in _check_solver
    raise ValueError(
ValueError: Solver sag supports only 'l2' or 'none' penalties, got l1 penalty.


2023-06-23 17:35:26,793:WARNING:One or more of the test scores are non-finite: [0.75014651        nan        nan        nan 0.75157257        nan
        nan        nan        nan        nan]

2023-06-23 17:35:28,590:INFO:best_params: {'actual_estimator__solver': 'lbfgs', 'actual_estimator__penalty': 'l2', 'actual_estimator__C': 0.001}
2023-06-23 17:35:28,590:INFO:Hyperparameter search completed
2023-06-23 17:35:28,591:INFO:SubProcess create_model() called ==================================
2023-06-23 17:35:28,591:INFO:Initializing create_model()
2023-06-23 17:35:28,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019369B527F0>, model_only=True, return_train_score=False, kwargs={'solver': 'lbfgs', 'penalty': 'l2', 'C': 0.001})
2023-06-23 17:35:28,592:INFO:Checking exceptions
2023-06-23 17:35:28,592:INFO:Importing libraries
2023-06-23 17:35:28,592:INFO:Copying training dataset
2023-06-23 17:35:28,633:INFO:Defining folds
2023-06-23 17:35:28,633:INFO:Declaring metric variables
2023-06-23 17:35:28,639:INFO:Importing untrained model
2023-06-23 17:35:28,639:INFO:Declaring custom model
2023-06-23 17:35:28,644:INFO:Logistic Regression Imported successfully
2023-06-23 17:35:28,654:INFO:Starting cross validation
2023-06-23 17:35:28,655:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 17:35:45,474:INFO:Calculating mean and std
2023-06-23 17:35:45,475:INFO:Creating metrics dataframe
2023-06-23 17:35:45,483:INFO:Finalizing model
2023-06-23 17:35:47,199:INFO:Uploading results into container
2023-06-23 17:35:47,202:INFO:Uploading model into container now
2023-06-23 17:35:47,203:INFO:_master_model_container: 2
2023-06-23 17:35:47,203:INFO:_display_container: 4
2023-06-23 17:35:47,204:INFO:LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 17:35:47,204:INFO:create_model() successfully completed......................................
2023-06-23 17:35:47,351:INFO:SubProcess create_model() end ==================================
2023-06-23 17:35:47,351:INFO:choose_better activated
2023-06-23 17:35:47,355:INFO:SubProcess create_model() called ==================================
2023-06-23 17:35:47,356:INFO:Initializing create_model()
2023-06-23 17:35:47,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 17:35:47,357:INFO:Checking exceptions
2023-06-23 17:35:47,360:INFO:Importing libraries
2023-06-23 17:35:47,360:INFO:Copying training dataset
2023-06-23 17:35:47,394:INFO:Defining folds
2023-06-23 17:35:47,394:INFO:Declaring metric variables
2023-06-23 17:35:47,395:INFO:Importing untrained model
2023-06-23 17:35:47,395:INFO:Declaring custom model
2023-06-23 17:35:47,396:INFO:Logistic Regression Imported successfully
2023-06-23 17:35:47,396:INFO:Starting cross validation
2023-06-23 17:35:47,397:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 17:36:00,920:INFO:Calculating mean and std
2023-06-23 17:36:00,921:INFO:Creating metrics dataframe
2023-06-23 17:36:00,925:INFO:Finalizing model
2023-06-23 17:36:02,592:INFO:Uploading results into container
2023-06-23 17:36:02,593:INFO:Uploading model into container now
2023-06-23 17:36:02,593:INFO:_master_model_container: 3
2023-06-23 17:36:02,593:INFO:_display_container: 5
2023-06-23 17:36:02,594:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 17:36:02,594:INFO:create_model() successfully completed......................................
2023-06-23 17:36:02,708:INFO:SubProcess create_model() end ==================================
2023-06-23 17:36:02,708:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7516
2023-06-23 17:36:02,709:INFO:LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.7501
2023-06-23 17:36:02,709:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-06-23 17:36:02,709:INFO:choose_better completed
2023-06-23 17:36:02,709:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-23 17:36:02,728:INFO:_master_model_container: 3
2023-06-23 17:36:02,729:INFO:_display_container: 4
2023-06-23 17:36:02,729:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 17:36:02,729:INFO:tune_model() successfully completed......................................
2023-06-23 17:36:22,972:INFO:Initializing predict_model()
2023-06-23 17:36:22,972:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001934DA613D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019369BD65E0>)
2023-06-23 17:36:22,973:INFO:Checking exceptions
2023-06-23 17:36:22,973:INFO:Preloading libraries
2023-06-23 17:36:22,975:INFO:Set up data.
2023-06-23 17:36:23,005:INFO:Set up index.
2023-06-23 17:46:49,194:WARNING:Maximum Likelihood optimization failed to converge. Check mle_retvals

2023-06-23 17:48:29,393:WARNING:A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().

2023-06-23 17:48:52,578:WARNING:A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().

2023-06-23 17:49:27,586:WARNING:A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().

2023-06-23 17:50:59,976:WARNING:A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().

2023-06-23 17:53:04,841:WARNING:A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().

2023-06-23 17:54:14,778:WARNING:A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().

2023-06-23 17:54:27,521:WARNING:A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().

2023-06-23 17:54:36,155:WARNING:A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().

2023-06-23 18:57:17,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 18:57:17,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 18:57:17,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 18:57:17,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 18:57:18,458:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 18:57:20,379:INFO:PyCaret ClassificationExperiment
2023-06-23 18:57:20,379:INFO:Logging name: clf-default-name
2023-06-23 18:57:20,379:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 18:57:20,379:INFO:version 3.0.2
2023-06-23 18:57:20,379:INFO:Initializing setup()
2023-06-23 18:57:20,379:INFO:self.USI: 1dce
2023-06-23 18:57:20,379:INFO:self._variable_keys: {'exp_name_log', 'y_train', 'y', 'fold_shuffle_param', 'gpu_n_jobs_param', 'is_multiclass', 'idx', 'data', 'y_test', 'log_plots_param', 'fix_imbalance', 'n_jobs_param', 'html_param', 'exp_id', 'memory', '_available_plots', 'X_test', 'target_param', 'X', 'fold_groups_param', 'pipeline', 'logging_param', 'USI', 'fold_generator', '_ml_usecase', 'gpu_param', 'seed', 'X_train'}
2023-06-23 18:57:20,379:INFO:Checking environment
2023-06-23 18:57:20,379:INFO:python_version: 3.9.7
2023-06-23 18:57:20,379:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-23 18:57:20,379:INFO:machine: AMD64
2023-06-23 18:57:20,379:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-23 18:57:20,379:INFO:Memory: svmem(total=17120436224, available=6050074624, percent=64.7, used=11070361600, free=6050074624)
2023-06-23 18:57:20,380:INFO:Physical Core: 4
2023-06-23 18:57:20,380:INFO:Logical Core: 4
2023-06-23 18:57:20,381:INFO:Checking libraries
2023-06-23 18:57:20,381:INFO:System:
2023-06-23 18:57:20,381:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-23 18:57:20,381:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-23 18:57:20,381:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-23 18:57:20,381:INFO:PyCaret required dependencies:
2023-06-23 18:57:20,381:INFO:                 pip: 23.1.2
2023-06-23 18:57:20,381:INFO:          setuptools: 57.4.0
2023-06-23 18:57:20,381:INFO:             pycaret: 3.0.2
2023-06-23 18:57:20,381:INFO:             IPython: 7.28.0
2023-06-23 18:57:20,381:INFO:          ipywidgets: 8.0.6
2023-06-23 18:57:20,382:INFO:                tqdm: 4.64.0
2023-06-23 18:57:20,382:INFO:               numpy: 1.22.4
2023-06-23 18:57:20,382:INFO:              pandas: 1.3.5
2023-06-23 18:57:20,382:INFO:              jinja2: 3.1.2
2023-06-23 18:57:20,382:INFO:               scipy: 1.10.1
2023-06-23 18:57:20,382:INFO:              joblib: 1.2.0
2023-06-23 18:57:20,382:INFO:             sklearn: 1.1.0
2023-06-23 18:57:20,382:INFO:                pyod: 1.0.9
2023-06-23 18:57:20,382:INFO:            imblearn: 0.9.1
2023-06-23 18:57:20,382:INFO:   category_encoders: 2.6.1
2023-06-23 18:57:20,382:INFO:            lightgbm: 3.3.5
2023-06-23 18:57:20,382:INFO:               numba: 0.57.0
2023-06-23 18:57:20,382:INFO:            requests: 2.31.0
2023-06-23 18:57:20,382:INFO:          matplotlib: 3.4.3
2023-06-23 18:57:20,382:INFO:          scikitplot: 0.3.7
2023-06-23 18:57:20,382:INFO:         yellowbrick: 1.5
2023-06-23 18:57:20,382:INFO:              plotly: 5.8.0
2023-06-23 18:57:20,382:INFO:             kaleido: 0.2.1
2023-06-23 18:57:20,382:INFO:         statsmodels: 0.14.0
2023-06-23 18:57:20,382:INFO:              sktime: 0.17.0
2023-06-23 18:57:20,382:INFO:               tbats: 1.1.3
2023-06-23 18:57:20,382:INFO:            pmdarima: 2.0.3
2023-06-23 18:57:20,383:INFO:              psutil: 5.9.0
2023-06-23 18:57:20,383:INFO:PyCaret optional dependencies:
2023-06-23 18:57:20,402:INFO:                shap: 0.41.0
2023-06-23 18:57:20,402:INFO:           interpret: Not installed
2023-06-23 18:57:20,402:INFO:                umap: Not installed
2023-06-23 18:57:20,403:INFO:    pandas_profiling: Not installed
2023-06-23 18:57:20,403:INFO:  explainerdashboard: Not installed
2023-06-23 18:57:20,403:INFO:             autoviz: Not installed
2023-06-23 18:57:20,403:INFO:           fairlearn: Not installed
2023-06-23 18:57:20,403:INFO:             xgboost: Not installed
2023-06-23 18:57:20,403:INFO:            catboost: Not installed
2023-06-23 18:57:20,403:INFO:              kmodes: Not installed
2023-06-23 18:57:20,403:INFO:             mlxtend: Not installed
2023-06-23 18:57:20,403:INFO:       statsforecast: Not installed
2023-06-23 18:57:20,403:INFO:        tune_sklearn: Not installed
2023-06-23 18:57:20,403:INFO:                 ray: Not installed
2023-06-23 18:57:20,403:INFO:            hyperopt: Not installed
2023-06-23 18:57:20,403:INFO:              optuna: Not installed
2023-06-23 18:57:20,403:INFO:               skopt: Not installed
2023-06-23 18:57:20,403:INFO:              mlflow: Not installed
2023-06-23 18:57:20,403:INFO:              gradio: Not installed
2023-06-23 18:57:20,403:INFO:             fastapi: Not installed
2023-06-23 18:57:20,403:INFO:             uvicorn: Not installed
2023-06-23 18:57:20,403:INFO:              m2cgen: Not installed
2023-06-23 18:57:20,403:INFO:           evidently: Not installed
2023-06-23 18:57:20,403:INFO:               fugue: Not installed
2023-06-23 18:57:20,404:INFO:           streamlit: Not installed
2023-06-23 18:57:20,404:INFO:             prophet: Not installed
2023-06-23 18:57:20,404:INFO:None
2023-06-23 18:57:20,404:INFO:Set up data.
2023-06-23 18:57:20,476:INFO:Set up train/test split.
2023-06-23 18:57:20,476:INFO:Set up data.
2023-06-23 18:57:20,523:INFO:Set up index.
2023-06-23 18:57:20,528:INFO:Set up folding strategy.
2023-06-23 18:57:20,528:INFO:Assigning column types.
2023-06-23 18:57:20,608:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 18:57:20,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 18:57:20,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 18:57:20,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:20,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:20,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 18:57:20,822:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 18:57:20,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:20,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:20,855:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 18:57:20,911:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 18:57:20,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:20,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 18:57:21,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,036:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-23 18:57:21,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,216:INFO:Preparing preprocessing pipeline...
2023-06-23 18:57:21,227:INFO:Set up simple imputation.
2023-06-23 18:57:21,236:INFO:Set up column name cleaning.
2023-06-23 18:57:21,387:INFO:Finished creating preprocessing pipeline.
2023-06-23 18:57:21,395:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-23 18:57:21,395:INFO:Creating final display dataframe.
2023-06-23 18:57:21,765:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 54)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7              Numeric features                53
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              1dce
2023-06-23 18:57:21,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 18:57:21,964:INFO:setup() successfully completed in 3.37s...............
2023-06-23 18:57:26,766:INFO:Initializing create_model()
2023-06-23 18:57:26,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 18:57:26,766:INFO:Checking exceptions
2023-06-23 18:57:26,787:INFO:Importing libraries
2023-06-23 18:57:26,787:INFO:Copying training dataset
2023-06-23 18:57:26,879:INFO:Defining folds
2023-06-23 18:57:26,879:INFO:Declaring metric variables
2023-06-23 18:57:26,889:INFO:Importing untrained model
2023-06-23 18:57:26,889:INFO:Declaring custom model
2023-06-23 18:57:26,896:INFO:Random Forest Classifier Imported successfully
2023-06-23 18:57:26,909:INFO:Starting cross validation
2023-06-23 18:57:26,910:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 18:57:38,300:INFO:Calculating mean and std
2023-06-23 18:57:38,302:INFO:Creating metrics dataframe
2023-06-23 18:57:38,309:INFO:Finalizing model
2023-06-23 18:57:39,897:INFO:Uploading results into container
2023-06-23 18:57:39,898:INFO:Uploading model into container now
2023-06-23 18:57:39,915:INFO:_master_model_container: 1
2023-06-23 18:57:39,915:INFO:_display_container: 2
2023-06-23 18:57:39,915:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-23 18:57:39,915:INFO:create_model() successfully completed......................................
2023-06-23 18:57:39,998:INFO:Initializing evaluate_model()
2023-06-23 18:57:39,998:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 18:57:40,041:INFO:Initializing plot_model()
2023-06-23 18:57:40,041:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, system=True)
2023-06-23 18:57:40,041:INFO:Checking exceptions
2023-06-23 18:57:40,112:INFO:Preloading libraries
2023-06-23 18:57:40,118:INFO:Copying training dataset
2023-06-23 18:57:40,118:INFO:Plot type: pipeline
2023-06-23 18:57:40,261:INFO:Visual Rendered Successfully
2023-06-23 18:57:40,332:INFO:plot_model() successfully completed......................................
2023-06-23 18:58:00,154:INFO:Initializing plot_model()
2023-06-23 18:58:00,155:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, system=True)
2023-06-23 18:58:00,155:INFO:Checking exceptions
2023-06-23 18:58:00,196:INFO:Preloading libraries
2023-06-23 18:58:00,200:INFO:Copying training dataset
2023-06-23 18:58:00,201:INFO:Plot type: auc
2023-06-23 18:58:00,443:INFO:Fitting Model
2023-06-23 18:58:00,445:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-23 18:58:00,446:INFO:Scoring test/hold-out set
2023-06-23 18:58:00,790:INFO:Visual Rendered Successfully
2023-06-23 18:58:00,869:INFO:plot_model() successfully completed......................................
2023-06-23 18:58:04,093:INFO:Initializing predict_model()
2023-06-23 18:58:04,094:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002236ABF2AF0>)
2023-06-23 18:58:04,094:INFO:Checking exceptions
2023-06-23 18:58:04,094:INFO:Preloading libraries
2023-06-23 18:58:09,554:INFO:Initializing predict_model()
2023-06-23 18:58:09,554:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=0.5, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002236C07B160>)
2023-06-23 18:58:09,554:INFO:Checking exceptions
2023-06-23 18:58:09,554:INFO:Preloading libraries
2023-06-23 18:58:09,557:INFO:Set up data.
2023-06-23 18:58:09,643:INFO:Set up index.
2023-06-23 18:58:18,714:INFO:Initializing interpret_model()
2023-06-23 18:58:18,714:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>)
2023-06-23 18:58:18,714:INFO:Checking exceptions
2023-06-23 18:58:18,714:INFO:Soft dependency imported: shap: 0.41.0
2023-06-23 18:58:19,154:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:35: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _pt_shuffle_rec(i, indexes, index_mask, partition_tree, M, pos):

2023-06-23 18:58:19,161:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:54: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def delta_minimization_order(all_masks, max_swap_size=100, num_passes=2):

2023-06-23 18:58:19,161:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:63: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window(order, start, length):

2023-06-23 18:58:19,162:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:69: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window_score_gain(masks, order, start, length):

2023-06-23 18:58:19,162:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:77: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _mask_delta_score(m1, m2):

2023-06-23 18:58:19,165:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:5: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def identity(x):

2023-06-23 18:58:19,166:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:10: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _identity_inverse(x):

2023-06-23 18:58:19,166:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:15: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def logit(x):

2023-06-23 18:58:19,167:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:20: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _logit_inverse(x):

2023-06-23 18:58:19,167:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:363: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_single_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-23 18:58:19,168:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:385: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_multi_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-23 18:58:19,168:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:428: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _init_masks(cluster_matrix, M, indices_row_pos, indptr):

2023-06-23 18:58:19,168:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:439: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _rec_fill_masks(cluster_matrix, indices_row_pos, indptr, indices, M, ind):

2023-06-23 18:58:19,175:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:186: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _single_delta_mask(dind, masked_inputs, last_mask, data, x, noop_code):

2023-06-23 18:58:19,175:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:197: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _delta_masking(masks, x, curr_delta_inds, varying_rows_out,

2023-06-23 18:58:21,547:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_image.py:175: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _jit_build_partition_tree(xmin, xmax, ymin, ymax, zmin, zmax, total_ywidth, total_zwidth, M, clustering, q):

2023-06-23 18:58:21,563:WARNING:c:\Program Files\Python39\lib\site-packages\shap\explainers\_partition.py:676: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def lower_credit(i, value, M, values, clustering):

2023-06-23 18:58:21,572:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-23 18:58:21,573:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-23 18:58:21,789:INFO:plot type: summary
2023-06-23 18:58:21,789:INFO:Creating TreeExplainer
2023-06-23 18:58:21,793:INFO:Compiling shap values
2023-06-23 18:58:24,418:INFO:Visual Rendered Successfully
2023-06-23 18:58:24,418:INFO:interpret_model() successfully completed......................................
2023-06-23 18:58:37,217:INFO:Initializing interpret_model()
2023-06-23 18:58:37,217:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), use_train_data=True, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>)
2023-06-23 18:58:37,218:INFO:Checking exceptions
2023-06-23 18:58:37,218:INFO:Soft dependency imported: shap: 0.41.0
2023-06-23 18:58:37,307:INFO:plot type: summary
2023-06-23 18:58:37,307:INFO:Creating TreeExplainer
2023-06-23 18:58:37,309:INFO:Compiling shap values
2023-06-23 18:58:46,606:INFO:Visual Rendered Successfully
2023-06-23 18:58:46,606:INFO:interpret_model() successfully completed......................................
2023-06-23 19:00:56,876:INFO:Initializing predict_model()
2023-06-23 19:00:56,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002236ABF2AF0>)
2023-06-23 19:00:56,877:INFO:Checking exceptions
2023-06-23 19:00:56,877:INFO:Preloading libraries
2023-06-23 19:00:56,879:INFO:Set up data.
2023-06-23 19:00:56,916:INFO:Set up index.
2023-06-23 19:01:01,469:INFO:Initializing predict_model()
2023-06-23 19:01:01,469:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022379895430>)
2023-06-23 19:01:01,469:INFO:Checking exceptions
2023-06-23 19:01:01,469:INFO:Preloading libraries
2023-06-23 19:01:01,472:INFO:Set up data.
2023-06-23 19:01:01,506:INFO:Set up index.
2023-06-23 19:02:37,491:INFO:Initializing predict_model()
2023-06-23 19:02:37,491:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000223522A2820>)
2023-06-23 19:02:37,491:INFO:Checking exceptions
2023-06-23 19:02:37,491:INFO:Preloading libraries
2023-06-23 19:29:31,605:INFO:Initializing interpret_model()
2023-06-23 19:29:31,605:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>)
2023-06-23 19:29:31,605:INFO:Checking exceptions
2023-06-23 19:29:31,605:INFO:Soft dependency imported: shap: 0.41.0
2023-06-23 19:29:31,676:INFO:plot type: summary
2023-06-23 19:29:31,676:INFO:Creating TreeExplainer
2023-06-23 19:29:31,679:INFO:Compiling shap values
2023-06-23 19:29:34,436:INFO:Visual Rendered Successfully
2023-06-23 19:29:34,436:INFO:interpret_model() successfully completed......................................
2023-06-23 19:29:59,580:INFO:Initializing plot_model()
2023-06-23 19:29:59,580:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, system=True)
2023-06-23 19:29:59,580:INFO:Checking exceptions
2023-06-23 19:29:59,626:INFO:Preloading libraries
2023-06-23 19:29:59,631:INFO:Copying training dataset
2023-06-23 19:29:59,631:INFO:Plot type: feature_all
2023-06-23 19:29:59,707:WARNING:No coef_ found. Trying feature_importances_
2023-06-23 19:30:00,526:INFO:Visual Rendered Successfully
2023-06-23 19:30:00,631:INFO:plot_model() successfully completed......................................
2023-06-23 19:30:17,285:INFO:Initializing plot_model()
2023-06-23 19:30:17,285:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, system=True)
2023-06-23 19:30:17,285:INFO:Checking exceptions
2023-06-23 19:30:17,329:INFO:Preloading libraries
2023-06-23 19:30:17,334:INFO:Copying training dataset
2023-06-23 19:30:17,334:INFO:Plot type: feature
2023-06-23 19:30:17,335:WARNING:No coef_ found. Trying feature_importances_
2023-06-23 19:30:17,543:INFO:Visual Rendered Successfully
2023-06-23 19:30:17,644:INFO:plot_model() successfully completed......................................
2023-06-23 21:15:47,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 21:15:47,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 21:15:47,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 21:15:47,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 21:15:49,083:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 21:15:58,656:INFO:PyCaret ClassificationExperiment
2023-06-23 21:15:58,656:INFO:Logging name: clf-default-name
2023-06-23 21:15:58,656:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 21:15:58,656:INFO:version 3.0.2
2023-06-23 21:15:58,656:INFO:Initializing setup()
2023-06-23 21:15:58,656:INFO:self.USI: d544
2023-06-23 21:15:58,656:INFO:self._variable_keys: {'fold_generator', 'pipeline', '_ml_usecase', 'html_param', 'gpu_param', 'X_test', 'y_train', 'data', 'fix_imbalance', 'X_train', 'is_multiclass', 'exp_name_log', 'seed', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_id', 'USI', 'X', 'y', 'y_test', 'memory', 'log_plots_param', '_available_plots', 'fold_shuffle_param', 'idx', 'logging_param', 'target_param', 'n_jobs_param'}
2023-06-23 21:15:58,656:INFO:Checking environment
2023-06-23 21:15:58,656:INFO:python_version: 3.9.7
2023-06-23 21:15:58,656:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-23 21:15:58,656:INFO:machine: AMD64
2023-06-23 21:15:58,656:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-23 21:15:58,656:INFO:Memory: svmem(total=17120436224, available=4990132224, percent=70.9, used=12130304000, free=4990132224)
2023-06-23 21:15:58,656:INFO:Physical Core: 4
2023-06-23 21:15:58,656:INFO:Logical Core: 4
2023-06-23 21:15:58,656:INFO:Checking libraries
2023-06-23 21:15:58,656:INFO:System:
2023-06-23 21:15:58,656:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-23 21:15:58,656:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-23 21:15:58,656:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-23 21:15:58,656:INFO:PyCaret required dependencies:
2023-06-23 21:15:58,656:INFO:                 pip: 23.1.2
2023-06-23 21:15:58,658:INFO:          setuptools: 57.4.0
2023-06-23 21:15:58,658:INFO:             pycaret: 3.0.2
2023-06-23 21:15:58,658:INFO:             IPython: 7.28.0
2023-06-23 21:15:58,658:INFO:          ipywidgets: 8.0.6
2023-06-23 21:15:58,658:INFO:                tqdm: 4.64.0
2023-06-23 21:15:58,658:INFO:               numpy: 1.22.4
2023-06-23 21:15:58,658:INFO:              pandas: 1.3.5
2023-06-23 21:15:58,658:INFO:              jinja2: 3.1.2
2023-06-23 21:15:58,658:INFO:               scipy: 1.10.1
2023-06-23 21:15:58,658:INFO:              joblib: 1.2.0
2023-06-23 21:15:58,658:INFO:             sklearn: 1.1.0
2023-06-23 21:15:58,658:INFO:                pyod: 1.0.9
2023-06-23 21:15:58,658:INFO:            imblearn: 0.9.1
2023-06-23 21:15:58,658:INFO:   category_encoders: 2.6.1
2023-06-23 21:15:58,658:INFO:            lightgbm: 3.3.5
2023-06-23 21:15:58,658:INFO:               numba: 0.57.0
2023-06-23 21:15:58,658:INFO:            requests: 2.31.0
2023-06-23 21:15:58,658:INFO:          matplotlib: 3.4.3
2023-06-23 21:15:58,658:INFO:          scikitplot: 0.3.7
2023-06-23 21:15:58,658:INFO:         yellowbrick: 1.5
2023-06-23 21:15:58,658:INFO:              plotly: 5.8.0
2023-06-23 21:15:58,658:INFO:             kaleido: 0.2.1
2023-06-23 21:15:58,658:INFO:         statsmodels: 0.14.0
2023-06-23 21:15:58,659:INFO:              sktime: 0.17.0
2023-06-23 21:15:58,659:INFO:               tbats: 1.1.3
2023-06-23 21:15:58,659:INFO:            pmdarima: 2.0.3
2023-06-23 21:15:58,659:INFO:              psutil: 5.9.0
2023-06-23 21:15:58,659:INFO:PyCaret optional dependencies:
2023-06-23 21:15:58,685:INFO:                shap: 0.41.0
2023-06-23 21:15:58,685:INFO:           interpret: Not installed
2023-06-23 21:15:58,685:INFO:                umap: Not installed
2023-06-23 21:15:58,685:INFO:    pandas_profiling: Not installed
2023-06-23 21:15:58,685:INFO:  explainerdashboard: Not installed
2023-06-23 21:15:58,685:INFO:             autoviz: Not installed
2023-06-23 21:15:58,685:INFO:           fairlearn: Not installed
2023-06-23 21:15:58,685:INFO:             xgboost: Not installed
2023-06-23 21:15:58,685:INFO:            catboost: Not installed
2023-06-23 21:15:58,685:INFO:              kmodes: Not installed
2023-06-23 21:15:58,685:INFO:             mlxtend: Not installed
2023-06-23 21:15:58,685:INFO:       statsforecast: Not installed
2023-06-23 21:15:58,685:INFO:        tune_sklearn: Not installed
2023-06-23 21:15:58,685:INFO:                 ray: Not installed
2023-06-23 21:15:58,685:INFO:            hyperopt: Not installed
2023-06-23 21:15:58,687:INFO:              optuna: Not installed
2023-06-23 21:15:58,687:INFO:               skopt: Not installed
2023-06-23 21:15:58,687:INFO:              mlflow: Not installed
2023-06-23 21:15:58,687:INFO:              gradio: Not installed
2023-06-23 21:15:58,687:INFO:             fastapi: Not installed
2023-06-23 21:15:58,687:INFO:             uvicorn: Not installed
2023-06-23 21:15:58,687:INFO:              m2cgen: Not installed
2023-06-23 21:15:58,687:INFO:           evidently: Not installed
2023-06-23 21:15:58,687:INFO:               fugue: Not installed
2023-06-23 21:15:58,687:INFO:           streamlit: Not installed
2023-06-23 21:15:58,687:INFO:             prophet: Not installed
2023-06-23 21:15:58,687:INFO:None
2023-06-23 21:15:58,687:INFO:Set up data.
2023-06-23 21:15:58,792:INFO:Set up train/test split.
2023-06-23 21:15:58,792:INFO:Set up data.
2023-06-23 21:15:58,850:INFO:Set up index.
2023-06-23 21:15:58,855:INFO:Set up folding strategy.
2023-06-23 21:15:58,855:INFO:Assigning column types.
2023-06-23 21:15:58,940:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 21:15:59,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 21:15:59,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 21:15:59,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,183:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 21:15:59,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 21:15:59,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,221:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 21:15:59,283:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 21:15:59,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,381:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 21:15:59,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,421:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-23 21:15:59,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:15:59,602:INFO:Preparing preprocessing pipeline...
2023-06-23 21:15:59,611:INFO:Set up simple imputation.
2023-06-23 21:15:59,620:INFO:Set up column name cleaning.
2023-06-23 21:15:59,790:INFO:Finished creating preprocessing pipeline.
2023-06-23 21:15:59,829:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'job_blue-collar',
                                             'job_services', 'job_entrepreneur',
                                             'job_admin.', 'job_management',
                                             'job_technician', 'job_housemaid',
                                             'job_unemployed', 'job_retired',
                                             'job_student', 'job_self-employed',
                                             'marital_married'...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-23 21:15:59,829:INFO:Creating final display dataframe.
2023-06-23 21:16:00,181:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (63546, 54)
4        Transformed data shape       (63546, 54)
5   Transformed train set shape       (51190, 54)
6    Transformed test set shape       (12356, 54)
7              Numeric features                53
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              d544
2023-06-23 21:16:00,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:16:00,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:16:00,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:16:00,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 21:16:00,382:INFO:setup() successfully completed in 3.66s...............
2023-06-23 21:16:06,451:INFO:Initializing create_model()
2023-06-23 21:16:06,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 21:16:06,451:INFO:Checking exceptions
2023-06-23 21:16:06,472:INFO:Importing libraries
2023-06-23 21:16:06,472:INFO:Copying training dataset
2023-06-23 21:16:06,551:INFO:Defining folds
2023-06-23 21:16:06,551:INFO:Declaring metric variables
2023-06-23 21:16:06,558:INFO:Importing untrained model
2023-06-23 21:16:06,558:INFO:Declaring custom model
2023-06-23 21:16:06,564:INFO:MLP Classifier Imported successfully
2023-06-23 21:16:06,574:INFO:Starting cross validation
2023-06-23 21:16:06,575:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 21:19:32,612:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:19:33,081:INFO:Calculating mean and std
2023-06-23 21:19:33,083:INFO:Creating metrics dataframe
2023-06-23 21:19:33,090:INFO:Finalizing model
2023-06-23 21:22:02,404:INFO:Uploading results into container
2023-06-23 21:22:02,405:INFO:Uploading model into container now
2023-06-23 21:22:02,424:INFO:_master_model_container: 1
2023-06-23 21:22:02,425:INFO:_display_container: 2
2023-06-23 21:22:02,425:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-23 21:22:02,425:INFO:create_model() successfully completed......................................
2023-06-23 21:22:02,517:INFO:Initializing evaluate_model()
2023-06-23 21:22:02,518:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 21:22:02,574:INFO:Initializing plot_model()
2023-06-23 21:22:02,574:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:02,574:INFO:Checking exceptions
2023-06-23 21:22:02,630:INFO:Preloading libraries
2023-06-23 21:22:02,631:INFO:Copying training dataset
2023-06-23 21:22:02,632:INFO:Plot type: pipeline
2023-06-23 21:22:02,792:INFO:Visual Rendered Successfully
2023-06-23 21:22:02,869:INFO:plot_model() successfully completed......................................
2023-06-23 21:22:10,909:INFO:Initializing plot_model()
2023-06-23 21:22:10,909:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:10,909:INFO:Checking exceptions
2023-06-23 21:22:10,937:INFO:Preloading libraries
2023-06-23 21:22:10,938:INFO:Copying training dataset
2023-06-23 21:22:10,943:INFO:Plot type: auc
2023-06-23 21:22:11,224:INFO:Fitting Model
2023-06-23 21:22:11,226:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-23 21:22:11,227:INFO:Scoring test/hold-out set
2023-06-23 21:22:11,463:INFO:Visual Rendered Successfully
2023-06-23 21:22:11,544:INFO:plot_model() successfully completed......................................
2023-06-23 21:22:13,950:INFO:Initializing plot_model()
2023-06-23 21:22:13,950:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:13,950:INFO:Checking exceptions
2023-06-23 21:22:13,976:INFO:Preloading libraries
2023-06-23 21:22:13,977:INFO:Copying training dataset
2023-06-23 21:22:13,977:INFO:Plot type: parameter
2023-06-23 21:22:13,981:INFO:Visual Rendered Successfully
2023-06-23 21:22:14,044:INFO:plot_model() successfully completed......................................
2023-06-23 21:22:24,894:INFO:Initializing plot_model()
2023-06-23 21:22:24,894:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:24,894:INFO:Checking exceptions
2023-06-23 21:22:24,920:INFO:Preloading libraries
2023-06-23 21:22:24,922:INFO:Copying training dataset
2023-06-23 21:22:24,922:INFO:Plot type: auc
2023-06-23 21:22:25,170:INFO:Fitting Model
2023-06-23 21:22:25,171:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-23 21:22:25,172:INFO:Scoring test/hold-out set
2023-06-23 21:22:25,401:INFO:Visual Rendered Successfully
2023-06-23 21:22:25,535:INFO:plot_model() successfully completed......................................
2023-06-23 21:22:25,885:INFO:Initializing plot_model()
2023-06-23 21:22:25,885:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:25,886:INFO:Checking exceptions
2023-06-23 21:22:25,914:INFO:Preloading libraries
2023-06-23 21:22:25,915:INFO:Copying training dataset
2023-06-23 21:22:25,915:INFO:Plot type: confusion_matrix
2023-06-23 21:22:26,158:INFO:Fitting Model
2023-06-23 21:22:26,159:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-23 21:22:26,159:INFO:Scoring test/hold-out set
2023-06-23 21:22:26,294:INFO:Visual Rendered Successfully
2023-06-23 21:22:26,409:INFO:plot_model() successfully completed......................................
2023-06-23 21:22:28,925:INFO:Initializing plot_model()
2023-06-23 21:22:28,925:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:28,925:INFO:Checking exceptions
2023-06-23 21:22:35,300:INFO:Initializing plot_model()
2023-06-23 21:22:35,300:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:35,301:INFO:Checking exceptions
2023-06-23 21:22:38,956:INFO:Initializing plot_model()
2023-06-23 21:22:38,957:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:38,957:INFO:Checking exceptions
2023-06-23 21:22:38,984:INFO:Preloading libraries
2023-06-23 21:22:38,985:INFO:Copying training dataset
2023-06-23 21:22:38,985:INFO:Plot type: pipeline
2023-06-23 21:22:39,076:INFO:Visual Rendered Successfully
2023-06-23 21:22:39,140:INFO:plot_model() successfully completed......................................
2023-06-23 21:22:44,076:INFO:Initializing plot_model()
2023-06-23 21:22:44,077:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[50, 25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=300,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:22:44,077:INFO:Checking exceptions
2023-06-23 21:22:44,109:INFO:Preloading libraries
2023-06-23 21:22:44,110:INFO:Copying training dataset
2023-06-23 21:22:44,110:INFO:Plot type: parameter
2023-06-23 21:22:44,115:INFO:Visual Rendered Successfully
2023-06-23 21:22:44,184:INFO:plot_model() successfully completed......................................
2023-06-23 21:23:00,580:INFO:Initializing create_model()
2023-06-23 21:23:00,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 21:23:00,580:INFO:Checking exceptions
2023-06-23 21:23:00,598:INFO:Importing libraries
2023-06-23 21:23:00,598:INFO:Copying training dataset
2023-06-23 21:23:00,694:INFO:Defining folds
2023-06-23 21:23:00,695:INFO:Declaring metric variables
2023-06-23 21:23:00,701:INFO:Importing untrained model
2023-06-23 21:23:00,701:INFO:Declaring custom model
2023-06-23 21:23:00,707:INFO:MLP Classifier Imported successfully
2023-06-23 21:23:00,718:INFO:Starting cross validation
2023-06-23 21:23:00,720:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 21:23:04,739:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:04,753:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:04,782:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:04,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:09,580:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:10,588:INFO:Calculating mean and std
2023-06-23 21:23:10,590:INFO:Creating metrics dataframe
2023-06-23 21:23:10,600:INFO:Finalizing model
2023-06-23 21:23:15,724:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:16,977:INFO:Uploading results into container
2023-06-23 21:23:16,978:INFO:Uploading model into container now
2023-06-23 21:23:16,996:INFO:_master_model_container: 2
2023-06-23 21:23:16,996:INFO:_display_container: 3
2023-06-23 21:23:16,996:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-23 21:23:16,997:INFO:create_model() successfully completed......................................
2023-06-23 21:23:17,091:INFO:Initializing evaluate_model()
2023-06-23 21:23:17,091:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 21:23:17,126:INFO:Initializing plot_model()
2023-06-23 21:23:17,127:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:17,127:INFO:Checking exceptions
2023-06-23 21:23:17,158:INFO:Preloading libraries
2023-06-23 21:23:17,159:INFO:Copying training dataset
2023-06-23 21:23:17,159:INFO:Plot type: pipeline
2023-06-23 21:23:17,289:INFO:Visual Rendered Successfully
2023-06-23 21:23:17,363:INFO:plot_model() successfully completed......................................
2023-06-23 21:23:23,044:INFO:Initializing plot_model()
2023-06-23 21:23:23,044:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:23,044:INFO:Checking exceptions
2023-06-23 21:23:23,071:INFO:Preloading libraries
2023-06-23 21:23:23,071:INFO:Copying training dataset
2023-06-23 21:23:23,071:INFO:Plot type: parameter
2023-06-23 21:23:23,076:INFO:Visual Rendered Successfully
2023-06-23 21:23:23,141:INFO:plot_model() successfully completed......................................
2023-06-23 21:23:23,764:INFO:Initializing plot_model()
2023-06-23 21:23:23,764:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:23,764:INFO:Checking exceptions
2023-06-23 21:23:23,790:INFO:Preloading libraries
2023-06-23 21:23:23,791:INFO:Copying training dataset
2023-06-23 21:23:23,791:INFO:Plot type: auc
2023-06-23 21:23:24,043:INFO:Fitting Model
2023-06-23 21:23:24,043:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-23 21:23:24,044:INFO:Scoring test/hold-out set
2023-06-23 21:23:24,244:INFO:Visual Rendered Successfully
2023-06-23 21:23:24,392:INFO:plot_model() successfully completed......................................
2023-06-23 21:23:28,709:INFO:Initializing plot_model()
2023-06-23 21:23:28,709:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:28,709:INFO:Checking exceptions
2023-06-23 21:23:28,736:INFO:Preloading libraries
2023-06-23 21:23:28,737:INFO:Copying training dataset
2023-06-23 21:23:28,737:INFO:Plot type: confusion_matrix
2023-06-23 21:23:28,976:INFO:Fitting Model
2023-06-23 21:23:28,976:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-23 21:23:28,977:INFO:Scoring test/hold-out set
2023-06-23 21:23:29,091:INFO:Visual Rendered Successfully
2023-06-23 21:23:29,168:INFO:plot_model() successfully completed......................................
2023-06-23 21:23:31,085:INFO:Initializing plot_model()
2023-06-23 21:23:31,086:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:31,086:INFO:Checking exceptions
2023-06-23 21:23:34,980:INFO:Initializing plot_model()
2023-06-23 21:23:34,981:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:34,981:INFO:Checking exceptions
2023-06-23 21:23:35,007:INFO:Preloading libraries
2023-06-23 21:23:35,008:INFO:Copying training dataset
2023-06-23 21:23:35,008:INFO:Plot type: gain
2023-06-23 21:23:35,008:INFO:Generating predictions / predict_proba on X_test
2023-06-23 21:23:35,274:INFO:Visual Rendered Successfully
2023-06-23 21:23:35,338:INFO:plot_model() successfully completed......................................
2023-06-23 21:23:37,045:INFO:Initializing plot_model()
2023-06-23 21:23:37,045:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:37,046:INFO:Checking exceptions
2023-06-23 21:23:37,072:INFO:Preloading libraries
2023-06-23 21:23:37,073:INFO:Copying training dataset
2023-06-23 21:23:37,073:INFO:Plot type: lift
2023-06-23 21:23:37,073:INFO:Generating predictions / predict_proba on X_test
2023-06-23 21:23:37,349:INFO:Visual Rendered Successfully
2023-06-23 21:23:37,414:INFO:plot_model() successfully completed......................................
2023-06-23 21:23:38,717:INFO:Initializing plot_model()
2023-06-23 21:23:38,717:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:38,718:INFO:Checking exceptions
2023-06-23 21:23:38,745:INFO:Preloading libraries
2023-06-23 21:23:38,746:INFO:Copying training dataset
2023-06-23 21:23:38,746:INFO:Plot type: gain
2023-06-23 21:23:38,746:INFO:Generating predictions / predict_proba on X_test
2023-06-23 21:23:39,018:INFO:Visual Rendered Successfully
2023-06-23 21:23:39,093:INFO:plot_model() successfully completed......................................
2023-06-23 21:23:44,614:INFO:Initializing plot_model()
2023-06-23 21:23:44,614:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:23:44,614:INFO:Checking exceptions
2023-06-23 21:23:44,640:INFO:Preloading libraries
2023-06-23 21:23:44,641:INFO:Copying training dataset
2023-06-23 21:23:44,641:INFO:Plot type: learning
2023-06-23 21:23:44,898:INFO:Fitting Model
2023-06-23 21:23:45,707:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:45,895:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:46,213:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:46,449:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:47,495:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:48,076:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:48,672:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:49,130:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:49,566:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:50,101:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:50,292:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:50,761:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:50,897:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:51,452:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:52,150:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:52,858:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:53,257:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:54,279:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:54,365:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:55,786:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:56,092:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:56,405:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:56,758:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:58,031:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:58,749:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:23:59,530:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:00,246:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:01,188:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:01,232:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:01,931:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:02,526:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:02,990:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:03,110:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:04,503:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:05,133:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:05,690:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:06,076:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:07,100:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:07,499:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:08,418:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:08,500:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:09,121:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:09,379:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:10,278:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:10,612:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:11,572:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:12,116:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:12,961:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:13,380:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:14,216:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 21:24:14,733:INFO:Visual Rendered Successfully
2023-06-23 21:24:14,819:INFO:plot_model() successfully completed......................................
2023-06-23 21:25:02,876:INFO:Initializing plot_model()
2023-06-23 21:25:02,876:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:25:02,876:INFO:Checking exceptions
2023-06-23 21:25:02,905:INFO:Preloading libraries
2023-06-23 21:25:02,906:INFO:Copying training dataset
2023-06-23 21:25:02,906:INFO:Plot type: gain
2023-06-23 21:25:02,906:INFO:Generating predictions / predict_proba on X_test
2023-06-23 21:25:03,186:INFO:Visual Rendered Successfully
2023-06-23 21:25:03,259:INFO:plot_model() successfully completed......................................
2023-06-23 21:25:11,541:INFO:Initializing plot_model()
2023-06-23 21:25:11,542:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:25:11,542:INFO:Checking exceptions
2023-06-23 21:25:11,569:INFO:Preloading libraries
2023-06-23 21:25:11,570:INFO:Copying training dataset
2023-06-23 21:25:11,570:INFO:Plot type: auc
2023-06-23 21:25:11,846:INFO:Fitting Model
2023-06-23 21:25:11,847:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-23 21:25:11,848:INFO:Scoring test/hold-out set
2023-06-23 21:25:12,096:INFO:Visual Rendered Successfully
2023-06-23 21:25:12,181:INFO:plot_model() successfully completed......................................
2023-06-23 21:26:09,946:INFO:Initializing plot_model()
2023-06-23 21:26:09,946:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:26:09,946:INFO:Checking exceptions
2023-06-23 21:26:09,975:INFO:Preloading libraries
2023-06-23 21:26:09,976:INFO:Copying training dataset
2023-06-23 21:26:09,976:INFO:Plot type: auc
2023-06-23 21:26:10,357:INFO:Fitting Model
2023-06-23 21:26:10,358:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but MLPClassifier was fitted with feature names
  warnings.warn(

2023-06-23 21:26:10,359:INFO:Scoring test/hold-out set
2023-06-23 21:26:10,600:INFO:Visual Rendered Successfully
2023-06-23 21:26:10,701:INFO:plot_model() successfully completed......................................
2023-06-23 21:26:18,640:INFO:Initializing interpret_model()
2023-06-23 21:26:18,640:INFO:interpret_model(estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>)
2023-06-23 21:26:18,640:INFO:Checking exceptions
2023-06-23 21:26:18,640:INFO:Soft dependency imported: shap: 0.41.0
2023-06-23 21:26:19,005:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:35: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _pt_shuffle_rec(i, indexes, index_mask, partition_tree, M, pos):

2023-06-23 21:26:19,012:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:54: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def delta_minimization_order(all_masks, max_swap_size=100, num_passes=2):

2023-06-23 21:26:19,012:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:63: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window(order, start, length):

2023-06-23 21:26:19,013:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:69: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _reverse_window_score_gain(masks, order, start, length):

2023-06-23 21:26:19,013:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_clustering.py:77: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _mask_delta_score(m1, m2):

2023-06-23 21:26:19,015:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:5: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def identity(x):

2023-06-23 21:26:19,015:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:10: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _identity_inverse(x):

2023-06-23 21:26:19,016:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:15: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def logit(x):

2023-06-23 21:26:19,016:WARNING:c:\Program Files\Python39\lib\site-packages\shap\links.py:20: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _logit_inverse(x):

2023-06-23 21:26:19,017:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:363: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_single_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-23 21:26:19,017:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:385: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _build_fixed_multi_output(averaged_outs, last_outs, outputs, batch_positions, varying_rows, num_varying_rows, link, linearizing_weights):

2023-06-23 21:26:19,017:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:428: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _init_masks(cluster_matrix, M, indices_row_pos, indptr):

2023-06-23 21:26:19,018:WARNING:c:\Program Files\Python39\lib\site-packages\shap\utils\_masked_model.py:439: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _rec_fill_masks(cluster_matrix, indices_row_pos, indptr, indices, M, ind):

2023-06-23 21:26:19,026:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:186: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _single_delta_mask(dind, masked_inputs, last_mask, data, x, noop_code):

2023-06-23 21:26:19,026:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_tabular.py:197: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _delta_masking(masks, x, curr_delta_inds, varying_rows_out,

2023-06-23 21:26:21,441:WARNING:c:\Program Files\Python39\lib\site-packages\shap\maskers\_image.py:175: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def _jit_build_partition_tree(xmin, xmax, ymin, ymax, zmin, zmax, total_ywidth, total_zwidth, M, clustering, q):

2023-06-23 21:26:21,458:WARNING:c:\Program Files\Python39\lib\site-packages\shap\explainers\_partition.py:676: NumbaDeprecationWarning: [1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m
  def lower_credit(i, value, M, values, clustering):

2023-06-23 21:26:21,465:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-23 21:26:21,466:WARNING:[1mThe 'nopython' keyword argument was not supplied to the 'numba.jit' decorator. The implicit default value for this argument is currently False, but it will be changed to True in Numba 0.59.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.[0m

2023-06-23 21:26:50,902:INFO:Initializing plot_model()
2023-06-23 21:26:50,902:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:26:50,902:INFO:Checking exceptions
2023-06-23 21:26:50,931:INFO:Preloading libraries
2023-06-23 21:26:50,941:INFO:Copying training dataset
2023-06-23 21:26:50,941:INFO:Plot type: boundary
2023-06-23 21:26:51,127:INFO:Fitting StandardScaler()
2023-06-23 21:26:51,192:INFO:Fitting PCA()
2023-06-23 21:26:51,496:INFO:Fitting Model
2023-06-23 21:26:53,900:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:26:54,017:WARNING:shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.

2023-06-23 21:26:55,303:INFO:Visual Rendered Successfully
2023-06-23 21:26:55,496:INFO:plot_model() successfully completed......................................
2023-06-23 21:27:06,758:INFO:Initializing plot_model()
2023-06-23 21:27:06,759:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[25, 25], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 21:27:06,759:INFO:Checking exceptions
2023-06-23 21:27:06,786:INFO:Preloading libraries
2023-06-23 21:27:06,787:INFO:Copying training dataset
2023-06-23 21:27:06,787:INFO:Plot type: threshold
2023-06-23 21:27:07,040:INFO:Fitting Model
2023-06-23 21:27:10,814:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:14,723:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:18,609:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:22,677:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:26,824:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:30,904:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:35,631:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:39,569:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:43,624:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:48,856:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:52,879:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:27:56,893:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:00,854:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:04,779:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:08,777:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:12,696:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:16,665:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:20,897:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:24,868:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:28,921:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:32,892:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:36,838:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:40,791:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:44,779:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:48,791:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:52,954:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:28:57,167:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:01,304:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:05,307:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:09,328:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:13,621:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:17,728:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:21,692:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:25,827:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:29,838:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:33,741:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:37,839:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:41,988:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:45,868:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:49,543:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:53,427:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:29:57,706:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:01,942:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:06,151:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:10,268:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:14,206:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:18,124:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:22,433:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:26,774:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:31,353:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 21:30:34,278:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 21:30:34,307:INFO:Scoring test/hold-out set
2023-06-23 21:30:34,866:INFO:Visual Rendered Successfully
2023-06-23 21:30:35,031:INFO:plot_model() successfully completed......................................
2023-06-23 21:58:32,580:INFO:Initializing plot_model()
2023-06-23 21:58:32,581:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, system=True)
2023-06-23 21:58:32,582:INFO:Checking exceptions
2023-06-23 21:58:32,681:INFO:Preloading libraries
2023-06-23 21:58:32,691:INFO:Copying training dataset
2023-06-23 21:58:32,691:INFO:Plot type: confusion_matrix
2023-06-23 21:58:33,031:INFO:Fitting Model
2023-06-23 21:58:33,032:WARNING:X does not have valid feature names, but RandomForestClassifier was fitted with feature names

2023-06-23 21:58:33,034:INFO:Scoring test/hold-out set
2023-06-23 21:58:33,267:INFO:Visual Rendered Successfully
2023-06-23 21:58:33,670:INFO:plot_model() successfully completed......................................
2023-06-23 21:58:50,419:INFO:Initializing predict_model()
2023-06-23 21:58:50,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000223798BEC10>)
2023-06-23 21:58:50,420:INFO:Checking exceptions
2023-06-23 21:58:50,420:INFO:Preloading libraries
2023-06-23 21:58:51,070:INFO:Initializing plot_model()
2023-06-23 21:58:51,070:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=3, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=0.05,
                       min_samples_split=0.1, min_weight_fraction_leaf=0.0,
                       n_estimators=64, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000223530AD8E0>, system=True)
2023-06-23 21:58:51,070:INFO:Checking exceptions
2023-06-23 21:58:51,147:INFO:Preloading libraries
2023-06-23 21:58:51,153:INFO:Copying training dataset
2023-06-23 21:58:51,153:INFO:Plot type: confusion_matrix
2023-06-23 21:58:51,444:INFO:Fitting Model
2023-06-23 21:58:51,444:WARNING:X does not have valid feature names, but RandomForestClassifier was fitted with feature names

2023-06-23 21:58:51,445:INFO:Scoring test/hold-out set
2023-06-23 21:58:51,613:INFO:Visual Rendered Successfully
2023-06-23 21:58:51,737:INFO:plot_model() successfully completed......................................
2023-06-23 23:22:43,997:INFO:Initializing create_model()
2023-06-23 23:22:43,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 23:22:43,999:INFO:Checking exceptions
2023-06-23 23:22:44,135:INFO:Importing libraries
2023-06-23 23:22:44,136:INFO:Copying training dataset
2023-06-23 23:22:44,254:INFO:Defining folds
2023-06-23 23:22:44,254:INFO:Declaring metric variables
2023-06-23 23:22:44,260:INFO:Importing untrained model
2023-06-23 23:22:44,260:INFO:Declaring custom model
2023-06-23 23:22:44,268:INFO:MLP Classifier Imported successfully
2023-06-23 23:22:44,281:INFO:Starting cross validation
2023-06-23 23:22:44,287:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 23:23:17,663:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:23:18,320:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:23:18,359:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:23:18,446:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:23:40,443:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:23:40,775:INFO:Calculating mean and std
2023-06-23 23:23:40,777:INFO:Creating metrics dataframe
2023-06-23 23:23:40,791:INFO:Finalizing model
2023-06-23 23:24:04,946:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 23:24:06,262:INFO:Uploading results into container
2023-06-23 23:24:06,264:INFO:Uploading model into container now
2023-06-23 23:24:06,287:INFO:_master_model_container: 3
2023-06-23 23:24:06,288:INFO:_display_container: 4
2023-06-23 23:24:06,289:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-23 23:24:06,289:INFO:create_model() successfully completed......................................
2023-06-23 23:24:06,811:INFO:Initializing evaluate_model()
2023-06-23 23:24:06,811:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 23:24:06,859:INFO:Initializing plot_model()
2023-06-23 23:24:06,859:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:06,859:INFO:Checking exceptions
2023-06-23 23:24:06,891:INFO:Preloading libraries
2023-06-23 23:24:06,891:INFO:Copying training dataset
2023-06-23 23:24:06,892:INFO:Plot type: pipeline
2023-06-23 23:24:07,005:INFO:Visual Rendered Successfully
2023-06-23 23:24:07,136:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:15,598:INFO:Initializing plot_model()
2023-06-23 23:24:15,599:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:15,599:INFO:Checking exceptions
2023-06-23 23:24:15,624:INFO:Preloading libraries
2023-06-23 23:24:15,625:INFO:Copying training dataset
2023-06-23 23:24:15,625:INFO:Plot type: parameter
2023-06-23 23:24:15,629:INFO:Visual Rendered Successfully
2023-06-23 23:24:15,769:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:16,725:INFO:Initializing plot_model()
2023-06-23 23:24:16,725:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:16,725:INFO:Checking exceptions
2023-06-23 23:24:16,749:INFO:Preloading libraries
2023-06-23 23:24:16,750:INFO:Copying training dataset
2023-06-23 23:24:16,750:INFO:Plot type: auc
2023-06-23 23:24:17,002:INFO:Fitting Model
2023-06-23 23:24:17,003:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:24:17,004:INFO:Scoring test/hold-out set
2023-06-23 23:24:17,226:INFO:Visual Rendered Successfully
2023-06-23 23:24:17,358:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:23,447:INFO:Initializing plot_model()
2023-06-23 23:24:23,447:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:23,447:INFO:Checking exceptions
2023-06-23 23:24:23,474:INFO:Preloading libraries
2023-06-23 23:24:23,475:INFO:Copying training dataset
2023-06-23 23:24:23,475:INFO:Plot type: confusion_matrix
2023-06-23 23:24:23,725:INFO:Fitting Model
2023-06-23 23:24:23,725:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:24:23,726:INFO:Scoring test/hold-out set
2023-06-23 23:24:23,839:INFO:Visual Rendered Successfully
2023-06-23 23:24:23,950:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:25,974:INFO:Initializing plot_model()
2023-06-23 23:24:25,974:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:25,974:INFO:Checking exceptions
2023-06-23 23:24:26,001:INFO:Preloading libraries
2023-06-23 23:24:26,002:INFO:Copying training dataset
2023-06-23 23:24:26,002:INFO:Plot type: auc
2023-06-23 23:24:26,267:INFO:Fitting Model
2023-06-23 23:24:26,268:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:24:26,269:INFO:Scoring test/hold-out set
2023-06-23 23:24:26,483:INFO:Visual Rendered Successfully
2023-06-23 23:24:26,599:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:30,845:INFO:Initializing plot_model()
2023-06-23 23:24:30,846:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:30,846:INFO:Checking exceptions
2023-06-23 23:24:30,878:INFO:Preloading libraries
2023-06-23 23:24:30,879:INFO:Copying training dataset
2023-06-23 23:24:30,879:INFO:Plot type: confusion_matrix
2023-06-23 23:24:31,148:INFO:Fitting Model
2023-06-23 23:24:31,148:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:24:31,149:INFO:Scoring test/hold-out set
2023-06-23 23:24:31,287:INFO:Visual Rendered Successfully
2023-06-23 23:24:31,483:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:36,032:INFO:Initializing plot_model()
2023-06-23 23:24:36,032:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:36,032:INFO:Checking exceptions
2023-06-23 23:24:36,060:INFO:Preloading libraries
2023-06-23 23:24:36,061:INFO:Copying training dataset
2023-06-23 23:24:36,061:INFO:Plot type: auc
2023-06-23 23:24:36,356:INFO:Fitting Model
2023-06-23 23:24:36,357:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:24:36,358:INFO:Scoring test/hold-out set
2023-06-23 23:24:36,586:INFO:Visual Rendered Successfully
2023-06-23 23:24:36,742:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:45,209:INFO:Initializing plot_model()
2023-06-23 23:24:45,210:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:45,210:INFO:Checking exceptions
2023-06-23 23:24:45,238:INFO:Preloading libraries
2023-06-23 23:24:45,239:INFO:Copying training dataset
2023-06-23 23:24:45,239:INFO:Plot type: gain
2023-06-23 23:24:45,240:INFO:Generating predictions / predict_proba on X_test
2023-06-23 23:24:45,543:INFO:Visual Rendered Successfully
2023-06-23 23:24:45,642:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:49,470:INFO:Initializing plot_model()
2023-06-23 23:24:49,470:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:49,470:INFO:Checking exceptions
2023-06-23 23:24:49,497:INFO:Preloading libraries
2023-06-23 23:24:49,497:INFO:Copying training dataset
2023-06-23 23:24:49,498:INFO:Plot type: parameter
2023-06-23 23:24:49,504:INFO:Visual Rendered Successfully
2023-06-23 23:24:49,696:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:49,933:INFO:Initializing plot_model()
2023-06-23 23:24:49,933:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:24:49,933:INFO:Checking exceptions
2023-06-23 23:24:49,959:INFO:Preloading libraries
2023-06-23 23:24:49,960:INFO:Copying training dataset
2023-06-23 23:24:49,960:INFO:Plot type: auc
2023-06-23 23:24:50,213:INFO:Fitting Model
2023-06-23 23:24:50,214:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:24:50,214:INFO:Scoring test/hold-out set
2023-06-23 23:24:50,413:INFO:Visual Rendered Successfully
2023-06-23 23:24:50,545:INFO:plot_model() successfully completed......................................
2023-06-23 23:24:58,216:INFO:Initializing create_model()
2023-06-23 23:24:58,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[40], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 23:24:58,216:INFO:Checking exceptions
2023-06-23 23:24:58,233:INFO:Importing libraries
2023-06-23 23:24:58,233:INFO:Copying training dataset
2023-06-23 23:24:58,323:INFO:Defining folds
2023-06-23 23:24:58,324:INFO:Declaring metric variables
2023-06-23 23:24:58,329:INFO:Importing untrained model
2023-06-23 23:24:58,329:INFO:Declaring custom model
2023-06-23 23:24:58,340:INFO:MLP Classifier Imported successfully
2023-06-23 23:24:58,352:INFO:Starting cross validation
2023-06-23 23:24:58,353:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 23:25:23,931:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:25:24,140:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:25:24,300:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:25:24,471:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:25:44,849:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:25:45,190:INFO:Calculating mean and std
2023-06-23 23:25:45,192:INFO:Creating metrics dataframe
2023-06-23 23:25:45,202:INFO:Finalizing model
2023-06-23 23:26:10,162:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 23:26:11,414:INFO:Uploading results into container
2023-06-23 23:26:11,415:INFO:Uploading model into container now
2023-06-23 23:26:11,432:INFO:_master_model_container: 4
2023-06-23 23:26:11,433:INFO:_display_container: 5
2023-06-23 23:26:11,433:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[40], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-23 23:26:11,433:INFO:create_model() successfully completed......................................
2023-06-23 23:26:11,631:INFO:Initializing evaluate_model()
2023-06-23 23:26:11,631:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[40], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 23:26:11,676:INFO:Initializing plot_model()
2023-06-23 23:26:11,676:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[40], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:26:11,676:INFO:Checking exceptions
2023-06-23 23:26:11,721:INFO:Preloading libraries
2023-06-23 23:26:11,722:INFO:Copying training dataset
2023-06-23 23:26:11,722:INFO:Plot type: pipeline
2023-06-23 23:26:11,828:INFO:Visual Rendered Successfully
2023-06-23 23:26:11,949:INFO:plot_model() successfully completed......................................
2023-06-23 23:27:06,280:INFO:Initializing plot_model()
2023-06-23 23:27:06,281:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[40], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:27:06,281:INFO:Checking exceptions
2023-06-23 23:27:06,306:INFO:Preloading libraries
2023-06-23 23:27:06,306:INFO:Copying training dataset
2023-06-23 23:27:06,307:INFO:Plot type: auc
2023-06-23 23:27:06,615:INFO:Fitting Model
2023-06-23 23:27:06,616:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:27:06,616:INFO:Scoring test/hold-out set
2023-06-23 23:27:06,814:INFO:Visual Rendered Successfully
2023-06-23 23:27:06,942:INFO:plot_model() successfully completed......................................
2023-06-23 23:27:18,469:INFO:Initializing create_model()
2023-06-23 23:27:18,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[35], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 23:27:18,469:INFO:Checking exceptions
2023-06-23 23:27:18,487:INFO:Importing libraries
2023-06-23 23:27:18,487:INFO:Copying training dataset
2023-06-23 23:27:18,574:INFO:Defining folds
2023-06-23 23:27:18,574:INFO:Declaring metric variables
2023-06-23 23:27:18,589:INFO:Importing untrained model
2023-06-23 23:27:18,589:INFO:Declaring custom model
2023-06-23 23:27:18,597:INFO:MLP Classifier Imported successfully
2023-06-23 23:27:18,608:INFO:Starting cross validation
2023-06-23 23:27:18,610:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 23:27:37,815:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:27:38,024:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:27:38,165:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:27:38,359:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:27:56,340:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-23 23:27:56,750:INFO:Calculating mean and std
2023-06-23 23:27:56,751:INFO:Creating metrics dataframe
2023-06-23 23:27:56,757:INFO:Finalizing model
2023-06-23 23:28:19,190:WARNING:Stochastic Optimizer: Maximum iterations (15) reached and the optimization hasn't converged yet.

2023-06-23 23:28:20,388:INFO:Uploading results into container
2023-06-23 23:28:20,389:INFO:Uploading model into container now
2023-06-23 23:28:20,403:INFO:_master_model_container: 5
2023-06-23 23:28:20,403:INFO:_display_container: 6
2023-06-23 23:28:20,403:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[35], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-23 23:28:20,404:INFO:create_model() successfully completed......................................
2023-06-23 23:28:20,531:INFO:Initializing evaluate_model()
2023-06-23 23:28:20,532:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[35], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 23:28:20,566:INFO:Initializing plot_model()
2023-06-23 23:28:20,566:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[35], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:28:20,566:INFO:Checking exceptions
2023-06-23 23:28:20,591:INFO:Preloading libraries
2023-06-23 23:28:20,592:INFO:Copying training dataset
2023-06-23 23:28:20,592:INFO:Plot type: pipeline
2023-06-23 23:28:20,691:INFO:Visual Rendered Successfully
2023-06-23 23:28:20,814:INFO:plot_model() successfully completed......................................
2023-06-23 23:28:51,477:INFO:Initializing plot_model()
2023-06-23 23:28:51,477:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[35], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:28:51,477:INFO:Checking exceptions
2023-06-23 23:28:51,502:INFO:Preloading libraries
2023-06-23 23:28:51,503:INFO:Copying training dataset
2023-06-23 23:28:51,503:INFO:Plot type: auc
2023-06-23 23:28:51,761:INFO:Fitting Model
2023-06-23 23:28:51,762:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:28:51,763:INFO:Scoring test/hold-out set
2023-06-23 23:28:51,970:INFO:Visual Rendered Successfully
2023-06-23 23:28:52,101:INFO:plot_model() successfully completed......................................
2023-06-23 23:29:11,454:INFO:Initializing create_model()
2023-06-23 23:29:11,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 23:29:11,455:INFO:Checking exceptions
2023-06-23 23:29:11,473:INFO:Importing libraries
2023-06-23 23:29:11,473:INFO:Copying training dataset
2023-06-23 23:29:11,558:INFO:Defining folds
2023-06-23 23:29:11,559:INFO:Declaring metric variables
2023-06-23 23:29:11,566:INFO:Importing untrained model
2023-06-23 23:29:11,567:INFO:Declaring custom model
2023-06-23 23:29:11,573:INFO:MLP Classifier Imported successfully
2023-06-23 23:29:11,585:INFO:Starting cross validation
2023-06-23 23:29:11,586:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 23:29:17,916:INFO:Calculating mean and std
2023-06-23 23:29:17,917:INFO:Creating metrics dataframe
2023-06-23 23:29:17,924:INFO:Finalizing model
2023-06-23 23:29:19,493:INFO:Uploading results into container
2023-06-23 23:29:19,493:INFO:Uploading model into container now
2023-06-23 23:29:19,509:INFO:_master_model_container: 6
2023-06-23 23:29:19,510:INFO:_display_container: 7
2023-06-23 23:29:19,511:INFO:MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
2023-06-23 23:29:19,511:INFO:create_model() successfully completed......................................
2023-06-23 23:29:19,629:INFO:Initializing evaluate_model()
2023-06-23 23:29:19,629:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-23 23:29:19,666:INFO:Initializing plot_model()
2023-06-23 23:29:19,666:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:29:19,666:INFO:Checking exceptions
2023-06-23 23:29:19,691:INFO:Preloading libraries
2023-06-23 23:29:19,692:INFO:Copying training dataset
2023-06-23 23:29:19,692:INFO:Plot type: pipeline
2023-06-23 23:29:19,800:INFO:Visual Rendered Successfully
2023-06-23 23:29:19,914:INFO:plot_model() successfully completed......................................
2023-06-23 23:31:09,469:INFO:Initializing plot_model()
2023-06-23 23:31:09,469:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=MLPClassifier(activation='relu', alpha=0.0001, batch_size=16, beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=[34], learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=15,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=420, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DC19F3A940>, system=True)
2023-06-23 23:31:09,469:INFO:Checking exceptions
2023-06-23 23:31:09,495:INFO:Preloading libraries
2023-06-23 23:31:09,495:INFO:Copying training dataset
2023-06-23 23:31:09,495:INFO:Plot type: auc
2023-06-23 23:31:09,772:INFO:Fitting Model
2023-06-23 23:31:09,773:WARNING:X does not have valid feature names, but MLPClassifier was fitted with feature names

2023-06-23 23:31:09,774:INFO:Scoring test/hold-out set
2023-06-23 23:31:09,999:INFO:Visual Rendered Successfully
2023-06-23 23:31:10,136:INFO:plot_model() successfully completed......................................
