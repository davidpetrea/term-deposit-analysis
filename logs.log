2023-06-16 10:08:37,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:08:37,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:08:37,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:08:37,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:08:39,540:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 10:08:40,076:INFO:PyCaret ClassificationExperiment
2023-06-16 10:08:40,076:INFO:Logging name: clf-default-name
2023-06-16 10:08:40,076:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:08:40,076:INFO:version 3.0.2
2023-06-16 10:08:40,076:INFO:Initializing setup()
2023-06-16 10:08:40,076:INFO:self.USI: 8c78
2023-06-16 10:08:40,076:INFO:self._variable_keys: {'target_param', 'y', 'logging_param', 'memory', 'idx', 'html_param', 'n_jobs_param', 'X_test', 'pipeline', 'fold_groups_param', 'USI', 'data', 'y_train', 'is_multiclass', 'gpu_param', 'gpu_n_jobs_param', 'fold_shuffle_param', '_available_plots', 'seed', 'X', 'exp_name_log', 'y_test', 'fold_generator', 'log_plots_param', 'fix_imbalance', '_ml_usecase', 'X_train', 'exp_id'}
2023-06-16 10:08:40,076:INFO:Checking environment
2023-06-16 10:08:40,076:INFO:python_version: 3.9.7
2023-06-16 10:08:40,077:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:08:40,077:INFO:machine: AMD64
2023-06-16 10:08:40,077:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:08:40,077:INFO:Memory: svmem(total=17120436224, available=4485386240, percent=73.8, used=12635049984, free=4485386240)
2023-06-16 10:08:40,077:INFO:Physical Core: 4
2023-06-16 10:08:40,077:INFO:Logical Core: 4
2023-06-16 10:08:40,078:INFO:Checking libraries
2023-06-16 10:08:40,078:INFO:System:
2023-06-16 10:08:40,078:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:08:40,078:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:08:40,078:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:08:40,078:INFO:PyCaret required dependencies:
2023-06-16 10:08:40,078:INFO:                 pip: 21.2.3
2023-06-16 10:08:40,078:INFO:          setuptools: 57.4.0
2023-06-16 10:08:40,078:INFO:             pycaret: 3.0.2
2023-06-16 10:08:40,078:INFO:             IPython: 7.28.0
2023-06-16 10:08:40,079:INFO:          ipywidgets: 8.0.6
2023-06-16 10:08:40,079:INFO:                tqdm: 4.64.0
2023-06-16 10:08:40,079:INFO:               numpy: 1.21.2
2023-06-16 10:08:40,079:INFO:              pandas: 1.3.5
2023-06-16 10:08:40,079:INFO:              jinja2: 3.1.2
2023-06-16 10:08:40,079:INFO:               scipy: 1.7.1
2023-06-16 10:08:40,079:INFO:              joblib: 1.2.0
2023-06-16 10:08:40,079:INFO:             sklearn: 1.1.0
2023-06-16 10:08:40,079:INFO:                pyod: 1.0.9
2023-06-16 10:08:40,079:INFO:            imblearn: 0.9.1
2023-06-16 10:08:40,079:INFO:   category_encoders: 2.6.1
2023-06-16 10:08:40,080:INFO:            lightgbm: 3.3.5
2023-06-16 10:08:40,080:INFO:               numba: 0.57.0
2023-06-16 10:08:40,080:INFO:            requests: 2.31.0
2023-06-16 10:08:40,080:INFO:          matplotlib: 3.4.3
2023-06-16 10:08:40,080:INFO:          scikitplot: 0.3.7
2023-06-16 10:08:40,080:INFO:         yellowbrick: 1.5
2023-06-16 10:08:40,080:INFO:              plotly: 5.8.0
2023-06-16 10:08:40,080:INFO:             kaleido: 0.2.1
2023-06-16 10:08:40,080:INFO:         statsmodels: 0.14.0
2023-06-16 10:08:40,080:INFO:              sktime: 0.17.0
2023-06-16 10:08:40,080:INFO:               tbats: 1.1.3
2023-06-16 10:08:40,080:INFO:            pmdarima: 2.0.3
2023-06-16 10:08:40,080:INFO:              psutil: 5.9.0
2023-06-16 10:08:40,080:INFO:PyCaret optional dependencies:
2023-06-16 10:08:40,105:INFO:                shap: Not installed
2023-06-16 10:08:40,105:INFO:           interpret: Not installed
2023-06-16 10:08:40,105:INFO:                umap: Not installed
2023-06-16 10:08:40,105:INFO:    pandas_profiling: Not installed
2023-06-16 10:08:40,106:INFO:  explainerdashboard: Not installed
2023-06-16 10:08:40,106:INFO:             autoviz: Not installed
2023-06-16 10:08:40,106:INFO:           fairlearn: Not installed
2023-06-16 10:08:40,106:INFO:             xgboost: Not installed
2023-06-16 10:08:40,106:INFO:            catboost: Not installed
2023-06-16 10:08:40,106:INFO:              kmodes: Not installed
2023-06-16 10:08:40,106:INFO:             mlxtend: Not installed
2023-06-16 10:08:40,106:INFO:       statsforecast: Not installed
2023-06-16 10:08:40,106:INFO:        tune_sklearn: Not installed
2023-06-16 10:08:40,106:INFO:                 ray: Not installed
2023-06-16 10:08:40,106:INFO:            hyperopt: Not installed
2023-06-16 10:08:40,106:INFO:              optuna: Not installed
2023-06-16 10:08:40,106:INFO:               skopt: Not installed
2023-06-16 10:08:40,106:INFO:              mlflow: Not installed
2023-06-16 10:08:40,106:INFO:              gradio: Not installed
2023-06-16 10:08:40,106:INFO:             fastapi: Not installed
2023-06-16 10:08:40,106:INFO:             uvicorn: Not installed
2023-06-16 10:08:40,106:INFO:              m2cgen: Not installed
2023-06-16 10:08:40,106:INFO:           evidently: Not installed
2023-06-16 10:08:40,107:INFO:               fugue: Not installed
2023-06-16 10:08:40,107:INFO:           streamlit: Not installed
2023-06-16 10:08:40,107:INFO:             prophet: Not installed
2023-06-16 10:08:40,107:INFO:None
2023-06-16 10:08:40,107:INFO:Set up data.
2023-06-16 10:08:40,173:INFO:Set up train/test split.
2023-06-16 10:08:40,199:INFO:Set up index.
2023-06-16 10:08:40,201:INFO:Set up folding strategy.
2023-06-16 10:08:40,201:INFO:Assigning column types.
2023-06-16 10:08:40,214:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:08:40,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,474:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,509:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:08:40,562:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:08:40,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,688:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:08:40,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:40,866:INFO:Preparing preprocessing pipeline...
2023-06-16 10:08:40,868:INFO:Set up simple imputation.
2023-06-16 10:08:40,881:INFO:Set up encoding of ordinal features.
2023-06-16 10:08:40,891:INFO:Set up encoding of categorical features.
2023-06-16 10:08:40,893:INFO:Set up column name cleaning.
2023-06-16 10:08:41,800:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:08:41,851:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=OneHotEncoder(cols=['job',
                                                                    'marital',
                                                                    'education',
                                                                    'loan',
                                                                    'month',
                                                                    'day_of_week',
                                                                    'poutcome'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:08:41,851:INFO:Creating final display dataframe.
2023-06-16 10:08:42,837:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (41185, 55)
5   Transformed train set shape       (28829, 55)
6    Transformed test set shape       (12356, 55)
7              Ordinal features                 3
8              Numeric features                 9
9          Categorical features                10
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              8c78
2023-06-16 10:08:42,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:42,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:43,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:43,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:08:43,045:INFO:setup() successfully completed in 2.97s...............
2023-06-16 10:09:48,589:INFO:Initializing compare_models()
2023-06-16 10:09:48,589:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 10:09:48,590:INFO:Checking exceptions
2023-06-16 10:09:48,602:INFO:Preparing display monitor
2023-06-16 10:09:48,712:INFO:Initializing Logistic Regression
2023-06-16 10:09:48,712:INFO:Total runtime is 0.0 minutes
2023-06-16 10:09:48,717:INFO:SubProcess create_model() called ==================================
2023-06-16 10:09:48,718:INFO:Initializing create_model()
2023-06-16 10:09:48,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:09:48,718:INFO:Checking exceptions
2023-06-16 10:09:48,718:INFO:Importing libraries
2023-06-16 10:09:48,718:INFO:Copying training dataset
2023-06-16 10:09:48,753:INFO:Defining folds
2023-06-16 10:09:48,753:INFO:Declaring metric variables
2023-06-16 10:09:48,758:INFO:Importing untrained model
2023-06-16 10:09:48,763:INFO:Logistic Regression Imported successfully
2023-06-16 10:09:48,772:INFO:Starting cross validation
2023-06-16 10:09:48,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:10:04,728:INFO:Calculating mean and std
2023-06-16 10:10:04,731:INFO:Creating metrics dataframe
2023-06-16 10:10:04,768:INFO:Uploading results into container
2023-06-16 10:10:04,768:INFO:Uploading model into container now
2023-06-16 10:10:04,769:INFO:_master_model_container: 1
2023-06-16 10:10:04,769:INFO:_display_container: 2
2023-06-16 10:10:04,769:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 10:10:04,769:INFO:create_model() successfully completed......................................
2023-06-16 10:10:04,834:INFO:SubProcess create_model() end ==================================
2023-06-16 10:10:04,834:INFO:Creating metrics dataframe
2023-06-16 10:10:04,850:INFO:Initializing K Neighbors Classifier
2023-06-16 10:10:04,850:INFO:Total runtime is 0.26896678606669105 minutes
2023-06-16 10:10:04,854:INFO:SubProcess create_model() called ==================================
2023-06-16 10:10:04,855:INFO:Initializing create_model()
2023-06-16 10:10:04,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:10:04,855:INFO:Checking exceptions
2023-06-16 10:10:04,855:INFO:Importing libraries
2023-06-16 10:10:04,855:INFO:Copying training dataset
2023-06-16 10:10:04,873:INFO:Defining folds
2023-06-16 10:10:04,873:INFO:Declaring metric variables
2023-06-16 10:10:04,878:INFO:Importing untrained model
2023-06-16 10:10:04,882:INFO:K Neighbors Classifier Imported successfully
2023-06-16 10:10:04,892:INFO:Starting cross validation
2023-06-16 10:10:04,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:10:12,036:INFO:Calculating mean and std
2023-06-16 10:10:12,038:INFO:Creating metrics dataframe
2023-06-16 10:10:12,080:INFO:Uploading results into container
2023-06-16 10:10:12,081:INFO:Uploading model into container now
2023-06-16 10:10:12,081:INFO:_master_model_container: 2
2023-06-16 10:10:12,081:INFO:_display_container: 2
2023-06-16 10:10:12,082:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 10:10:12,082:INFO:create_model() successfully completed......................................
2023-06-16 10:10:12,152:INFO:SubProcess create_model() end ==================================
2023-06-16 10:10:12,152:INFO:Creating metrics dataframe
2023-06-16 10:10:12,171:INFO:Initializing Naive Bayes
2023-06-16 10:10:12,172:INFO:Total runtime is 0.3909999807675679 minutes
2023-06-16 10:10:12,177:INFO:SubProcess create_model() called ==================================
2023-06-16 10:10:12,177:INFO:Initializing create_model()
2023-06-16 10:10:12,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:10:12,177:INFO:Checking exceptions
2023-06-16 10:10:12,177:INFO:Importing libraries
2023-06-16 10:10:12,177:INFO:Copying training dataset
2023-06-16 10:10:12,208:INFO:Defining folds
2023-06-16 10:10:12,209:INFO:Declaring metric variables
2023-06-16 10:10:12,213:INFO:Importing untrained model
2023-06-16 10:10:12,218:INFO:Naive Bayes Imported successfully
2023-06-16 10:10:12,227:INFO:Starting cross validation
2023-06-16 10:10:12,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:10:15,105:INFO:Calculating mean and std
2023-06-16 10:10:15,106:INFO:Creating metrics dataframe
2023-06-16 10:10:15,148:INFO:Uploading results into container
2023-06-16 10:10:15,149:INFO:Uploading model into container now
2023-06-16 10:10:15,149:INFO:_master_model_container: 3
2023-06-16 10:10:15,149:INFO:_display_container: 2
2023-06-16 10:10:15,150:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-16 10:10:15,150:INFO:create_model() successfully completed......................................
2023-06-16 10:10:15,212:INFO:SubProcess create_model() end ==================================
2023-06-16 10:10:15,212:INFO:Creating metrics dataframe
2023-06-16 10:10:15,228:INFO:Initializing Decision Tree Classifier
2023-06-16 10:10:15,229:INFO:Total runtime is 0.4419586300849914 minutes
2023-06-16 10:10:15,233:INFO:SubProcess create_model() called ==================================
2023-06-16 10:10:15,233:INFO:Initializing create_model()
2023-06-16 10:10:15,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:10:15,233:INFO:Checking exceptions
2023-06-16 10:10:15,234:INFO:Importing libraries
2023-06-16 10:10:15,234:INFO:Copying training dataset
2023-06-16 10:10:15,250:INFO:Defining folds
2023-06-16 10:10:15,250:INFO:Declaring metric variables
2023-06-16 10:10:15,255:INFO:Importing untrained model
2023-06-16 10:10:15,260:INFO:Decision Tree Classifier Imported successfully
2023-06-16 10:10:15,274:INFO:Starting cross validation
2023-06-16 10:10:15,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:12:53,814:INFO:Calculating mean and std
2023-06-16 10:12:53,816:INFO:Creating metrics dataframe
2023-06-16 10:12:53,880:INFO:Uploading results into container
2023-06-16 10:12:53,881:INFO:Uploading model into container now
2023-06-16 10:12:53,881:INFO:_master_model_container: 4
2023-06-16 10:12:53,881:INFO:_display_container: 2
2023-06-16 10:12:53,882:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best')
2023-06-16 10:12:53,882:INFO:create_model() successfully completed......................................
2023-06-16 10:12:53,948:INFO:SubProcess create_model() end ==================================
2023-06-16 10:12:53,948:INFO:Creating metrics dataframe
2023-06-16 10:12:53,965:INFO:Initializing SVM - Linear Kernel
2023-06-16 10:12:53,966:INFO:Total runtime is 3.087575344244639 minutes
2023-06-16 10:12:53,971:INFO:SubProcess create_model() called ==================================
2023-06-16 10:12:53,971:INFO:Initializing create_model()
2023-06-16 10:12:53,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:12:53,972:INFO:Checking exceptions
2023-06-16 10:12:53,972:INFO:Importing libraries
2023-06-16 10:12:53,972:INFO:Copying training dataset
2023-06-16 10:12:53,994:INFO:Defining folds
2023-06-16 10:12:54,010:INFO:Declaring metric variables
2023-06-16 10:12:54,014:INFO:Importing untrained model
2023-06-16 10:12:54,040:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 10:12:54,050:INFO:Starting cross validation
2023-06-16 10:12:54,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:12:56,268:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:56,837:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:56,946:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:56,974:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:58,674:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:58,918:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:59,181:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:12:59,680:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:13:00,349:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:13:00,881:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:13:00,890:INFO:Calculating mean and std
2023-06-16 10:13:00,891:INFO:Creating metrics dataframe
2023-06-16 10:13:00,963:INFO:Uploading results into container
2023-06-16 10:13:00,963:INFO:Uploading model into container now
2023-06-16 10:13:00,964:INFO:_master_model_container: 5
2023-06-16 10:13:00,964:INFO:_display_container: 2
2023-06-16 10:13:00,964:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 10:13:00,964:INFO:create_model() successfully completed......................................
2023-06-16 10:13:01,026:INFO:SubProcess create_model() end ==================================
2023-06-16 10:13:01,026:INFO:Creating metrics dataframe
2023-06-16 10:13:01,043:INFO:Initializing Ridge Classifier
2023-06-16 10:13:01,044:INFO:Total runtime is 3.2055419723192853 minutes
2023-06-16 10:13:01,049:INFO:SubProcess create_model() called ==================================
2023-06-16 10:13:01,049:INFO:Initializing create_model()
2023-06-16 10:13:01,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:13:01,049:INFO:Checking exceptions
2023-06-16 10:13:01,050:INFO:Importing libraries
2023-06-16 10:13:01,050:INFO:Copying training dataset
2023-06-16 10:13:01,067:INFO:Defining folds
2023-06-16 10:13:01,067:INFO:Declaring metric variables
2023-06-16 10:13:01,083:INFO:Importing untrained model
2023-06-16 10:13:01,088:INFO:Ridge Classifier Imported successfully
2023-06-16 10:13:01,096:INFO:Starting cross validation
2023-06-16 10:13:01,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:13:02,000:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,002:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,016:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,030:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,786:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:02,816:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,008:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,013:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,550:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,626:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:13:03,635:INFO:Calculating mean and std
2023-06-16 10:13:03,637:INFO:Creating metrics dataframe
2023-06-16 10:13:03,705:INFO:Uploading results into container
2023-06-16 10:13:03,706:INFO:Uploading model into container now
2023-06-16 10:13:03,706:INFO:_master_model_container: 6
2023-06-16 10:13:03,706:INFO:_display_container: 2
2023-06-16 10:13:03,706:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=420, solver='auto', tol=0.001)
2023-06-16 10:13:03,706:INFO:create_model() successfully completed......................................
2023-06-16 10:13:03,768:INFO:SubProcess create_model() end ==================================
2023-06-16 10:13:03,768:INFO:Creating metrics dataframe
2023-06-16 10:13:03,785:INFO:Initializing Random Forest Classifier
2023-06-16 10:13:03,786:INFO:Total runtime is 3.251241958141327 minutes
2023-06-16 10:13:03,790:INFO:SubProcess create_model() called ==================================
2023-06-16 10:13:03,790:INFO:Initializing create_model()
2023-06-16 10:13:03,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:13:03,791:INFO:Checking exceptions
2023-06-16 10:13:03,791:INFO:Importing libraries
2023-06-16 10:13:03,791:INFO:Copying training dataset
2023-06-16 10:13:03,808:INFO:Defining folds
2023-06-16 10:13:03,808:INFO:Declaring metric variables
2023-06-16 10:13:03,812:INFO:Importing untrained model
2023-06-16 10:13:03,817:INFO:Random Forest Classifier Imported successfully
2023-06-16 10:13:03,827:INFO:Starting cross validation
2023-06-16 10:13:03,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:22:42,445:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 10:25:33,497:INFO:Calculating mean and std
2023-06-16 10:25:33,499:INFO:Creating metrics dataframe
2023-06-16 10:25:33,592:INFO:Uploading results into container
2023-06-16 10:25:33,593:INFO:Uploading model into container now
2023-06-16 10:25:33,593:INFO:_master_model_container: 7
2023-06-16 10:25:33,594:INFO:_display_container: 2
2023-06-16 10:25:33,594:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 10:25:33,594:INFO:create_model() successfully completed......................................
2023-06-16 10:25:33,666:INFO:SubProcess create_model() end ==================================
2023-06-16 10:25:33,666:INFO:Creating metrics dataframe
2023-06-16 10:25:33,687:INFO:Initializing Quadratic Discriminant Analysis
2023-06-16 10:25:33,687:INFO:Total runtime is 15.749579592545826 minutes
2023-06-16 10:25:33,691:INFO:SubProcess create_model() called ==================================
2023-06-16 10:25:33,692:INFO:Initializing create_model()
2023-06-16 10:25:33,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:25:33,692:INFO:Checking exceptions
2023-06-16 10:25:33,692:INFO:Importing libraries
2023-06-16 10:25:33,692:INFO:Copying training dataset
2023-06-16 10:25:33,711:INFO:Defining folds
2023-06-16 10:25:33,712:INFO:Declaring metric variables
2023-06-16 10:25:33,716:INFO:Importing untrained model
2023-06-16 10:25:33,721:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-16 10:25:33,737:INFO:Starting cross validation
2023-06-16 10:25:33,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:25:34,632:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:34,678:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:34,687:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:34,760:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:36,014:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:36,047:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:36,143:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:36,149:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:37,115:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:37,198:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:25:37,627:INFO:Calculating mean and std
2023-06-16 10:25:37,630:INFO:Creating metrics dataframe
2023-06-16 10:25:37,731:INFO:Uploading results into container
2023-06-16 10:25:37,732:INFO:Uploading model into container now
2023-06-16 10:25:37,732:INFO:_master_model_container: 8
2023-06-16 10:25:37,733:INFO:_display_container: 2
2023-06-16 10:25:37,733:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-16 10:25:37,733:INFO:create_model() successfully completed......................................
2023-06-16 10:25:37,816:INFO:SubProcess create_model() end ==================================
2023-06-16 10:25:37,816:INFO:Creating metrics dataframe
2023-06-16 10:25:37,838:INFO:Initializing Ada Boost Classifier
2023-06-16 10:25:37,838:INFO:Total runtime is 15.81877317825953 minutes
2023-06-16 10:25:37,844:INFO:SubProcess create_model() called ==================================
2023-06-16 10:25:37,844:INFO:Initializing create_model()
2023-06-16 10:25:37,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C1BEF07F0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021C13BC4550>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:25:37,844:INFO:Checking exceptions
2023-06-16 10:25:37,845:INFO:Importing libraries
2023-06-16 10:25:37,845:INFO:Copying training dataset
2023-06-16 10:25:37,880:INFO:Defining folds
2023-06-16 10:25:37,881:INFO:Declaring metric variables
2023-06-16 10:25:37,887:INFO:Importing untrained model
2023-06-16 10:25:37,892:INFO:Ada Boost Classifier Imported successfully
2023-06-16 10:25:37,904:INFO:Starting cross validation
2023-06-16 10:25:37,906:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:31:23,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:31:23,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:31:23,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:31:23,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:31:24,287:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 10:31:24,630:INFO:PyCaret ClassificationExperiment
2023-06-16 10:31:24,630:INFO:Logging name: clf-default-name
2023-06-16 10:31:24,630:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:31:24,630:INFO:version 3.0.2
2023-06-16 10:31:24,630:INFO:Initializing setup()
2023-06-16 10:31:24,631:INFO:self.USI: 5546
2023-06-16 10:31:24,631:INFO:self._variable_keys: {'n_jobs_param', 'y_test', 'pipeline', 'logging_param', '_ml_usecase', 'idx', 'exp_name_log', 'is_multiclass', 'seed', '_available_plots', 'exp_id', 'y', 'y_train', 'X_train', 'X_test', 'fold_generator', 'html_param', 'data', 'fold_groups_param', 'fold_shuffle_param', 'X', 'log_plots_param', 'fix_imbalance', 'gpu_n_jobs_param', 'USI', 'gpu_param', 'memory', 'target_param'}
2023-06-16 10:31:24,631:INFO:Checking environment
2023-06-16 10:31:24,631:INFO:python_version: 3.9.7
2023-06-16 10:31:24,631:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:31:24,631:INFO:machine: AMD64
2023-06-16 10:31:24,631:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:31:24,631:INFO:Memory: svmem(total=17120436224, available=6315499520, percent=63.1, used=10804936704, free=6315499520)
2023-06-16 10:31:24,631:INFO:Physical Core: 4
2023-06-16 10:31:24,631:INFO:Logical Core: 4
2023-06-16 10:31:24,631:INFO:Checking libraries
2023-06-16 10:31:24,631:INFO:System:
2023-06-16 10:31:24,631:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:31:24,632:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:31:24,632:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:31:24,632:INFO:PyCaret required dependencies:
2023-06-16 10:31:24,632:INFO:                 pip: 21.2.3
2023-06-16 10:31:24,632:INFO:          setuptools: 57.4.0
2023-06-16 10:31:24,632:INFO:             pycaret: 3.0.2
2023-06-16 10:31:24,632:INFO:             IPython: 7.28.0
2023-06-16 10:31:24,632:INFO:          ipywidgets: 8.0.6
2023-06-16 10:31:24,632:INFO:                tqdm: 4.64.0
2023-06-16 10:31:24,632:INFO:               numpy: 1.21.2
2023-06-16 10:31:24,632:INFO:              pandas: 1.3.5
2023-06-16 10:31:24,632:INFO:              jinja2: 3.1.2
2023-06-16 10:31:24,632:INFO:               scipy: 1.7.1
2023-06-16 10:31:24,632:INFO:              joblib: 1.2.0
2023-06-16 10:31:24,632:INFO:             sklearn: 1.1.0
2023-06-16 10:31:24,633:INFO:                pyod: 1.0.9
2023-06-16 10:31:24,633:INFO:            imblearn: 0.9.1
2023-06-16 10:31:24,633:INFO:   category_encoders: 2.6.1
2023-06-16 10:31:24,633:INFO:            lightgbm: 3.3.5
2023-06-16 10:31:24,633:INFO:               numba: 0.57.0
2023-06-16 10:31:24,633:INFO:            requests: 2.31.0
2023-06-16 10:31:24,633:INFO:          matplotlib: 3.4.3
2023-06-16 10:31:24,633:INFO:          scikitplot: 0.3.7
2023-06-16 10:31:24,633:INFO:         yellowbrick: 1.5
2023-06-16 10:31:24,633:INFO:              plotly: 5.8.0
2023-06-16 10:31:24,633:INFO:             kaleido: 0.2.1
2023-06-16 10:31:24,633:INFO:         statsmodels: 0.14.0
2023-06-16 10:31:24,633:INFO:              sktime: 0.17.0
2023-06-16 10:31:24,633:INFO:               tbats: 1.1.3
2023-06-16 10:31:24,633:INFO:            pmdarima: 2.0.3
2023-06-16 10:31:24,633:INFO:              psutil: 5.9.0
2023-06-16 10:31:24,633:INFO:PyCaret optional dependencies:
2023-06-16 10:31:24,678:INFO:                shap: Not installed
2023-06-16 10:31:24,678:INFO:           interpret: Not installed
2023-06-16 10:31:24,678:INFO:                umap: Not installed
2023-06-16 10:31:24,678:INFO:    pandas_profiling: Not installed
2023-06-16 10:31:24,678:INFO:  explainerdashboard: Not installed
2023-06-16 10:31:24,678:INFO:             autoviz: Not installed
2023-06-16 10:31:24,678:INFO:           fairlearn: Not installed
2023-06-16 10:31:24,678:INFO:             xgboost: Not installed
2023-06-16 10:31:24,679:INFO:            catboost: Not installed
2023-06-16 10:31:24,679:INFO:              kmodes: Not installed
2023-06-16 10:31:24,679:INFO:             mlxtend: Not installed
2023-06-16 10:31:24,679:INFO:       statsforecast: Not installed
2023-06-16 10:31:24,679:INFO:        tune_sklearn: Not installed
2023-06-16 10:31:24,679:INFO:                 ray: Not installed
2023-06-16 10:31:24,679:INFO:            hyperopt: Not installed
2023-06-16 10:31:24,679:INFO:              optuna: Not installed
2023-06-16 10:31:24,679:INFO:               skopt: Not installed
2023-06-16 10:31:24,679:INFO:              mlflow: Not installed
2023-06-16 10:31:24,680:INFO:              gradio: Not installed
2023-06-16 10:31:24,680:INFO:             fastapi: Not installed
2023-06-16 10:31:24,680:INFO:             uvicorn: Not installed
2023-06-16 10:31:24,680:INFO:              m2cgen: Not installed
2023-06-16 10:31:24,680:INFO:           evidently: Not installed
2023-06-16 10:31:24,680:INFO:               fugue: Not installed
2023-06-16 10:31:24,680:INFO:           streamlit: Not installed
2023-06-16 10:31:24,680:INFO:             prophet: Not installed
2023-06-16 10:31:24,681:INFO:None
2023-06-16 10:31:24,681:INFO:Set up data.
2023-06-16 10:31:24,806:INFO:Set up train/test split.
2023-06-16 10:31:24,835:INFO:Set up index.
2023-06-16 10:31:24,837:INFO:Set up folding strategy.
2023-06-16 10:31:24,837:INFO:Assigning column types.
2023-06-16 10:31:39,043:INFO:PyCaret ClassificationExperiment
2023-06-16 10:31:39,043:INFO:Logging name: clf-default-name
2023-06-16 10:31:39,043:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:31:39,043:INFO:version 3.0.2
2023-06-16 10:31:39,043:INFO:Initializing setup()
2023-06-16 10:31:39,043:INFO:self.USI: 77ff
2023-06-16 10:31:39,043:INFO:self._variable_keys: {'n_jobs_param', 'y_test', 'pipeline', 'logging_param', '_ml_usecase', 'idx', 'exp_name_log', 'is_multiclass', 'seed', '_available_plots', 'exp_id', 'y', 'y_train', 'X_train', 'X_test', 'fold_generator', 'html_param', 'data', 'fold_groups_param', 'fold_shuffle_param', 'X', 'log_plots_param', 'fix_imbalance', 'gpu_n_jobs_param', 'USI', 'gpu_param', 'memory', 'target_param'}
2023-06-16 10:31:39,043:INFO:Checking environment
2023-06-16 10:31:39,044:INFO:python_version: 3.9.7
2023-06-16 10:31:39,044:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:31:39,044:INFO:machine: AMD64
2023-06-16 10:31:39,044:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:31:39,044:INFO:Memory: svmem(total=17120436224, available=6380437504, percent=62.7, used=10739998720, free=6380437504)
2023-06-16 10:31:39,044:INFO:Physical Core: 4
2023-06-16 10:31:39,044:INFO:Logical Core: 4
2023-06-16 10:31:39,044:INFO:Checking libraries
2023-06-16 10:31:39,044:INFO:System:
2023-06-16 10:31:39,044:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:31:39,044:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:31:39,044:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:31:39,044:INFO:PyCaret required dependencies:
2023-06-16 10:31:39,044:INFO:                 pip: 21.2.3
2023-06-16 10:31:39,044:INFO:          setuptools: 57.4.0
2023-06-16 10:31:39,044:INFO:             pycaret: 3.0.2
2023-06-16 10:31:39,044:INFO:             IPython: 7.28.0
2023-06-16 10:31:39,044:INFO:          ipywidgets: 8.0.6
2023-06-16 10:31:39,044:INFO:                tqdm: 4.64.0
2023-06-16 10:31:39,045:INFO:               numpy: 1.21.2
2023-06-16 10:31:39,045:INFO:              pandas: 1.3.5
2023-06-16 10:31:39,045:INFO:              jinja2: 3.1.2
2023-06-16 10:31:39,045:INFO:               scipy: 1.7.1
2023-06-16 10:31:39,045:INFO:              joblib: 1.2.0
2023-06-16 10:31:39,045:INFO:             sklearn: 1.1.0
2023-06-16 10:31:39,045:INFO:                pyod: 1.0.9
2023-06-16 10:31:39,045:INFO:            imblearn: 0.9.1
2023-06-16 10:31:39,045:INFO:   category_encoders: 2.6.1
2023-06-16 10:31:39,045:INFO:            lightgbm: 3.3.5
2023-06-16 10:31:39,045:INFO:               numba: 0.57.0
2023-06-16 10:31:39,045:INFO:            requests: 2.31.0
2023-06-16 10:31:39,045:INFO:          matplotlib: 3.4.3
2023-06-16 10:31:39,045:INFO:          scikitplot: 0.3.7
2023-06-16 10:31:39,045:INFO:         yellowbrick: 1.5
2023-06-16 10:31:39,045:INFO:              plotly: 5.8.0
2023-06-16 10:31:39,045:INFO:             kaleido: 0.2.1
2023-06-16 10:31:39,045:INFO:         statsmodels: 0.14.0
2023-06-16 10:31:39,045:INFO:              sktime: 0.17.0
2023-06-16 10:31:39,045:INFO:               tbats: 1.1.3
2023-06-16 10:31:39,045:INFO:            pmdarima: 2.0.3
2023-06-16 10:31:39,046:INFO:              psutil: 5.9.0
2023-06-16 10:31:39,046:INFO:PyCaret optional dependencies:
2023-06-16 10:31:39,046:INFO:                shap: Not installed
2023-06-16 10:31:39,046:INFO:           interpret: Not installed
2023-06-16 10:31:39,046:INFO:                umap: Not installed
2023-06-16 10:31:39,046:INFO:    pandas_profiling: Not installed
2023-06-16 10:31:39,046:INFO:  explainerdashboard: Not installed
2023-06-16 10:31:39,046:INFO:             autoviz: Not installed
2023-06-16 10:31:39,046:INFO:           fairlearn: Not installed
2023-06-16 10:31:39,046:INFO:             xgboost: Not installed
2023-06-16 10:31:39,046:INFO:            catboost: Not installed
2023-06-16 10:31:39,046:INFO:              kmodes: Not installed
2023-06-16 10:31:39,046:INFO:             mlxtend: Not installed
2023-06-16 10:31:39,046:INFO:       statsforecast: Not installed
2023-06-16 10:31:39,046:INFO:        tune_sklearn: Not installed
2023-06-16 10:31:39,046:INFO:                 ray: Not installed
2023-06-16 10:31:39,046:INFO:            hyperopt: Not installed
2023-06-16 10:31:39,046:INFO:              optuna: Not installed
2023-06-16 10:31:39,046:INFO:               skopt: Not installed
2023-06-16 10:31:39,046:INFO:              mlflow: Not installed
2023-06-16 10:31:39,046:INFO:              gradio: Not installed
2023-06-16 10:31:39,047:INFO:             fastapi: Not installed
2023-06-16 10:31:39,047:INFO:             uvicorn: Not installed
2023-06-16 10:31:39,047:INFO:              m2cgen: Not installed
2023-06-16 10:31:39,047:INFO:           evidently: Not installed
2023-06-16 10:31:39,047:INFO:               fugue: Not installed
2023-06-16 10:31:39,047:INFO:           streamlit: Not installed
2023-06-16 10:31:39,047:INFO:             prophet: Not installed
2023-06-16 10:31:39,047:INFO:None
2023-06-16 10:31:39,047:INFO:Set up data.
2023-06-16 10:31:39,115:INFO:Set up train/test split.
2023-06-16 10:31:39,143:INFO:Set up index.
2023-06-16 10:31:39,145:INFO:Set up folding strategy.
2023-06-16 10:31:39,145:INFO:Assigning column types.
2023-06-16 10:31:39,158:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:31:39,240:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,243:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,414:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,446:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:31:39,499:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:31:39,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,640:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:31:39,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:39,839:INFO:Preparing preprocessing pipeline...
2023-06-16 10:31:39,841:INFO:Set up simple imputation.
2023-06-16 10:31:39,852:INFO:Set up encoding of ordinal features.
2023-06-16 10:31:39,861:INFO:Set up encoding of categorical features.
2023-06-16 10:31:39,861:INFO:Set up imbalanced handling.
2023-06-16 10:31:39,862:INFO:Set up column name cleaning.
2023-06-16 10:31:40,819:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:31:40,872:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:31:40,872:INFO:Creating final display dataframe.
2023-06-16 10:31:41,814:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              77ff
2023-06-16 10:31:41,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:41,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:42,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:42,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:31:42,022:INFO:setup() successfully completed in 3.05s...............
2023-06-16 10:32:47,287:INFO:PyCaret ClassificationExperiment
2023-06-16 10:32:47,288:INFO:Logging name: clf-default-name
2023-06-16 10:32:47,288:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:32:47,288:INFO:version 3.0.2
2023-06-16 10:32:47,288:INFO:Initializing setup()
2023-06-16 10:32:47,288:INFO:self.USI: af05
2023-06-16 10:32:47,288:INFO:self._variable_keys: {'n_jobs_param', 'y_test', 'pipeline', 'logging_param', '_ml_usecase', 'idx', 'exp_name_log', 'is_multiclass', 'seed', '_available_plots', 'exp_id', 'y', 'y_train', 'X_train', 'X_test', 'fold_generator', 'html_param', 'data', 'fold_groups_param', 'fold_shuffle_param', 'X', 'log_plots_param', 'fix_imbalance', 'gpu_n_jobs_param', 'USI', 'gpu_param', 'memory', 'target_param'}
2023-06-16 10:32:47,288:INFO:Checking environment
2023-06-16 10:32:47,288:INFO:python_version: 3.9.7
2023-06-16 10:32:47,288:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:32:47,289:INFO:machine: AMD64
2023-06-16 10:32:47,289:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:32:47,289:INFO:Memory: svmem(total=17120436224, available=6265946112, percent=63.4, used=10854490112, free=6265946112)
2023-06-16 10:32:47,289:INFO:Physical Core: 4
2023-06-16 10:32:47,289:INFO:Logical Core: 4
2023-06-16 10:32:47,289:INFO:Checking libraries
2023-06-16 10:32:47,289:INFO:System:
2023-06-16 10:32:47,289:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:32:47,289:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:32:47,289:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:32:47,289:INFO:PyCaret required dependencies:
2023-06-16 10:32:47,289:INFO:                 pip: 21.2.3
2023-06-16 10:32:47,289:INFO:          setuptools: 57.4.0
2023-06-16 10:32:47,289:INFO:             pycaret: 3.0.2
2023-06-16 10:32:47,289:INFO:             IPython: 7.28.0
2023-06-16 10:32:47,289:INFO:          ipywidgets: 8.0.6
2023-06-16 10:32:47,289:INFO:                tqdm: 4.64.0
2023-06-16 10:32:47,290:INFO:               numpy: 1.21.2
2023-06-16 10:32:47,290:INFO:              pandas: 1.3.5
2023-06-16 10:32:47,290:INFO:              jinja2: 3.1.2
2023-06-16 10:32:47,290:INFO:               scipy: 1.7.1
2023-06-16 10:32:47,290:INFO:              joblib: 1.2.0
2023-06-16 10:32:47,290:INFO:             sklearn: 1.1.0
2023-06-16 10:32:47,290:INFO:                pyod: 1.0.9
2023-06-16 10:32:47,290:INFO:            imblearn: 0.9.1
2023-06-16 10:32:47,290:INFO:   category_encoders: 2.6.1
2023-06-16 10:32:47,290:INFO:            lightgbm: 3.3.5
2023-06-16 10:32:47,290:INFO:               numba: 0.57.0
2023-06-16 10:32:47,290:INFO:            requests: 2.31.0
2023-06-16 10:32:47,290:INFO:          matplotlib: 3.4.3
2023-06-16 10:32:47,290:INFO:          scikitplot: 0.3.7
2023-06-16 10:32:47,290:INFO:         yellowbrick: 1.5
2023-06-16 10:32:47,290:INFO:              plotly: 5.8.0
2023-06-16 10:32:47,290:INFO:             kaleido: 0.2.1
2023-06-16 10:32:47,291:INFO:         statsmodels: 0.14.0
2023-06-16 10:32:47,291:INFO:              sktime: 0.17.0
2023-06-16 10:32:47,291:INFO:               tbats: 1.1.3
2023-06-16 10:32:47,291:INFO:            pmdarima: 2.0.3
2023-06-16 10:32:47,291:INFO:              psutil: 5.9.0
2023-06-16 10:32:47,291:INFO:PyCaret optional dependencies:
2023-06-16 10:32:47,291:INFO:                shap: Not installed
2023-06-16 10:32:47,291:INFO:           interpret: Not installed
2023-06-16 10:32:47,291:INFO:                umap: Not installed
2023-06-16 10:32:47,291:INFO:    pandas_profiling: Not installed
2023-06-16 10:32:47,291:INFO:  explainerdashboard: Not installed
2023-06-16 10:32:47,291:INFO:             autoviz: Not installed
2023-06-16 10:32:47,291:INFO:           fairlearn: Not installed
2023-06-16 10:32:47,291:INFO:             xgboost: Not installed
2023-06-16 10:32:47,291:INFO:            catboost: Not installed
2023-06-16 10:32:47,291:INFO:              kmodes: Not installed
2023-06-16 10:32:47,291:INFO:             mlxtend: Not installed
2023-06-16 10:32:47,291:INFO:       statsforecast: Not installed
2023-06-16 10:32:47,291:INFO:        tune_sklearn: Not installed
2023-06-16 10:32:47,291:INFO:                 ray: Not installed
2023-06-16 10:32:47,293:INFO:            hyperopt: Not installed
2023-06-16 10:32:47,293:INFO:              optuna: Not installed
2023-06-16 10:32:47,293:INFO:               skopt: Not installed
2023-06-16 10:32:47,293:INFO:              mlflow: Not installed
2023-06-16 10:32:47,293:INFO:              gradio: Not installed
2023-06-16 10:32:47,293:INFO:             fastapi: Not installed
2023-06-16 10:32:47,293:INFO:             uvicorn: Not installed
2023-06-16 10:32:47,293:INFO:              m2cgen: Not installed
2023-06-16 10:32:47,293:INFO:           evidently: Not installed
2023-06-16 10:32:47,293:INFO:               fugue: Not installed
2023-06-16 10:32:47,293:INFO:           streamlit: Not installed
2023-06-16 10:32:47,293:INFO:             prophet: Not installed
2023-06-16 10:32:47,293:INFO:None
2023-06-16 10:32:47,293:INFO:Set up data.
2023-06-16 10:32:47,358:INFO:Set up train/test split.
2023-06-16 10:32:47,383:INFO:Set up index.
2023-06-16 10:32:47,384:INFO:Set up folding strategy.
2023-06-16 10:32:47,384:INFO:Assigning column types.
2023-06-16 10:33:19,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:33:19,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:33:19,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:33:19,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:33:20,877:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 10:33:21,208:INFO:PyCaret ClassificationExperiment
2023-06-16 10:33:21,208:INFO:Logging name: clf-default-name
2023-06-16 10:33:21,208:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:33:21,208:INFO:version 3.0.2
2023-06-16 10:33:21,208:INFO:Initializing setup()
2023-06-16 10:33:21,208:INFO:self.USI: c5fd
2023-06-16 10:33:21,208:INFO:self._variable_keys: {'X', 'logging_param', '_available_plots', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'memory', 'X_train', 'target_param', 'y_test', 'X_test', 'gpu_n_jobs_param', 'log_plots_param', 'fold_groups_param', 'html_param', 'idx', 'USI', 'y_train', 'fold_generator', 'n_jobs_param', 'data', 'exp_id', 'seed', 'exp_name_log', '_ml_usecase', 'pipeline', 'gpu_param', 'y'}
2023-06-16 10:33:21,208:INFO:Checking environment
2023-06-16 10:33:21,208:INFO:python_version: 3.9.7
2023-06-16 10:33:21,208:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:33:21,209:INFO:machine: AMD64
2023-06-16 10:33:21,209:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:33:21,209:INFO:Memory: svmem(total=17120436224, available=6323027968, percent=63.1, used=10797408256, free=6323027968)
2023-06-16 10:33:21,209:INFO:Physical Core: 4
2023-06-16 10:33:21,209:INFO:Logical Core: 4
2023-06-16 10:33:21,209:INFO:Checking libraries
2023-06-16 10:33:21,209:INFO:System:
2023-06-16 10:33:21,209:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:33:21,209:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:33:21,209:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:33:21,209:INFO:PyCaret required dependencies:
2023-06-16 10:33:21,209:INFO:                 pip: 21.2.3
2023-06-16 10:33:21,209:INFO:          setuptools: 57.4.0
2023-06-16 10:33:21,209:INFO:             pycaret: 3.0.2
2023-06-16 10:33:21,209:INFO:             IPython: 7.28.0
2023-06-16 10:33:21,209:INFO:          ipywidgets: 8.0.6
2023-06-16 10:33:21,209:INFO:                tqdm: 4.64.0
2023-06-16 10:33:21,209:INFO:               numpy: 1.21.2
2023-06-16 10:33:21,210:INFO:              pandas: 1.3.5
2023-06-16 10:33:21,210:INFO:              jinja2: 3.1.2
2023-06-16 10:33:21,210:INFO:               scipy: 1.7.1
2023-06-16 10:33:21,210:INFO:              joblib: 1.2.0
2023-06-16 10:33:21,210:INFO:             sklearn: 1.1.0
2023-06-16 10:33:21,210:INFO:                pyod: 1.0.9
2023-06-16 10:33:21,210:INFO:            imblearn: 0.9.1
2023-06-16 10:33:21,210:INFO:   category_encoders: 2.6.1
2023-06-16 10:33:21,210:INFO:            lightgbm: 3.3.5
2023-06-16 10:33:21,210:INFO:               numba: 0.57.0
2023-06-16 10:33:21,210:INFO:            requests: 2.31.0
2023-06-16 10:33:21,210:INFO:          matplotlib: 3.4.3
2023-06-16 10:33:21,210:INFO:          scikitplot: 0.3.7
2023-06-16 10:33:21,210:INFO:         yellowbrick: 1.5
2023-06-16 10:33:21,210:INFO:              plotly: 5.8.0
2023-06-16 10:33:21,210:INFO:             kaleido: 0.2.1
2023-06-16 10:33:21,210:INFO:         statsmodels: 0.14.0
2023-06-16 10:33:21,210:INFO:              sktime: 0.17.0
2023-06-16 10:33:21,210:INFO:               tbats: 1.1.3
2023-06-16 10:33:21,210:INFO:            pmdarima: 2.0.3
2023-06-16 10:33:21,210:INFO:              psutil: 5.9.0
2023-06-16 10:33:21,210:INFO:PyCaret optional dependencies:
2023-06-16 10:33:21,232:INFO:                shap: Not installed
2023-06-16 10:33:21,232:INFO:           interpret: Not installed
2023-06-16 10:33:21,232:INFO:                umap: Not installed
2023-06-16 10:33:21,232:INFO:    pandas_profiling: Not installed
2023-06-16 10:33:21,232:INFO:  explainerdashboard: Not installed
2023-06-16 10:33:21,232:INFO:             autoviz: Not installed
2023-06-16 10:33:21,232:INFO:           fairlearn: Not installed
2023-06-16 10:33:21,232:INFO:             xgboost: Not installed
2023-06-16 10:33:21,232:INFO:            catboost: Not installed
2023-06-16 10:33:21,232:INFO:              kmodes: Not installed
2023-06-16 10:33:21,232:INFO:             mlxtend: Not installed
2023-06-16 10:33:21,232:INFO:       statsforecast: Not installed
2023-06-16 10:33:21,233:INFO:        tune_sklearn: Not installed
2023-06-16 10:33:21,233:INFO:                 ray: Not installed
2023-06-16 10:33:21,233:INFO:            hyperopt: Not installed
2023-06-16 10:33:21,233:INFO:              optuna: Not installed
2023-06-16 10:33:21,233:INFO:               skopt: Not installed
2023-06-16 10:33:21,233:INFO:              mlflow: Not installed
2023-06-16 10:33:21,233:INFO:              gradio: Not installed
2023-06-16 10:33:21,233:INFO:             fastapi: Not installed
2023-06-16 10:33:21,233:INFO:             uvicorn: Not installed
2023-06-16 10:33:21,233:INFO:              m2cgen: Not installed
2023-06-16 10:33:21,233:INFO:           evidently: Not installed
2023-06-16 10:33:21,233:INFO:               fugue: Not installed
2023-06-16 10:33:21,233:INFO:           streamlit: Not installed
2023-06-16 10:33:21,233:INFO:             prophet: Not installed
2023-06-16 10:33:21,233:INFO:None
2023-06-16 10:33:21,233:INFO:Set up data.
2023-06-16 10:33:21,292:INFO:Set up train/test split.
2023-06-16 10:33:21,318:INFO:Set up index.
2023-06-16 10:33:21,319:INFO:Set up folding strategy.
2023-06-16 10:33:21,319:INFO:Assigning column types.
2023-06-16 10:33:45,504:INFO:PyCaret ClassificationExperiment
2023-06-16 10:33:45,504:INFO:Logging name: clf-default-name
2023-06-16 10:33:45,505:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:33:45,505:INFO:version 3.0.2
2023-06-16 10:33:45,505:INFO:Initializing setup()
2023-06-16 10:33:45,505:INFO:self.USI: d532
2023-06-16 10:33:45,505:INFO:self._variable_keys: {'X', 'logging_param', '_available_plots', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'memory', 'X_train', 'target_param', 'y_test', 'X_test', 'gpu_n_jobs_param', 'log_plots_param', 'fold_groups_param', 'html_param', 'idx', 'USI', 'y_train', 'fold_generator', 'n_jobs_param', 'data', 'exp_id', 'seed', 'exp_name_log', '_ml_usecase', 'pipeline', 'gpu_param', 'y'}
2023-06-16 10:33:45,505:INFO:Checking environment
2023-06-16 10:33:45,505:INFO:python_version: 3.9.7
2023-06-16 10:33:45,505:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:33:45,505:INFO:machine: AMD64
2023-06-16 10:33:45,505:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:33:45,505:INFO:Memory: svmem(total=17120436224, available=6298517504, percent=63.2, used=10821918720, free=6298517504)
2023-06-16 10:33:45,505:INFO:Physical Core: 4
2023-06-16 10:33:45,505:INFO:Logical Core: 4
2023-06-16 10:33:45,505:INFO:Checking libraries
2023-06-16 10:33:45,505:INFO:System:
2023-06-16 10:33:45,506:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:33:45,506:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:33:45,506:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:33:45,506:INFO:PyCaret required dependencies:
2023-06-16 10:33:45,506:INFO:                 pip: 21.2.3
2023-06-16 10:33:45,506:INFO:          setuptools: 57.4.0
2023-06-16 10:33:45,506:INFO:             pycaret: 3.0.2
2023-06-16 10:33:45,506:INFO:             IPython: 7.28.0
2023-06-16 10:33:45,506:INFO:          ipywidgets: 8.0.6
2023-06-16 10:33:45,506:INFO:                tqdm: 4.64.0
2023-06-16 10:33:45,506:INFO:               numpy: 1.21.2
2023-06-16 10:33:45,506:INFO:              pandas: 1.3.5
2023-06-16 10:33:45,507:INFO:              jinja2: 3.1.2
2023-06-16 10:33:45,507:INFO:               scipy: 1.7.1
2023-06-16 10:33:45,507:INFO:              joblib: 1.2.0
2023-06-16 10:33:45,507:INFO:             sklearn: 1.1.0
2023-06-16 10:33:45,507:INFO:                pyod: 1.0.9
2023-06-16 10:33:45,507:INFO:            imblearn: 0.9.1
2023-06-16 10:33:45,507:INFO:   category_encoders: 2.6.1
2023-06-16 10:33:45,507:INFO:            lightgbm: 3.3.5
2023-06-16 10:33:45,507:INFO:               numba: 0.57.0
2023-06-16 10:33:45,507:INFO:            requests: 2.31.0
2023-06-16 10:33:45,507:INFO:          matplotlib: 3.4.3
2023-06-16 10:33:45,507:INFO:          scikitplot: 0.3.7
2023-06-16 10:33:45,507:INFO:         yellowbrick: 1.5
2023-06-16 10:33:45,507:INFO:              plotly: 5.8.0
2023-06-16 10:33:45,507:INFO:             kaleido: 0.2.1
2023-06-16 10:33:45,507:INFO:         statsmodels: 0.14.0
2023-06-16 10:33:45,507:INFO:              sktime: 0.17.0
2023-06-16 10:33:45,507:INFO:               tbats: 1.1.3
2023-06-16 10:33:45,507:INFO:            pmdarima: 2.0.3
2023-06-16 10:33:45,508:INFO:              psutil: 5.9.0
2023-06-16 10:33:45,508:INFO:PyCaret optional dependencies:
2023-06-16 10:33:45,508:INFO:                shap: Not installed
2023-06-16 10:33:45,508:INFO:           interpret: Not installed
2023-06-16 10:33:45,508:INFO:                umap: Not installed
2023-06-16 10:33:45,508:INFO:    pandas_profiling: Not installed
2023-06-16 10:33:45,508:INFO:  explainerdashboard: Not installed
2023-06-16 10:33:45,508:INFO:             autoviz: Not installed
2023-06-16 10:33:45,508:INFO:           fairlearn: Not installed
2023-06-16 10:33:45,509:INFO:             xgboost: Not installed
2023-06-16 10:33:45,509:INFO:            catboost: Not installed
2023-06-16 10:33:45,509:INFO:              kmodes: Not installed
2023-06-16 10:33:45,509:INFO:             mlxtend: Not installed
2023-06-16 10:33:45,509:INFO:       statsforecast: Not installed
2023-06-16 10:33:45,509:INFO:        tune_sklearn: Not installed
2023-06-16 10:33:45,509:INFO:                 ray: Not installed
2023-06-16 10:33:45,509:INFO:            hyperopt: Not installed
2023-06-16 10:33:45,509:INFO:              optuna: Not installed
2023-06-16 10:33:45,509:INFO:               skopt: Not installed
2023-06-16 10:33:45,509:INFO:              mlflow: Not installed
2023-06-16 10:33:45,509:INFO:              gradio: Not installed
2023-06-16 10:33:45,509:INFO:             fastapi: Not installed
2023-06-16 10:33:45,509:INFO:             uvicorn: Not installed
2023-06-16 10:33:45,509:INFO:              m2cgen: Not installed
2023-06-16 10:33:45,509:INFO:           evidently: Not installed
2023-06-16 10:33:45,509:INFO:               fugue: Not installed
2023-06-16 10:33:45,510:INFO:           streamlit: Not installed
2023-06-16 10:33:45,510:INFO:             prophet: Not installed
2023-06-16 10:33:45,510:INFO:None
2023-06-16 10:33:45,510:INFO:Set up data.
2023-06-16 10:33:45,570:INFO:Set up train/test split.
2023-06-16 10:33:45,593:INFO:Set up index.
2023-06-16 10:33:45,594:INFO:Set up folding strategy.
2023-06-16 10:33:45,594:INFO:Assigning column types.
2023-06-16 10:33:45,606:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:33:45,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:33:45,670:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:33:45,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:45,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:45,930:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:33:45,931:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:33:45,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:45,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:45,967:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:33:46,017:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:33:46,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,098:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:33:46,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,130:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:33:46,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:46,297:INFO:Preparing preprocessing pipeline...
2023-06-16 10:33:46,300:INFO:Set up simple imputation.
2023-06-16 10:33:46,310:INFO:Set up encoding of ordinal features.
2023-06-16 10:33:46,320:INFO:Set up encoding of categorical features.
2023-06-16 10:33:46,320:INFO:Set up imbalanced handling.
2023-06-16 10:33:46,322:INFO:Set up column name cleaning.
2023-06-16 10:33:46,880:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:33:46,930:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:33:46,930:INFO:Creating final display dataframe.
2023-06-16 10:33:47,698:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              d532
2023-06-16 10:33:47,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:47,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:47,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:47,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:33:47,937:INFO:setup() successfully completed in 2.51s...............
2023-06-16 10:34:21,792:INFO:PyCaret ClassificationExperiment
2023-06-16 10:34:21,792:INFO:Logging name: clf-default-name
2023-06-16 10:34:21,792:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:34:21,792:INFO:version 3.0.2
2023-06-16 10:34:21,792:INFO:Initializing setup()
2023-06-16 10:34:21,792:INFO:self.USI: 431e
2023-06-16 10:34:21,793:INFO:self._variable_keys: {'X', 'logging_param', '_available_plots', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'memory', 'X_train', 'target_param', 'y_test', 'X_test', 'gpu_n_jobs_param', 'log_plots_param', 'fold_groups_param', 'html_param', 'idx', 'USI', 'y_train', 'fold_generator', 'n_jobs_param', 'data', 'exp_id', 'seed', 'exp_name_log', '_ml_usecase', 'pipeline', 'gpu_param', 'y'}
2023-06-16 10:34:21,793:INFO:Checking environment
2023-06-16 10:34:21,793:INFO:python_version: 3.9.7
2023-06-16 10:34:21,793:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:34:21,793:INFO:machine: AMD64
2023-06-16 10:34:21,793:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:34:21,793:INFO:Memory: svmem(total=17120436224, available=6267981824, percent=63.4, used=10852454400, free=6267981824)
2023-06-16 10:34:21,793:INFO:Physical Core: 4
2023-06-16 10:34:21,793:INFO:Logical Core: 4
2023-06-16 10:34:21,793:INFO:Checking libraries
2023-06-16 10:34:21,793:INFO:System:
2023-06-16 10:34:21,793:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:34:21,793:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:34:21,793:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:34:21,793:INFO:PyCaret required dependencies:
2023-06-16 10:34:21,793:INFO:                 pip: 21.2.3
2023-06-16 10:34:21,794:INFO:          setuptools: 57.4.0
2023-06-16 10:34:21,794:INFO:             pycaret: 3.0.2
2023-06-16 10:34:21,794:INFO:             IPython: 7.28.0
2023-06-16 10:34:21,794:INFO:          ipywidgets: 8.0.6
2023-06-16 10:34:21,794:INFO:                tqdm: 4.64.0
2023-06-16 10:34:21,794:INFO:               numpy: 1.21.2
2023-06-16 10:34:21,794:INFO:              pandas: 1.3.5
2023-06-16 10:34:21,794:INFO:              jinja2: 3.1.2
2023-06-16 10:34:21,794:INFO:               scipy: 1.7.1
2023-06-16 10:34:21,794:INFO:              joblib: 1.2.0
2023-06-16 10:34:21,794:INFO:             sklearn: 1.1.0
2023-06-16 10:34:21,794:INFO:                pyod: 1.0.9
2023-06-16 10:34:21,794:INFO:            imblearn: 0.9.1
2023-06-16 10:34:21,794:INFO:   category_encoders: 2.6.1
2023-06-16 10:34:21,794:INFO:            lightgbm: 3.3.5
2023-06-16 10:34:21,794:INFO:               numba: 0.57.0
2023-06-16 10:34:21,794:INFO:            requests: 2.31.0
2023-06-16 10:34:21,794:INFO:          matplotlib: 3.4.3
2023-06-16 10:34:21,794:INFO:          scikitplot: 0.3.7
2023-06-16 10:34:21,795:INFO:         yellowbrick: 1.5
2023-06-16 10:34:21,795:INFO:              plotly: 5.8.0
2023-06-16 10:34:21,795:INFO:             kaleido: 0.2.1
2023-06-16 10:34:21,795:INFO:         statsmodels: 0.14.0
2023-06-16 10:34:21,795:INFO:              sktime: 0.17.0
2023-06-16 10:34:21,795:INFO:               tbats: 1.1.3
2023-06-16 10:34:21,795:INFO:            pmdarima: 2.0.3
2023-06-16 10:34:21,795:INFO:              psutil: 5.9.0
2023-06-16 10:34:21,795:INFO:PyCaret optional dependencies:
2023-06-16 10:34:21,795:INFO:                shap: Not installed
2023-06-16 10:34:21,795:INFO:           interpret: Not installed
2023-06-16 10:34:21,795:INFO:                umap: Not installed
2023-06-16 10:34:21,795:INFO:    pandas_profiling: Not installed
2023-06-16 10:34:21,795:INFO:  explainerdashboard: Not installed
2023-06-16 10:34:21,795:INFO:             autoviz: Not installed
2023-06-16 10:34:21,795:INFO:           fairlearn: Not installed
2023-06-16 10:34:21,795:INFO:             xgboost: Not installed
2023-06-16 10:34:21,795:INFO:            catboost: Not installed
2023-06-16 10:34:21,795:INFO:              kmodes: Not installed
2023-06-16 10:34:21,796:INFO:             mlxtend: Not installed
2023-06-16 10:34:21,796:INFO:       statsforecast: Not installed
2023-06-16 10:34:21,796:INFO:        tune_sklearn: Not installed
2023-06-16 10:34:21,796:INFO:                 ray: Not installed
2023-06-16 10:34:21,796:INFO:            hyperopt: Not installed
2023-06-16 10:34:21,796:INFO:              optuna: Not installed
2023-06-16 10:34:21,796:INFO:               skopt: Not installed
2023-06-16 10:34:21,796:INFO:              mlflow: Not installed
2023-06-16 10:34:21,796:INFO:              gradio: Not installed
2023-06-16 10:34:21,796:INFO:             fastapi: Not installed
2023-06-16 10:34:21,796:INFO:             uvicorn: Not installed
2023-06-16 10:34:21,796:INFO:              m2cgen: Not installed
2023-06-16 10:34:21,796:INFO:           evidently: Not installed
2023-06-16 10:34:21,796:INFO:               fugue: Not installed
2023-06-16 10:34:21,796:INFO:           streamlit: Not installed
2023-06-16 10:34:21,796:INFO:             prophet: Not installed
2023-06-16 10:34:21,796:INFO:None
2023-06-16 10:34:21,796:INFO:Set up GPU usage.
2023-06-16 10:34:21,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:21,796:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-06-16 10:34:21,796:INFO:Set up data.
2023-06-16 10:34:21,901:INFO:Set up train/test split.
2023-06-16 10:34:21,951:INFO:Set up index.
2023-06-16 10:34:21,952:INFO:Set up folding strategy.
2023-06-16 10:34:21,953:INFO:Assigning column types.
2023-06-16 10:34:21,972:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:34:21,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,038:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:34:22,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,040:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:34:22,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:22,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,206:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:34:28,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:34:28,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,561:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:34:28,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,616:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:34:28,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,818:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:34:28,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:28,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:28,974:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:34:28,974:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,024:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,052:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:29,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:29,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:29,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:29,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:29,391:INFO:Preparing preprocessing pipeline...
2023-06-16 10:34:29,393:INFO:Set up simple imputation.
2023-06-16 10:34:29,405:INFO:Set up encoding of ordinal features.
2023-06-16 10:34:29,414:INFO:Set up encoding of categorical features.
2023-06-16 10:34:29,415:INFO:Set up imbalanced handling.
2023-06-16 10:34:29,416:INFO:Set up column name cleaning.
2023-06-16 10:34:29,804:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:34:29,857:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:34:29,857:INFO:Creating final display dataframe.
2023-06-16 10:34:30,043:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU              True
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              431e
2023-06-16 10:34:30,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,109:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,156:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:30,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:30,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:34:30,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:30,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:34:30,656:INFO:setup() successfully completed in 8.94s...............
2023-06-16 10:35:25,958:INFO:Initializing compare_models()
2023-06-16 10:35:25,958:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 10:35:25,958:INFO:Checking exceptions
2023-06-16 10:35:25,971:INFO:Preparing display monitor
2023-06-16 10:35:26,038:INFO:Initializing Logistic Regression
2023-06-16 10:35:26,038:INFO:Total runtime is 0.0 minutes
2023-06-16 10:35:26,043:INFO:SubProcess create_model() called ==================================
2023-06-16 10:35:26,043:INFO:Initializing create_model()
2023-06-16 10:35:26,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000289B9BEDD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:35:26,044:INFO:Checking exceptions
2023-06-16 10:35:26,044:INFO:Importing libraries
2023-06-16 10:35:26,044:INFO:Copying training dataset
2023-06-16 10:35:26,064:INFO:Defining folds
2023-06-16 10:35:26,064:INFO:Declaring metric variables
2023-06-16 10:35:26,092:INFO:Importing untrained model
2023-06-16 10:35:26,098:INFO:Logistic Regression Imported successfully
2023-06-16 10:35:26,109:INFO:Starting cross validation
2023-06-16 10:35:26,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-06-16 10:35:56,178:INFO:Calculating mean and std
2023-06-16 10:35:56,180:INFO:Creating metrics dataframe
2023-06-16 10:35:56,271:INFO:Uploading results into container
2023-06-16 10:35:56,272:INFO:Uploading model into container now
2023-06-16 10:35:56,272:INFO:_master_model_container: 1
2023-06-16 10:35:56,272:INFO:_display_container: 2
2023-06-16 10:35:56,273:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 10:35:56,273:INFO:create_model() successfully completed......................................
2023-06-16 10:35:56,344:INFO:SubProcess create_model() end ==================================
2023-06-16 10:35:56,344:INFO:Creating metrics dataframe
2023-06-16 10:35:56,360:INFO:Initializing K Neighbors Classifier
2023-06-16 10:35:56,361:INFO:Total runtime is 0.5053819139798482 minutes
2023-06-16 10:35:56,365:INFO:SubProcess create_model() called ==================================
2023-06-16 10:35:56,365:INFO:Initializing create_model()
2023-06-16 10:35:56,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000289B9BEDD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:35:56,365:INFO:Checking exceptions
2023-06-16 10:35:56,365:INFO:Importing libraries
2023-06-16 10:35:56,366:INFO:Copying training dataset
2023-06-16 10:35:56,385:INFO:Defining folds
2023-06-16 10:35:56,385:INFO:Declaring metric variables
2023-06-16 10:35:56,390:INFO:Importing untrained model
2023-06-16 10:35:56,395:INFO:K Neighbors Classifier Imported successfully
2023-06-16 10:35:56,407:INFO:Starting cross validation
2023-06-16 10:35:56,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-06-16 10:36:10,040:INFO:Calculating mean and std
2023-06-16 10:36:10,042:INFO:Creating metrics dataframe
2023-06-16 10:36:10,133:INFO:Uploading results into container
2023-06-16 10:36:10,133:INFO:Uploading model into container now
2023-06-16 10:36:10,133:INFO:_master_model_container: 2
2023-06-16 10:36:10,134:INFO:_display_container: 2
2023-06-16 10:36:10,134:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 10:36:10,134:INFO:create_model() successfully completed......................................
2023-06-16 10:36:10,204:INFO:SubProcess create_model() end ==================================
2023-06-16 10:36:10,204:INFO:Creating metrics dataframe
2023-06-16 10:36:10,220:INFO:Initializing Naive Bayes
2023-06-16 10:36:10,220:INFO:Total runtime is 0.736357041200002 minutes
2023-06-16 10:36:10,224:INFO:SubProcess create_model() called ==================================
2023-06-16 10:36:10,225:INFO:Initializing create_model()
2023-06-16 10:36:10,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000289B9BEDD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:36:10,225:INFO:Checking exceptions
2023-06-16 10:36:10,225:INFO:Importing libraries
2023-06-16 10:36:10,225:INFO:Copying training dataset
2023-06-16 10:36:10,241:INFO:Defining folds
2023-06-16 10:36:10,242:INFO:Declaring metric variables
2023-06-16 10:36:10,246:INFO:Importing untrained model
2023-06-16 10:36:10,251:INFO:Naive Bayes Imported successfully
2023-06-16 10:36:10,265:INFO:Starting cross validation
2023-06-16 10:36:10,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-06-16 10:36:18,641:INFO:Calculating mean and std
2023-06-16 10:36:18,643:INFO:Creating metrics dataframe
2023-06-16 10:36:18,735:INFO:Uploading results into container
2023-06-16 10:36:18,736:INFO:Uploading model into container now
2023-06-16 10:36:18,736:INFO:_master_model_container: 3
2023-06-16 10:36:18,736:INFO:_display_container: 2
2023-06-16 10:36:18,737:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-16 10:36:18,737:INFO:create_model() successfully completed......................................
2023-06-16 10:36:18,806:INFO:SubProcess create_model() end ==================================
2023-06-16 10:36:18,806:INFO:Creating metrics dataframe
2023-06-16 10:36:18,822:INFO:Initializing Decision Tree Classifier
2023-06-16 10:36:18,823:INFO:Total runtime is 0.8797510941823323 minutes
2023-06-16 10:36:18,827:INFO:SubProcess create_model() called ==================================
2023-06-16 10:36:18,828:INFO:Initializing create_model()
2023-06-16 10:36:18,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000289ACE01940>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000289B9BEDD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:36:18,828:INFO:Checking exceptions
2023-06-16 10:36:18,828:INFO:Importing libraries
2023-06-16 10:36:18,828:INFO:Copying training dataset
2023-06-16 10:36:18,844:INFO:Defining folds
2023-06-16 10:36:18,844:INFO:Declaring metric variables
2023-06-16 10:36:18,850:INFO:Importing untrained model
2023-06-16 10:36:18,854:INFO:Decision Tree Classifier Imported successfully
2023-06-16 10:36:18,864:INFO:Starting cross validation
2023-06-16 10:36:18,866:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-06-16 10:37:31,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:31,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:31,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:31,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,505:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 10:37:32,821:INFO:PyCaret ClassificationExperiment
2023-06-16 10:37:32,822:INFO:Logging name: clf-default-name
2023-06-16 10:37:32,822:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:37:32,822:INFO:version 3.0.2
2023-06-16 10:37:32,822:INFO:Initializing setup()
2023-06-16 10:37:32,822:INFO:self.USI: 40c9
2023-06-16 10:37:32,822:INFO:self._variable_keys: {'gpu_param', 'html_param', 'data', 'fold_generator', 'y', 'exp_name_log', '_available_plots', 'exp_id', 'fold_groups_param', 'USI', 'n_jobs_param', 'target_param', 'seed', 'fold_shuffle_param', 'pipeline', 'X_train', 'is_multiclass', 'log_plots_param', '_ml_usecase', 'y_train', 'X_test', 'memory', 'fix_imbalance', 'idx', 'X', 'gpu_n_jobs_param', 'y_test', 'logging_param'}
2023-06-16 10:37:32,822:INFO:Checking environment
2023-06-16 10:37:32,822:INFO:python_version: 3.9.7
2023-06-16 10:37:32,822:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:37:32,822:INFO:machine: AMD64
2023-06-16 10:37:32,822:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:37:32,822:INFO:Memory: svmem(total=17120436224, available=6435307520, percent=62.4, used=10685128704, free=6435307520)
2023-06-16 10:37:32,822:INFO:Physical Core: 4
2023-06-16 10:37:32,822:INFO:Logical Core: 4
2023-06-16 10:37:32,822:INFO:Checking libraries
2023-06-16 10:37:32,822:INFO:System:
2023-06-16 10:37:32,823:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:37:32,823:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:37:32,823:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:37:32,823:INFO:PyCaret required dependencies:
2023-06-16 10:37:32,823:INFO:                 pip: 21.2.3
2023-06-16 10:37:32,823:INFO:          setuptools: 57.4.0
2023-06-16 10:37:32,823:INFO:             pycaret: 3.0.2
2023-06-16 10:37:32,823:INFO:             IPython: 7.28.0
2023-06-16 10:37:32,823:INFO:          ipywidgets: 8.0.6
2023-06-16 10:37:32,823:INFO:                tqdm: 4.64.0
2023-06-16 10:37:32,823:INFO:               numpy: 1.21.2
2023-06-16 10:37:32,823:INFO:              pandas: 1.3.5
2023-06-16 10:37:32,823:INFO:              jinja2: 3.1.2
2023-06-16 10:37:32,823:INFO:               scipy: 1.7.1
2023-06-16 10:37:32,823:INFO:              joblib: 1.2.0
2023-06-16 10:37:32,823:INFO:             sklearn: 1.1.0
2023-06-16 10:37:32,823:INFO:                pyod: 1.0.9
2023-06-16 10:37:32,823:INFO:            imblearn: 0.9.1
2023-06-16 10:37:32,823:INFO:   category_encoders: 2.6.1
2023-06-16 10:37:32,823:INFO:            lightgbm: 3.3.5
2023-06-16 10:37:32,823:INFO:               numba: 0.57.0
2023-06-16 10:37:32,824:INFO:            requests: 2.31.0
2023-06-16 10:37:32,824:INFO:          matplotlib: 3.4.3
2023-06-16 10:37:32,824:INFO:          scikitplot: 0.3.7
2023-06-16 10:37:32,824:INFO:         yellowbrick: 1.5
2023-06-16 10:37:32,824:INFO:              plotly: 5.8.0
2023-06-16 10:37:32,824:INFO:             kaleido: 0.2.1
2023-06-16 10:37:32,824:INFO:         statsmodels: 0.14.0
2023-06-16 10:37:32,824:INFO:              sktime: 0.17.0
2023-06-16 10:37:32,824:INFO:               tbats: 1.1.3
2023-06-16 10:37:32,824:INFO:            pmdarima: 2.0.3
2023-06-16 10:37:32,824:INFO:              psutil: 5.9.0
2023-06-16 10:37:32,824:INFO:PyCaret optional dependencies:
2023-06-16 10:37:32,844:INFO:                shap: Not installed
2023-06-16 10:37:32,845:INFO:           interpret: Not installed
2023-06-16 10:37:32,845:INFO:                umap: Not installed
2023-06-16 10:37:32,845:INFO:    pandas_profiling: Not installed
2023-06-16 10:37:32,845:INFO:  explainerdashboard: Not installed
2023-06-16 10:37:32,845:INFO:             autoviz: Not installed
2023-06-16 10:37:32,845:INFO:           fairlearn: Not installed
2023-06-16 10:37:32,845:INFO:             xgboost: Not installed
2023-06-16 10:37:32,845:INFO:            catboost: Not installed
2023-06-16 10:37:32,845:INFO:              kmodes: Not installed
2023-06-16 10:37:32,845:INFO:             mlxtend: Not installed
2023-06-16 10:37:32,845:INFO:       statsforecast: Not installed
2023-06-16 10:37:32,845:INFO:        tune_sklearn: Not installed
2023-06-16 10:37:32,845:INFO:                 ray: Not installed
2023-06-16 10:37:32,845:INFO:            hyperopt: Not installed
2023-06-16 10:37:32,845:INFO:              optuna: Not installed
2023-06-16 10:37:32,845:INFO:               skopt: Not installed
2023-06-16 10:37:32,846:INFO:              mlflow: Not installed
2023-06-16 10:37:32,846:INFO:              gradio: Not installed
2023-06-16 10:37:32,846:INFO:             fastapi: Not installed
2023-06-16 10:37:32,846:INFO:             uvicorn: Not installed
2023-06-16 10:37:32,846:INFO:              m2cgen: Not installed
2023-06-16 10:37:32,846:INFO:           evidently: Not installed
2023-06-16 10:37:32,846:INFO:               fugue: Not installed
2023-06-16 10:37:32,846:INFO:           streamlit: Not installed
2023-06-16 10:37:32,846:INFO:             prophet: Not installed
2023-06-16 10:37:32,846:INFO:None
2023-06-16 10:37:32,846:INFO:Set up GPU usage.
2023-06-16 10:37:32,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,846:WARNING:cuML is outdated or not found. Required version is >=22.10.
                Please visit https://rapids.ai/ for installation instructions.
2023-06-16 10:37:32,846:INFO:Set up data.
2023-06-16 10:37:32,906:INFO:Set up train/test split.
2023-06-16 10:37:32,932:INFO:Set up index.
2023-06-16 10:37:32,933:INFO:Set up folding strategy.
2023-06-16 10:37:32,933:INFO:Assigning column types.
2023-06-16 10:37:32,944:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:37:32,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,995:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:37:32,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:32,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:32,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,029:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:37:33,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:33,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,450:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:37:33,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,500:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:33,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,529:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,702:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:33,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,733:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:33,850:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:37:33,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,901:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:33,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:34,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:34,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:34,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:34,247:INFO:Preparing preprocessing pipeline...
2023-06-16 10:37:34,250:INFO:Set up simple imputation.
2023-06-16 10:37:34,262:INFO:Set up encoding of ordinal features.
2023-06-16 10:37:34,271:INFO:Set up encoding of categorical features.
2023-06-16 10:37:34,271:INFO:Set up imbalanced handling.
2023-06-16 10:37:34,273:INFO:Set up column name cleaning.
2023-06-16 10:37:34,646:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:37:34,697:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:37:34,698:INFO:Creating final display dataframe.
2023-06-16 10:37:34,880:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU              True
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              40c9
2023-06-16 10:37:34,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,986:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:34,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:35,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:35,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 10:37:35,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:35,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:35,307:INFO:setup() successfully completed in 2.57s...............
2023-06-16 10:37:42,475:INFO:PyCaret ClassificationExperiment
2023-06-16 10:37:42,475:INFO:Logging name: clf-default-name
2023-06-16 10:37:42,475:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 10:37:42,475:INFO:version 3.0.2
2023-06-16 10:37:42,475:INFO:Initializing setup()
2023-06-16 10:37:42,476:INFO:self.USI: c116
2023-06-16 10:37:42,476:INFO:self._variable_keys: {'gpu_param', 'html_param', 'data', 'fold_generator', 'y', 'exp_name_log', '_available_plots', 'exp_id', 'fold_groups_param', 'USI', 'n_jobs_param', 'target_param', 'seed', 'fold_shuffle_param', 'pipeline', 'X_train', 'is_multiclass', 'log_plots_param', '_ml_usecase', 'y_train', 'X_test', 'memory', 'fix_imbalance', 'idx', 'X', 'gpu_n_jobs_param', 'y_test', 'logging_param'}
2023-06-16 10:37:42,476:INFO:Checking environment
2023-06-16 10:37:42,476:INFO:python_version: 3.9.7
2023-06-16 10:37:42,476:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 10:37:42,476:INFO:machine: AMD64
2023-06-16 10:37:42,476:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 10:37:42,476:INFO:Memory: svmem(total=17120436224, available=6433972224, percent=62.4, used=10686464000, free=6433972224)
2023-06-16 10:37:42,476:INFO:Physical Core: 4
2023-06-16 10:37:42,476:INFO:Logical Core: 4
2023-06-16 10:37:42,476:INFO:Checking libraries
2023-06-16 10:37:42,476:INFO:System:
2023-06-16 10:37:42,477:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 10:37:42,477:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 10:37:42,477:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 10:37:42,477:INFO:PyCaret required dependencies:
2023-06-16 10:37:42,477:INFO:                 pip: 21.2.3
2023-06-16 10:37:42,477:INFO:          setuptools: 57.4.0
2023-06-16 10:37:42,478:INFO:             pycaret: 3.0.2
2023-06-16 10:37:42,478:INFO:             IPython: 7.28.0
2023-06-16 10:37:42,478:INFO:          ipywidgets: 8.0.6
2023-06-16 10:37:42,478:INFO:                tqdm: 4.64.0
2023-06-16 10:37:42,478:INFO:               numpy: 1.21.2
2023-06-16 10:37:42,478:INFO:              pandas: 1.3.5
2023-06-16 10:37:42,478:INFO:              jinja2: 3.1.2
2023-06-16 10:37:42,478:INFO:               scipy: 1.7.1
2023-06-16 10:37:42,478:INFO:              joblib: 1.2.0
2023-06-16 10:37:42,478:INFO:             sklearn: 1.1.0
2023-06-16 10:37:42,478:INFO:                pyod: 1.0.9
2023-06-16 10:37:42,478:INFO:            imblearn: 0.9.1
2023-06-16 10:37:42,478:INFO:   category_encoders: 2.6.1
2023-06-16 10:37:42,479:INFO:            lightgbm: 3.3.5
2023-06-16 10:37:42,479:INFO:               numba: 0.57.0
2023-06-16 10:37:42,479:INFO:            requests: 2.31.0
2023-06-16 10:37:42,479:INFO:          matplotlib: 3.4.3
2023-06-16 10:37:42,479:INFO:          scikitplot: 0.3.7
2023-06-16 10:37:42,479:INFO:         yellowbrick: 1.5
2023-06-16 10:37:42,479:INFO:              plotly: 5.8.0
2023-06-16 10:37:42,479:INFO:             kaleido: 0.2.1
2023-06-16 10:37:42,479:INFO:         statsmodels: 0.14.0
2023-06-16 10:37:42,479:INFO:              sktime: 0.17.0
2023-06-16 10:37:42,480:INFO:               tbats: 1.1.3
2023-06-16 10:37:42,480:INFO:            pmdarima: 2.0.3
2023-06-16 10:37:42,480:INFO:              psutil: 5.9.0
2023-06-16 10:37:42,480:INFO:PyCaret optional dependencies:
2023-06-16 10:37:42,480:INFO:                shap: Not installed
2023-06-16 10:37:42,480:INFO:           interpret: Not installed
2023-06-16 10:37:42,480:INFO:                umap: Not installed
2023-06-16 10:37:42,480:INFO:    pandas_profiling: Not installed
2023-06-16 10:37:42,480:INFO:  explainerdashboard: Not installed
2023-06-16 10:37:42,480:INFO:             autoviz: Not installed
2023-06-16 10:37:42,480:INFO:           fairlearn: Not installed
2023-06-16 10:37:42,481:INFO:             xgboost: Not installed
2023-06-16 10:37:42,481:INFO:            catboost: Not installed
2023-06-16 10:37:42,481:INFO:              kmodes: Not installed
2023-06-16 10:37:42,481:INFO:             mlxtend: Not installed
2023-06-16 10:37:42,481:INFO:       statsforecast: Not installed
2023-06-16 10:37:42,481:INFO:        tune_sklearn: Not installed
2023-06-16 10:37:42,482:INFO:                 ray: Not installed
2023-06-16 10:37:42,482:INFO:            hyperopt: Not installed
2023-06-16 10:37:42,482:INFO:              optuna: Not installed
2023-06-16 10:37:42,482:INFO:               skopt: Not installed
2023-06-16 10:37:42,482:INFO:              mlflow: Not installed
2023-06-16 10:37:42,482:INFO:              gradio: Not installed
2023-06-16 10:37:42,482:INFO:             fastapi: Not installed
2023-06-16 10:37:42,482:INFO:             uvicorn: Not installed
2023-06-16 10:37:42,482:INFO:              m2cgen: Not installed
2023-06-16 10:37:42,482:INFO:           evidently: Not installed
2023-06-16 10:37:42,482:INFO:               fugue: Not installed
2023-06-16 10:37:42,483:INFO:           streamlit: Not installed
2023-06-16 10:37:42,483:INFO:             prophet: Not installed
2023-06-16 10:37:42,483:INFO:None
2023-06-16 10:37:42,483:INFO:Set up data.
2023-06-16 10:37:42,563:INFO:Set up train/test split.
2023-06-16 10:37:42,593:INFO:Set up index.
2023-06-16 10:37:42,594:INFO:Set up folding strategy.
2023-06-16 10:37:42,594:INFO:Assigning column types.
2023-06-16 10:37:42,614:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 10:37:42,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,764:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,766:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,802:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 10:37:42,854:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,952:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 10:37:42,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:42,999:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 10:37:43,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,163:INFO:Preparing preprocessing pipeline...
2023-06-16 10:37:43,165:INFO:Set up simple imputation.
2023-06-16 10:37:43,176:INFO:Set up encoding of ordinal features.
2023-06-16 10:37:43,186:INFO:Set up encoding of categorical features.
2023-06-16 10:37:43,186:INFO:Set up imbalanced handling.
2023-06-16 10:37:43,187:INFO:Set up column name cleaning.
2023-06-16 10:37:43,593:INFO:Finished creating preprocessing pipeline.
2023-06-16 10:37:43,643:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 10:37:43,643:INFO:Creating final display dataframe.
2023-06-16 10:37:43,838:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              c116
2023-06-16 10:37:43,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:43,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:44,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:44,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 10:37:44,081:INFO:setup() successfully completed in 1.7s...............
2023-06-16 10:37:48,025:INFO:Initializing compare_models()
2023-06-16 10:37:48,025:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 10:37:48,025:INFO:Checking exceptions
2023-06-16 10:37:48,035:INFO:Preparing display monitor
2023-06-16 10:37:48,139:INFO:Initializing Logistic Regression
2023-06-16 10:37:48,139:INFO:Total runtime is 0.0 minutes
2023-06-16 10:37:48,144:INFO:SubProcess create_model() called ==================================
2023-06-16 10:37:48,144:INFO:Initializing create_model()
2023-06-16 10:37:48,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:37:48,144:INFO:Checking exceptions
2023-06-16 10:37:48,144:INFO:Importing libraries
2023-06-16 10:37:48,145:INFO:Copying training dataset
2023-06-16 10:37:48,159:INFO:Defining folds
2023-06-16 10:37:48,159:INFO:Declaring metric variables
2023-06-16 10:37:48,163:INFO:Importing untrained model
2023-06-16 10:37:48,170:INFO:Logistic Regression Imported successfully
2023-06-16 10:37:48,186:INFO:Starting cross validation
2023-06-16 10:37:48,199:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:37:56,144:INFO:Calculating mean and std
2023-06-16 10:37:56,146:INFO:Creating metrics dataframe
2023-06-16 10:37:56,283:INFO:Uploading results into container
2023-06-16 10:37:56,284:INFO:Uploading model into container now
2023-06-16 10:37:56,284:INFO:_master_model_container: 1
2023-06-16 10:37:56,284:INFO:_display_container: 2
2023-06-16 10:37:56,285:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 10:37:56,285:INFO:create_model() successfully completed......................................
2023-06-16 10:37:56,362:INFO:SubProcess create_model() end ==================================
2023-06-16 10:37:56,362:INFO:Creating metrics dataframe
2023-06-16 10:37:56,384:INFO:Initializing K Neighbors Classifier
2023-06-16 10:37:56,385:INFO:Total runtime is 0.13743335803349813 minutes
2023-06-16 10:37:56,389:INFO:SubProcess create_model() called ==================================
2023-06-16 10:37:56,389:INFO:Initializing create_model()
2023-06-16 10:37:56,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:37:56,390:INFO:Checking exceptions
2023-06-16 10:37:56,390:INFO:Importing libraries
2023-06-16 10:37:56,390:INFO:Copying training dataset
2023-06-16 10:37:56,410:INFO:Defining folds
2023-06-16 10:37:56,411:INFO:Declaring metric variables
2023-06-16 10:37:56,416:INFO:Importing untrained model
2023-06-16 10:37:56,421:INFO:K Neighbors Classifier Imported successfully
2023-06-16 10:37:56,431:INFO:Starting cross validation
2023-06-16 10:37:56,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:04,757:INFO:Calculating mean and std
2023-06-16 10:38:04,759:INFO:Creating metrics dataframe
2023-06-16 10:38:04,891:INFO:Uploading results into container
2023-06-16 10:38:04,892:INFO:Uploading model into container now
2023-06-16 10:38:04,892:INFO:_master_model_container: 2
2023-06-16 10:38:04,892:INFO:_display_container: 2
2023-06-16 10:38:04,892:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 10:38:04,893:INFO:create_model() successfully completed......................................
2023-06-16 10:38:04,952:INFO:SubProcess create_model() end ==================================
2023-06-16 10:38:04,953:INFO:Creating metrics dataframe
2023-06-16 10:38:04,973:INFO:Initializing Naive Bayes
2023-06-16 10:38:04,973:INFO:Total runtime is 0.2805674990018209 minutes
2023-06-16 10:38:04,977:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:04,977:INFO:Initializing create_model()
2023-06-16 10:38:04,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:04,978:INFO:Checking exceptions
2023-06-16 10:38:04,978:INFO:Importing libraries
2023-06-16 10:38:04,978:INFO:Copying training dataset
2023-06-16 10:38:04,992:INFO:Defining folds
2023-06-16 10:38:04,992:INFO:Declaring metric variables
2023-06-16 10:38:04,997:INFO:Importing untrained model
2023-06-16 10:38:05,002:INFO:Naive Bayes Imported successfully
2023-06-16 10:38:05,038:INFO:Starting cross validation
2023-06-16 10:38:05,040:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:08,063:INFO:Calculating mean and std
2023-06-16 10:38:08,065:INFO:Creating metrics dataframe
2023-06-16 10:38:08,197:INFO:Uploading results into container
2023-06-16 10:38:08,198:INFO:Uploading model into container now
2023-06-16 10:38:08,198:INFO:_master_model_container: 3
2023-06-16 10:38:08,198:INFO:_display_container: 2
2023-06-16 10:38:08,199:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-16 10:38:08,199:INFO:create_model() successfully completed......................................
2023-06-16 10:38:08,261:INFO:SubProcess create_model() end ==================================
2023-06-16 10:38:08,261:INFO:Creating metrics dataframe
2023-06-16 10:38:08,283:INFO:Initializing Decision Tree Classifier
2023-06-16 10:38:08,283:INFO:Total runtime is 0.33573398987452185 minutes
2023-06-16 10:38:08,287:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:08,288:INFO:Initializing create_model()
2023-06-16 10:38:08,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:08,288:INFO:Checking exceptions
2023-06-16 10:38:08,288:INFO:Importing libraries
2023-06-16 10:38:08,288:INFO:Copying training dataset
2023-06-16 10:38:08,305:INFO:Defining folds
2023-06-16 10:38:08,306:INFO:Declaring metric variables
2023-06-16 10:38:08,310:INFO:Importing untrained model
2023-06-16 10:38:08,318:INFO:Decision Tree Classifier Imported successfully
2023-06-16 10:38:08,333:INFO:Starting cross validation
2023-06-16 10:38:08,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:10,460:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-16 10:38:10,477:WARNING:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 10:38:10,477:INFO:Initializing create_model()
2023-06-16 10:38:10,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:10,478:INFO:Checking exceptions
2023-06-16 10:38:10,478:INFO:Importing libraries
2023-06-16 10:38:10,478:INFO:Copying training dataset
2023-06-16 10:38:10,496:INFO:Defining folds
2023-06-16 10:38:10,496:INFO:Declaring metric variables
2023-06-16 10:38:10,500:INFO:Importing untrained model
2023-06-16 10:38:10,510:INFO:Decision Tree Classifier Imported successfully
2023-06-16 10:38:10,538:INFO:Starting cross validation
2023-06-16 10:38:10,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:16,407:ERROR:create_model() for dt raised an exception or returned all 0.0:
2023-06-16 10:38:16,409:ERROR:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 10:38:16,409:INFO:Initializing SVM - Linear Kernel
2023-06-16 10:38:16,409:INFO:Total runtime is 0.4711666663487752 minutes
2023-06-16 10:38:16,413:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:16,414:INFO:Initializing create_model()
2023-06-16 10:38:16,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:16,414:INFO:Checking exceptions
2023-06-16 10:38:16,414:INFO:Importing libraries
2023-06-16 10:38:16,414:INFO:Copying training dataset
2023-06-16 10:38:16,433:INFO:Defining folds
2023-06-16 10:38:16,433:INFO:Declaring metric variables
2023-06-16 10:38:16,438:INFO:Importing untrained model
2023-06-16 10:38:16,443:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 10:38:16,458:INFO:Starting cross validation
2023-06-16 10:38:16,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:24,353:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:24,416:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:24,529:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:25,117:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:28,244:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:28,656:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:29,219:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:29,568:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:32,050:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:32,824:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 10:38:32,834:INFO:Calculating mean and std
2023-06-16 10:38:32,835:INFO:Creating metrics dataframe
2023-06-16 10:38:32,995:INFO:Uploading results into container
2023-06-16 10:38:32,996:INFO:Uploading model into container now
2023-06-16 10:38:32,996:INFO:_master_model_container: 4
2023-06-16 10:38:32,996:INFO:_display_container: 2
2023-06-16 10:38:32,997:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 10:38:32,997:INFO:create_model() successfully completed......................................
2023-06-16 10:38:33,259:INFO:SubProcess create_model() end ==================================
2023-06-16 10:38:33,259:INFO:Creating metrics dataframe
2023-06-16 10:38:33,276:INFO:Initializing Ridge Classifier
2023-06-16 10:38:33,276:INFO:Total runtime is 0.7522833188374837 minutes
2023-06-16 10:38:33,280:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:33,281:INFO:Initializing create_model()
2023-06-16 10:38:33,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:33,282:INFO:Checking exceptions
2023-06-16 10:38:33,282:INFO:Importing libraries
2023-06-16 10:38:33,282:INFO:Copying training dataset
2023-06-16 10:38:33,331:INFO:Defining folds
2023-06-16 10:38:33,332:INFO:Declaring metric variables
2023-06-16 10:38:33,344:INFO:Importing untrained model
2023-06-16 10:38:33,352:INFO:Ridge Classifier Imported successfully
2023-06-16 10:38:33,364:INFO:Starting cross validation
2023-06-16 10:38:33,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:38:34,297:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:34,368:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:34,369:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:34,384:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:35,532:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:35,541:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:35,713:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:35,726:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:36,425:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:36,534:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-16 10:38:36,544:INFO:Calculating mean and std
2023-06-16 10:38:36,546:INFO:Creating metrics dataframe
2023-06-16 10:38:36,691:INFO:Uploading results into container
2023-06-16 10:38:36,691:INFO:Uploading model into container now
2023-06-16 10:38:36,692:INFO:_master_model_container: 5
2023-06-16 10:38:36,692:INFO:_display_container: 2
2023-06-16 10:38:36,692:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=420, solver='auto', tol=0.001)
2023-06-16 10:38:36,693:INFO:create_model() successfully completed......................................
2023-06-16 10:38:36,759:INFO:SubProcess create_model() end ==================================
2023-06-16 10:38:36,759:INFO:Creating metrics dataframe
2023-06-16 10:38:36,776:INFO:Initializing Random Forest Classifier
2023-06-16 10:38:36,777:INFO:Total runtime is 0.8106340050697326 minutes
2023-06-16 10:38:36,781:INFO:SubProcess create_model() called ==================================
2023-06-16 10:38:36,781:INFO:Initializing create_model()
2023-06-16 10:38:36,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:38:36,782:INFO:Checking exceptions
2023-06-16 10:38:36,782:INFO:Importing libraries
2023-06-16 10:38:36,782:INFO:Copying training dataset
2023-06-16 10:38:36,797:INFO:Defining folds
2023-06-16 10:38:36,798:INFO:Declaring metric variables
2023-06-16 10:38:36,802:INFO:Importing untrained model
2023-06-16 10:38:36,807:INFO:Random Forest Classifier Imported successfully
2023-06-16 10:38:36,816:INFO:Starting cross validation
2023-06-16 10:38:36,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:47:01,285:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 10:55:41,272:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 10:59:46,848:INFO:Calculating mean and std
2023-06-16 10:59:46,850:INFO:Creating metrics dataframe
2023-06-16 10:59:47,022:INFO:Uploading results into container
2023-06-16 10:59:47,023:INFO:Uploading model into container now
2023-06-16 10:59:47,023:INFO:_master_model_container: 6
2023-06-16 10:59:47,023:INFO:_display_container: 2
2023-06-16 10:59:47,024:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 10:59:47,024:INFO:create_model() successfully completed......................................
2023-06-16 10:59:47,103:INFO:SubProcess create_model() end ==================================
2023-06-16 10:59:47,103:INFO:Creating metrics dataframe
2023-06-16 10:59:47,121:INFO:Initializing Quadratic Discriminant Analysis
2023-06-16 10:59:47,121:INFO:Total runtime is 21.983034598827363 minutes
2023-06-16 10:59:47,126:INFO:SubProcess create_model() called ==================================
2023-06-16 10:59:47,126:INFO:Initializing create_model()
2023-06-16 10:59:47,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:59:47,126:INFO:Checking exceptions
2023-06-16 10:59:47,126:INFO:Importing libraries
2023-06-16 10:59:47,127:INFO:Copying training dataset
2023-06-16 10:59:47,143:INFO:Defining folds
2023-06-16 10:59:47,143:INFO:Declaring metric variables
2023-06-16 10:59:47,148:INFO:Importing untrained model
2023-06-16 10:59:47,153:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-16 10:59:47,163:INFO:Starting cross validation
2023-06-16 10:59:47,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:59:47,908:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:47,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:47,934:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:48,003:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:49,355:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:49,521:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:49,644:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:49,661:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:50,757:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:50,888:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-16 10:59:51,414:INFO:Calculating mean and std
2023-06-16 10:59:51,415:INFO:Creating metrics dataframe
2023-06-16 10:59:51,606:INFO:Uploading results into container
2023-06-16 10:59:51,607:INFO:Uploading model into container now
2023-06-16 10:59:51,608:INFO:_master_model_container: 7
2023-06-16 10:59:51,609:INFO:_display_container: 2
2023-06-16 10:59:51,612:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-16 10:59:51,612:INFO:create_model() successfully completed......................................
2023-06-16 10:59:51,679:INFO:SubProcess create_model() end ==================================
2023-06-16 10:59:51,679:INFO:Creating metrics dataframe
2023-06-16 10:59:51,696:INFO:Initializing Ada Boost Classifier
2023-06-16 10:59:51,697:INFO:Total runtime is 22.059301308790843 minutes
2023-06-16 10:59:51,702:INFO:SubProcess create_model() called ==================================
2023-06-16 10:59:51,702:INFO:Initializing create_model()
2023-06-16 10:59:51,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:59:51,702:INFO:Checking exceptions
2023-06-16 10:59:51,702:INFO:Importing libraries
2023-06-16 10:59:51,703:INFO:Copying training dataset
2023-06-16 10:59:51,720:INFO:Defining folds
2023-06-16 10:59:51,721:INFO:Declaring metric variables
2023-06-16 10:59:51,726:INFO:Importing untrained model
2023-06-16 10:59:51,731:INFO:Ada Boost Classifier Imported successfully
2023-06-16 10:59:51,746:INFO:Starting cross validation
2023-06-16 10:59:51,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 10:59:54,118:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-16 10:59:54,119:WARNING:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 10:59:54,119:INFO:Initializing create_model()
2023-06-16 10:59:54,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 10:59:54,120:INFO:Checking exceptions
2023-06-16 10:59:54,120:INFO:Importing libraries
2023-06-16 10:59:54,120:INFO:Copying training dataset
2023-06-16 10:59:54,139:INFO:Defining folds
2023-06-16 10:59:54,139:INFO:Declaring metric variables
2023-06-16 10:59:54,145:INFO:Importing untrained model
2023-06-16 10:59:54,151:INFO:Ada Boost Classifier Imported successfully
2023-06-16 10:59:54,161:INFO:Starting cross validation
2023-06-16 10:59:54,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:00,512:ERROR:create_model() for ada raised an exception or returned all 0.0:
2023-06-16 11:00:00,514:ERROR:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 11:00:00,514:INFO:Initializing Gradient Boosting Classifier
2023-06-16 11:00:00,515:INFO:Total runtime is 22.20626333554586 minutes
2023-06-16 11:00:00,519:INFO:SubProcess create_model() called ==================================
2023-06-16 11:00:00,519:INFO:Initializing create_model()
2023-06-16 11:00:00,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:00,519:INFO:Checking exceptions
2023-06-16 11:00:00,519:INFO:Importing libraries
2023-06-16 11:00:00,519:INFO:Copying training dataset
2023-06-16 11:00:00,539:INFO:Defining folds
2023-06-16 11:00:00,539:INFO:Declaring metric variables
2023-06-16 11:00:00,546:INFO:Importing untrained model
2023-06-16 11:00:00,551:INFO:Gradient Boosting Classifier Imported successfully
2023-06-16 11:00:00,581:INFO:Starting cross validation
2023-06-16 11:00:00,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:06,675:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-16 11:00:06,676:WARNING:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 11:00:06,676:INFO:Initializing create_model()
2023-06-16 11:00:06,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:06,676:INFO:Checking exceptions
2023-06-16 11:00:06,676:INFO:Importing libraries
2023-06-16 11:00:06,676:INFO:Copying training dataset
2023-06-16 11:00:06,696:INFO:Defining folds
2023-06-16 11:00:06,696:INFO:Declaring metric variables
2023-06-16 11:00:06,704:INFO:Importing untrained model
2023-06-16 11:00:06,709:INFO:Gradient Boosting Classifier Imported successfully
2023-06-16 11:00:06,720:INFO:Starting cross validation
2023-06-16 11:00:06,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:12,920:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2023-06-16 11:00:12,921:ERROR:Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\Program Files\Python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\Program Files\Python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\Program Files\Python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2023-06-16 11:00:12,922:INFO:Initializing Linear Discriminant Analysis
2023-06-16 11:00:12,922:INFO:Total runtime is 22.41304188569387 minutes
2023-06-16 11:00:12,926:INFO:SubProcess create_model() called ==================================
2023-06-16 11:00:12,926:INFO:Initializing create_model()
2023-06-16 11:00:12,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:12,926:INFO:Checking exceptions
2023-06-16 11:00:12,926:INFO:Importing libraries
2023-06-16 11:00:12,926:INFO:Copying training dataset
2023-06-16 11:00:12,946:INFO:Defining folds
2023-06-16 11:00:12,946:INFO:Declaring metric variables
2023-06-16 11:00:12,953:INFO:Importing untrained model
2023-06-16 11:00:12,964:INFO:Linear Discriminant Analysis Imported successfully
2023-06-16 11:00:12,974:INFO:Starting cross validation
2023-06-16 11:00:12,976:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:21,323:INFO:Calculating mean and std
2023-06-16 11:00:21,325:INFO:Creating metrics dataframe
2023-06-16 11:00:21,514:INFO:Uploading results into container
2023-06-16 11:00:21,515:INFO:Uploading model into container now
2023-06-16 11:00:21,516:INFO:_master_model_container: 8
2023-06-16 11:00:21,516:INFO:_display_container: 2
2023-06-16 11:00:21,516:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-16 11:00:21,518:INFO:create_model() successfully completed......................................
2023-06-16 11:00:21,850:INFO:SubProcess create_model() end ==================================
2023-06-16 11:00:21,850:INFO:Creating metrics dataframe
2023-06-16 11:00:21,869:INFO:Initializing Extra Trees Classifier
2023-06-16 11:00:21,870:INFO:Total runtime is 22.562175846099855 minutes
2023-06-16 11:00:21,874:INFO:SubProcess create_model() called ==================================
2023-06-16 11:00:21,874:INFO:Initializing create_model()
2023-06-16 11:00:21,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:21,875:INFO:Checking exceptions
2023-06-16 11:00:21,875:INFO:Importing libraries
2023-06-16 11:00:21,875:INFO:Copying training dataset
2023-06-16 11:00:21,892:INFO:Defining folds
2023-06-16 11:00:21,892:INFO:Declaring metric variables
2023-06-16 11:00:21,896:INFO:Importing untrained model
2023-06-16 11:00:21,902:INFO:Extra Trees Classifier Imported successfully
2023-06-16 11:00:21,912:INFO:Starting cross validation
2023-06-16 11:00:21,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:00:49,738:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 11:00:49,742:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-16 11:00:57,728:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 11:00:58,823:INFO:Calculating mean and std
2023-06-16 11:00:58,825:INFO:Creating metrics dataframe
2023-06-16 11:00:59,038:INFO:Uploading results into container
2023-06-16 11:00:59,039:INFO:Uploading model into container now
2023-06-16 11:00:59,040:INFO:_master_model_container: 9
2023-06-16 11:00:59,040:INFO:_display_container: 2
2023-06-16 11:00:59,040:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=420, verbose=0, warm_start=False)
2023-06-16 11:00:59,041:INFO:create_model() successfully completed......................................
2023-06-16 11:00:59,120:INFO:SubProcess create_model() end ==================================
2023-06-16 11:00:59,120:INFO:Creating metrics dataframe
2023-06-16 11:00:59,149:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 11:00:59,149:INFO:Total runtime is 23.183500532309214 minutes
2023-06-16 11:00:59,155:INFO:SubProcess create_model() called ==================================
2023-06-16 11:00:59,155:INFO:Initializing create_model()
2023-06-16 11:00:59,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:00:59,156:INFO:Checking exceptions
2023-06-16 11:00:59,156:INFO:Importing libraries
2023-06-16 11:00:59,156:INFO:Copying training dataset
2023-06-16 11:00:59,198:INFO:Defining folds
2023-06-16 11:00:59,198:INFO:Declaring metric variables
2023-06-16 11:00:59,205:INFO:Importing untrained model
2023-06-16 11:00:59,210:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:00:59,220:INFO:Starting cross validation
2023-06-16 11:00:59,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:01:06,579:INFO:Calculating mean and std
2023-06-16 11:01:06,581:INFO:Creating metrics dataframe
2023-06-16 11:01:06,797:INFO:Uploading results into container
2023-06-16 11:01:06,797:INFO:Uploading model into container now
2023-06-16 11:01:06,798:INFO:_master_model_container: 10
2023-06-16 11:01:06,798:INFO:_display_container: 2
2023-06-16 11:01:06,798:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:01:06,798:INFO:create_model() successfully completed......................................
2023-06-16 11:01:06,866:INFO:SubProcess create_model() end ==================================
2023-06-16 11:01:06,866:INFO:Creating metrics dataframe
2023-06-16 11:01:06,888:INFO:Initializing Dummy Classifier
2023-06-16 11:01:06,888:INFO:Total runtime is 23.31248385111491 minutes
2023-06-16 11:01:06,893:INFO:SubProcess create_model() called ==================================
2023-06-16 11:01:06,894:INFO:Initializing create_model()
2023-06-16 11:01:06,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F81497F9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:01:06,895:INFO:Checking exceptions
2023-06-16 11:01:06,895:INFO:Importing libraries
2023-06-16 11:01:06,895:INFO:Copying training dataset
2023-06-16 11:01:06,913:INFO:Defining folds
2023-06-16 11:01:06,913:INFO:Declaring metric variables
2023-06-16 11:01:06,918:INFO:Importing untrained model
2023-06-16 11:01:06,923:INFO:Dummy Classifier Imported successfully
2023-06-16 11:01:06,933:INFO:Starting cross validation
2023-06-16 11:01:06,935:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:01:07,705:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:07,810:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:07,845:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:07,865:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:08,886:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:08,904:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:08,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:08,919:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:09,846:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:09,889:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 11:01:10,024:INFO:Calculating mean and std
2023-06-16 11:01:10,026:INFO:Creating metrics dataframe
2023-06-16 11:01:10,253:INFO:Uploading results into container
2023-06-16 11:01:10,254:INFO:Uploading model into container now
2023-06-16 11:01:10,254:INFO:_master_model_container: 11
2023-06-16 11:01:10,254:INFO:_display_container: 2
2023-06-16 11:01:10,254:INFO:DummyClassifier(constant=None, random_state=420, strategy='prior')
2023-06-16 11:01:10,255:INFO:create_model() successfully completed......................................
2023-06-16 11:01:10,322:INFO:SubProcess create_model() end ==================================
2023-06-16 11:01:10,322:INFO:Creating metrics dataframe
2023-06-16 11:01:10,355:INFO:Initializing create_model()
2023-06-16 11:01:10,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:01:10,356:INFO:Checking exceptions
2023-06-16 11:01:10,359:INFO:Importing libraries
2023-06-16 11:01:10,359:INFO:Copying training dataset
2023-06-16 11:01:10,374:INFO:Defining folds
2023-06-16 11:01:10,374:INFO:Declaring metric variables
2023-06-16 11:01:10,375:INFO:Importing untrained model
2023-06-16 11:01:10,375:INFO:Declaring custom model
2023-06-16 11:01:10,376:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:01:10,377:INFO:Cross validation set to False
2023-06-16 11:01:10,378:INFO:Fitting Model
2023-06-16 11:01:11,534:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:01:11,534:INFO:create_model() successfully completed......................................
2023-06-16 11:01:11,655:INFO:_master_model_container: 11
2023-06-16 11:01:11,655:INFO:_display_container: 2
2023-06-16 11:01:11,655:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:01:11,655:INFO:compare_models() successfully completed......................................
2023-06-16 11:05:04,168:INFO:Initializing evaluate_model()
2023-06-16 11:05:04,168:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:05:04,203:INFO:Initializing plot_model()
2023-06-16 11:05:04,203:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:04,203:INFO:Checking exceptions
2023-06-16 11:05:04,209:INFO:Preloading libraries
2023-06-16 11:05:04,238:INFO:Copying training dataset
2023-06-16 11:05:04,239:INFO:Plot type: pipeline
2023-06-16 11:05:04,515:INFO:Visual Rendered Successfully
2023-06-16 11:05:04,602:INFO:plot_model() successfully completed......................................
2023-06-16 11:05:14,276:INFO:Initializing plot_model()
2023-06-16 11:05:14,276:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:14,276:INFO:Checking exceptions
2023-06-16 11:05:14,283:INFO:Preloading libraries
2023-06-16 11:05:14,294:INFO:Copying training dataset
2023-06-16 11:05:14,294:INFO:Plot type: parameter
2023-06-16 11:05:14,299:INFO:Visual Rendered Successfully
2023-06-16 11:05:14,382:INFO:plot_model() successfully completed......................................
2023-06-16 11:05:16,888:INFO:Initializing plot_model()
2023-06-16 11:05:16,889:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:16,889:INFO:Checking exceptions
2023-06-16 11:05:16,896:INFO:Preloading libraries
2023-06-16 11:05:16,904:INFO:Copying training dataset
2023-06-16 11:05:16,904:INFO:Plot type: auc
2023-06-16 11:05:17,086:INFO:Fitting Model
2023-06-16 11:05:17,087:INFO:Scoring test/hold-out set
2023-06-16 11:05:17,353:INFO:Visual Rendered Successfully
2023-06-16 11:05:17,430:INFO:plot_model() successfully completed......................................
2023-06-16 11:05:25,240:INFO:Initializing plot_model()
2023-06-16 11:05:25,240:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:25,240:INFO:Checking exceptions
2023-06-16 11:05:25,248:INFO:Preloading libraries
2023-06-16 11:05:25,257:INFO:Copying training dataset
2023-06-16 11:05:25,257:INFO:Plot type: confusion_matrix
2023-06-16 11:05:25,432:INFO:Fitting Model
2023-06-16 11:05:25,433:INFO:Scoring test/hold-out set
2023-06-16 11:05:25,603:INFO:Visual Rendered Successfully
2023-06-16 11:05:25,683:INFO:plot_model() successfully completed......................................
2023-06-16 11:05:28,239:INFO:Initializing plot_model()
2023-06-16 11:05:28,240:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:05:28,240:INFO:Checking exceptions
2023-06-16 11:05:28,246:INFO:Preloading libraries
2023-06-16 11:05:28,255:INFO:Copying training dataset
2023-06-16 11:05:28,255:INFO:Plot type: threshold
2023-06-16 11:05:28,424:INFO:Fitting Model
2023-06-16 11:06:02,385:INFO:Scoring test/hold-out set
2023-06-16 11:06:02,890:INFO:Visual Rendered Successfully
2023-06-16 11:06:02,970:INFO:plot_model() successfully completed......................................
2023-06-16 11:06:03,008:INFO:Initializing evaluate_model()
2023-06-16 11:06:03,008:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=['lr'], fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:06:03,041:INFO:Initializing plot_model()
2023-06-16 11:06:03,042:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=['lr'], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:03,042:INFO:Checking exceptions
2023-06-16 11:06:03,067:INFO:Initializing plot_model()
2023-06-16 11:06:03,067:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:03,068:INFO:Checking exceptions
2023-06-16 11:06:03,075:INFO:Preloading libraries
2023-06-16 11:06:03,091:INFO:Copying training dataset
2023-06-16 11:06:03,091:INFO:Plot type: pipeline
2023-06-16 11:06:03,327:INFO:Visual Rendered Successfully
2023-06-16 11:06:03,392:INFO:plot_model() successfully completed......................................
2023-06-16 11:06:14,983:INFO:Initializing evaluate_model()
2023-06-16 11:06:14,983:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:06:15,018:INFO:Initializing plot_model()
2023-06-16 11:06:15,018:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:15,018:INFO:Checking exceptions
2023-06-16 11:06:15,025:INFO:Preloading libraries
2023-06-16 11:06:15,050:INFO:Copying training dataset
2023-06-16 11:06:15,050:INFO:Plot type: pipeline
2023-06-16 11:06:15,264:INFO:Visual Rendered Successfully
2023-06-16 11:06:15,345:INFO:plot_model() successfully completed......................................
2023-06-16 11:06:17,264:INFO:Initializing plot_model()
2023-06-16 11:06:17,264:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:17,265:INFO:Checking exceptions
2023-06-16 11:06:17,270:INFO:Preloading libraries
2023-06-16 11:06:17,283:INFO:Copying training dataset
2023-06-16 11:06:17,283:INFO:Plot type: feature
2023-06-16 11:06:17,284:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 11:06:17,482:INFO:Visual Rendered Successfully
2023-06-16 11:06:17,546:INFO:plot_model() successfully completed......................................
2023-06-16 11:06:55,730:INFO:Initializing evaluate_model()
2023-06-16 11:06:55,730:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:06:55,760:INFO:Initializing plot_model()
2023-06-16 11:06:55,760:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=lr, feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:06:55,760:INFO:Checking exceptions
2023-06-16 11:07:09,256:INFO:Initializing evaluate_model()
2023-06-16 11:07:09,256:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:07:09,288:INFO:Initializing plot_model()
2023-06-16 11:07:09,289:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=lr, feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:07:09,289:INFO:Checking exceptions
2023-06-16 11:08:19,106:INFO:Initializing compare_models()
2023-06-16 11:08:19,107:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 11:08:19,107:INFO:Checking exceptions
2023-06-16 11:08:19,114:INFO:Preparing display monitor
2023-06-16 11:08:19,176:INFO:Initializing Logistic Regression
2023-06-16 11:08:19,177:INFO:Total runtime is 1.6657511393229165e-05 minutes
2023-06-16 11:08:19,185:INFO:SubProcess create_model() called ==================================
2023-06-16 11:08:19,186:INFO:Initializing create_model()
2023-06-16 11:08:19,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F821278A60>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:08:19,186:INFO:Checking exceptions
2023-06-16 11:08:19,186:INFO:Importing libraries
2023-06-16 11:08:19,186:INFO:Copying training dataset
2023-06-16 11:08:19,216:INFO:Defining folds
2023-06-16 11:08:19,217:INFO:Declaring metric variables
2023-06-16 11:08:19,234:INFO:Importing untrained model
2023-06-16 11:08:19,238:INFO:Logistic Regression Imported successfully
2023-06-16 11:08:19,253:INFO:Starting cross validation
2023-06-16 11:08:19,256:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:08:25,748:INFO:Calculating mean and std
2023-06-16 11:08:25,752:INFO:Creating metrics dataframe
2023-06-16 11:08:25,969:INFO:Uploading results into container
2023-06-16 11:08:25,970:INFO:Uploading model into container now
2023-06-16 11:08:25,970:INFO:_master_model_container: 12
2023-06-16 11:08:25,970:INFO:_display_container: 3
2023-06-16 11:08:25,971:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:08:25,971:INFO:create_model() successfully completed......................................
2023-06-16 11:08:26,080:INFO:SubProcess create_model() end ==================================
2023-06-16 11:08:26,080:INFO:Creating metrics dataframe
2023-06-16 11:08:26,096:INFO:Initializing SVM - Linear Kernel
2023-06-16 11:08:26,097:INFO:Total runtime is 0.11533967653910318 minutes
2023-06-16 11:08:26,101:INFO:SubProcess create_model() called ==================================
2023-06-16 11:08:26,102:INFO:Initializing create_model()
2023-06-16 11:08:26,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F821278A60>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:08:26,102:INFO:Checking exceptions
2023-06-16 11:08:26,102:INFO:Importing libraries
2023-06-16 11:08:26,102:INFO:Copying training dataset
2023-06-16 11:08:26,119:INFO:Defining folds
2023-06-16 11:08:26,119:INFO:Declaring metric variables
2023-06-16 11:08:26,124:INFO:Importing untrained model
2023-06-16 11:08:26,129:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:08:26,142:INFO:Starting cross validation
2023-06-16 11:08:26,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:08:26,724:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:26,730:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:26,742:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:26,802:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:27,530:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:27,554:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:27,568:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:27,605:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:28,241:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:28,437:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:08:28,770:INFO:Calculating mean and std
2023-06-16 11:08:28,774:INFO:Creating metrics dataframe
2023-06-16 11:08:29,048:INFO:Uploading results into container
2023-06-16 11:08:29,048:INFO:Uploading model into container now
2023-06-16 11:08:29,049:INFO:_master_model_container: 13
2023-06-16 11:08:29,049:INFO:_display_container: 3
2023-06-16 11:08:29,050:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:08:29,050:INFO:create_model() successfully completed......................................
2023-06-16 11:08:29,122:INFO:SubProcess create_model() end ==================================
2023-06-16 11:08:29,122:INFO:Creating metrics dataframe
2023-06-16 11:08:29,140:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 11:08:29,140:INFO:Total runtime is 0.16606504122416177 minutes
2023-06-16 11:08:29,144:INFO:SubProcess create_model() called ==================================
2023-06-16 11:08:29,144:INFO:Initializing create_model()
2023-06-16 11:08:29,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F821278A60>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:08:29,144:INFO:Checking exceptions
2023-06-16 11:08:29,145:INFO:Importing libraries
2023-06-16 11:08:29,145:INFO:Copying training dataset
2023-06-16 11:08:29,165:INFO:Defining folds
2023-06-16 11:08:29,166:INFO:Declaring metric variables
2023-06-16 11:08:29,170:INFO:Importing untrained model
2023-06-16 11:08:29,175:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:08:29,186:INFO:Starting cross validation
2023-06-16 11:08:29,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:08:32,237:INFO:Calculating mean and std
2023-06-16 11:08:32,239:INFO:Creating metrics dataframe
2023-06-16 11:08:32,451:INFO:Uploading results into container
2023-06-16 11:08:32,451:INFO:Uploading model into container now
2023-06-16 11:08:32,452:INFO:_master_model_container: 14
2023-06-16 11:08:32,452:INFO:_display_container: 3
2023-06-16 11:08:32,453:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:08:32,453:INFO:create_model() successfully completed......................................
2023-06-16 11:08:32,532:INFO:SubProcess create_model() end ==================================
2023-06-16 11:08:32,532:INFO:Creating metrics dataframe
2023-06-16 11:08:32,563:INFO:Initializing create_model()
2023-06-16 11:08:32,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:08:32,564:INFO:Checking exceptions
2023-06-16 11:08:32,568:INFO:Importing libraries
2023-06-16 11:08:32,568:INFO:Copying training dataset
2023-06-16 11:08:32,583:INFO:Defining folds
2023-06-16 11:08:32,583:INFO:Declaring metric variables
2023-06-16 11:08:32,583:INFO:Importing untrained model
2023-06-16 11:08:32,584:INFO:Declaring custom model
2023-06-16 11:08:32,585:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:08:32,587:INFO:Cross validation set to False
2023-06-16 11:08:32,587:INFO:Fitting Model
2023-06-16 11:08:33,137:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:08:33,138:INFO:create_model() successfully completed......................................
2023-06-16 11:08:33,246:INFO:_master_model_container: 14
2023-06-16 11:08:33,246:INFO:_display_container: 3
2023-06-16 11:08:33,247:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:08:33,247:INFO:compare_models() successfully completed......................................
2023-06-16 11:08:51,496:INFO:Initializing evaluate_model()
2023-06-16 11:08:51,497:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:08:51,531:INFO:Initializing plot_model()
2023-06-16 11:08:51,531:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:08:51,531:INFO:Checking exceptions
2023-06-16 11:08:51,537:INFO:Preloading libraries
2023-06-16 11:08:51,560:INFO:Copying training dataset
2023-06-16 11:08:51,560:INFO:Plot type: pipeline
2023-06-16 11:08:51,811:INFO:Visual Rendered Successfully
2023-06-16 11:08:51,910:INFO:plot_model() successfully completed......................................
2023-06-16 11:08:54,720:INFO:Initializing plot_model()
2023-06-16 11:08:54,720:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:08:54,720:INFO:Checking exceptions
2023-06-16 11:08:54,727:INFO:Preloading libraries
2023-06-16 11:08:54,738:INFO:Copying training dataset
2023-06-16 11:08:54,738:INFO:Plot type: auc
2023-06-16 11:08:54,925:INFO:Fitting Model
2023-06-16 11:08:54,927:INFO:Scoring test/hold-out set
2023-06-16 11:08:55,161:INFO:Visual Rendered Successfully
2023-06-16 11:08:55,246:INFO:plot_model() successfully completed......................................
2023-06-16 11:08:58,863:INFO:Initializing plot_model()
2023-06-16 11:08:58,863:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:08:58,863:INFO:Checking exceptions
2023-06-16 11:08:58,870:INFO:Preloading libraries
2023-06-16 11:08:58,878:INFO:Copying training dataset
2023-06-16 11:08:58,878:INFO:Plot type: dimension
2023-06-16 11:08:58,974:INFO:Fitting StandardScaler()
2023-06-16 11:08:59,092:INFO:Fitting PCA()
2023-06-16 11:08:59,400:INFO:Fitting & Transforming Model
2023-06-16 11:09:01,211:INFO:Visual Rendered Successfully
2023-06-16 11:09:01,298:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:04,872:INFO:Initializing plot_model()
2023-06-16 11:09:04,872:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:04,872:INFO:Checking exceptions
2023-06-16 11:09:07,008:INFO:Initializing plot_model()
2023-06-16 11:09:07,008:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:07,008:INFO:Checking exceptions
2023-06-16 11:09:07,015:INFO:Preloading libraries
2023-06-16 11:09:07,030:INFO:Copying training dataset
2023-06-16 11:09:07,030:INFO:Plot type: gain
2023-06-16 11:09:07,030:INFO:Generating predictions / predict_proba on X_test
2023-06-16 11:09:07,271:INFO:Visual Rendered Successfully
2023-06-16 11:09:07,339:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:09,912:INFO:Initializing plot_model()
2023-06-16 11:09:09,912:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:09,912:INFO:Checking exceptions
2023-06-16 11:09:09,919:INFO:Preloading libraries
2023-06-16 11:09:09,927:INFO:Copying training dataset
2023-06-16 11:09:09,927:INFO:Plot type: lift
2023-06-16 11:09:09,928:INFO:Generating predictions / predict_proba on X_test
2023-06-16 11:09:10,176:INFO:Visual Rendered Successfully
2023-06-16 11:09:10,239:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:11,864:INFO:Initializing plot_model()
2023-06-16 11:09:11,864:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:11,864:INFO:Checking exceptions
2023-06-16 11:09:11,871:INFO:Preloading libraries
2023-06-16 11:09:11,879:INFO:Copying training dataset
2023-06-16 11:09:11,880:INFO:Plot type: boundary
2023-06-16 11:09:11,984:INFO:Fitting StandardScaler()
2023-06-16 11:09:12,045:INFO:Fitting PCA()
2023-06-16 11:09:12,391:INFO:Fitting Model
2023-06-16 11:09:12,835:WARNING:c:\Program Files\Python39\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2023-06-16 11:09:14,368:INFO:Visual Rendered Successfully
2023-06-16 11:09:14,512:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:19,022:INFO:Initializing plot_model()
2023-06-16 11:09:19,023:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:19,023:INFO:Checking exceptions
2023-06-16 11:09:19,030:INFO:Preloading libraries
2023-06-16 11:09:19,040:INFO:Copying training dataset
2023-06-16 11:09:19,040:INFO:Plot type: feature_all
2023-06-16 11:09:19,101:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 11:09:19,453:INFO:Visual Rendered Successfully
2023-06-16 11:09:19,517:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:49,280:INFO:Initializing plot_model()
2023-06-16 11:09:49,280:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:49,280:INFO:Checking exceptions
2023-06-16 11:09:49,287:INFO:Preloading libraries
2023-06-16 11:09:49,296:INFO:Copying training dataset
2023-06-16 11:09:49,296:INFO:Plot type: feature
2023-06-16 11:09:49,297:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 11:09:49,489:INFO:Visual Rendered Successfully
2023-06-16 11:09:49,552:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:52,199:INFO:Initializing plot_model()
2023-06-16 11:09:52,200:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:52,200:INFO:Checking exceptions
2023-06-16 11:09:52,207:INFO:Preloading libraries
2023-06-16 11:09:52,215:INFO:Copying training dataset
2023-06-16 11:09:52,215:INFO:Plot type: dimension
2023-06-16 11:09:52,288:INFO:Fitting StandardScaler()
2023-06-16 11:09:52,395:INFO:Fitting PCA()
2023-06-16 11:09:52,699:INFO:Fitting & Transforming Model
2023-06-16 11:09:54,444:INFO:Visual Rendered Successfully
2023-06-16 11:09:54,531:INFO:plot_model() successfully completed......................................
2023-06-16 11:09:55,295:INFO:Initializing plot_model()
2023-06-16 11:09:55,296:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:09:55,296:INFO:Checking exceptions
2023-06-16 11:09:55,304:INFO:Preloading libraries
2023-06-16 11:09:55,312:INFO:Copying training dataset
2023-06-16 11:09:55,312:INFO:Plot type: vc
2023-06-16 11:09:55,312:INFO:Determining param_name
2023-06-16 11:09:55,313:INFO:param_name: max_depth
2023-06-16 11:09:55,490:INFO:Fitting Model
2023-06-16 11:10:28,766:INFO:Visual Rendered Successfully
2023-06-16 11:10:28,871:INFO:plot_model() successfully completed......................................
2023-06-16 11:10:28,894:INFO:Initializing plot_model()
2023-06-16 11:10:28,895:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:10:28,895:INFO:Checking exceptions
2023-06-16 11:10:28,901:INFO:Preloading libraries
2023-06-16 11:10:28,912:INFO:Copying training dataset
2023-06-16 11:10:28,912:INFO:Plot type: auc
2023-06-16 11:10:29,093:INFO:Fitting Model
2023-06-16 11:10:29,095:INFO:Scoring test/hold-out set
2023-06-16 11:10:29,336:INFO:Visual Rendered Successfully
2023-06-16 11:10:29,403:INFO:plot_model() successfully completed......................................
2023-06-16 11:10:32,112:INFO:Initializing plot_model()
2023-06-16 11:10:32,113:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:10:32,113:INFO:Checking exceptions
2023-06-16 11:10:32,119:INFO:Preloading libraries
2023-06-16 11:10:32,161:INFO:Copying training dataset
2023-06-16 11:10:32,161:INFO:Plot type: threshold
2023-06-16 11:10:32,336:INFO:Fitting Model
2023-06-16 11:11:04,357:INFO:Scoring test/hold-out set
2023-06-16 11:11:04,602:INFO:Visual Rendered Successfully
2023-06-16 11:11:04,679:INFO:plot_model() successfully completed......................................
2023-06-16 11:12:06,396:INFO:Initializing compare_models()
2023-06-16 11:12:06,396:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 11:12:06,396:INFO:Checking exceptions
2023-06-16 11:12:06,403:INFO:Preparing display monitor
2023-06-16 11:12:06,459:INFO:Initializing Logistic Regression
2023-06-16 11:12:06,459:INFO:Total runtime is 0.0 minutes
2023-06-16 11:12:06,466:INFO:SubProcess create_model() called ==================================
2023-06-16 11:12:06,468:INFO:Initializing create_model()
2023-06-16 11:12:06,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F82E2C3280>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:06,468:INFO:Checking exceptions
2023-06-16 11:12:06,468:INFO:Importing libraries
2023-06-16 11:12:06,468:INFO:Copying training dataset
2023-06-16 11:12:06,492:INFO:Defining folds
2023-06-16 11:12:06,492:INFO:Declaring metric variables
2023-06-16 11:12:06,508:INFO:Importing untrained model
2023-06-16 11:12:06,513:INFO:Logistic Regression Imported successfully
2023-06-16 11:12:06,526:INFO:Starting cross validation
2023-06-16 11:12:06,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:12:09,152:INFO:Calculating mean and std
2023-06-16 11:12:09,154:INFO:Creating metrics dataframe
2023-06-16 11:12:09,389:INFO:Uploading results into container
2023-06-16 11:12:09,390:INFO:Uploading model into container now
2023-06-16 11:12:09,391:INFO:_master_model_container: 15
2023-06-16 11:12:09,392:INFO:_display_container: 4
2023-06-16 11:12:09,392:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:12:09,392:INFO:create_model() successfully completed......................................
2023-06-16 11:12:09,462:INFO:SubProcess create_model() end ==================================
2023-06-16 11:12:09,462:INFO:Creating metrics dataframe
2023-06-16 11:12:09,478:INFO:Initializing SVM - Linear Kernel
2023-06-16 11:12:09,478:INFO:Total runtime is 0.05031603177388509 minutes
2023-06-16 11:12:09,484:INFO:SubProcess create_model() called ==================================
2023-06-16 11:12:09,484:INFO:Initializing create_model()
2023-06-16 11:12:09,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F82E2C3280>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:09,484:INFO:Checking exceptions
2023-06-16 11:12:09,484:INFO:Importing libraries
2023-06-16 11:12:09,485:INFO:Copying training dataset
2023-06-16 11:12:09,502:INFO:Defining folds
2023-06-16 11:12:09,502:INFO:Declaring metric variables
2023-06-16 11:12:09,506:INFO:Importing untrained model
2023-06-16 11:12:09,512:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:12:09,529:INFO:Starting cross validation
2023-06-16 11:12:09,531:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:12:10,074:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,103:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,106:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,126:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,786:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,847:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,871:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:10,932:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:11,618:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:11,676:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:12:12,107:INFO:Calculating mean and std
2023-06-16 11:12:12,110:INFO:Creating metrics dataframe
2023-06-16 11:12:12,342:INFO:Uploading results into container
2023-06-16 11:12:12,343:INFO:Uploading model into container now
2023-06-16 11:12:12,343:INFO:_master_model_container: 16
2023-06-16 11:12:12,343:INFO:_display_container: 4
2023-06-16 11:12:12,343:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:12:12,344:INFO:create_model() successfully completed......................................
2023-06-16 11:12:12,413:INFO:SubProcess create_model() end ==================================
2023-06-16 11:12:12,413:INFO:Creating metrics dataframe
2023-06-16 11:12:12,434:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 11:12:12,434:INFO:Total runtime is 0.09958269198735556 minutes
2023-06-16 11:12:12,438:INFO:SubProcess create_model() called ==================================
2023-06-16 11:12:12,438:INFO:Initializing create_model()
2023-06-16 11:12:12,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F82E2C3280>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:12,438:INFO:Checking exceptions
2023-06-16 11:12:12,438:INFO:Importing libraries
2023-06-16 11:12:12,438:INFO:Copying training dataset
2023-06-16 11:12:12,455:INFO:Defining folds
2023-06-16 11:12:12,456:INFO:Declaring metric variables
2023-06-16 11:12:12,461:INFO:Importing untrained model
2023-06-16 11:12:12,466:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:12:12,476:INFO:Starting cross validation
2023-06-16 11:12:12,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:12:15,116:INFO:Calculating mean and std
2023-06-16 11:12:15,117:INFO:Creating metrics dataframe
2023-06-16 11:12:15,354:INFO:Uploading results into container
2023-06-16 11:12:15,355:INFO:Uploading model into container now
2023-06-16 11:12:15,355:INFO:_master_model_container: 17
2023-06-16 11:12:15,355:INFO:_display_container: 4
2023-06-16 11:12:15,356:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:12:15,356:INFO:create_model() successfully completed......................................
2023-06-16 11:12:15,445:INFO:SubProcess create_model() end ==================================
2023-06-16 11:12:15,445:INFO:Creating metrics dataframe
2023-06-16 11:12:15,482:INFO:Initializing create_model()
2023-06-16 11:12:15,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:15,483:INFO:Checking exceptions
2023-06-16 11:12:15,486:INFO:Importing libraries
2023-06-16 11:12:15,486:INFO:Copying training dataset
2023-06-16 11:12:15,505:INFO:Defining folds
2023-06-16 11:12:15,505:INFO:Declaring metric variables
2023-06-16 11:12:15,505:INFO:Importing untrained model
2023-06-16 11:12:15,506:INFO:Declaring custom model
2023-06-16 11:12:15,507:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:12:15,510:INFO:Cross validation set to False
2023-06-16 11:12:15,510:INFO:Fitting Model
2023-06-16 11:12:16,144:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:12:16,144:INFO:create_model() successfully completed......................................
2023-06-16 11:12:16,228:INFO:Initializing create_model()
2023-06-16 11:12:16,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:16,229:INFO:Checking exceptions
2023-06-16 11:12:16,232:INFO:Importing libraries
2023-06-16 11:12:16,232:INFO:Copying training dataset
2023-06-16 11:12:16,248:INFO:Defining folds
2023-06-16 11:12:16,248:INFO:Declaring metric variables
2023-06-16 11:12:16,248:INFO:Importing untrained model
2023-06-16 11:12:16,248:INFO:Declaring custom model
2023-06-16 11:12:16,249:INFO:Logistic Regression Imported successfully
2023-06-16 11:12:16,251:INFO:Cross validation set to False
2023-06-16 11:12:16,251:INFO:Fitting Model
2023-06-16 11:12:19,299:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:12:19,299:INFO:create_model() successfully completed......................................
2023-06-16 11:12:19,374:INFO:Initializing create_model()
2023-06-16 11:12:19,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:12:19,374:INFO:Checking exceptions
2023-06-16 11:12:19,379:INFO:Importing libraries
2023-06-16 11:12:19,379:INFO:Copying training dataset
2023-06-16 11:12:19,395:INFO:Defining folds
2023-06-16 11:12:19,395:INFO:Declaring metric variables
2023-06-16 11:12:19,395:INFO:Importing untrained model
2023-06-16 11:12:19,396:INFO:Declaring custom model
2023-06-16 11:12:19,396:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:12:19,398:INFO:Cross validation set to False
2023-06-16 11:12:19,398:INFO:Fitting Model
2023-06-16 11:12:22,998:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:12:22,998:INFO:create_model() successfully completed......................................
2023-06-16 11:12:23,099:INFO:_master_model_container: 17
2023-06-16 11:12:23,100:INFO:_display_container: 4
2023-06-16 11:12:23,101:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 11:12:23,101:INFO:compare_models() successfully completed......................................
2023-06-16 11:12:24,935:INFO:Initializing evaluate_model()
2023-06-16 11:12:24,935:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)], fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:12:24,970:INFO:Initializing plot_model()
2023-06-16 11:12:24,971:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)], feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:12:24,971:INFO:Checking exceptions
2023-06-16 11:13:18,705:INFO:Initializing evaluate_model()
2023-06-16 11:13:18,705:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:13:18,737:INFO:Initializing plot_model()
2023-06-16 11:13:18,738:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:18,738:INFO:Checking exceptions
2023-06-16 11:13:18,744:INFO:Preloading libraries
2023-06-16 11:13:18,766:INFO:Copying training dataset
2023-06-16 11:13:18,766:INFO:Plot type: pipeline
2023-06-16 11:13:19,033:INFO:Visual Rendered Successfully
2023-06-16 11:13:19,116:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:25,721:INFO:Initializing evaluate_model()
2023-06-16 11:13:25,721:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:13:25,752:INFO:Initializing plot_model()
2023-06-16 11:13:25,752:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:25,753:INFO:Checking exceptions
2023-06-16 11:13:25,759:INFO:Preloading libraries
2023-06-16 11:13:25,759:INFO:Copying training dataset
2023-06-16 11:13:25,760:INFO:Plot type: pipeline
2023-06-16 11:13:25,919:INFO:Visual Rendered Successfully
2023-06-16 11:13:25,988:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:30,199:INFO:Initializing evaluate_model()
2023-06-16 11:13:30,199:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:13:30,231:INFO:Initializing plot_model()
2023-06-16 11:13:30,231:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:30,231:INFO:Checking exceptions
2023-06-16 11:13:30,238:INFO:Preloading libraries
2023-06-16 11:13:30,238:INFO:Copying training dataset
2023-06-16 11:13:30,238:INFO:Plot type: pipeline
2023-06-16 11:13:30,427:INFO:Visual Rendered Successfully
2023-06-16 11:13:30,497:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:35,519:INFO:Initializing evaluate_model()
2023-06-16 11:13:35,519:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:13:35,552:INFO:Initializing plot_model()
2023-06-16 11:13:35,552:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:35,552:INFO:Checking exceptions
2023-06-16 11:13:35,557:INFO:Preloading libraries
2023-06-16 11:13:35,557:INFO:Copying training dataset
2023-06-16 11:13:35,557:INFO:Plot type: pipeline
2023-06-16 11:13:35,731:INFO:Visual Rendered Successfully
2023-06-16 11:13:35,841:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:37,694:INFO:Initializing plot_model()
2023-06-16 11:13:37,695:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:37,695:INFO:Checking exceptions
2023-06-16 11:13:37,702:INFO:Preloading libraries
2023-06-16 11:13:37,702:INFO:Copying training dataset
2023-06-16 11:13:37,702:INFO:Plot type: feature
2023-06-16 11:13:37,968:INFO:Visual Rendered Successfully
2023-06-16 11:13:38,048:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:50,488:INFO:Initializing plot_model()
2023-06-16 11:13:50,488:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:50,488:INFO:Checking exceptions
2023-06-16 11:13:50,495:INFO:Preloading libraries
2023-06-16 11:13:50,495:INFO:Copying training dataset
2023-06-16 11:13:50,495:INFO:Plot type: auc
2023-06-16 11:13:50,664:INFO:Fitting Model
2023-06-16 11:13:50,665:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 11:13:50,666:INFO:Scoring test/hold-out set
2023-06-16 11:13:50,860:INFO:Visual Rendered Successfully
2023-06-16 11:13:50,992:INFO:plot_model() successfully completed......................................
2023-06-16 11:13:59,295:INFO:Initializing plot_model()
2023-06-16 11:13:59,295:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8215CB610>, system=True)
2023-06-16 11:13:59,296:INFO:Checking exceptions
2023-06-16 11:13:59,303:INFO:Preloading libraries
2023-06-16 11:13:59,303:INFO:Copying training dataset
2023-06-16 11:13:59,303:INFO:Plot type: rfe
2023-06-16 11:13:59,478:INFO:Fitting Model
2023-06-16 11:19:45,063:INFO:PyCaret ClassificationExperiment
2023-06-16 11:19:45,063:INFO:Logging name: clf-default-name
2023-06-16 11:19:45,063:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 11:19:45,063:INFO:version 3.0.2
2023-06-16 11:19:45,063:INFO:Initializing setup()
2023-06-16 11:19:45,063:INFO:self.USI: 18b4
2023-06-16 11:19:45,063:INFO:self._variable_keys: {'gpu_param', 'html_param', 'data', 'fold_generator', 'y', 'exp_name_log', '_available_plots', 'exp_id', 'fold_groups_param', 'USI', 'n_jobs_param', 'target_param', 'seed', 'fold_shuffle_param', 'pipeline', 'X_train', 'is_multiclass', 'log_plots_param', '_ml_usecase', 'y_train', 'X_test', 'memory', 'fix_imbalance', 'idx', 'X', 'gpu_n_jobs_param', 'y_test', 'logging_param'}
2023-06-16 11:19:45,063:INFO:Checking environment
2023-06-16 11:19:45,063:INFO:python_version: 3.9.7
2023-06-16 11:19:45,063:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 11:19:45,063:INFO:machine: AMD64
2023-06-16 11:19:45,063:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 11:19:45,064:INFO:Memory: svmem(total=17120436224, available=6131654656, percent=64.2, used=10988781568, free=6131654656)
2023-06-16 11:19:45,064:INFO:Physical Core: 4
2023-06-16 11:19:45,064:INFO:Logical Core: 4
2023-06-16 11:19:45,064:INFO:Checking libraries
2023-06-16 11:19:45,064:INFO:System:
2023-06-16 11:19:45,064:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 11:19:45,064:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 11:19:45,064:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 11:19:45,064:INFO:PyCaret required dependencies:
2023-06-16 11:19:45,064:INFO:                 pip: 21.2.3
2023-06-16 11:19:45,064:INFO:          setuptools: 57.4.0
2023-06-16 11:19:45,064:INFO:             pycaret: 3.0.2
2023-06-16 11:19:45,065:INFO:             IPython: 7.28.0
2023-06-16 11:19:45,065:INFO:          ipywidgets: 8.0.6
2023-06-16 11:19:45,065:INFO:                tqdm: 4.64.0
2023-06-16 11:19:45,065:INFO:               numpy: 1.21.2
2023-06-16 11:19:45,065:INFO:              pandas: 1.3.5
2023-06-16 11:19:45,065:INFO:              jinja2: 3.1.2
2023-06-16 11:19:45,065:INFO:               scipy: 1.7.1
2023-06-16 11:19:45,065:INFO:              joblib: 1.2.0
2023-06-16 11:19:45,065:INFO:             sklearn: 1.1.0
2023-06-16 11:19:45,066:INFO:                pyod: 1.0.9
2023-06-16 11:19:45,066:INFO:            imblearn: 0.9.1
2023-06-16 11:19:45,066:INFO:   category_encoders: 2.6.1
2023-06-16 11:19:45,066:INFO:            lightgbm: 3.3.5
2023-06-16 11:19:45,066:INFO:               numba: 0.57.0
2023-06-16 11:19:45,066:INFO:            requests: 2.31.0
2023-06-16 11:19:45,066:INFO:          matplotlib: 3.4.3
2023-06-16 11:19:45,066:INFO:          scikitplot: 0.3.7
2023-06-16 11:19:45,066:INFO:         yellowbrick: 1.5
2023-06-16 11:19:45,066:INFO:              plotly: 5.8.0
2023-06-16 11:19:45,066:INFO:             kaleido: 0.2.1
2023-06-16 11:19:45,066:INFO:         statsmodels: 0.14.0
2023-06-16 11:19:45,066:INFO:              sktime: 0.17.0
2023-06-16 11:19:45,066:INFO:               tbats: 1.1.3
2023-06-16 11:19:45,066:INFO:            pmdarima: 2.0.3
2023-06-16 11:19:45,066:INFO:              psutil: 5.9.0
2023-06-16 11:19:45,066:INFO:PyCaret optional dependencies:
2023-06-16 11:19:45,066:INFO:                shap: Not installed
2023-06-16 11:19:45,066:INFO:           interpret: Not installed
2023-06-16 11:19:45,067:INFO:                umap: Not installed
2023-06-16 11:19:45,067:INFO:    pandas_profiling: Not installed
2023-06-16 11:19:45,067:INFO:  explainerdashboard: Not installed
2023-06-16 11:19:45,067:INFO:             autoviz: Not installed
2023-06-16 11:19:45,067:INFO:           fairlearn: Not installed
2023-06-16 11:19:45,067:INFO:             xgboost: Not installed
2023-06-16 11:19:45,067:INFO:            catboost: Not installed
2023-06-16 11:19:45,067:INFO:              kmodes: Not installed
2023-06-16 11:19:45,067:INFO:             mlxtend: Not installed
2023-06-16 11:19:45,067:INFO:       statsforecast: Not installed
2023-06-16 11:19:45,067:INFO:        tune_sklearn: Not installed
2023-06-16 11:19:45,067:INFO:                 ray: Not installed
2023-06-16 11:19:45,067:INFO:            hyperopt: Not installed
2023-06-16 11:19:45,067:INFO:              optuna: Not installed
2023-06-16 11:19:45,067:INFO:               skopt: Not installed
2023-06-16 11:19:45,067:INFO:              mlflow: Not installed
2023-06-16 11:19:45,067:INFO:              gradio: Not installed
2023-06-16 11:19:45,067:INFO:             fastapi: Not installed
2023-06-16 11:19:45,067:INFO:             uvicorn: Not installed
2023-06-16 11:19:45,067:INFO:              m2cgen: Not installed
2023-06-16 11:19:45,067:INFO:           evidently: Not installed
2023-06-16 11:19:45,067:INFO:               fugue: Not installed
2023-06-16 11:19:45,067:INFO:           streamlit: Not installed
2023-06-16 11:19:45,068:INFO:             prophet: Not installed
2023-06-16 11:19:45,068:INFO:None
2023-06-16 11:19:45,068:INFO:Set up data.
2023-06-16 11:19:45,139:INFO:Set up train/test split.
2023-06-16 11:19:45,174:INFO:Set up index.
2023-06-16 11:19:45,175:INFO:Set up folding strategy.
2023-06-16 11:19:45,175:INFO:Assigning column types.
2023-06-16 11:19:45,189:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 11:19:45,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,253:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,379:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 11:19:45,436:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,529:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:19:45,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,561:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 11:19:45,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,728:INFO:Preparing preprocessing pipeline...
2023-06-16 11:19:45,730:INFO:Set up simple imputation.
2023-06-16 11:19:45,744:INFO:Set up encoding of ordinal features.
2023-06-16 11:19:45,764:INFO:Set up encoding of categorical features.
2023-06-16 11:19:45,764:INFO:Set up imbalanced handling.
2023-06-16 11:19:45,764:INFO:Set up feature selection.
2023-06-16 11:19:45,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:19:45,853:INFO:Set up column name cleaning.
2023-06-16 11:20:01,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:01,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:01,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:01,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:02,383:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 11:20:02,794:INFO:PyCaret ClassificationExperiment
2023-06-16 11:20:02,794:INFO:Logging name: clf-default-name
2023-06-16 11:20:02,794:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 11:20:02,794:INFO:version 3.0.2
2023-06-16 11:20:02,794:INFO:Initializing setup()
2023-06-16 11:20:02,794:INFO:self.USI: ef8e
2023-06-16 11:20:02,794:INFO:self._variable_keys: {'_ml_usecase', 'fold_shuffle_param', 'data', '_available_plots', 'y_train', 'fold_generator', 'logging_param', 'html_param', 'gpu_param', 'USI', 'seed', 'exp_id', 'X_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'X', 'n_jobs_param', 'y_test', 'y', 'X_test', 'pipeline', 'fix_imbalance', 'target_param', 'fold_groups_param', 'memory', 'exp_name_log', 'is_multiclass'}
2023-06-16 11:20:02,794:INFO:Checking environment
2023-06-16 11:20:02,794:INFO:python_version: 3.9.7
2023-06-16 11:20:02,794:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 11:20:02,794:INFO:machine: AMD64
2023-06-16 11:20:02,794:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 11:20:02,794:INFO:Memory: svmem(total=17120436224, available=6428368896, percent=62.5, used=10692067328, free=6428368896)
2023-06-16 11:20:02,794:INFO:Physical Core: 4
2023-06-16 11:20:02,794:INFO:Logical Core: 4
2023-06-16 11:20:02,795:INFO:Checking libraries
2023-06-16 11:20:02,795:INFO:System:
2023-06-16 11:20:02,795:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 11:20:02,795:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 11:20:02,795:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 11:20:02,795:INFO:PyCaret required dependencies:
2023-06-16 11:20:02,795:INFO:                 pip: 21.2.3
2023-06-16 11:20:02,795:INFO:          setuptools: 57.4.0
2023-06-16 11:20:02,795:INFO:             pycaret: 3.0.2
2023-06-16 11:20:02,795:INFO:             IPython: 7.28.0
2023-06-16 11:20:02,795:INFO:          ipywidgets: 8.0.6
2023-06-16 11:20:02,795:INFO:                tqdm: 4.64.0
2023-06-16 11:20:02,795:INFO:               numpy: 1.21.2
2023-06-16 11:20:02,795:INFO:              pandas: 1.3.5
2023-06-16 11:20:02,795:INFO:              jinja2: 3.1.2
2023-06-16 11:20:02,795:INFO:               scipy: 1.7.1
2023-06-16 11:20:02,795:INFO:              joblib: 1.2.0
2023-06-16 11:20:02,795:INFO:             sklearn: 1.1.0
2023-06-16 11:20:02,795:INFO:                pyod: 1.0.9
2023-06-16 11:20:02,795:INFO:            imblearn: 0.9.1
2023-06-16 11:20:02,796:INFO:   category_encoders: 2.6.1
2023-06-16 11:20:02,796:INFO:            lightgbm: 3.3.5
2023-06-16 11:20:02,796:INFO:               numba: 0.57.0
2023-06-16 11:20:02,796:INFO:            requests: 2.31.0
2023-06-16 11:20:02,796:INFO:          matplotlib: 3.4.3
2023-06-16 11:20:02,796:INFO:          scikitplot: 0.3.7
2023-06-16 11:20:02,796:INFO:         yellowbrick: 1.5
2023-06-16 11:20:02,796:INFO:              plotly: 5.8.0
2023-06-16 11:20:02,796:INFO:             kaleido: 0.2.1
2023-06-16 11:20:02,796:INFO:         statsmodels: 0.14.0
2023-06-16 11:20:02,796:INFO:              sktime: 0.17.0
2023-06-16 11:20:02,796:INFO:               tbats: 1.1.3
2023-06-16 11:20:02,796:INFO:            pmdarima: 2.0.3
2023-06-16 11:20:02,796:INFO:              psutil: 5.9.0
2023-06-16 11:20:02,796:INFO:PyCaret optional dependencies:
2023-06-16 11:20:02,820:INFO:                shap: Not installed
2023-06-16 11:20:02,820:INFO:           interpret: Not installed
2023-06-16 11:20:02,820:INFO:                umap: Not installed
2023-06-16 11:20:02,820:INFO:    pandas_profiling: Not installed
2023-06-16 11:20:02,820:INFO:  explainerdashboard: Not installed
2023-06-16 11:20:02,821:INFO:             autoviz: Not installed
2023-06-16 11:20:02,821:INFO:           fairlearn: Not installed
2023-06-16 11:20:02,821:INFO:             xgboost: Not installed
2023-06-16 11:20:02,821:INFO:            catboost: Not installed
2023-06-16 11:20:02,821:INFO:              kmodes: Not installed
2023-06-16 11:20:02,821:INFO:             mlxtend: Not installed
2023-06-16 11:20:02,821:INFO:       statsforecast: Not installed
2023-06-16 11:20:02,821:INFO:        tune_sklearn: Not installed
2023-06-16 11:20:02,821:INFO:                 ray: Not installed
2023-06-16 11:20:02,821:INFO:            hyperopt: Not installed
2023-06-16 11:20:02,821:INFO:              optuna: Not installed
2023-06-16 11:20:02,821:INFO:               skopt: Not installed
2023-06-16 11:20:02,821:INFO:              mlflow: Not installed
2023-06-16 11:20:02,821:INFO:              gradio: Not installed
2023-06-16 11:20:02,821:INFO:             fastapi: Not installed
2023-06-16 11:20:02,821:INFO:             uvicorn: Not installed
2023-06-16 11:20:02,821:INFO:              m2cgen: Not installed
2023-06-16 11:20:02,821:INFO:           evidently: Not installed
2023-06-16 11:20:02,821:INFO:               fugue: Not installed
2023-06-16 11:20:02,821:INFO:           streamlit: Not installed
2023-06-16 11:20:02,822:INFO:             prophet: Not installed
2023-06-16 11:20:02,822:INFO:None
2023-06-16 11:20:02,822:INFO:Set up data.
2023-06-16 11:20:02,879:INFO:Set up train/test split.
2023-06-16 11:20:02,905:INFO:Set up index.
2023-06-16 11:20:02,906:INFO:Set up folding strategy.
2023-06-16 11:20:02,906:INFO:Assigning column types.
2023-06-16 11:20:02,923:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 11:20:02,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:20:02,986:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,179:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,180:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,216:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 11:20:03,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,356:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:03,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,390:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 11:20:03,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,602:INFO:Preparing preprocessing pipeline...
2023-06-16 11:20:03,608:INFO:Set up simple imputation.
2023-06-16 11:20:03,624:INFO:Set up encoding of ordinal features.
2023-06-16 11:20:03,637:INFO:Set up encoding of categorical features.
2023-06-16 11:20:03,637:INFO:Set up imbalanced handling.
2023-06-16 11:20:03,637:INFO:Set up feature selection.
2023-06-16 11:20:03,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:03,739:INFO:Set up column name cleaning.
2023-06-16 11:20:29,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:29,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:29,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:29,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:20:30,045:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 11:20:30,440:INFO:PyCaret ClassificationExperiment
2023-06-16 11:20:30,440:INFO:Logging name: clf-default-name
2023-06-16 11:20:30,440:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 11:20:30,440:INFO:version 3.0.2
2023-06-16 11:20:30,440:INFO:Initializing setup()
2023-06-16 11:20:30,440:INFO:self.USI: 24e7
2023-06-16 11:20:30,440:INFO:self._variable_keys: {'USI', 'log_plots_param', 'idx', 'X_test', 'gpu_param', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'X_train', '_ml_usecase', 'fold_shuffle_param', 'html_param', 'exp_id', 'data', 'fix_imbalance', 'pipeline', 'exp_name_log', '_available_plots', 'y_test', 'y_train', 'is_multiclass', 'fold_generator', 'memory', 'logging_param', 'X', 'target_param'}
2023-06-16 11:20:30,440:INFO:Checking environment
2023-06-16 11:20:30,440:INFO:python_version: 3.9.7
2023-06-16 11:20:30,441:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 11:20:30,441:INFO:machine: AMD64
2023-06-16 11:20:30,441:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 11:20:30,441:INFO:Memory: svmem(total=17120436224, available=6447022080, percent=62.3, used=10673414144, free=6447022080)
2023-06-16 11:20:30,441:INFO:Physical Core: 4
2023-06-16 11:20:30,441:INFO:Logical Core: 4
2023-06-16 11:20:30,441:INFO:Checking libraries
2023-06-16 11:20:30,441:INFO:System:
2023-06-16 11:20:30,441:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 11:20:30,441:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 11:20:30,441:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 11:20:30,441:INFO:PyCaret required dependencies:
2023-06-16 11:20:30,441:INFO:                 pip: 21.2.3
2023-06-16 11:20:30,441:INFO:          setuptools: 57.4.0
2023-06-16 11:20:30,441:INFO:             pycaret: 3.0.2
2023-06-16 11:20:30,441:INFO:             IPython: 7.28.0
2023-06-16 11:20:30,441:INFO:          ipywidgets: 8.0.6
2023-06-16 11:20:30,441:INFO:                tqdm: 4.64.0
2023-06-16 11:20:30,442:INFO:               numpy: 1.21.2
2023-06-16 11:20:30,442:INFO:              pandas: 1.3.5
2023-06-16 11:20:30,442:INFO:              jinja2: 3.1.2
2023-06-16 11:20:30,442:INFO:               scipy: 1.7.1
2023-06-16 11:20:30,442:INFO:              joblib: 1.2.0
2023-06-16 11:20:30,442:INFO:             sklearn: 1.1.0
2023-06-16 11:20:30,442:INFO:                pyod: 1.0.9
2023-06-16 11:20:30,442:INFO:            imblearn: 0.9.1
2023-06-16 11:20:30,442:INFO:   category_encoders: 2.6.1
2023-06-16 11:20:30,442:INFO:            lightgbm: 3.3.5
2023-06-16 11:20:30,442:INFO:               numba: 0.57.0
2023-06-16 11:20:30,442:INFO:            requests: 2.31.0
2023-06-16 11:20:30,442:INFO:          matplotlib: 3.4.3
2023-06-16 11:20:30,442:INFO:          scikitplot: 0.3.7
2023-06-16 11:20:30,442:INFO:         yellowbrick: 1.5
2023-06-16 11:20:30,442:INFO:              plotly: 5.8.0
2023-06-16 11:20:30,442:INFO:             kaleido: 0.2.1
2023-06-16 11:20:30,442:INFO:         statsmodels: 0.14.0
2023-06-16 11:20:30,442:INFO:              sktime: 0.17.0
2023-06-16 11:20:30,442:INFO:               tbats: 1.1.3
2023-06-16 11:20:30,442:INFO:            pmdarima: 2.0.3
2023-06-16 11:20:30,442:INFO:              psutil: 5.9.0
2023-06-16 11:20:30,443:INFO:PyCaret optional dependencies:
2023-06-16 11:20:30,464:INFO:                shap: Not installed
2023-06-16 11:20:30,464:INFO:           interpret: Not installed
2023-06-16 11:20:30,464:INFO:                umap: Not installed
2023-06-16 11:20:30,464:INFO:    pandas_profiling: Not installed
2023-06-16 11:20:30,464:INFO:  explainerdashboard: Not installed
2023-06-16 11:20:30,464:INFO:             autoviz: Not installed
2023-06-16 11:20:30,464:INFO:           fairlearn: Not installed
2023-06-16 11:20:30,464:INFO:             xgboost: Not installed
2023-06-16 11:20:30,464:INFO:            catboost: Not installed
2023-06-16 11:20:30,464:INFO:              kmodes: Not installed
2023-06-16 11:20:30,464:INFO:             mlxtend: Not installed
2023-06-16 11:20:30,464:INFO:       statsforecast: Not installed
2023-06-16 11:20:30,464:INFO:        tune_sklearn: Not installed
2023-06-16 11:20:30,464:INFO:                 ray: Not installed
2023-06-16 11:20:30,464:INFO:            hyperopt: Not installed
2023-06-16 11:20:30,465:INFO:              optuna: Not installed
2023-06-16 11:20:30,465:INFO:               skopt: Not installed
2023-06-16 11:20:30,465:INFO:              mlflow: Not installed
2023-06-16 11:20:30,465:INFO:              gradio: Not installed
2023-06-16 11:20:30,465:INFO:             fastapi: Not installed
2023-06-16 11:20:30,465:INFO:             uvicorn: Not installed
2023-06-16 11:20:30,465:INFO:              m2cgen: Not installed
2023-06-16 11:20:30,465:INFO:           evidently: Not installed
2023-06-16 11:20:30,465:INFO:               fugue: Not installed
2023-06-16 11:20:30,465:INFO:           streamlit: Not installed
2023-06-16 11:20:30,465:INFO:             prophet: Not installed
2023-06-16 11:20:30,465:INFO:None
2023-06-16 11:20:30,465:INFO:Set up data.
2023-06-16 11:20:30,522:INFO:Set up train/test split.
2023-06-16 11:20:30,546:INFO:Set up index.
2023-06-16 11:20:30,547:INFO:Set up folding strategy.
2023-06-16 11:20:30,547:INFO:Assigning column types.
2023-06-16 11:20:30,558:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 11:20:30,607:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,761:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,793:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 11:20:30,844:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,931:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:20:30,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:30,964:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 11:20:31,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,129:INFO:Preparing preprocessing pipeline...
2023-06-16 11:20:31,131:INFO:Set up simple imputation.
2023-06-16 11:20:31,142:INFO:Set up encoding of ordinal features.
2023-06-16 11:20:31,151:INFO:Set up encoding of categorical features.
2023-06-16 11:20:31,151:INFO:Set up imbalanced handling.
2023-06-16 11:20:31,151:INFO:Set up feature selection.
2023-06-16 11:20:31,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:20:31,240:INFO:Set up column name cleaning.
2023-06-16 11:21:56,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:21:56,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:21:56,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:21:56,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 11:21:57,134:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 11:21:57,530:INFO:PyCaret ClassificationExperiment
2023-06-16 11:21:57,530:INFO:Logging name: clf-default-name
2023-06-16 11:21:57,530:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 11:21:57,530:INFO:version 3.0.2
2023-06-16 11:21:57,530:INFO:Initializing setup()
2023-06-16 11:21:57,530:INFO:self.USI: c49d
2023-06-16 11:21:57,531:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 11:21:57,531:INFO:Checking environment
2023-06-16 11:21:57,531:INFO:python_version: 3.9.7
2023-06-16 11:21:57,531:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 11:21:57,531:INFO:machine: AMD64
2023-06-16 11:21:57,531:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 11:21:57,531:INFO:Memory: svmem(total=17120436224, available=6402523136, percent=62.6, used=10717913088, free=6402523136)
2023-06-16 11:21:57,531:INFO:Physical Core: 4
2023-06-16 11:21:57,531:INFO:Logical Core: 4
2023-06-16 11:21:57,531:INFO:Checking libraries
2023-06-16 11:21:57,531:INFO:System:
2023-06-16 11:21:57,531:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 11:21:57,531:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 11:21:57,531:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 11:21:57,531:INFO:PyCaret required dependencies:
2023-06-16 11:21:57,531:INFO:                 pip: 21.2.3
2023-06-16 11:21:57,531:INFO:          setuptools: 57.4.0
2023-06-16 11:21:57,531:INFO:             pycaret: 3.0.2
2023-06-16 11:21:57,532:INFO:             IPython: 7.28.0
2023-06-16 11:21:57,532:INFO:          ipywidgets: 8.0.6
2023-06-16 11:21:57,532:INFO:                tqdm: 4.64.0
2023-06-16 11:21:57,532:INFO:               numpy: 1.21.2
2023-06-16 11:21:57,532:INFO:              pandas: 1.3.5
2023-06-16 11:21:57,532:INFO:              jinja2: 3.1.2
2023-06-16 11:21:57,532:INFO:               scipy: 1.7.1
2023-06-16 11:21:57,532:INFO:              joblib: 1.2.0
2023-06-16 11:21:57,532:INFO:             sklearn: 1.1.0
2023-06-16 11:21:57,532:INFO:                pyod: 1.0.9
2023-06-16 11:21:57,532:INFO:            imblearn: 0.9.1
2023-06-16 11:21:57,532:INFO:   category_encoders: 2.6.1
2023-06-16 11:21:57,532:INFO:            lightgbm: 3.3.5
2023-06-16 11:21:57,532:INFO:               numba: 0.57.0
2023-06-16 11:21:57,532:INFO:            requests: 2.31.0
2023-06-16 11:21:57,532:INFO:          matplotlib: 3.4.3
2023-06-16 11:21:57,532:INFO:          scikitplot: 0.3.7
2023-06-16 11:21:57,532:INFO:         yellowbrick: 1.5
2023-06-16 11:21:57,532:INFO:              plotly: 5.8.0
2023-06-16 11:21:57,532:INFO:             kaleido: 0.2.1
2023-06-16 11:21:57,533:INFO:         statsmodels: 0.14.0
2023-06-16 11:21:57,533:INFO:              sktime: 0.17.0
2023-06-16 11:21:57,533:INFO:               tbats: 1.1.3
2023-06-16 11:21:57,533:INFO:            pmdarima: 2.0.3
2023-06-16 11:21:57,533:INFO:              psutil: 5.9.0
2023-06-16 11:21:57,533:INFO:PyCaret optional dependencies:
2023-06-16 11:21:57,553:INFO:                shap: Not installed
2023-06-16 11:21:57,554:INFO:           interpret: Not installed
2023-06-16 11:21:57,554:INFO:                umap: Not installed
2023-06-16 11:21:57,554:INFO:    pandas_profiling: Not installed
2023-06-16 11:21:57,554:INFO:  explainerdashboard: Not installed
2023-06-16 11:21:57,554:INFO:             autoviz: Not installed
2023-06-16 11:21:57,554:INFO:           fairlearn: Not installed
2023-06-16 11:21:57,554:INFO:             xgboost: Not installed
2023-06-16 11:21:57,554:INFO:            catboost: Not installed
2023-06-16 11:21:57,554:INFO:              kmodes: Not installed
2023-06-16 11:21:57,554:INFO:             mlxtend: Not installed
2023-06-16 11:21:57,555:INFO:       statsforecast: Not installed
2023-06-16 11:21:57,555:INFO:        tune_sklearn: Not installed
2023-06-16 11:21:57,555:INFO:                 ray: Not installed
2023-06-16 11:21:57,555:INFO:            hyperopt: Not installed
2023-06-16 11:21:57,555:INFO:              optuna: Not installed
2023-06-16 11:21:57,555:INFO:               skopt: Not installed
2023-06-16 11:21:57,555:INFO:              mlflow: Not installed
2023-06-16 11:21:57,555:INFO:              gradio: Not installed
2023-06-16 11:21:57,555:INFO:             fastapi: Not installed
2023-06-16 11:21:57,555:INFO:             uvicorn: Not installed
2023-06-16 11:21:57,555:INFO:              m2cgen: Not installed
2023-06-16 11:21:57,555:INFO:           evidently: Not installed
2023-06-16 11:21:57,556:INFO:               fugue: Not installed
2023-06-16 11:21:57,556:INFO:           streamlit: Not installed
2023-06-16 11:21:57,556:INFO:             prophet: Not installed
2023-06-16 11:21:57,556:INFO:None
2023-06-16 11:21:57,556:INFO:Set up data.
2023-06-16 11:21:57,614:INFO:Set up train/test split.
2023-06-16 11:21:57,638:INFO:Set up index.
2023-06-16 11:21:57,639:INFO:Set up folding strategy.
2023-06-16 11:21:57,639:INFO:Assigning column types.
2023-06-16 11:21:57,650:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 11:21:57,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,707:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,883:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 11:21:57,941:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:21:57,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:57,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,027:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 11:21:58,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,060:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 11:21:58,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:58,232:INFO:Preparing preprocessing pipeline...
2023-06-16 11:21:58,234:INFO:Set up simple imputation.
2023-06-16 11:21:58,245:INFO:Set up encoding of ordinal features.
2023-06-16 11:21:58,255:INFO:Set up encoding of categorical features.
2023-06-16 11:21:58,255:INFO:Set up imbalanced handling.
2023-06-16 11:21:58,256:INFO:Set up column name cleaning.
2023-06-16 11:21:58,707:INFO:Finished creating preprocessing pipeline.
2023-06-16 11:21:58,785:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 11:21:58,785:INFO:Creating final display dataframe.
2023-06-16 11:21:58,972:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 40)
5   Transformed train set shape       (51162, 40)
6    Transformed test set shape       (12356, 40)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              c49d
2023-06-16 11:21:59,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:59,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:59,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:59,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 11:21:59,164:INFO:setup() successfully completed in 1.8s...............
2023-06-16 11:21:59,201:INFO:Initializing compare_models()
2023-06-16 11:21:59,201:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 11:21:59,201:INFO:Checking exceptions
2023-06-16 11:21:59,212:INFO:Preparing display monitor
2023-06-16 11:21:59,273:INFO:Initializing Logistic Regression
2023-06-16 11:21:59,273:INFO:Total runtime is 0.0 minutes
2023-06-16 11:21:59,278:INFO:SubProcess create_model() called ==================================
2023-06-16 11:21:59,278:INFO:Initializing create_model()
2023-06-16 11:21:59,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C6C3040>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:21:59,278:INFO:Checking exceptions
2023-06-16 11:21:59,278:INFO:Importing libraries
2023-06-16 11:21:59,278:INFO:Copying training dataset
2023-06-16 11:21:59,293:INFO:Defining folds
2023-06-16 11:21:59,294:INFO:Declaring metric variables
2023-06-16 11:21:59,298:INFO:Importing untrained model
2023-06-16 11:21:59,303:INFO:Logistic Regression Imported successfully
2023-06-16 11:21:59,312:INFO:Starting cross validation
2023-06-16 11:21:59,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:22:05,461:INFO:Calculating mean and std
2023-06-16 11:22:05,464:INFO:Creating metrics dataframe
2023-06-16 11:22:05,682:INFO:Uploading results into container
2023-06-16 11:22:05,683:INFO:Uploading model into container now
2023-06-16 11:22:05,683:INFO:_master_model_container: 1
2023-06-16 11:22:05,683:INFO:_display_container: 2
2023-06-16 11:22:05,684:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:22:05,684:INFO:create_model() successfully completed......................................
2023-06-16 11:22:05,748:INFO:SubProcess create_model() end ==================================
2023-06-16 11:22:05,749:INFO:Creating metrics dataframe
2023-06-16 11:22:05,765:INFO:Initializing SVM - Linear Kernel
2023-06-16 11:22:05,765:INFO:Total runtime is 0.10819985469182332 minutes
2023-06-16 11:22:05,772:INFO:SubProcess create_model() called ==================================
2023-06-16 11:22:05,772:INFO:Initializing create_model()
2023-06-16 11:22:05,772:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C6C3040>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:05,772:INFO:Checking exceptions
2023-06-16 11:22:05,772:INFO:Importing libraries
2023-06-16 11:22:05,772:INFO:Copying training dataset
2023-06-16 11:22:05,790:INFO:Defining folds
2023-06-16 11:22:05,790:INFO:Declaring metric variables
2023-06-16 11:22:05,795:INFO:Importing untrained model
2023-06-16 11:22:05,801:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:22:05,812:INFO:Starting cross validation
2023-06-16 11:22:05,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:22:06,346:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:06,347:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:06,385:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:06,386:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,044:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,070:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,088:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,296:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,915:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:07,995:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 11:22:08,533:INFO:Calculating mean and std
2023-06-16 11:22:08,534:INFO:Creating metrics dataframe
2023-06-16 11:22:08,805:INFO:Uploading results into container
2023-06-16 11:22:08,805:INFO:Uploading model into container now
2023-06-16 11:22:08,807:INFO:_master_model_container: 2
2023-06-16 11:22:08,807:INFO:_display_container: 2
2023-06-16 11:22:08,808:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:22:08,808:INFO:create_model() successfully completed......................................
2023-06-16 11:22:08,880:INFO:SubProcess create_model() end ==================================
2023-06-16 11:22:08,881:INFO:Creating metrics dataframe
2023-06-16 11:22:08,897:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 11:22:08,897:INFO:Total runtime is 0.16039984623591105 minutes
2023-06-16 11:22:08,901:INFO:SubProcess create_model() called ==================================
2023-06-16 11:22:08,901:INFO:Initializing create_model()
2023-06-16 11:22:08,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C6C3040>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:08,902:INFO:Checking exceptions
2023-06-16 11:22:08,902:INFO:Importing libraries
2023-06-16 11:22:08,902:INFO:Copying training dataset
2023-06-16 11:22:08,918:INFO:Defining folds
2023-06-16 11:22:08,918:INFO:Declaring metric variables
2023-06-16 11:22:08,923:INFO:Importing untrained model
2023-06-16 11:22:08,928:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:22:08,940:INFO:Starting cross validation
2023-06-16 11:22:08,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 11:22:11,830:INFO:Calculating mean and std
2023-06-16 11:22:11,832:INFO:Creating metrics dataframe
2023-06-16 11:22:12,049:INFO:Uploading results into container
2023-06-16 11:22:12,049:INFO:Uploading model into container now
2023-06-16 11:22:12,050:INFO:_master_model_container: 3
2023-06-16 11:22:12,051:INFO:_display_container: 2
2023-06-16 11:22:12,051:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:22:12,051:INFO:create_model() successfully completed......................................
2023-06-16 11:22:12,114:INFO:SubProcess create_model() end ==================================
2023-06-16 11:22:12,114:INFO:Creating metrics dataframe
2023-06-16 11:22:12,144:INFO:Initializing create_model()
2023-06-16 11:22:12,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:12,144:INFO:Checking exceptions
2023-06-16 11:22:12,147:INFO:Importing libraries
2023-06-16 11:22:12,147:INFO:Copying training dataset
2023-06-16 11:22:12,162:INFO:Defining folds
2023-06-16 11:22:12,163:INFO:Declaring metric variables
2023-06-16 11:22:12,163:INFO:Importing untrained model
2023-06-16 11:22:12,163:INFO:Declaring custom model
2023-06-16 11:22:12,164:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 11:22:12,166:INFO:Cross validation set to False
2023-06-16 11:22:12,166:INFO:Fitting Model
2023-06-16 11:22:12,733:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 11:22:12,733:INFO:create_model() successfully completed......................................
2023-06-16 11:22:12,815:INFO:Initializing create_model()
2023-06-16 11:22:12,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:12,815:INFO:Checking exceptions
2023-06-16 11:22:12,817:INFO:Importing libraries
2023-06-16 11:22:12,818:INFO:Copying training dataset
2023-06-16 11:22:12,833:INFO:Defining folds
2023-06-16 11:22:12,833:INFO:Declaring metric variables
2023-06-16 11:22:12,834:INFO:Importing untrained model
2023-06-16 11:22:12,834:INFO:Declaring custom model
2023-06-16 11:22:12,835:INFO:Logistic Regression Imported successfully
2023-06-16 11:22:12,836:INFO:Cross validation set to False
2023-06-16 11:22:12,836:INFO:Fitting Model
2023-06-16 11:22:13,407:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 11:22:13,407:INFO:create_model() successfully completed......................................
2023-06-16 11:22:13,520:INFO:Initializing create_model()
2023-06-16 11:22:13,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 11:22:13,520:INFO:Checking exceptions
2023-06-16 11:22:13,524:INFO:Importing libraries
2023-06-16 11:22:13,524:INFO:Copying training dataset
2023-06-16 11:22:13,561:INFO:Defining folds
2023-06-16 11:22:13,561:INFO:Declaring metric variables
2023-06-16 11:22:13,562:INFO:Importing untrained model
2023-06-16 11:22:13,562:INFO:Declaring custom model
2023-06-16 11:22:13,563:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 11:22:13,565:INFO:Cross validation set to False
2023-06-16 11:22:13,565:INFO:Fitting Model
2023-06-16 11:22:14,194:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 11:22:14,194:INFO:create_model() successfully completed......................................
2023-06-16 11:22:14,299:INFO:_master_model_container: 3
2023-06-16 11:22:14,299:INFO:_display_container: 2
2023-06-16 11:22:14,300:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 11:22:14,301:INFO:compare_models() successfully completed......................................
2023-06-16 11:22:14,345:INFO:Initializing evaluate_model()
2023-06-16 11:22:14,345:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 11:22:14,382:INFO:Initializing plot_model()
2023-06-16 11:22:14,383:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF64A20820>, system=True)
2023-06-16 11:22:14,383:INFO:Checking exceptions
2023-06-16 11:22:14,389:INFO:Preloading libraries
2023-06-16 11:22:14,390:INFO:Copying training dataset
2023-06-16 11:22:14,390:INFO:Plot type: pipeline
2023-06-16 11:22:14,626:INFO:Visual Rendered Successfully
2023-06-16 11:22:14,689:INFO:plot_model() successfully completed......................................
2023-06-16 14:18:42,659:INFO:PyCaret ClassificationExperiment
2023-06-16 14:18:42,660:INFO:Logging name: clf-default-name
2023-06-16 14:18:42,660:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:18:42,660:INFO:version 3.0.2
2023-06-16 14:18:42,660:INFO:Initializing setup()
2023-06-16 14:18:42,660:INFO:self.USI: 6dcc
2023-06-16 14:18:42,660:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:18:42,660:INFO:Checking environment
2023-06-16 14:18:42,660:INFO:python_version: 3.9.7
2023-06-16 14:18:42,660:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:18:42,660:INFO:machine: AMD64
2023-06-16 14:18:42,660:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:18:42,661:INFO:Memory: svmem(total=17120436224, available=5650096128, percent=67.0, used=11470340096, free=5650096128)
2023-06-16 14:18:42,661:INFO:Physical Core: 4
2023-06-16 14:18:42,661:INFO:Logical Core: 4
2023-06-16 14:18:42,661:INFO:Checking libraries
2023-06-16 14:18:42,661:INFO:System:
2023-06-16 14:18:42,661:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:18:42,661:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:18:42,661:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:18:42,661:INFO:PyCaret required dependencies:
2023-06-16 14:18:42,662:INFO:                 pip: 21.2.3
2023-06-16 14:18:42,662:INFO:          setuptools: 57.4.0
2023-06-16 14:18:42,662:INFO:             pycaret: 3.0.2
2023-06-16 14:18:42,662:INFO:             IPython: 7.28.0
2023-06-16 14:18:42,662:INFO:          ipywidgets: 8.0.6
2023-06-16 14:18:42,662:INFO:                tqdm: 4.64.0
2023-06-16 14:18:42,662:INFO:               numpy: 1.21.2
2023-06-16 14:18:42,662:INFO:              pandas: 1.3.5
2023-06-16 14:18:42,662:INFO:              jinja2: 3.1.2
2023-06-16 14:18:42,662:INFO:               scipy: 1.7.1
2023-06-16 14:18:42,662:INFO:              joblib: 1.2.0
2023-06-16 14:18:42,662:INFO:             sklearn: 1.1.0
2023-06-16 14:18:42,662:INFO:                pyod: 1.0.9
2023-06-16 14:18:42,662:INFO:            imblearn: 0.9.1
2023-06-16 14:18:42,662:INFO:   category_encoders: 2.6.1
2023-06-16 14:18:42,662:INFO:            lightgbm: 3.3.5
2023-06-16 14:18:42,662:INFO:               numba: 0.57.0
2023-06-16 14:18:42,662:INFO:            requests: 2.31.0
2023-06-16 14:18:42,662:INFO:          matplotlib: 3.4.3
2023-06-16 14:18:42,663:INFO:          scikitplot: 0.3.7
2023-06-16 14:18:42,663:INFO:         yellowbrick: 1.5
2023-06-16 14:18:42,663:INFO:              plotly: 5.8.0
2023-06-16 14:18:42,663:INFO:             kaleido: 0.2.1
2023-06-16 14:18:42,663:INFO:         statsmodels: 0.14.0
2023-06-16 14:18:42,663:INFO:              sktime: 0.17.0
2023-06-16 14:18:42,663:INFO:               tbats: 1.1.3
2023-06-16 14:18:42,663:INFO:            pmdarima: 2.0.3
2023-06-16 14:18:42,663:INFO:              psutil: 5.9.0
2023-06-16 14:18:42,663:INFO:PyCaret optional dependencies:
2023-06-16 14:18:42,663:INFO:                shap: Not installed
2023-06-16 14:18:42,663:INFO:           interpret: Not installed
2023-06-16 14:18:42,663:INFO:                umap: Not installed
2023-06-16 14:18:42,663:INFO:    pandas_profiling: Not installed
2023-06-16 14:18:42,663:INFO:  explainerdashboard: Not installed
2023-06-16 14:18:42,663:INFO:             autoviz: Not installed
2023-06-16 14:18:42,663:INFO:           fairlearn: Not installed
2023-06-16 14:18:42,663:INFO:             xgboost: Not installed
2023-06-16 14:18:42,663:INFO:            catboost: Not installed
2023-06-16 14:18:42,663:INFO:              kmodes: Not installed
2023-06-16 14:18:42,664:INFO:             mlxtend: Not installed
2023-06-16 14:18:42,664:INFO:       statsforecast: Not installed
2023-06-16 14:18:42,664:INFO:        tune_sklearn: Not installed
2023-06-16 14:18:42,664:INFO:                 ray: Not installed
2023-06-16 14:18:42,664:INFO:            hyperopt: Not installed
2023-06-16 14:18:42,664:INFO:              optuna: Not installed
2023-06-16 14:18:42,664:INFO:               skopt: Not installed
2023-06-16 14:18:42,664:INFO:              mlflow: Not installed
2023-06-16 14:18:42,664:INFO:              gradio: Not installed
2023-06-16 14:18:42,664:INFO:             fastapi: Not installed
2023-06-16 14:18:42,664:INFO:             uvicorn: Not installed
2023-06-16 14:18:42,664:INFO:              m2cgen: Not installed
2023-06-16 14:18:42,664:INFO:           evidently: Not installed
2023-06-16 14:18:42,664:INFO:               fugue: Not installed
2023-06-16 14:18:42,664:INFO:           streamlit: Not installed
2023-06-16 14:18:42,664:INFO:             prophet: Not installed
2023-06-16 14:18:42,664:INFO:None
2023-06-16 14:18:42,664:INFO:Set up data.
2023-06-16 14:18:42,741:INFO:Set up train/test split.
2023-06-16 14:18:42,823:INFO:Set up index.
2023-06-16 14:18:42,824:INFO:Set up folding strategy.
2023-06-16 14:18:42,824:INFO:Assigning column types.
2023-06-16 14:18:42,854:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:18:42,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:18:42,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:18:42,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:42,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:42,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:18:42,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:18:43,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,033:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:18:43,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:18:43,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:18:43,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,208:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:18:43,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,411:INFO:Preparing preprocessing pipeline...
2023-06-16 14:18:43,414:INFO:Set up simple imputation.
2023-06-16 14:18:43,429:INFO:Set up encoding of ordinal features.
2023-06-16 14:18:43,444:INFO:Set up encoding of categorical features.
2023-06-16 14:18:43,444:INFO:Set up imbalanced handling.
2023-06-16 14:18:43,445:INFO:Set up feature selection.
2023-06-16 14:18:43,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:18:43,675:INFO:Set up column name cleaning.
2023-06-16 14:20:30,267:INFO:PyCaret ClassificationExperiment
2023-06-16 14:20:30,267:INFO:Logging name: clf-default-name
2023-06-16 14:20:30,267:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:20:30,267:INFO:version 3.0.2
2023-06-16 14:20:30,267:INFO:Initializing setup()
2023-06-16 14:20:30,267:INFO:self.USI: 5312
2023-06-16 14:20:30,267:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:20:30,267:INFO:Checking environment
2023-06-16 14:20:30,267:INFO:python_version: 3.9.7
2023-06-16 14:20:30,267:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:20:30,268:INFO:machine: AMD64
2023-06-16 14:20:30,268:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:20:30,268:INFO:Memory: svmem(total=17120436224, available=5541523456, percent=67.6, used=11578912768, free=5541523456)
2023-06-16 14:20:30,268:INFO:Physical Core: 4
2023-06-16 14:20:30,268:INFO:Logical Core: 4
2023-06-16 14:20:30,268:INFO:Checking libraries
2023-06-16 14:20:30,268:INFO:System:
2023-06-16 14:20:30,268:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:20:30,268:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:20:30,268:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:20:30,268:INFO:PyCaret required dependencies:
2023-06-16 14:20:30,268:INFO:                 pip: 21.2.3
2023-06-16 14:20:30,268:INFO:          setuptools: 57.4.0
2023-06-16 14:20:30,268:INFO:             pycaret: 3.0.2
2023-06-16 14:20:30,268:INFO:             IPython: 7.28.0
2023-06-16 14:20:30,268:INFO:          ipywidgets: 8.0.6
2023-06-16 14:20:30,268:INFO:                tqdm: 4.64.0
2023-06-16 14:20:30,268:INFO:               numpy: 1.21.2
2023-06-16 14:20:30,268:INFO:              pandas: 1.3.5
2023-06-16 14:20:30,269:INFO:              jinja2: 3.1.2
2023-06-16 14:20:30,269:INFO:               scipy: 1.7.1
2023-06-16 14:20:30,269:INFO:              joblib: 1.2.0
2023-06-16 14:20:30,269:INFO:             sklearn: 1.1.0
2023-06-16 14:20:30,269:INFO:                pyod: 1.0.9
2023-06-16 14:20:30,269:INFO:            imblearn: 0.9.1
2023-06-16 14:20:30,269:INFO:   category_encoders: 2.6.1
2023-06-16 14:20:30,269:INFO:            lightgbm: 3.3.5
2023-06-16 14:20:30,269:INFO:               numba: 0.57.0
2023-06-16 14:20:30,269:INFO:            requests: 2.31.0
2023-06-16 14:20:30,269:INFO:          matplotlib: 3.4.3
2023-06-16 14:20:30,269:INFO:          scikitplot: 0.3.7
2023-06-16 14:20:30,269:INFO:         yellowbrick: 1.5
2023-06-16 14:20:30,269:INFO:              plotly: 5.8.0
2023-06-16 14:20:30,269:INFO:             kaleido: 0.2.1
2023-06-16 14:20:30,269:INFO:         statsmodels: 0.14.0
2023-06-16 14:20:30,269:INFO:              sktime: 0.17.0
2023-06-16 14:20:30,269:INFO:               tbats: 1.1.3
2023-06-16 14:20:30,269:INFO:            pmdarima: 2.0.3
2023-06-16 14:20:30,269:INFO:              psutil: 5.9.0
2023-06-16 14:20:30,269:INFO:PyCaret optional dependencies:
2023-06-16 14:20:30,269:INFO:                shap: Not installed
2023-06-16 14:20:30,270:INFO:           interpret: Not installed
2023-06-16 14:20:30,270:INFO:                umap: Not installed
2023-06-16 14:20:30,270:INFO:    pandas_profiling: Not installed
2023-06-16 14:20:30,270:INFO:  explainerdashboard: Not installed
2023-06-16 14:20:30,270:INFO:             autoviz: Not installed
2023-06-16 14:20:30,270:INFO:           fairlearn: Not installed
2023-06-16 14:20:30,270:INFO:             xgboost: Not installed
2023-06-16 14:20:30,270:INFO:            catboost: Not installed
2023-06-16 14:20:30,270:INFO:              kmodes: Not installed
2023-06-16 14:20:30,270:INFO:             mlxtend: Not installed
2023-06-16 14:20:30,270:INFO:       statsforecast: Not installed
2023-06-16 14:20:30,270:INFO:        tune_sklearn: Not installed
2023-06-16 14:20:30,270:INFO:                 ray: Not installed
2023-06-16 14:20:30,270:INFO:            hyperopt: Not installed
2023-06-16 14:20:30,271:INFO:              optuna: Not installed
2023-06-16 14:20:30,271:INFO:               skopt: Not installed
2023-06-16 14:20:30,271:INFO:              mlflow: Not installed
2023-06-16 14:20:30,271:INFO:              gradio: Not installed
2023-06-16 14:20:30,271:INFO:             fastapi: Not installed
2023-06-16 14:20:30,271:INFO:             uvicorn: Not installed
2023-06-16 14:20:30,271:INFO:              m2cgen: Not installed
2023-06-16 14:20:30,271:INFO:           evidently: Not installed
2023-06-16 14:20:30,271:INFO:               fugue: Not installed
2023-06-16 14:20:30,271:INFO:           streamlit: Not installed
2023-06-16 14:20:30,271:INFO:             prophet: Not installed
2023-06-16 14:20:30,271:INFO:None
2023-06-16 14:20:30,271:INFO:Set up data.
2023-06-16 14:20:30,340:INFO:Set up train/test split.
2023-06-16 14:20:30,369:INFO:Set up index.
2023-06-16 14:20:30,370:INFO:Set up folding strategy.
2023-06-16 14:20:30,370:INFO:Assigning column types.
2023-06-16 14:20:30,383:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:20:30,438:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,439:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,524:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,556:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:20:30,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,692:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:20:30,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,724:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:20:30,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:30,888:INFO:Preparing preprocessing pipeline...
2023-06-16 14:20:30,890:INFO:Set up simple imputation.
2023-06-16 14:20:30,901:INFO:Set up encoding of ordinal features.
2023-06-16 14:20:30,910:INFO:Set up encoding of categorical features.
2023-06-16 14:20:30,911:INFO:Set up removing multicollinearity.
2023-06-16 14:20:30,911:INFO:Set up imbalanced handling.
2023-06-16 14:20:30,912:INFO:Set up column name cleaning.
2023-06-16 14:20:31,749:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:20:31,798:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:20:31,798:INFO:Creating final display dataframe.
2023-06-16 14:20:32,734:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 38)
5   Transformed train set shape       (51162, 38)
6    Transformed test set shape       (12356, 38)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21               Fold Generator   StratifiedKFold
22                  Fold Number                10
23                     CPU Jobs                -1
24                      Use GPU             False
25               Log Experiment             False
26              Experiment Name  clf-default-name
27                          USI              5312
2023-06-16 14:20:32,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:32,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:32,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:32,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:20:32,933:INFO:setup() successfully completed in 2.86s...............
2023-06-16 14:23:34,453:INFO:PyCaret ClassificationExperiment
2023-06-16 14:23:34,453:INFO:Logging name: clf-default-name
2023-06-16 14:23:34,453:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:23:34,453:INFO:version 3.0.2
2023-06-16 14:23:34,453:INFO:Initializing setup()
2023-06-16 14:23:34,453:INFO:self.USI: b62b
2023-06-16 14:23:34,453:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:23:34,453:INFO:Checking environment
2023-06-16 14:23:34,454:INFO:python_version: 3.9.7
2023-06-16 14:23:34,454:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:23:34,454:INFO:machine: AMD64
2023-06-16 14:23:34,454:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:23:34,454:INFO:Memory: svmem(total=17120436224, available=4809228288, percent=71.9, used=12311207936, free=4809228288)
2023-06-16 14:23:34,454:INFO:Physical Core: 4
2023-06-16 14:23:34,454:INFO:Logical Core: 4
2023-06-16 14:23:34,454:INFO:Checking libraries
2023-06-16 14:23:34,454:INFO:System:
2023-06-16 14:23:34,454:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:23:34,454:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:23:34,454:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:23:34,454:INFO:PyCaret required dependencies:
2023-06-16 14:23:34,454:INFO:                 pip: 21.2.3
2023-06-16 14:23:34,454:INFO:          setuptools: 57.4.0
2023-06-16 14:23:34,454:INFO:             pycaret: 3.0.2
2023-06-16 14:23:34,454:INFO:             IPython: 7.28.0
2023-06-16 14:23:34,455:INFO:          ipywidgets: 8.0.6
2023-06-16 14:23:34,455:INFO:                tqdm: 4.64.0
2023-06-16 14:23:34,455:INFO:               numpy: 1.21.2
2023-06-16 14:23:34,455:INFO:              pandas: 1.3.5
2023-06-16 14:23:34,455:INFO:              jinja2: 3.1.2
2023-06-16 14:23:34,455:INFO:               scipy: 1.7.1
2023-06-16 14:23:34,455:INFO:              joblib: 1.2.0
2023-06-16 14:23:34,455:INFO:             sklearn: 1.1.0
2023-06-16 14:23:34,455:INFO:                pyod: 1.0.9
2023-06-16 14:23:34,455:INFO:            imblearn: 0.9.1
2023-06-16 14:23:34,455:INFO:   category_encoders: 2.6.1
2023-06-16 14:23:34,455:INFO:            lightgbm: 3.3.5
2023-06-16 14:23:34,455:INFO:               numba: 0.57.0
2023-06-16 14:23:34,455:INFO:            requests: 2.31.0
2023-06-16 14:23:34,455:INFO:          matplotlib: 3.4.3
2023-06-16 14:23:34,455:INFO:          scikitplot: 0.3.7
2023-06-16 14:23:34,455:INFO:         yellowbrick: 1.5
2023-06-16 14:23:34,455:INFO:              plotly: 5.8.0
2023-06-16 14:23:34,455:INFO:             kaleido: 0.2.1
2023-06-16 14:23:34,455:INFO:         statsmodels: 0.14.0
2023-06-16 14:23:34,456:INFO:              sktime: 0.17.0
2023-06-16 14:23:34,456:INFO:               tbats: 1.1.3
2023-06-16 14:23:34,456:INFO:            pmdarima: 2.0.3
2023-06-16 14:23:34,456:INFO:              psutil: 5.9.0
2023-06-16 14:23:34,456:INFO:PyCaret optional dependencies:
2023-06-16 14:23:34,456:INFO:                shap: Not installed
2023-06-16 14:23:34,456:INFO:           interpret: Not installed
2023-06-16 14:23:34,456:INFO:                umap: Not installed
2023-06-16 14:23:34,456:INFO:    pandas_profiling: Not installed
2023-06-16 14:23:34,456:INFO:  explainerdashboard: Not installed
2023-06-16 14:23:34,456:INFO:             autoviz: Not installed
2023-06-16 14:23:34,456:INFO:           fairlearn: Not installed
2023-06-16 14:23:34,456:INFO:             xgboost: Not installed
2023-06-16 14:23:34,456:INFO:            catboost: Not installed
2023-06-16 14:23:34,456:INFO:              kmodes: Not installed
2023-06-16 14:23:34,456:INFO:             mlxtend: Not installed
2023-06-16 14:23:34,456:INFO:       statsforecast: Not installed
2023-06-16 14:23:34,456:INFO:        tune_sklearn: Not installed
2023-06-16 14:23:34,456:INFO:                 ray: Not installed
2023-06-16 14:23:34,456:INFO:            hyperopt: Not installed
2023-06-16 14:23:34,456:INFO:              optuna: Not installed
2023-06-16 14:23:34,457:INFO:               skopt: Not installed
2023-06-16 14:23:34,457:INFO:              mlflow: Not installed
2023-06-16 14:23:34,457:INFO:              gradio: Not installed
2023-06-16 14:23:34,457:INFO:             fastapi: Not installed
2023-06-16 14:23:34,457:INFO:             uvicorn: Not installed
2023-06-16 14:23:34,457:INFO:              m2cgen: Not installed
2023-06-16 14:23:34,457:INFO:           evidently: Not installed
2023-06-16 14:23:34,457:INFO:               fugue: Not installed
2023-06-16 14:23:34,457:INFO:           streamlit: Not installed
2023-06-16 14:23:34,457:INFO:             prophet: Not installed
2023-06-16 14:23:34,457:INFO:None
2023-06-16 14:23:34,457:INFO:Set up data.
2023-06-16 14:23:34,518:INFO:Set up train/test split.
2023-06-16 14:23:34,550:INFO:Set up index.
2023-06-16 14:23:34,551:INFO:Set up folding strategy.
2023-06-16 14:23:34,551:INFO:Assigning column types.
2023-06-16 14:23:34,574:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:23:34,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,790:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,825:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:23:34,878:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,963:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:23:34,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:34,996:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:23:35,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:35,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:35,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:35,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:35,164:INFO:Preparing preprocessing pipeline...
2023-06-16 14:23:35,166:INFO:Set up simple imputation.
2023-06-16 14:23:35,178:INFO:Set up encoding of ordinal features.
2023-06-16 14:23:35,188:INFO:Set up encoding of categorical features.
2023-06-16 14:23:35,188:INFO:Set up removing multicollinearity.
2023-06-16 14:23:35,188:INFO:Set up imbalanced handling.
2023-06-16 14:23:35,189:INFO:Set up column name cleaning.
2023-06-16 14:23:35,985:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:23:36,033:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                    transformer=RemoveMulticollinearity(threshold=0.8))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:23:36,033:INFO:Creating final display dataframe.
2023-06-16 14:23:37,094:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 36)
5   Transformed train set shape       (51162, 36)
6    Transformed test set shape       (12356, 36)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21               Fold Generator   StratifiedKFold
22                  Fold Number                10
23                     CPU Jobs                -1
24                      Use GPU             False
25               Log Experiment             False
26              Experiment Name  clf-default-name
27                          USI              b62b
2023-06-16 14:23:37,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:37,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:37,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:37,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:23:37,292:INFO:setup() successfully completed in 3.05s...............
2023-06-16 14:26:25,882:INFO:PyCaret ClassificationExperiment
2023-06-16 14:26:25,882:INFO:Logging name: clf-default-name
2023-06-16 14:26:25,882:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:26:25,882:INFO:version 3.0.2
2023-06-16 14:26:25,882:INFO:Initializing setup()
2023-06-16 14:26:25,882:INFO:self.USI: a15b
2023-06-16 14:26:25,882:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:26:25,883:INFO:Checking environment
2023-06-16 14:26:25,883:INFO:python_version: 3.9.7
2023-06-16 14:26:25,883:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:26:25,883:INFO:machine: AMD64
2023-06-16 14:26:25,883:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:26:25,883:INFO:Memory: svmem(total=17120436224, available=4542132224, percent=73.5, used=12578304000, free=4542132224)
2023-06-16 14:26:25,883:INFO:Physical Core: 4
2023-06-16 14:26:25,883:INFO:Logical Core: 4
2023-06-16 14:26:25,883:INFO:Checking libraries
2023-06-16 14:26:25,883:INFO:System:
2023-06-16 14:26:25,883:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:26:25,883:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:26:25,883:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:26:25,883:INFO:PyCaret required dependencies:
2023-06-16 14:26:25,883:INFO:                 pip: 21.2.3
2023-06-16 14:26:25,883:INFO:          setuptools: 57.4.0
2023-06-16 14:26:25,883:INFO:             pycaret: 3.0.2
2023-06-16 14:26:25,884:INFO:             IPython: 7.28.0
2023-06-16 14:26:25,884:INFO:          ipywidgets: 8.0.6
2023-06-16 14:26:25,884:INFO:                tqdm: 4.64.0
2023-06-16 14:26:25,884:INFO:               numpy: 1.21.2
2023-06-16 14:26:25,884:INFO:              pandas: 1.3.5
2023-06-16 14:26:25,884:INFO:              jinja2: 3.1.2
2023-06-16 14:26:25,884:INFO:               scipy: 1.7.1
2023-06-16 14:26:25,884:INFO:              joblib: 1.2.0
2023-06-16 14:26:25,884:INFO:             sklearn: 1.1.0
2023-06-16 14:26:25,884:INFO:                pyod: 1.0.9
2023-06-16 14:26:25,884:INFO:            imblearn: 0.9.1
2023-06-16 14:26:25,884:INFO:   category_encoders: 2.6.1
2023-06-16 14:26:25,884:INFO:            lightgbm: 3.3.5
2023-06-16 14:26:25,884:INFO:               numba: 0.57.0
2023-06-16 14:26:25,884:INFO:            requests: 2.31.0
2023-06-16 14:26:25,884:INFO:          matplotlib: 3.4.3
2023-06-16 14:26:25,884:INFO:          scikitplot: 0.3.7
2023-06-16 14:26:25,884:INFO:         yellowbrick: 1.5
2023-06-16 14:26:25,884:INFO:              plotly: 5.8.0
2023-06-16 14:26:25,884:INFO:             kaleido: 0.2.1
2023-06-16 14:26:25,884:INFO:         statsmodels: 0.14.0
2023-06-16 14:26:25,884:INFO:              sktime: 0.17.0
2023-06-16 14:26:25,885:INFO:               tbats: 1.1.3
2023-06-16 14:26:25,885:INFO:            pmdarima: 2.0.3
2023-06-16 14:26:25,885:INFO:              psutil: 5.9.0
2023-06-16 14:26:25,885:INFO:PyCaret optional dependencies:
2023-06-16 14:26:25,885:INFO:                shap: Not installed
2023-06-16 14:26:25,885:INFO:           interpret: Not installed
2023-06-16 14:26:25,885:INFO:                umap: Not installed
2023-06-16 14:26:25,885:INFO:    pandas_profiling: Not installed
2023-06-16 14:26:25,885:INFO:  explainerdashboard: Not installed
2023-06-16 14:26:25,885:INFO:             autoviz: Not installed
2023-06-16 14:26:25,885:INFO:           fairlearn: Not installed
2023-06-16 14:26:25,885:INFO:             xgboost: Not installed
2023-06-16 14:26:25,885:INFO:            catboost: Not installed
2023-06-16 14:26:25,885:INFO:              kmodes: Not installed
2023-06-16 14:26:25,885:INFO:             mlxtend: Not installed
2023-06-16 14:26:25,885:INFO:       statsforecast: Not installed
2023-06-16 14:26:25,885:INFO:        tune_sklearn: Not installed
2023-06-16 14:26:25,885:INFO:                 ray: Not installed
2023-06-16 14:26:25,885:INFO:            hyperopt: Not installed
2023-06-16 14:26:25,885:INFO:              optuna: Not installed
2023-06-16 14:26:25,885:INFO:               skopt: Not installed
2023-06-16 14:26:25,885:INFO:              mlflow: Not installed
2023-06-16 14:26:25,886:INFO:              gradio: Not installed
2023-06-16 14:26:25,886:INFO:             fastapi: Not installed
2023-06-16 14:26:25,886:INFO:             uvicorn: Not installed
2023-06-16 14:26:25,886:INFO:              m2cgen: Not installed
2023-06-16 14:26:25,886:INFO:           evidently: Not installed
2023-06-16 14:26:25,886:INFO:               fugue: Not installed
2023-06-16 14:26:25,886:INFO:           streamlit: Not installed
2023-06-16 14:26:25,886:INFO:             prophet: Not installed
2023-06-16 14:26:25,886:INFO:None
2023-06-16 14:26:25,886:INFO:Set up data.
2023-06-16 14:26:25,946:INFO:Set up train/test split.
2023-06-16 14:26:25,969:INFO:Set up index.
2023-06-16 14:26:25,970:INFO:Set up folding strategy.
2023-06-16 14:26:25,970:INFO:Assigning column types.
2023-06-16 14:26:25,980:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:26:26,030:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,031:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,112:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,155:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:26:26,216:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:26,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,339:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:26:26,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,505:INFO:Preparing preprocessing pipeline...
2023-06-16 14:26:26,507:INFO:Set up simple imputation.
2023-06-16 14:26:26,517:INFO:Set up encoding of ordinal features.
2023-06-16 14:26:26,526:INFO:Set up encoding of categorical features.
2023-06-16 14:26:26,526:INFO:Set up removing multicollinearity.
2023-06-16 14:26:26,526:INFO:Set up imbalanced handling.
2023-06-16 14:26:26,526:INFO:Set up feature selection.
2023-06-16 14:26:26,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:26,614:INFO:Set up column name cleaning.
2023-06-16 14:26:54,907:INFO:PyCaret ClassificationExperiment
2023-06-16 14:26:54,907:INFO:Logging name: clf-default-name
2023-06-16 14:26:54,907:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:26:54,907:INFO:version 3.0.2
2023-06-16 14:26:54,907:INFO:Initializing setup()
2023-06-16 14:26:54,907:INFO:self.USI: cec6
2023-06-16 14:26:54,907:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:26:54,907:INFO:Checking environment
2023-06-16 14:26:54,907:INFO:python_version: 3.9.7
2023-06-16 14:26:54,907:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:26:54,907:INFO:machine: AMD64
2023-06-16 14:26:54,907:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:26:54,907:INFO:Memory: svmem(total=17120436224, available=4395712512, percent=74.3, used=12724723712, free=4395712512)
2023-06-16 14:26:54,908:INFO:Physical Core: 4
2023-06-16 14:26:54,908:INFO:Logical Core: 4
2023-06-16 14:26:54,908:INFO:Checking libraries
2023-06-16 14:26:54,908:INFO:System:
2023-06-16 14:26:54,908:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:26:54,908:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:26:54,908:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:26:54,908:INFO:PyCaret required dependencies:
2023-06-16 14:26:54,908:INFO:                 pip: 21.2.3
2023-06-16 14:26:54,908:INFO:          setuptools: 57.4.0
2023-06-16 14:26:54,908:INFO:             pycaret: 3.0.2
2023-06-16 14:26:54,908:INFO:             IPython: 7.28.0
2023-06-16 14:26:54,908:INFO:          ipywidgets: 8.0.6
2023-06-16 14:26:54,908:INFO:                tqdm: 4.64.0
2023-06-16 14:26:54,908:INFO:               numpy: 1.21.2
2023-06-16 14:26:54,908:INFO:              pandas: 1.3.5
2023-06-16 14:26:54,908:INFO:              jinja2: 3.1.2
2023-06-16 14:26:54,908:INFO:               scipy: 1.7.1
2023-06-16 14:26:54,908:INFO:              joblib: 1.2.0
2023-06-16 14:26:54,908:INFO:             sklearn: 1.1.0
2023-06-16 14:26:54,908:INFO:                pyod: 1.0.9
2023-06-16 14:26:54,909:INFO:            imblearn: 0.9.1
2023-06-16 14:26:54,909:INFO:   category_encoders: 2.6.1
2023-06-16 14:26:54,909:INFO:            lightgbm: 3.3.5
2023-06-16 14:26:54,909:INFO:               numba: 0.57.0
2023-06-16 14:26:54,909:INFO:            requests: 2.31.0
2023-06-16 14:26:54,909:INFO:          matplotlib: 3.4.3
2023-06-16 14:26:54,909:INFO:          scikitplot: 0.3.7
2023-06-16 14:26:54,909:INFO:         yellowbrick: 1.5
2023-06-16 14:26:54,909:INFO:              plotly: 5.8.0
2023-06-16 14:26:54,909:INFO:             kaleido: 0.2.1
2023-06-16 14:26:54,909:INFO:         statsmodels: 0.14.0
2023-06-16 14:26:54,909:INFO:              sktime: 0.17.0
2023-06-16 14:26:54,909:INFO:               tbats: 1.1.3
2023-06-16 14:26:54,910:INFO:            pmdarima: 2.0.3
2023-06-16 14:26:54,910:INFO:              psutil: 5.9.0
2023-06-16 14:26:54,910:INFO:PyCaret optional dependencies:
2023-06-16 14:26:54,910:INFO:                shap: Not installed
2023-06-16 14:26:54,910:INFO:           interpret: Not installed
2023-06-16 14:26:54,910:INFO:                umap: Not installed
2023-06-16 14:26:54,910:INFO:    pandas_profiling: Not installed
2023-06-16 14:26:54,910:INFO:  explainerdashboard: Not installed
2023-06-16 14:26:54,910:INFO:             autoviz: Not installed
2023-06-16 14:26:54,910:INFO:           fairlearn: Not installed
2023-06-16 14:26:54,910:INFO:             xgboost: Not installed
2023-06-16 14:26:54,910:INFO:            catboost: Not installed
2023-06-16 14:26:54,910:INFO:              kmodes: Not installed
2023-06-16 14:26:54,910:INFO:             mlxtend: Not installed
2023-06-16 14:26:54,910:INFO:       statsforecast: Not installed
2023-06-16 14:26:54,910:INFO:        tune_sklearn: Not installed
2023-06-16 14:26:54,910:INFO:                 ray: Not installed
2023-06-16 14:26:54,911:INFO:            hyperopt: Not installed
2023-06-16 14:26:54,911:INFO:              optuna: Not installed
2023-06-16 14:26:54,911:INFO:               skopt: Not installed
2023-06-16 14:26:54,911:INFO:              mlflow: Not installed
2023-06-16 14:26:54,911:INFO:              gradio: Not installed
2023-06-16 14:26:54,911:INFO:             fastapi: Not installed
2023-06-16 14:26:54,911:INFO:             uvicorn: Not installed
2023-06-16 14:26:54,911:INFO:              m2cgen: Not installed
2023-06-16 14:26:54,911:INFO:           evidently: Not installed
2023-06-16 14:26:54,911:INFO:               fugue: Not installed
2023-06-16 14:26:54,911:INFO:           streamlit: Not installed
2023-06-16 14:26:54,911:INFO:             prophet: Not installed
2023-06-16 14:26:54,911:INFO:None
2023-06-16 14:26:54,911:INFO:Set up data.
2023-06-16 14:26:54,973:INFO:Set up train/test split.
2023-06-16 14:26:54,998:INFO:Set up index.
2023-06-16 14:26:54,999:INFO:Set up folding strategy.
2023-06-16 14:26:54,999:INFO:Assigning column types.
2023-06-16 14:26:55,012:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:26:55,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,155:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,188:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:26:55,239:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,327:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:26:55,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,361:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:26:55,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,532:INFO:Preparing preprocessing pipeline...
2023-06-16 14:26:55,534:INFO:Set up simple imputation.
2023-06-16 14:26:55,544:INFO:Set up encoding of ordinal features.
2023-06-16 14:26:55,555:INFO:Set up encoding of categorical features.
2023-06-16 14:26:55,555:INFO:Set up removing multicollinearity.
2023-06-16 14:26:55,555:INFO:Set up imbalanced handling.
2023-06-16 14:26:55,555:INFO:Set up feature selection.
2023-06-16 14:26:55,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:55,647:INFO:Set up column name cleaning.
2023-06-16 14:26:56,246:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:26:56,309:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=3,
                                                            score_func=<function f_classif at 0x000001CF6EB34B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:26:56,310:INFO:Creating final display dataframe.
2023-06-16 14:26:57,089:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape        (63518, 4)
5   Transformed train set shape        (51162, 4)
6    Transformed test set shape        (12356, 4)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected               0.2
25               Fold Generator   StratifiedKFold
26                  Fold Number                10
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              cec6
2023-06-16 14:26:57,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:57,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:57,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:57,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:26:57,284:INFO:setup() successfully completed in 2.57s...............
2023-06-16 14:27:16,729:INFO:Initializing compare_models()
2023-06-16 14:27:16,730:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 14:27:16,730:INFO:Checking exceptions
2023-06-16 14:27:16,740:INFO:Preparing display monitor
2023-06-16 14:27:16,859:INFO:Initializing Logistic Regression
2023-06-16 14:27:16,859:INFO:Total runtime is 1.668532689412435e-05 minutes
2023-06-16 14:27:16,865:INFO:SubProcess create_model() called ==================================
2023-06-16 14:27:16,865:INFO:Initializing create_model()
2023-06-16 14:27:16,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C7C3D30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:16,866:INFO:Checking exceptions
2023-06-16 14:27:16,866:INFO:Importing libraries
2023-06-16 14:27:16,866:INFO:Copying training dataset
2023-06-16 14:27:16,882:INFO:Defining folds
2023-06-16 14:27:16,883:INFO:Declaring metric variables
2023-06-16 14:27:16,919:INFO:Importing untrained model
2023-06-16 14:27:16,924:INFO:Logistic Regression Imported successfully
2023-06-16 14:27:16,934:INFO:Starting cross validation
2023-06-16 14:27:16,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:27:27,790:INFO:Calculating mean and std
2023-06-16 14:27:27,792:INFO:Creating metrics dataframe
2023-06-16 14:27:28,031:INFO:Uploading results into container
2023-06-16 14:27:28,032:INFO:Uploading model into container now
2023-06-16 14:27:28,033:INFO:_master_model_container: 1
2023-06-16 14:27:28,033:INFO:_display_container: 2
2023-06-16 14:27:28,033:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:27:28,033:INFO:create_model() successfully completed......................................
2023-06-16 14:27:28,465:INFO:SubProcess create_model() end ==================================
2023-06-16 14:27:28,465:INFO:Creating metrics dataframe
2023-06-16 14:27:28,482:INFO:Initializing SVM - Linear Kernel
2023-06-16 14:27:28,482:INFO:Total runtime is 0.19373352527618407 minutes
2023-06-16 14:27:28,486:INFO:SubProcess create_model() called ==================================
2023-06-16 14:27:28,487:INFO:Initializing create_model()
2023-06-16 14:27:28,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C7C3D30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:28,487:INFO:Checking exceptions
2023-06-16 14:27:28,487:INFO:Importing libraries
2023-06-16 14:27:28,487:INFO:Copying training dataset
2023-06-16 14:27:28,508:INFO:Defining folds
2023-06-16 14:27:28,509:INFO:Declaring metric variables
2023-06-16 14:27:28,513:INFO:Importing untrained model
2023-06-16 14:27:28,519:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 14:27:28,530:INFO:Starting cross validation
2023-06-16 14:27:28,532:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:27:29,816:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:29,890:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:29,953:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:29,959:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:31,220:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:31,307:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:31,399:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:31,400:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:32,486:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:32,560:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:27:32,685:INFO:Calculating mean and std
2023-06-16 14:27:32,686:INFO:Creating metrics dataframe
2023-06-16 14:27:32,966:INFO:Uploading results into container
2023-06-16 14:27:32,967:INFO:Uploading model into container now
2023-06-16 14:27:32,967:INFO:_master_model_container: 2
2023-06-16 14:27:32,967:INFO:_display_container: 2
2023-06-16 14:27:32,968:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 14:27:32,968:INFO:create_model() successfully completed......................................
2023-06-16 14:27:33,038:INFO:SubProcess create_model() end ==================================
2023-06-16 14:27:33,038:INFO:Creating metrics dataframe
2023-06-16 14:27:33,055:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 14:27:33,055:INFO:Total runtime is 0.26995001633961996 minutes
2023-06-16 14:27:33,059:INFO:SubProcess create_model() called ==================================
2023-06-16 14:27:33,059:INFO:Initializing create_model()
2023-06-16 14:27:33,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF5C7C3D30>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:33,060:INFO:Checking exceptions
2023-06-16 14:27:33,060:INFO:Importing libraries
2023-06-16 14:27:33,060:INFO:Copying training dataset
2023-06-16 14:27:33,078:INFO:Defining folds
2023-06-16 14:27:33,079:INFO:Declaring metric variables
2023-06-16 14:27:33,083:INFO:Importing untrained model
2023-06-16 14:27:33,088:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:27:33,099:INFO:Starting cross validation
2023-06-16 14:27:33,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:27:38,623:INFO:Calculating mean and std
2023-06-16 14:27:38,625:INFO:Creating metrics dataframe
2023-06-16 14:27:38,893:INFO:Uploading results into container
2023-06-16 14:27:38,894:INFO:Uploading model into container now
2023-06-16 14:27:38,894:INFO:_master_model_container: 3
2023-06-16 14:27:38,895:INFO:_display_container: 2
2023-06-16 14:27:38,895:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:27:38,896:INFO:create_model() successfully completed......................................
2023-06-16 14:27:38,968:INFO:SubProcess create_model() end ==================================
2023-06-16 14:27:38,968:INFO:Creating metrics dataframe
2023-06-16 14:27:38,996:INFO:Initializing create_model()
2023-06-16 14:27:38,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:38,997:INFO:Checking exceptions
2023-06-16 14:27:39,001:INFO:Importing libraries
2023-06-16 14:27:39,001:INFO:Copying training dataset
2023-06-16 14:27:39,017:INFO:Defining folds
2023-06-16 14:27:39,017:INFO:Declaring metric variables
2023-06-16 14:27:39,018:INFO:Importing untrained model
2023-06-16 14:27:39,018:INFO:Declaring custom model
2023-06-16 14:27:39,019:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:27:39,021:INFO:Cross validation set to False
2023-06-16 14:27:39,022:INFO:Fitting Model
2023-06-16 14:27:39,991:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:27:39,991:INFO:create_model() successfully completed......................................
2023-06-16 14:27:40,085:INFO:Initializing create_model()
2023-06-16 14:27:40,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:40,086:INFO:Checking exceptions
2023-06-16 14:27:40,089:INFO:Importing libraries
2023-06-16 14:27:40,089:INFO:Copying training dataset
2023-06-16 14:27:40,107:INFO:Defining folds
2023-06-16 14:27:40,107:INFO:Declaring metric variables
2023-06-16 14:27:40,109:INFO:Importing untrained model
2023-06-16 14:27:40,109:INFO:Declaring custom model
2023-06-16 14:27:40,110:INFO:Logistic Regression Imported successfully
2023-06-16 14:27:40,113:INFO:Cross validation set to False
2023-06-16 14:27:40,113:INFO:Fitting Model
2023-06-16 14:27:40,900:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:27:40,900:INFO:create_model() successfully completed......................................
2023-06-16 14:27:40,995:INFO:Initializing create_model()
2023-06-16 14:27:40,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:27:40,996:INFO:Checking exceptions
2023-06-16 14:27:40,999:INFO:Importing libraries
2023-06-16 14:27:41,000:INFO:Copying training dataset
2023-06-16 14:27:41,017:INFO:Defining folds
2023-06-16 14:27:41,017:INFO:Declaring metric variables
2023-06-16 14:27:41,017:INFO:Importing untrained model
2023-06-16 14:27:41,017:INFO:Declaring custom model
2023-06-16 14:27:41,018:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 14:27:41,020:INFO:Cross validation set to False
2023-06-16 14:27:41,020:INFO:Fitting Model
2023-06-16 14:27:41,741:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 14:27:41,741:INFO:create_model() successfully completed......................................
2023-06-16 14:27:41,845:INFO:_master_model_container: 3
2023-06-16 14:27:41,845:INFO:_display_container: 2
2023-06-16 14:27:41,848:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 14:27:41,848:INFO:compare_models() successfully completed......................................
2023-06-16 14:27:46,601:INFO:Initializing evaluate_model()
2023-06-16 14:27:46,601:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:27:46,633:INFO:Initializing plot_model()
2023-06-16 14:27:46,635:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:46,635:INFO:Checking exceptions
2023-06-16 14:27:46,640:INFO:Preloading libraries
2023-06-16 14:27:46,641:INFO:Copying training dataset
2023-06-16 14:27:46,641:INFO:Plot type: pipeline
2023-06-16 14:27:46,884:INFO:Visual Rendered Successfully
2023-06-16 14:27:46,952:INFO:plot_model() successfully completed......................................
2023-06-16 14:27:49,372:INFO:Initializing plot_model()
2023-06-16 14:27:49,372:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:49,372:INFO:Checking exceptions
2023-06-16 14:27:49,378:INFO:Preloading libraries
2023-06-16 14:27:49,378:INFO:Copying training dataset
2023-06-16 14:27:49,378:INFO:Plot type: auc
2023-06-16 14:27:49,501:INFO:Fitting Model
2023-06-16 14:27:49,502:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:27:49,503:INFO:Scoring test/hold-out set
2023-06-16 14:27:49,716:INFO:Visual Rendered Successfully
2023-06-16 14:27:49,865:INFO:plot_model() successfully completed......................................
2023-06-16 14:27:54,485:INFO:Initializing plot_model()
2023-06-16 14:27:54,486:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:54,486:INFO:Checking exceptions
2023-06-16 14:27:54,492:INFO:Preloading libraries
2023-06-16 14:27:54,493:INFO:Copying training dataset
2023-06-16 14:27:54,493:INFO:Plot type: feature
2023-06-16 14:27:54,662:INFO:Visual Rendered Successfully
2023-06-16 14:27:54,749:INFO:plot_model() successfully completed......................................
2023-06-16 14:27:57,943:INFO:Initializing plot_model()
2023-06-16 14:27:57,943:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:57,943:INFO:Checking exceptions
2023-06-16 14:27:57,950:INFO:Preloading libraries
2023-06-16 14:27:57,950:INFO:Copying training dataset
2023-06-16 14:27:57,950:INFO:Plot type: auc
2023-06-16 14:27:58,070:INFO:Fitting Model
2023-06-16 14:27:58,071:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:27:58,072:INFO:Scoring test/hold-out set
2023-06-16 14:27:58,279:INFO:Visual Rendered Successfully
2023-06-16 14:27:58,358:INFO:plot_model() successfully completed......................................
2023-06-16 14:27:58,710:INFO:Initializing plot_model()
2023-06-16 14:27:58,710:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:27:58,711:INFO:Checking exceptions
2023-06-16 14:27:58,717:INFO:Preloading libraries
2023-06-16 14:27:58,718:INFO:Copying training dataset
2023-06-16 14:27:58,718:INFO:Plot type: confusion_matrix
2023-06-16 14:27:58,853:INFO:Fitting Model
2023-06-16 14:27:58,853:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:27:58,854:INFO:Scoring test/hold-out set
2023-06-16 14:27:58,959:INFO:Visual Rendered Successfully
2023-06-16 14:27:59,042:INFO:plot_model() successfully completed......................................
2023-06-16 14:28:00,859:INFO:Initializing plot_model()
2023-06-16 14:28:00,860:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:28:00,860:INFO:Checking exceptions
2023-06-16 14:28:00,866:INFO:Preloading libraries
2023-06-16 14:28:00,867:INFO:Copying training dataset
2023-06-16 14:28:00,867:INFO:Plot type: threshold
2023-06-16 14:28:00,985:INFO:Fitting Model
2023-06-16 14:28:04,023:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:28:04,057:INFO:Scoring test/hold-out set
2023-06-16 14:28:04,462:INFO:Visual Rendered Successfully
2023-06-16 14:28:04,542:INFO:plot_model() successfully completed......................................
2023-06-16 14:28:07,055:INFO:Initializing plot_model()
2023-06-16 14:28:07,055:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:28:07,055:INFO:Checking exceptions
2023-06-16 14:28:07,063:INFO:Preloading libraries
2023-06-16 14:28:07,063:INFO:Copying training dataset
2023-06-16 14:28:07,063:INFO:Plot type: class_report
2023-06-16 14:28:07,184:INFO:Fitting Model
2023-06-16 14:28:07,185:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 14:28:07,185:INFO:Scoring test/hold-out set
2023-06-16 14:28:07,393:INFO:Visual Rendered Successfully
2023-06-16 14:28:07,467:INFO:plot_model() successfully completed......................................
2023-06-16 14:28:15,848:INFO:Initializing plot_model()
2023-06-16 14:28:15,848:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:28:15,848:INFO:Checking exceptions
2023-06-16 14:28:15,855:INFO:Preloading libraries
2023-06-16 14:28:15,855:INFO:Copying training dataset
2023-06-16 14:28:15,855:INFO:Plot type: rfe
2023-06-16 14:28:15,986:INFO:Fitting Model
2023-06-16 14:28:18,219:INFO:Visual Rendered Successfully
2023-06-16 14:28:18,302:INFO:plot_model() successfully completed......................................
2023-06-16 14:28:25,983:INFO:Initializing plot_model()
2023-06-16 14:28:25,983:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:28:25,984:INFO:Checking exceptions
2023-06-16 14:28:25,991:INFO:Preloading libraries
2023-06-16 14:28:25,991:INFO:Copying training dataset
2023-06-16 14:28:25,991:INFO:Plot type: vc
2023-06-16 14:28:25,992:INFO:Determining param_name
2023-06-16 14:28:25,992:INFO:param_name: l1_ratio
2023-06-16 14:28:26,115:INFO:Fitting Model
2023-06-16 14:28:26,138:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,180:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,221:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,262:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,304:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,344:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,386:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,429:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,471:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,512:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,553:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,595:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,636:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,677:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,718:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,759:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,800:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,843:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,885:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,926:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:26,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,008:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,052:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,093:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,135:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,175:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,216:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,259:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,301:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,343:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,386:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,428:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,474:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,519:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,563:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,646:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,686:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,726:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,767:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,808:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,849:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,890:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,931:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:27,972:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,013:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,055:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,104:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,155:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,200:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,243:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,287:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,329:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,371:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,412:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,453:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,496:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,547:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,597:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,648:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,694:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,740:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,786:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,825:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,864:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,904:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,944:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:28,987:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,029:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,075:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,124:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,175:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,224:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,271:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,317:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,361:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,405:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,453:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,497:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,537:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,580:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,623:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,666:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,707:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,748:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,789:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,874:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:29,959:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,003:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,046:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,089:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,131:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,173:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,215:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,256:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,303:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,353:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,397:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,438:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,483:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,530:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,577:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,630:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,680:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,724:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,770:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,814:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,856:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,904:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,948:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:30,996:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,044:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,093:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,143:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,190:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,236:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,281:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,325:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,367:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,411:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,456:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,501:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,546:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,595:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,643:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,691:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,735:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,776:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,818:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,859:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:31,959:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,000:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,041:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,082:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,127:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,169:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,210:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,251:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,292:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,374:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,417:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,458:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,498:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,542:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,584:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,632:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,678:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,721:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,762:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,802:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,843:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,884:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,925:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:32,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,012:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,053:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,095:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,137:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,179:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,225:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,271:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,318:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,364:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,413:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,462:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,512:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,560:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,618:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,668:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,721:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,764:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,806:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,849:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,894:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,939:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:33,983:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,031:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,075:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,119:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,163:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,206:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,249:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,293:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,339:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,381:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,427:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,473:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,523:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,570:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,622:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,668:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,710:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,751:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,795:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,836:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,879:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,921:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:34,965:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,011:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,054:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,098:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,143:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,195:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,244:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,291:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,339:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,425:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,468:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,515:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,567:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,612:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,656:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,699:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,743:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,788:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,874:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,918:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:35,962:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,011:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,055:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,099:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,140:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,188:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,233:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,275:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,317:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,358:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,411:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,456:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,502:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,541:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,582:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,630:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,684:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,729:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,770:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,812:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,853:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,895:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,938:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:36,983:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,025:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,066:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,108:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,150:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,196:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,238:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,279:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,320:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,362:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,406:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,452:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,493:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,576:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,619:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,665:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,709:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,754:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,799:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,843:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,888:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,933:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:37,974:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,016:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,059:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,106:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,161:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,211:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,273:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,318:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,360:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,405:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,460:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,547:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,627:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,706:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,769:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,829:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,882:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,936:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:38,990:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,035:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,086:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,132:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,173:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,216:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,267:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,316:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,360:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,406:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,450:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,496:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,566:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,623:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,679:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,733:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,774:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,818:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,869:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,924:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:39,979:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,026:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,069:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,112:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,157:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,202:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,243:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,284:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,326:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,372:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,423:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,470:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,514:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,555:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,598:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,645:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,688:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,731:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,774:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,816:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,860:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,903:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,947:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:40,990:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,033:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,075:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,122:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,165:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,209:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,252:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,296:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,338:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,381:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,424:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,467:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,510:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,553:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,599:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,641:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,684:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,728:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,770:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,813:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,856:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,898:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,941:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:41,985:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,028:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,074:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,118:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,160:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,203:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,246:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,288:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,330:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,373:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,415:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,459:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,503:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,548:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,591:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,633:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,676:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,721:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,764:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,806:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,848:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,892:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,938:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:42,989:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,036:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,077:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,119:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,162:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,205:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,248:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,291:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,334:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,376:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,420:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,465:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,517:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,566:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,620:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,670:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,723:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,770:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,815:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,855:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,898:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,940:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:43,984:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,030:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,073:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,116:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,159:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,202:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,245:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,287:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,431:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,480:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,526:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,573:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,620:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,664:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,707:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,751:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,793:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,836:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,878:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,924:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:44,974:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,028:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,071:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,112:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,156:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,198:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,242:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,284:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,331:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,379:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,429:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,478:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,527:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,572:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,617:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,661:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,727:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,778:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,827:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,873:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,918:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:45,959:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,001:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,055:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,101:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,144:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,188:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,232:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,281:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,334:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,380:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,424:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,468:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,512:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,562:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,611:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,656:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,700:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,745:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,789:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,832:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,881:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,932:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:46,979:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,023:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,069:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,120:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,167:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,213:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,258:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,301:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,344:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,387:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,429:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,473:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,516:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,562:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,651:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,694:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,738:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,782:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,825:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,867:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,909:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,951:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:47,996:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,044:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,094:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,140:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,186:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,230:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,269:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,311:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,354:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,396:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,439:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,483:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,531:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,574:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,619:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,663:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,706:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,750:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,793:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,836:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,880:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,922:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:48,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,016:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,061:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,105:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,149:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,193:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,239:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,283:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,326:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,369:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,411:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,454:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,500:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,544:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,591:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,681:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,724:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,768:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,812:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,855:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,898:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,941:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:49,988:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,031:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,075:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,119:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,164:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,207:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,253:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,297:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,340:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,394:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,450:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,548:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,593:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,636:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,690:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,734:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,778:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,821:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,866:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,916:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:50,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,024:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,081:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,133:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,186:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,234:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,290:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,334:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,378:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,420:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,462:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,508:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,550:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,594:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,680:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,723:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,766:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,810:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,854:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,899:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,946:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:51,992:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,089:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,133:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,175:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,217:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,261:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,304:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,347:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,389:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,433:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,476:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,521:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,566:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,609:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,654:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,698:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,745:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,790:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,835:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,880:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,925:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:52,969:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,015:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,062:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,107:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,150:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,194:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,242:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,291:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,337:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,381:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,423:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,465:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,509:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,557:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,604:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,651:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,693:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,737:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,781:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,824:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,866:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,910:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:53,955:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,002:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,052:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,097:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,141:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,184:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,231:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,275:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,318:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,361:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,406:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,450:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,495:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,544:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,589:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,633:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,677:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,721:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,767:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,811:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,853:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,897:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,940:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:54,986:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,034:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,080:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,124:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,167:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,210:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,253:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,296:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,339:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,426:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,469:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,517:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,559:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,604:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,647:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,689:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,731:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,775:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,817:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,859:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,902:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,945:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:55,991:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,035:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,077:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,120:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,162:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,204:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,246:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,289:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,375:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,420:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,466:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,509:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,552:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,595:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,680:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,722:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,765:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,808:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,851:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,894:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,939:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:56,982:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,026:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,069:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,111:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,153:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,195:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,238:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,281:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,324:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,367:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,414:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,463:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,509:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,555:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,602:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,648:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,692:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,734:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,779:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,821:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,864:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,910:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,953:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:57,995:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,083:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,125:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,168:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,210:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,253:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,297:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,340:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,388:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,434:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,481:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,585:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,686:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,738:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,789:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,832:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,872:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:58,960:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,002:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,046:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,089:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,132:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,174:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,217:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,259:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,302:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,345:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,392:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,435:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,478:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,520:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,564:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,607:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,649:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,692:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,734:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,778:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,822:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,868:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,953:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:28:59,995:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,085:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,128:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,170:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,213:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,256:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,300:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,346:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,389:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,432:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,474:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,517:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,563:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,605:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,647:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,690:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,733:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,777:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,824:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,868:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,953:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:00,995:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,040:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,084:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,126:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,169:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,212:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,255:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,303:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,346:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,388:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,433:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,476:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,520:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,563:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,649:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,692:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,734:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,780:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,823:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,866:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,910:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,952:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:01,994:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,043:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,095:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,141:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,193:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,244:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,303:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,349:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,393:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,438:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,480:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,523:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,567:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,609:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,652:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,699:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,761:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,890:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,945:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:02,993:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,050:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,098:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,138:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,179:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,221:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,264:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,309:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,352:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,398:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,442:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,485:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,591:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,647:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,694:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,736:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,780:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,828:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,872:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,918:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:03,965:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,015:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,061:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,106:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,149:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,193:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,246:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,303:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,362:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,421:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,476:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,535:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,596:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,651:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,703:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,760:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,813:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,867:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,911:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,954:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:04,997:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,049:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,103:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,153:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,214:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,261:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,308:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,354:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,399:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,445:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,488:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,588:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,638:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,683:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,728:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,771:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,849:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,899:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,942:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:05,991:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,036:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,109:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,204:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,300:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,366:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,416:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,473:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,541:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,621:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,672:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,716:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,760:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,807:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,855:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,901:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,952:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:06,998:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,057:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,113:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,155:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,203:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,250:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,301:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,356:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,405:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,450:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,494:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,540:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,585:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,628:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,670:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,714:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,758:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,800:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,845:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,892:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,936:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:07,978:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,022:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,067:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,113:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,155:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,197:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,242:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,285:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,330:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,378:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,423:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,468:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,511:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,554:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,602:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,646:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,690:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,735:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,782:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,881:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,923:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:08,967:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,014:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,062:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,111:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,155:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,198:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,245:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,289:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,427:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,473:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,516:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,559:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,604:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,646:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,696:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,740:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,783:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,828:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,875:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,919:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:09,960:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,005:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,049:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,096:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,139:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,180:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,222:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,263:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,306:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,354:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,397:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,439:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,483:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,526:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,568:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,613:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,655:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,698:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,740:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,783:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,830:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,874:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:10,961:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,005:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,048:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,092:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,136:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,178:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,226:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,282:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,333:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,382:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,430:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,479:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,526:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,572:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,620:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:1109: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-06-16 14:29:11,841:INFO:Visual Rendered Successfully
2023-06-16 14:29:11,912:INFO:plot_model() successfully completed......................................
2023-06-16 14:29:11,921:INFO:Initializing evaluate_model()
2023-06-16 14:29:11,921:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:29:11,958:INFO:Initializing plot_model()
2023-06-16 14:29:11,960:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF0549F100>, system=True)
2023-06-16 14:29:11,960:INFO:Checking exceptions
2023-06-16 14:29:11,977:INFO:Preloading libraries
2023-06-16 14:29:11,992:INFO:Copying training dataset
2023-06-16 14:29:11,992:INFO:Plot type: pipeline
2023-06-16 14:29:12,240:INFO:Visual Rendered Successfully
2023-06-16 14:29:12,310:INFO:plot_model() successfully completed......................................
2023-06-16 14:29:35,535:INFO:PyCaret ClassificationExperiment
2023-06-16 14:29:35,536:INFO:Logging name: clf-default-name
2023-06-16 14:29:35,536:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:29:35,536:INFO:version 3.0.2
2023-06-16 14:29:35,536:INFO:Initializing setup()
2023-06-16 14:29:35,536:INFO:self.USI: 41e6
2023-06-16 14:29:35,536:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:29:35,537:INFO:Checking environment
2023-06-16 14:29:35,537:INFO:python_version: 3.9.7
2023-06-16 14:29:35,537:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:29:35,537:INFO:machine: AMD64
2023-06-16 14:29:35,538:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:29:35,538:INFO:Memory: svmem(total=17120436224, available=4008894464, percent=76.6, used=13111541760, free=4008894464)
2023-06-16 14:29:35,538:INFO:Physical Core: 4
2023-06-16 14:29:35,538:INFO:Logical Core: 4
2023-06-16 14:29:35,538:INFO:Checking libraries
2023-06-16 14:29:35,538:INFO:System:
2023-06-16 14:29:35,538:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:29:35,538:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:29:35,538:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:29:35,538:INFO:PyCaret required dependencies:
2023-06-16 14:29:35,539:INFO:                 pip: 21.2.3
2023-06-16 14:29:35,539:INFO:          setuptools: 57.4.0
2023-06-16 14:29:35,539:INFO:             pycaret: 3.0.2
2023-06-16 14:29:35,539:INFO:             IPython: 7.28.0
2023-06-16 14:29:35,539:INFO:          ipywidgets: 8.0.6
2023-06-16 14:29:35,539:INFO:                tqdm: 4.64.0
2023-06-16 14:29:35,539:INFO:               numpy: 1.21.2
2023-06-16 14:29:35,539:INFO:              pandas: 1.3.5
2023-06-16 14:29:35,539:INFO:              jinja2: 3.1.2
2023-06-16 14:29:35,539:INFO:               scipy: 1.7.1
2023-06-16 14:29:35,539:INFO:              joblib: 1.2.0
2023-06-16 14:29:35,540:INFO:             sklearn: 1.1.0
2023-06-16 14:29:35,540:INFO:                pyod: 1.0.9
2023-06-16 14:29:35,540:INFO:            imblearn: 0.9.1
2023-06-16 14:29:35,540:INFO:   category_encoders: 2.6.1
2023-06-16 14:29:35,540:INFO:            lightgbm: 3.3.5
2023-06-16 14:29:35,540:INFO:               numba: 0.57.0
2023-06-16 14:29:35,540:INFO:            requests: 2.31.0
2023-06-16 14:29:35,540:INFO:          matplotlib: 3.4.3
2023-06-16 14:29:35,540:INFO:          scikitplot: 0.3.7
2023-06-16 14:29:35,540:INFO:         yellowbrick: 1.5
2023-06-16 14:29:35,540:INFO:              plotly: 5.8.0
2023-06-16 14:29:35,540:INFO:             kaleido: 0.2.1
2023-06-16 14:29:35,540:INFO:         statsmodels: 0.14.0
2023-06-16 14:29:35,541:INFO:              sktime: 0.17.0
2023-06-16 14:29:35,541:INFO:               tbats: 1.1.3
2023-06-16 14:29:35,541:INFO:            pmdarima: 2.0.3
2023-06-16 14:29:35,541:INFO:              psutil: 5.9.0
2023-06-16 14:29:35,542:INFO:PyCaret optional dependencies:
2023-06-16 14:29:35,542:INFO:                shap: Not installed
2023-06-16 14:29:35,542:INFO:           interpret: Not installed
2023-06-16 14:29:35,542:INFO:                umap: Not installed
2023-06-16 14:29:35,542:INFO:    pandas_profiling: Not installed
2023-06-16 14:29:35,542:INFO:  explainerdashboard: Not installed
2023-06-16 14:29:35,542:INFO:             autoviz: Not installed
2023-06-16 14:29:35,542:INFO:           fairlearn: Not installed
2023-06-16 14:29:35,542:INFO:             xgboost: Not installed
2023-06-16 14:29:35,543:INFO:            catboost: Not installed
2023-06-16 14:29:35,543:INFO:              kmodes: Not installed
2023-06-16 14:29:35,543:INFO:             mlxtend: Not installed
2023-06-16 14:29:35,543:INFO:       statsforecast: Not installed
2023-06-16 14:29:35,543:INFO:        tune_sklearn: Not installed
2023-06-16 14:29:35,543:INFO:                 ray: Not installed
2023-06-16 14:29:35,543:INFO:            hyperopt: Not installed
2023-06-16 14:29:35,543:INFO:              optuna: Not installed
2023-06-16 14:29:35,543:INFO:               skopt: Not installed
2023-06-16 14:29:35,544:INFO:              mlflow: Not installed
2023-06-16 14:29:35,544:INFO:              gradio: Not installed
2023-06-16 14:29:35,544:INFO:             fastapi: Not installed
2023-06-16 14:29:35,544:INFO:             uvicorn: Not installed
2023-06-16 14:29:35,544:INFO:              m2cgen: Not installed
2023-06-16 14:29:35,544:INFO:           evidently: Not installed
2023-06-16 14:29:35,544:INFO:               fugue: Not installed
2023-06-16 14:29:35,545:INFO:           streamlit: Not installed
2023-06-16 14:29:35,545:INFO:             prophet: Not installed
2023-06-16 14:29:35,545:INFO:None
2023-06-16 14:29:35,545:INFO:Set up data.
2023-06-16 14:29:35,603:INFO:Set up train/test split.
2023-06-16 14:29:35,634:INFO:Set up index.
2023-06-16 14:29:35,635:INFO:Set up folding strategy.
2023-06-16 14:29:35,635:INFO:Assigning column types.
2023-06-16 14:29:35,647:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:29:35,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,787:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,823:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:29:35,881:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:35,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:35,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:36,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,005:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:29:36,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,175:INFO:Preparing preprocessing pipeline...
2023-06-16 14:29:36,177:INFO:Set up simple imputation.
2023-06-16 14:29:36,188:INFO:Set up encoding of ordinal features.
2023-06-16 14:29:36,199:INFO:Set up encoding of categorical features.
2023-06-16 14:29:36,199:INFO:Set up removing multicollinearity.
2023-06-16 14:29:36,199:INFO:Set up imbalanced handling.
2023-06-16 14:29:36,199:INFO:Set up feature selection.
2023-06-16 14:29:36,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:36,288:INFO:Set up column name cleaning.
2023-06-16 14:29:36,939:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:29:36,992:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=10,
                                                            score_func=<function f_classif at 0x000001CF6EB34B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:29:36,993:INFO:Creating final display dataframe.
2023-06-16 14:29:37,782:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 11)
5   Transformed train set shape       (51162, 11)
6    Transformed test set shape       (12356, 11)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected               0.6
25               Fold Generator   StratifiedKFold
26                  Fold Number                10
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              41e6
2023-06-16 14:29:37,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:37,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:37,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:37,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:37,987:INFO:setup() successfully completed in 2.72s...............
2023-06-16 14:29:45,252:INFO:PyCaret ClassificationExperiment
2023-06-16 14:29:45,252:INFO:Logging name: clf-default-name
2023-06-16 14:29:45,252:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:29:45,252:INFO:version 3.0.2
2023-06-16 14:29:45,252:INFO:Initializing setup()
2023-06-16 14:29:45,253:INFO:self.USI: cced
2023-06-16 14:29:45,253:INFO:self._variable_keys: {'gpu_param', 'X_train', 'log_plots_param', 'fix_imbalance', 'y', 'data', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'seed', 'fold_generator', 'fold_groups_param', '_ml_usecase', 'exp_name_log', 'X', 'idx', 'pipeline', 'html_param', 'exp_id', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'X_test', 'n_jobs_param', 'y_train', 'USI', 'logging_param', 'memory'}
2023-06-16 14:29:45,253:INFO:Checking environment
2023-06-16 14:29:45,253:INFO:python_version: 3.9.7
2023-06-16 14:29:45,253:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:29:45,253:INFO:machine: AMD64
2023-06-16 14:29:45,253:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:29:45,253:INFO:Memory: svmem(total=17120436224, available=4011737088, percent=76.6, used=13108699136, free=4011737088)
2023-06-16 14:29:45,253:INFO:Physical Core: 4
2023-06-16 14:29:45,253:INFO:Logical Core: 4
2023-06-16 14:29:45,253:INFO:Checking libraries
2023-06-16 14:29:45,253:INFO:System:
2023-06-16 14:29:45,253:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:29:45,253:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:29:45,253:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:29:45,253:INFO:PyCaret required dependencies:
2023-06-16 14:29:45,253:INFO:                 pip: 21.2.3
2023-06-16 14:29:45,254:INFO:          setuptools: 57.4.0
2023-06-16 14:29:45,254:INFO:             pycaret: 3.0.2
2023-06-16 14:29:45,254:INFO:             IPython: 7.28.0
2023-06-16 14:29:45,254:INFO:          ipywidgets: 8.0.6
2023-06-16 14:29:45,254:INFO:                tqdm: 4.64.0
2023-06-16 14:29:45,254:INFO:               numpy: 1.21.2
2023-06-16 14:29:45,254:INFO:              pandas: 1.3.5
2023-06-16 14:29:45,254:INFO:              jinja2: 3.1.2
2023-06-16 14:29:45,254:INFO:               scipy: 1.7.1
2023-06-16 14:29:45,254:INFO:              joblib: 1.2.0
2023-06-16 14:29:45,254:INFO:             sklearn: 1.1.0
2023-06-16 14:29:45,254:INFO:                pyod: 1.0.9
2023-06-16 14:29:45,254:INFO:            imblearn: 0.9.1
2023-06-16 14:29:45,254:INFO:   category_encoders: 2.6.1
2023-06-16 14:29:45,254:INFO:            lightgbm: 3.3.5
2023-06-16 14:29:45,254:INFO:               numba: 0.57.0
2023-06-16 14:29:45,254:INFO:            requests: 2.31.0
2023-06-16 14:29:45,254:INFO:          matplotlib: 3.4.3
2023-06-16 14:29:45,254:INFO:          scikitplot: 0.3.7
2023-06-16 14:29:45,254:INFO:         yellowbrick: 1.5
2023-06-16 14:29:45,254:INFO:              plotly: 5.8.0
2023-06-16 14:29:45,255:INFO:             kaleido: 0.2.1
2023-06-16 14:29:45,255:INFO:         statsmodels: 0.14.0
2023-06-16 14:29:45,255:INFO:              sktime: 0.17.0
2023-06-16 14:29:45,255:INFO:               tbats: 1.1.3
2023-06-16 14:29:45,255:INFO:            pmdarima: 2.0.3
2023-06-16 14:29:45,255:INFO:              psutil: 5.9.0
2023-06-16 14:29:45,255:INFO:PyCaret optional dependencies:
2023-06-16 14:29:45,255:INFO:                shap: Not installed
2023-06-16 14:29:45,255:INFO:           interpret: Not installed
2023-06-16 14:29:45,255:INFO:                umap: Not installed
2023-06-16 14:29:45,255:INFO:    pandas_profiling: Not installed
2023-06-16 14:29:45,255:INFO:  explainerdashboard: Not installed
2023-06-16 14:29:45,255:INFO:             autoviz: Not installed
2023-06-16 14:29:45,255:INFO:           fairlearn: Not installed
2023-06-16 14:29:45,255:INFO:             xgboost: Not installed
2023-06-16 14:29:45,255:INFO:            catboost: Not installed
2023-06-16 14:29:45,255:INFO:              kmodes: Not installed
2023-06-16 14:29:45,255:INFO:             mlxtend: Not installed
2023-06-16 14:29:45,255:INFO:       statsforecast: Not installed
2023-06-16 14:29:45,255:INFO:        tune_sklearn: Not installed
2023-06-16 14:29:45,256:INFO:                 ray: Not installed
2023-06-16 14:29:45,256:INFO:            hyperopt: Not installed
2023-06-16 14:29:45,256:INFO:              optuna: Not installed
2023-06-16 14:29:45,256:INFO:               skopt: Not installed
2023-06-16 14:29:45,256:INFO:              mlflow: Not installed
2023-06-16 14:29:45,256:INFO:              gradio: Not installed
2023-06-16 14:29:45,256:INFO:             fastapi: Not installed
2023-06-16 14:29:45,256:INFO:             uvicorn: Not installed
2023-06-16 14:29:45,256:INFO:              m2cgen: Not installed
2023-06-16 14:29:45,256:INFO:           evidently: Not installed
2023-06-16 14:29:45,256:INFO:               fugue: Not installed
2023-06-16 14:29:45,256:INFO:           streamlit: Not installed
2023-06-16 14:29:45,256:INFO:             prophet: Not installed
2023-06-16 14:29:45,256:INFO:None
2023-06-16 14:29:45,256:INFO:Set up data.
2023-06-16 14:29:45,312:INFO:Set up train/test split.
2023-06-16 14:29:45,334:INFO:Set up index.
2023-06-16 14:29:45,335:INFO:Set up folding strategy.
2023-06-16 14:29:45,335:INFO:Assigning column types.
2023-06-16 14:29:45,346:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:29:45,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,395:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,483:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,540:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:29:45,596:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:29:45,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,729:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:29:45,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:45,906:INFO:Preparing preprocessing pipeline...
2023-06-16 14:29:45,908:INFO:Set up simple imputation.
2023-06-16 14:29:45,921:INFO:Set up encoding of ordinal features.
2023-06-16 14:29:45,931:INFO:Set up encoding of categorical features.
2023-06-16 14:29:45,931:INFO:Set up removing multicollinearity.
2023-06-16 14:29:45,931:INFO:Set up imbalanced handling.
2023-06-16 14:29:45,931:INFO:Set up feature selection.
2023-06-16 14:29:46,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:46,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:46,017:INFO:Set up column name cleaning.
2023-06-16 14:29:46,506:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:29:46,556:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=11,
                                                            score_func=<function f_classif at 0x000001CF6EB34B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:29:46,556:INFO:Creating final display dataframe.
2023-06-16 14:29:47,332:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 12)
5   Transformed train set shape       (51162, 12)
6    Transformed test set shape       (12356, 12)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected               0.7
25               Fold Generator   StratifiedKFold
26                  Fold Number                10
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              cced
2023-06-16 14:29:47,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:47,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:47,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:47,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:29:47,590:INFO:setup() successfully completed in 2.54s...............
2023-06-16 14:30:16,655:INFO:Initializing compare_models()
2023-06-16 14:30:16,655:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, include=['lr', 'svm', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, 'include': ['lr', 'svm', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 14:30:16,655:INFO:Checking exceptions
2023-06-16 14:30:16,664:INFO:Preparing display monitor
2023-06-16 14:30:16,723:INFO:Initializing Logistic Regression
2023-06-16 14:30:16,723:INFO:Total runtime is 0.0 minutes
2023-06-16 14:30:16,728:INFO:SubProcess create_model() called ==================================
2023-06-16 14:30:16,728:INFO:Initializing create_model()
2023-06-16 14:30:16,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF714D1DF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:16,728:INFO:Checking exceptions
2023-06-16 14:30:16,728:INFO:Importing libraries
2023-06-16 14:30:16,728:INFO:Copying training dataset
2023-06-16 14:30:16,747:INFO:Defining folds
2023-06-16 14:30:16,747:INFO:Declaring metric variables
2023-06-16 14:30:16,755:INFO:Importing untrained model
2023-06-16 14:30:16,762:INFO:Logistic Regression Imported successfully
2023-06-16 14:30:16,771:INFO:Starting cross validation
2023-06-16 14:30:16,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:30:21,821:INFO:Calculating mean and std
2023-06-16 14:30:21,823:INFO:Creating metrics dataframe
2023-06-16 14:30:22,099:INFO:Uploading results into container
2023-06-16 14:30:22,100:INFO:Uploading model into container now
2023-06-16 14:30:22,100:INFO:_master_model_container: 1
2023-06-16 14:30:22,101:INFO:_display_container: 2
2023-06-16 14:30:22,101:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:30:22,101:INFO:create_model() successfully completed......................................
2023-06-16 14:30:22,179:INFO:SubProcess create_model() end ==================================
2023-06-16 14:30:22,179:INFO:Creating metrics dataframe
2023-06-16 14:30:22,196:INFO:Initializing SVM - Linear Kernel
2023-06-16 14:30:22,196:INFO:Total runtime is 0.09121680657068888 minutes
2023-06-16 14:30:22,202:INFO:SubProcess create_model() called ==================================
2023-06-16 14:30:22,202:INFO:Initializing create_model()
2023-06-16 14:30:22,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF714D1DF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:22,202:INFO:Checking exceptions
2023-06-16 14:30:22,203:INFO:Importing libraries
2023-06-16 14:30:22,203:INFO:Copying training dataset
2023-06-16 14:30:22,221:INFO:Defining folds
2023-06-16 14:30:22,221:INFO:Declaring metric variables
2023-06-16 14:30:22,225:INFO:Importing untrained model
2023-06-16 14:30:22,230:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 14:30:22,239:INFO:Starting cross validation
2023-06-16 14:30:22,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:30:23,654:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:23,724:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:23,730:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:23,742:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:25,421:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:25,457:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:25,555:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:25,566:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:26,765:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:26,941:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 14:30:27,024:INFO:Calculating mean and std
2023-06-16 14:30:27,027:INFO:Creating metrics dataframe
2023-06-16 14:30:27,312:INFO:Uploading results into container
2023-06-16 14:30:27,312:INFO:Uploading model into container now
2023-06-16 14:30:27,313:INFO:_master_model_container: 2
2023-06-16 14:30:27,313:INFO:_display_container: 2
2023-06-16 14:30:27,313:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 14:30:27,313:INFO:create_model() successfully completed......................................
2023-06-16 14:30:27,382:INFO:SubProcess create_model() end ==================================
2023-06-16 14:30:27,383:INFO:Creating metrics dataframe
2023-06-16 14:30:27,405:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 14:30:27,406:INFO:Total runtime is 0.17804996569951376 minutes
2023-06-16 14:30:27,410:INFO:SubProcess create_model() called ==================================
2023-06-16 14:30:27,410:INFO:Initializing create_model()
2023-06-16 14:30:27,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF714D1DF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:27,410:INFO:Checking exceptions
2023-06-16 14:30:27,410:INFO:Importing libraries
2023-06-16 14:30:27,410:INFO:Copying training dataset
2023-06-16 14:30:27,428:INFO:Defining folds
2023-06-16 14:30:27,428:INFO:Declaring metric variables
2023-06-16 14:30:27,432:INFO:Importing untrained model
2023-06-16 14:30:27,437:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:30:27,446:INFO:Starting cross validation
2023-06-16 14:30:27,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:30:33,439:INFO:Calculating mean and std
2023-06-16 14:30:33,443:INFO:Creating metrics dataframe
2023-06-16 14:30:33,736:INFO:Uploading results into container
2023-06-16 14:30:33,737:INFO:Uploading model into container now
2023-06-16 14:30:33,737:INFO:_master_model_container: 3
2023-06-16 14:30:33,737:INFO:_display_container: 2
2023-06-16 14:30:33,737:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:30:33,738:INFO:create_model() successfully completed......................................
2023-06-16 14:30:33,806:INFO:SubProcess create_model() end ==================================
2023-06-16 14:30:33,806:INFO:Creating metrics dataframe
2023-06-16 14:30:33,839:INFO:Initializing create_model()
2023-06-16 14:30:33,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:33,841:INFO:Checking exceptions
2023-06-16 14:30:33,844:INFO:Importing libraries
2023-06-16 14:30:33,844:INFO:Copying training dataset
2023-06-16 14:30:33,859:INFO:Defining folds
2023-06-16 14:30:33,859:INFO:Declaring metric variables
2023-06-16 14:30:33,859:INFO:Importing untrained model
2023-06-16 14:30:33,859:INFO:Declaring custom model
2023-06-16 14:30:33,860:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:30:33,862:INFO:Cross validation set to False
2023-06-16 14:30:33,862:INFO:Fitting Model
2023-06-16 14:30:34,865:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:30:34,866:INFO:create_model() successfully completed......................................
2023-06-16 14:30:34,952:INFO:Initializing create_model()
2023-06-16 14:30:34,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:34,952:INFO:Checking exceptions
2023-06-16 14:30:34,955:INFO:Importing libraries
2023-06-16 14:30:34,955:INFO:Copying training dataset
2023-06-16 14:30:34,969:INFO:Defining folds
2023-06-16 14:30:34,969:INFO:Declaring metric variables
2023-06-16 14:30:34,970:INFO:Importing untrained model
2023-06-16 14:30:34,970:INFO:Declaring custom model
2023-06-16 14:30:34,972:INFO:Logistic Regression Imported successfully
2023-06-16 14:30:34,976:INFO:Cross validation set to False
2023-06-16 14:30:34,976:INFO:Fitting Model
2023-06-16 14:30:35,827:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:30:35,827:INFO:create_model() successfully completed......................................
2023-06-16 14:30:35,908:INFO:Initializing create_model()
2023-06-16 14:30:35,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:30:35,909:INFO:Checking exceptions
2023-06-16 14:30:35,913:INFO:Importing libraries
2023-06-16 14:30:35,913:INFO:Copying training dataset
2023-06-16 14:30:35,931:INFO:Defining folds
2023-06-16 14:30:35,931:INFO:Declaring metric variables
2023-06-16 14:30:35,932:INFO:Importing untrained model
2023-06-16 14:30:35,932:INFO:Declaring custom model
2023-06-16 14:30:35,934:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 14:30:35,937:INFO:Cross validation set to False
2023-06-16 14:30:35,937:INFO:Fitting Model
2023-06-16 14:30:36,944:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 14:30:36,944:INFO:create_model() successfully completed......................................
2023-06-16 14:30:37,053:INFO:_master_model_container: 3
2023-06-16 14:30:37,053:INFO:_display_container: 2
2023-06-16 14:30:37,055:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 14:30:37,055:INFO:compare_models() successfully completed......................................
2023-06-16 14:30:40,747:INFO:Initializing evaluate_model()
2023-06-16 14:30:40,747:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:30:40,781:INFO:Initializing plot_model()
2023-06-16 14:30:40,781:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:30:40,781:INFO:Checking exceptions
2023-06-16 14:30:40,789:INFO:Preloading libraries
2023-06-16 14:30:40,810:INFO:Copying training dataset
2023-06-16 14:30:40,810:INFO:Plot type: pipeline
2023-06-16 14:30:41,079:INFO:Visual Rendered Successfully
2023-06-16 14:30:41,159:INFO:plot_model() successfully completed......................................
2023-06-16 14:30:42,882:INFO:Initializing plot_model()
2023-06-16 14:30:42,882:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:30:42,882:INFO:Checking exceptions
2023-06-16 14:30:42,888:INFO:Preloading libraries
2023-06-16 14:30:42,896:INFO:Copying training dataset
2023-06-16 14:30:42,896:INFO:Plot type: auc
2023-06-16 14:30:43,025:INFO:Fitting Model
2023-06-16 14:30:43,027:INFO:Scoring test/hold-out set
2023-06-16 14:30:43,246:INFO:Visual Rendered Successfully
2023-06-16 14:30:43,359:INFO:plot_model() successfully completed......................................
2023-06-16 14:30:48,959:INFO:Initializing plot_model()
2023-06-16 14:30:48,960:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:30:48,960:INFO:Checking exceptions
2023-06-16 14:30:48,967:INFO:Preloading libraries
2023-06-16 14:30:48,978:INFO:Copying training dataset
2023-06-16 14:30:48,978:INFO:Plot type: feature
2023-06-16 14:30:48,978:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 14:30:49,158:INFO:Visual Rendered Successfully
2023-06-16 14:30:49,228:INFO:plot_model() successfully completed......................................
2023-06-16 14:31:13,235:INFO:Initializing compare_models()
2023-06-16 14:31:13,236:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, include=['lr', 'rf', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, 'include': ['lr', 'rf', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 14:31:13,236:INFO:Checking exceptions
2023-06-16 14:31:13,242:INFO:Preparing display monitor
2023-06-16 14:31:13,302:INFO:Initializing Logistic Regression
2023-06-16 14:31:13,302:INFO:Total runtime is 0.0 minutes
2023-06-16 14:31:13,316:INFO:SubProcess create_model() called ==================================
2023-06-16 14:31:13,317:INFO:Initializing create_model()
2023-06-16 14:31:13,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF716CEB20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:31:13,317:INFO:Checking exceptions
2023-06-16 14:31:13,317:INFO:Importing libraries
2023-06-16 14:31:13,317:INFO:Copying training dataset
2023-06-16 14:31:13,363:INFO:Defining folds
2023-06-16 14:31:13,363:INFO:Declaring metric variables
2023-06-16 14:31:13,373:INFO:Importing untrained model
2023-06-16 14:31:13,380:INFO:Logistic Regression Imported successfully
2023-06-16 14:31:13,404:INFO:Starting cross validation
2023-06-16 14:31:13,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:31:17,524:INFO:Calculating mean and std
2023-06-16 14:31:17,526:INFO:Creating metrics dataframe
2023-06-16 14:31:17,844:INFO:Uploading results into container
2023-06-16 14:31:17,844:INFO:Uploading model into container now
2023-06-16 14:31:17,845:INFO:_master_model_container: 4
2023-06-16 14:31:17,845:INFO:_display_container: 3
2023-06-16 14:31:17,845:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:31:17,845:INFO:create_model() successfully completed......................................
2023-06-16 14:31:17,915:INFO:SubProcess create_model() end ==================================
2023-06-16 14:31:17,915:INFO:Creating metrics dataframe
2023-06-16 14:31:17,934:INFO:Initializing Random Forest Classifier
2023-06-16 14:31:17,934:INFO:Total runtime is 0.07720061937967936 minutes
2023-06-16 14:31:17,939:INFO:SubProcess create_model() called ==================================
2023-06-16 14:31:17,939:INFO:Initializing create_model()
2023-06-16 14:31:17,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF716CEB20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:31:17,940:INFO:Checking exceptions
2023-06-16 14:31:17,940:INFO:Importing libraries
2023-06-16 14:31:17,942:INFO:Copying training dataset
2023-06-16 14:31:17,961:INFO:Defining folds
2023-06-16 14:31:17,962:INFO:Declaring metric variables
2023-06-16 14:31:17,968:INFO:Importing untrained model
2023-06-16 14:31:17,973:INFO:Random Forest Classifier Imported successfully
2023-06-16 14:31:17,982:INFO:Starting cross validation
2023-06-16 14:31:17,984:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:35:15,165:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 14:39:50,478:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-16 14:39:53,164:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 14:40:09,109:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-16 14:42:29,483:INFO:Calculating mean and std
2023-06-16 14:42:29,485:INFO:Creating metrics dataframe
2023-06-16 14:42:29,854:INFO:Uploading results into container
2023-06-16 14:42:29,855:INFO:Uploading model into container now
2023-06-16 14:42:29,856:INFO:_master_model_container: 5
2023-06-16 14:42:29,856:INFO:_display_container: 3
2023-06-16 14:42:29,858:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 14:42:29,858:INFO:create_model() successfully completed......................................
2023-06-16 14:42:29,939:INFO:SubProcess create_model() end ==================================
2023-06-16 14:42:29,939:INFO:Creating metrics dataframe
2023-06-16 14:42:29,956:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 14:42:29,956:INFO:Total runtime is 11.277557877699534 minutes
2023-06-16 14:42:29,960:INFO:SubProcess create_model() called ==================================
2023-06-16 14:42:29,960:INFO:Initializing create_model()
2023-06-16 14:42:29,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CF716CEB20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:42:29,960:INFO:Checking exceptions
2023-06-16 14:42:29,961:INFO:Importing libraries
2023-06-16 14:42:29,961:INFO:Copying training dataset
2023-06-16 14:42:29,976:INFO:Defining folds
2023-06-16 14:42:29,977:INFO:Declaring metric variables
2023-06-16 14:42:29,981:INFO:Importing untrained model
2023-06-16 14:42:29,986:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:42:29,995:INFO:Starting cross validation
2023-06-16 14:42:29,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:42:33,364:INFO:Calculating mean and std
2023-06-16 14:42:33,365:INFO:Creating metrics dataframe
2023-06-16 14:42:33,718:INFO:Uploading results into container
2023-06-16 14:42:33,719:INFO:Uploading model into container now
2023-06-16 14:42:33,719:INFO:_master_model_container: 6
2023-06-16 14:42:33,719:INFO:_display_container: 3
2023-06-16 14:42:33,720:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:42:33,720:INFO:create_model() successfully completed......................................
2023-06-16 14:42:33,809:INFO:SubProcess create_model() end ==================================
2023-06-16 14:42:33,810:INFO:Creating metrics dataframe
2023-06-16 14:42:33,847:INFO:Initializing create_model()
2023-06-16 14:42:33,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:42:33,848:INFO:Checking exceptions
2023-06-16 14:42:33,852:INFO:Importing libraries
2023-06-16 14:42:33,852:INFO:Copying training dataset
2023-06-16 14:42:33,874:INFO:Defining folds
2023-06-16 14:42:33,874:INFO:Declaring metric variables
2023-06-16 14:42:33,874:INFO:Importing untrained model
2023-06-16 14:42:33,874:INFO:Declaring custom model
2023-06-16 14:42:33,875:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:42:33,878:INFO:Cross validation set to False
2023-06-16 14:42:33,878:INFO:Fitting Model
2023-06-16 14:42:34,638:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:42:34,638:INFO:create_model() successfully completed......................................
2023-06-16 14:42:34,732:INFO:Initializing create_model()
2023-06-16 14:42:34,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:42:34,732:INFO:Checking exceptions
2023-06-16 14:42:34,734:INFO:Importing libraries
2023-06-16 14:42:34,734:INFO:Copying training dataset
2023-06-16 14:42:34,754:INFO:Defining folds
2023-06-16 14:42:34,754:INFO:Declaring metric variables
2023-06-16 14:42:34,754:INFO:Importing untrained model
2023-06-16 14:42:34,754:INFO:Declaring custom model
2023-06-16 14:42:34,755:INFO:Random Forest Classifier Imported successfully
2023-06-16 14:42:34,757:INFO:Cross validation set to False
2023-06-16 14:42:34,757:INFO:Fitting Model
2023-06-16 14:44:06,456:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 14:44:06,456:INFO:create_model() successfully completed......................................
2023-06-16 14:44:06,535:INFO:Initializing create_model()
2023-06-16 14:44:06,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:44:06,535:INFO:Checking exceptions
2023-06-16 14:44:06,538:INFO:Importing libraries
2023-06-16 14:44:06,538:INFO:Copying training dataset
2023-06-16 14:44:06,554:INFO:Defining folds
2023-06-16 14:44:06,554:INFO:Declaring metric variables
2023-06-16 14:44:06,554:INFO:Importing untrained model
2023-06-16 14:44:06,554:INFO:Declaring custom model
2023-06-16 14:44:06,555:INFO:Logistic Regression Imported successfully
2023-06-16 14:44:06,557:INFO:Cross validation set to False
2023-06-16 14:44:06,557:INFO:Fitting Model
2023-06-16 14:44:07,331:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:44:07,331:INFO:create_model() successfully completed......................................
2023-06-16 14:44:07,480:INFO:_master_model_container: 6
2023-06-16 14:44:07,480:INFO:_display_container: 3
2023-06-16 14:44:07,482:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2023-06-16 14:44:07,482:INFO:compare_models() successfully completed......................................
2023-06-16 14:44:10,923:INFO:Initializing evaluate_model()
2023-06-16 14:44:10,924:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:44:10,958:INFO:Initializing plot_model()
2023-06-16 14:44:10,959:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:10,959:INFO:Checking exceptions
2023-06-16 14:44:10,965:INFO:Preloading libraries
2023-06-16 14:44:10,985:INFO:Copying training dataset
2023-06-16 14:44:10,985:INFO:Plot type: pipeline
2023-06-16 14:44:11,235:INFO:Visual Rendered Successfully
2023-06-16 14:44:11,304:INFO:plot_model() successfully completed......................................
2023-06-16 14:44:14,879:INFO:Initializing plot_model()
2023-06-16 14:44:14,879:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:14,879:INFO:Checking exceptions
2023-06-16 14:44:14,886:INFO:Preloading libraries
2023-06-16 14:44:14,897:INFO:Copying training dataset
2023-06-16 14:44:14,897:INFO:Plot type: auc
2023-06-16 14:44:15,029:INFO:Fitting Model
2023-06-16 14:44:15,030:INFO:Scoring test/hold-out set
2023-06-16 14:44:15,254:INFO:Visual Rendered Successfully
2023-06-16 14:44:15,349:INFO:plot_model() successfully completed......................................
2023-06-16 14:44:29,399:INFO:Initializing plot_model()
2023-06-16 14:44:29,399:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:29,399:INFO:Checking exceptions
2023-06-16 14:44:29,406:INFO:Preloading libraries
2023-06-16 14:44:29,439:INFO:Copying training dataset
2023-06-16 14:44:29,439:INFO:Plot type: feature
2023-06-16 14:44:29,439:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 14:44:29,619:INFO:Visual Rendered Successfully
2023-06-16 14:44:29,684:INFO:plot_model() successfully completed......................................
2023-06-16 14:44:45,051:INFO:Initializing evaluate_model()
2023-06-16 14:44:45,051:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 14:44:45,085:INFO:Initializing plot_model()
2023-06-16 14:44:45,085:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:45,085:INFO:Checking exceptions
2023-06-16 14:44:45,117:INFO:Preloading libraries
2023-06-16 14:44:45,151:INFO:Copying training dataset
2023-06-16 14:44:45,151:INFO:Plot type: pipeline
2023-06-16 14:44:45,330:INFO:Visual Rendered Successfully
2023-06-16 14:44:45,407:INFO:plot_model() successfully completed......................................
2023-06-16 14:44:48,413:INFO:Initializing plot_model()
2023-06-16 14:44:48,414:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:44:48,414:INFO:Checking exceptions
2023-06-16 14:44:48,444:INFO:Preloading libraries
2023-06-16 14:44:48,468:INFO:Copying training dataset
2023-06-16 14:44:48,468:INFO:Plot type: feature
2023-06-16 14:44:48,468:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 14:44:48,661:INFO:Visual Rendered Successfully
2023-06-16 14:44:48,727:INFO:plot_model() successfully completed......................................
2023-06-16 14:45:03,560:INFO:Initializing plot_model()
2023-06-16 14:45:03,561:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:45:03,561:INFO:Checking exceptions
2023-06-16 14:45:03,593:INFO:Preloading libraries
2023-06-16 14:45:03,616:INFO:Copying training dataset
2023-06-16 14:45:03,616:INFO:Plot type: feature_all
2023-06-16 14:45:03,653:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 14:45:03,869:INFO:Visual Rendered Successfully
2023-06-16 14:45:03,935:INFO:plot_model() successfully completed......................................
2023-06-16 14:45:14,728:INFO:Initializing plot_model()
2023-06-16 14:45:14,729:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:45:14,729:INFO:Checking exceptions
2023-06-16 14:45:14,796:INFO:Preloading libraries
2023-06-16 14:45:14,819:INFO:Copying training dataset
2023-06-16 14:45:14,819:INFO:Plot type: auc
2023-06-16 14:45:14,952:INFO:Fitting Model
2023-06-16 14:45:14,952:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 14:45:14,953:INFO:Scoring test/hold-out set
2023-06-16 14:45:15,261:INFO:Visual Rendered Successfully
2023-06-16 14:45:15,342:INFO:plot_model() successfully completed......................................
2023-06-16 14:45:25,447:INFO:Initializing plot_model()
2023-06-16 14:45:25,447:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CF75465070>, system=True)
2023-06-16 14:45:25,447:INFO:Checking exceptions
2023-06-16 14:45:25,476:INFO:Preloading libraries
2023-06-16 14:45:25,499:INFO:Copying training dataset
2023-06-16 14:45:25,499:INFO:Plot type: rfe
2023-06-16 14:45:25,637:INFO:Fitting Model
2023-06-16 14:51:11,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 14:51:11,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 14:51:11,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 14:51:11,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 14:51:12,220:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 14:51:12,746:INFO:PyCaret ClassificationExperiment
2023-06-16 14:51:12,746:INFO:Logging name: clf-default-name
2023-06-16 14:51:12,746:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:51:12,747:INFO:version 3.0.2
2023-06-16 14:51:12,747:INFO:Initializing setup()
2023-06-16 14:51:12,747:INFO:self.USI: ea5b
2023-06-16 14:51:12,747:INFO:self._variable_keys: {'data', 'X', 'gpu_param', 'exp_name_log', 'y_test', 'logging_param', 'log_plots_param', 'fold_shuffle_param', 'is_multiclass', 'y_train', 'y', 'X_test', 'pipeline', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', 'memory', 'fold_generator', '_available_plots', '_ml_usecase', 'fix_imbalance', 'X_train', 'seed', 'USI', 'target_param', 'n_jobs_param', 'idx'}
2023-06-16 14:51:12,747:INFO:Checking environment
2023-06-16 14:51:12,747:INFO:python_version: 3.9.7
2023-06-16 14:51:12,747:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:51:12,747:INFO:machine: AMD64
2023-06-16 14:51:12,747:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:51:12,747:INFO:Memory: svmem(total=17120436224, available=4845748224, percent=71.7, used=12274688000, free=4845748224)
2023-06-16 14:51:12,747:INFO:Physical Core: 4
2023-06-16 14:51:12,747:INFO:Logical Core: 4
2023-06-16 14:51:12,747:INFO:Checking libraries
2023-06-16 14:51:12,748:INFO:System:
2023-06-16 14:51:12,748:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:51:12,748:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:51:12,748:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:51:12,748:INFO:PyCaret required dependencies:
2023-06-16 14:51:12,748:INFO:                 pip: 21.2.3
2023-06-16 14:51:12,748:INFO:          setuptools: 57.4.0
2023-06-16 14:51:12,748:INFO:             pycaret: 3.0.2
2023-06-16 14:51:12,748:INFO:             IPython: 7.28.0
2023-06-16 14:51:12,748:INFO:          ipywidgets: 8.0.6
2023-06-16 14:51:12,748:INFO:                tqdm: 4.64.0
2023-06-16 14:51:12,748:INFO:               numpy: 1.21.2
2023-06-16 14:51:12,748:INFO:              pandas: 1.3.5
2023-06-16 14:51:12,748:INFO:              jinja2: 3.1.2
2023-06-16 14:51:12,748:INFO:               scipy: 1.7.1
2023-06-16 14:51:12,748:INFO:              joblib: 1.2.0
2023-06-16 14:51:12,749:INFO:             sklearn: 1.1.0
2023-06-16 14:51:12,749:INFO:                pyod: 1.0.9
2023-06-16 14:51:12,749:INFO:            imblearn: 0.9.1
2023-06-16 14:51:12,749:INFO:   category_encoders: 2.6.1
2023-06-16 14:51:12,749:INFO:            lightgbm: 3.3.5
2023-06-16 14:51:12,749:INFO:               numba: 0.57.0
2023-06-16 14:51:12,749:INFO:            requests: 2.31.0
2023-06-16 14:51:12,750:INFO:          matplotlib: 3.4.3
2023-06-16 14:51:12,750:INFO:          scikitplot: 0.3.7
2023-06-16 14:51:12,750:INFO:         yellowbrick: 1.5
2023-06-16 14:51:12,750:INFO:              plotly: 5.8.0
2023-06-16 14:51:12,750:INFO:             kaleido: 0.2.1
2023-06-16 14:51:12,750:INFO:         statsmodels: 0.14.0
2023-06-16 14:51:12,750:INFO:              sktime: 0.17.0
2023-06-16 14:51:12,750:INFO:               tbats: 1.1.3
2023-06-16 14:51:12,750:INFO:            pmdarima: 2.0.3
2023-06-16 14:51:12,750:INFO:              psutil: 5.9.0
2023-06-16 14:51:12,750:INFO:PyCaret optional dependencies:
2023-06-16 14:51:12,778:INFO:                shap: Not installed
2023-06-16 14:51:12,778:INFO:           interpret: Not installed
2023-06-16 14:51:12,778:INFO:                umap: Not installed
2023-06-16 14:51:12,778:INFO:    pandas_profiling: Not installed
2023-06-16 14:51:12,779:INFO:  explainerdashboard: Not installed
2023-06-16 14:51:12,779:INFO:             autoviz: Not installed
2023-06-16 14:51:12,779:INFO:           fairlearn: Not installed
2023-06-16 14:51:12,779:INFO:             xgboost: Not installed
2023-06-16 14:51:12,779:INFO:            catboost: Not installed
2023-06-16 14:51:12,779:INFO:              kmodes: Not installed
2023-06-16 14:51:12,779:INFO:             mlxtend: Not installed
2023-06-16 14:51:12,779:INFO:       statsforecast: Not installed
2023-06-16 14:51:12,779:INFO:        tune_sklearn: Not installed
2023-06-16 14:51:12,779:INFO:                 ray: Not installed
2023-06-16 14:51:12,779:INFO:            hyperopt: Not installed
2023-06-16 14:51:12,779:INFO:              optuna: Not installed
2023-06-16 14:51:12,779:INFO:               skopt: Not installed
2023-06-16 14:51:12,779:INFO:              mlflow: Not installed
2023-06-16 14:51:12,779:INFO:              gradio: Not installed
2023-06-16 14:51:12,779:INFO:             fastapi: Not installed
2023-06-16 14:51:12,779:INFO:             uvicorn: Not installed
2023-06-16 14:51:12,780:INFO:              m2cgen: Not installed
2023-06-16 14:51:12,780:INFO:           evidently: Not installed
2023-06-16 14:51:12,780:INFO:               fugue: Not installed
2023-06-16 14:51:12,780:INFO:           streamlit: Not installed
2023-06-16 14:51:12,780:INFO:             prophet: Not installed
2023-06-16 14:51:12,780:INFO:None
2023-06-16 14:51:12,780:INFO:Set up data.
2023-06-16 14:51:12,853:INFO:Set up train/test split.
2023-06-16 14:51:12,885:INFO:Set up index.
2023-06-16 14:51:12,886:INFO:Set up folding strategy.
2023-06-16 14:51:12,886:INFO:Assigning column types.
2023-06-16 14:51:12,900:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:51:12,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:51:12,961:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,114:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,115:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,154:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:51:13,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,289:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:13,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,320:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:51:13,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,497:INFO:Preparing preprocessing pipeline...
2023-06-16 14:51:13,499:INFO:Set up simple imputation.
2023-06-16 14:51:13,512:INFO:Set up encoding of ordinal features.
2023-06-16 14:51:13,522:INFO:Set up encoding of categorical features.
2023-06-16 14:51:13,522:INFO:Set up removing multicollinearity.
2023-06-16 14:51:13,522:INFO:Set up imbalanced handling.
2023-06-16 14:51:13,522:INFO:Set up feature selection.
2023-06-16 14:51:13,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:13,613:INFO:Set up column name cleaning.
2023-06-16 14:51:14,022:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:51:14,083:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=11,
                                                            score_func=<function f_classif at 0x000001C037544B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:51:14,084:INFO:Creating final display dataframe.
2023-06-16 14:51:14,231:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 12)
5   Transformed train set shape       (51162, 12)
6    Transformed test set shape       (12356, 12)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected               0.7
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              ea5b
2023-06-16 14:51:14,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:14,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:14,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:14,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:14,437:INFO:setup() successfully completed in 1.98s...............
2023-06-16 14:51:39,869:INFO:PyCaret ClassificationExperiment
2023-06-16 14:51:39,869:INFO:Logging name: clf-default-name
2023-06-16 14:51:39,869:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 14:51:39,869:INFO:version 3.0.2
2023-06-16 14:51:39,869:INFO:Initializing setup()
2023-06-16 14:51:39,869:INFO:self.USI: 1675
2023-06-16 14:51:39,871:INFO:self._variable_keys: {'data', 'X', 'gpu_param', 'exp_name_log', 'y_test', 'logging_param', 'log_plots_param', 'fold_shuffle_param', 'is_multiclass', 'y_train', 'y', 'X_test', 'pipeline', 'fold_groups_param', 'html_param', 'exp_id', 'gpu_n_jobs_param', 'memory', 'fold_generator', '_available_plots', '_ml_usecase', 'fix_imbalance', 'X_train', 'seed', 'USI', 'target_param', 'n_jobs_param', 'idx'}
2023-06-16 14:51:39,871:INFO:Checking environment
2023-06-16 14:51:39,871:INFO:python_version: 3.9.7
2023-06-16 14:51:39,871:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 14:51:39,871:INFO:machine: AMD64
2023-06-16 14:51:39,871:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 14:51:39,871:INFO:Memory: svmem(total=17120436224, available=4755058688, percent=72.2, used=12365377536, free=4755058688)
2023-06-16 14:51:39,871:INFO:Physical Core: 4
2023-06-16 14:51:39,871:INFO:Logical Core: 4
2023-06-16 14:51:39,871:INFO:Checking libraries
2023-06-16 14:51:39,871:INFO:System:
2023-06-16 14:51:39,871:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 14:51:39,871:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 14:51:39,871:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 14:51:39,871:INFO:PyCaret required dependencies:
2023-06-16 14:51:39,871:INFO:                 pip: 21.2.3
2023-06-16 14:51:39,871:INFO:          setuptools: 57.4.0
2023-06-16 14:51:39,871:INFO:             pycaret: 3.0.2
2023-06-16 14:51:39,871:INFO:             IPython: 7.28.0
2023-06-16 14:51:39,871:INFO:          ipywidgets: 8.0.6
2023-06-16 14:51:39,871:INFO:                tqdm: 4.64.0
2023-06-16 14:51:39,871:INFO:               numpy: 1.21.2
2023-06-16 14:51:39,871:INFO:              pandas: 1.3.5
2023-06-16 14:51:39,871:INFO:              jinja2: 3.1.2
2023-06-16 14:51:39,871:INFO:               scipy: 1.7.1
2023-06-16 14:51:39,871:INFO:              joblib: 1.2.0
2023-06-16 14:51:39,871:INFO:             sklearn: 1.1.0
2023-06-16 14:51:39,871:INFO:                pyod: 1.0.9
2023-06-16 14:51:39,871:INFO:            imblearn: 0.9.1
2023-06-16 14:51:39,871:INFO:   category_encoders: 2.6.1
2023-06-16 14:51:39,871:INFO:            lightgbm: 3.3.5
2023-06-16 14:51:39,873:INFO:               numba: 0.57.0
2023-06-16 14:51:39,873:INFO:            requests: 2.31.0
2023-06-16 14:51:39,873:INFO:          matplotlib: 3.4.3
2023-06-16 14:51:39,873:INFO:          scikitplot: 0.3.7
2023-06-16 14:51:39,873:INFO:         yellowbrick: 1.5
2023-06-16 14:51:39,873:INFO:              plotly: 5.8.0
2023-06-16 14:51:39,873:INFO:             kaleido: 0.2.1
2023-06-16 14:51:39,873:INFO:         statsmodels: 0.14.0
2023-06-16 14:51:39,873:INFO:              sktime: 0.17.0
2023-06-16 14:51:39,873:INFO:               tbats: 1.1.3
2023-06-16 14:51:39,873:INFO:            pmdarima: 2.0.3
2023-06-16 14:51:39,873:INFO:              psutil: 5.9.0
2023-06-16 14:51:39,873:INFO:PyCaret optional dependencies:
2023-06-16 14:51:39,873:INFO:                shap: Not installed
2023-06-16 14:51:39,873:INFO:           interpret: Not installed
2023-06-16 14:51:39,873:INFO:                umap: Not installed
2023-06-16 14:51:39,873:INFO:    pandas_profiling: Not installed
2023-06-16 14:51:39,873:INFO:  explainerdashboard: Not installed
2023-06-16 14:51:39,873:INFO:             autoviz: Not installed
2023-06-16 14:51:39,873:INFO:           fairlearn: Not installed
2023-06-16 14:51:39,873:INFO:             xgboost: Not installed
2023-06-16 14:51:39,874:INFO:            catboost: Not installed
2023-06-16 14:51:39,874:INFO:              kmodes: Not installed
2023-06-16 14:51:39,874:INFO:             mlxtend: Not installed
2023-06-16 14:51:39,874:INFO:       statsforecast: Not installed
2023-06-16 14:51:39,874:INFO:        tune_sklearn: Not installed
2023-06-16 14:51:39,874:INFO:                 ray: Not installed
2023-06-16 14:51:39,874:INFO:            hyperopt: Not installed
2023-06-16 14:51:39,874:INFO:              optuna: Not installed
2023-06-16 14:51:39,874:INFO:               skopt: Not installed
2023-06-16 14:51:39,874:INFO:              mlflow: Not installed
2023-06-16 14:51:39,874:INFO:              gradio: Not installed
2023-06-16 14:51:39,874:INFO:             fastapi: Not installed
2023-06-16 14:51:39,874:INFO:             uvicorn: Not installed
2023-06-16 14:51:39,874:INFO:              m2cgen: Not installed
2023-06-16 14:51:39,874:INFO:           evidently: Not installed
2023-06-16 14:51:39,874:INFO:               fugue: Not installed
2023-06-16 14:51:39,874:INFO:           streamlit: Not installed
2023-06-16 14:51:39,874:INFO:             prophet: Not installed
2023-06-16 14:51:39,874:INFO:None
2023-06-16 14:51:39,874:INFO:Set up data.
2023-06-16 14:51:39,935:INFO:Set up train/test split.
2023-06-16 14:51:39,962:INFO:Set up index.
2023-06-16 14:51:39,963:INFO:Set up folding strategy.
2023-06-16 14:51:39,964:INFO:Assigning column types.
2023-06-16 14:51:39,977:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 14:51:40,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,159:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,194:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 14:51:40,248:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,333:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 14:51:40,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,365:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 14:51:40,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,532:INFO:Preparing preprocessing pipeline...
2023-06-16 14:51:40,534:INFO:Set up simple imputation.
2023-06-16 14:51:40,545:INFO:Set up encoding of ordinal features.
2023-06-16 14:51:40,554:INFO:Set up encoding of categorical features.
2023-06-16 14:51:40,554:INFO:Set up removing multicollinearity.
2023-06-16 14:51:40,554:INFO:Set up imbalanced handling.
2023-06-16 14:51:40,554:INFO:Set up feature selection.
2023-06-16 14:51:40,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:40,643:INFO:Set up column name cleaning.
2023-06-16 14:51:41,168:INFO:Finished creating preprocessing pipeline.
2023-06-16 14:51:41,222:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001C037544B80>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 14:51:41,222:INFO:Creating final display dataframe.
2023-06-16 14:51:42,005:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              1675
2023-06-16 14:51:42,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:42,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:42,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:42,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 14:51:42,244:INFO:setup() successfully completed in 2.64s...............
2023-06-16 14:52:12,716:INFO:Initializing compare_models()
2023-06-16 14:52:12,716:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'rf', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'rf', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 14:52:12,716:INFO:Checking exceptions
2023-06-16 14:52:12,726:INFO:Preparing display monitor
2023-06-16 14:52:12,789:INFO:Initializing Logistic Regression
2023-06-16 14:52:12,789:INFO:Total runtime is 0.0 minutes
2023-06-16 14:52:12,794:INFO:SubProcess create_model() called ==================================
2023-06-16 14:52:12,794:INFO:Initializing create_model()
2023-06-16 14:52:12,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3AD9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:52:12,795:INFO:Checking exceptions
2023-06-16 14:52:12,795:INFO:Importing libraries
2023-06-16 14:52:12,795:INFO:Copying training dataset
2023-06-16 14:52:12,813:INFO:Defining folds
2023-06-16 14:52:12,814:INFO:Declaring metric variables
2023-06-16 14:52:12,818:INFO:Importing untrained model
2023-06-16 14:52:12,824:INFO:Logistic Regression Imported successfully
2023-06-16 14:52:12,833:INFO:Starting cross validation
2023-06-16 14:52:12,838:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:52:21,303:INFO:Calculating mean and std
2023-06-16 14:52:21,305:INFO:Creating metrics dataframe
2023-06-16 14:52:21,687:INFO:Uploading results into container
2023-06-16 14:52:21,687:INFO:Uploading model into container now
2023-06-16 14:52:21,688:INFO:_master_model_container: 1
2023-06-16 14:52:21,690:INFO:_display_container: 2
2023-06-16 14:52:21,691:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:52:21,691:INFO:create_model() successfully completed......................................
2023-06-16 14:52:21,811:INFO:SubProcess create_model() end ==================================
2023-06-16 14:52:21,811:INFO:Creating metrics dataframe
2023-06-16 14:52:21,826:INFO:Initializing Random Forest Classifier
2023-06-16 14:52:21,827:INFO:Total runtime is 0.1506347934405009 minutes
2023-06-16 14:52:21,831:INFO:SubProcess create_model() called ==================================
2023-06-16 14:52:21,831:INFO:Initializing create_model()
2023-06-16 14:52:21,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3AD9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:52:21,831:INFO:Checking exceptions
2023-06-16 14:52:21,832:INFO:Importing libraries
2023-06-16 14:52:21,832:INFO:Copying training dataset
2023-06-16 14:52:21,851:INFO:Defining folds
2023-06-16 14:52:21,851:INFO:Declaring metric variables
2023-06-16 14:52:21,857:INFO:Importing untrained model
2023-06-16 14:52:21,867:INFO:Random Forest Classifier Imported successfully
2023-06-16 14:52:21,877:INFO:Starting cross validation
2023-06-16 14:52:21,879:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:56:24,537:INFO:Calculating mean and std
2023-06-16 14:56:24,539:INFO:Creating metrics dataframe
2023-06-16 14:56:24,883:INFO:Uploading results into container
2023-06-16 14:56:24,884:INFO:Uploading model into container now
2023-06-16 14:56:24,884:INFO:_master_model_container: 2
2023-06-16 14:56:24,884:INFO:_display_container: 2
2023-06-16 14:56:24,885:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 14:56:24,885:INFO:create_model() successfully completed......................................
2023-06-16 14:56:24,952:INFO:SubProcess create_model() end ==================================
2023-06-16 14:56:24,952:INFO:Creating metrics dataframe
2023-06-16 14:56:24,968:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 14:56:24,968:INFO:Total runtime is 4.2029814918835955 minutes
2023-06-16 14:56:24,973:INFO:SubProcess create_model() called ==================================
2023-06-16 14:56:24,973:INFO:Initializing create_model()
2023-06-16 14:56:24,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3AD9D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:56:24,974:INFO:Checking exceptions
2023-06-16 14:56:24,974:INFO:Importing libraries
2023-06-16 14:56:24,974:INFO:Copying training dataset
2023-06-16 14:56:24,990:INFO:Defining folds
2023-06-16 14:56:24,991:INFO:Declaring metric variables
2023-06-16 14:56:24,995:INFO:Importing untrained model
2023-06-16 14:56:25,001:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:56:25,010:INFO:Starting cross validation
2023-06-16 14:56:25,013:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 14:56:29,238:INFO:Calculating mean and std
2023-06-16 14:56:29,241:INFO:Creating metrics dataframe
2023-06-16 14:56:29,654:INFO:Uploading results into container
2023-06-16 14:56:29,655:INFO:Uploading model into container now
2023-06-16 14:56:29,655:INFO:_master_model_container: 3
2023-06-16 14:56:29,655:INFO:_display_container: 2
2023-06-16 14:56:29,656:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:56:29,656:INFO:create_model() successfully completed......................................
2023-06-16 14:56:29,721:INFO:SubProcess create_model() end ==================================
2023-06-16 14:56:29,721:INFO:Creating metrics dataframe
2023-06-16 14:56:29,749:INFO:Initializing create_model()
2023-06-16 14:56:29,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:56:29,750:INFO:Checking exceptions
2023-06-16 14:56:29,752:INFO:Importing libraries
2023-06-16 14:56:29,753:INFO:Copying training dataset
2023-06-16 14:56:29,767:INFO:Defining folds
2023-06-16 14:56:29,767:INFO:Declaring metric variables
2023-06-16 14:56:29,768:INFO:Importing untrained model
2023-06-16 14:56:29,768:INFO:Declaring custom model
2023-06-16 14:56:29,769:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 14:56:29,771:INFO:Cross validation set to False
2023-06-16 14:56:29,771:INFO:Fitting Model
2023-06-16 14:56:30,846:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 14:56:30,846:INFO:create_model() successfully completed......................................
2023-06-16 14:56:30,928:INFO:Initializing create_model()
2023-06-16 14:56:30,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:56:30,931:INFO:Checking exceptions
2023-06-16 14:56:30,935:INFO:Importing libraries
2023-06-16 14:56:30,935:INFO:Copying training dataset
2023-06-16 14:56:30,952:INFO:Defining folds
2023-06-16 14:56:30,952:INFO:Declaring metric variables
2023-06-16 14:56:30,952:INFO:Importing untrained model
2023-06-16 14:56:30,952:INFO:Declaring custom model
2023-06-16 14:56:30,953:INFO:Random Forest Classifier Imported successfully
2023-06-16 14:56:30,955:INFO:Cross validation set to False
2023-06-16 14:56:30,955:INFO:Fitting Model
2023-06-16 14:58:01,629:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 14:58:01,629:INFO:create_model() successfully completed......................................
2023-06-16 14:58:01,721:INFO:Initializing create_model()
2023-06-16 14:58:01,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 14:58:01,722:INFO:Checking exceptions
2023-06-16 14:58:01,725:INFO:Importing libraries
2023-06-16 14:58:01,727:INFO:Copying training dataset
2023-06-16 14:58:01,765:INFO:Defining folds
2023-06-16 14:58:01,765:INFO:Declaring metric variables
2023-06-16 14:58:01,765:INFO:Importing untrained model
2023-06-16 14:58:01,766:INFO:Declaring custom model
2023-06-16 14:58:01,766:INFO:Logistic Regression Imported successfully
2023-06-16 14:58:01,768:INFO:Cross validation set to False
2023-06-16 14:58:01,768:INFO:Fitting Model
2023-06-16 14:58:02,941:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 14:58:02,941:INFO:create_model() successfully completed......................................
2023-06-16 14:58:03,058:INFO:_master_model_container: 3
2023-06-16 14:58:03,058:INFO:_display_container: 2
2023-06-16 14:58:03,060:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2023-06-16 14:58:03,060:INFO:compare_models() successfully completed......................................
2023-06-16 15:03:46,180:INFO:Initializing compare_models()
2023-06-16 15:03:46,180:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'lightgbm', 'svm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'lightgbm', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 15:03:46,180:INFO:Checking exceptions
2023-06-16 15:03:46,187:INFO:Preparing display monitor
2023-06-16 15:03:46,249:INFO:Initializing Logistic Regression
2023-06-16 15:03:46,249:INFO:Total runtime is 0.0 minutes
2023-06-16 15:03:46,287:INFO:SubProcess create_model() called ==================================
2023-06-16 15:03:46,287:INFO:Initializing create_model()
2023-06-16 15:03:46,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3C2BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:46,288:INFO:Checking exceptions
2023-06-16 15:03:46,288:INFO:Importing libraries
2023-06-16 15:03:46,288:INFO:Copying training dataset
2023-06-16 15:03:46,306:INFO:Defining folds
2023-06-16 15:03:46,306:INFO:Declaring metric variables
2023-06-16 15:03:46,313:INFO:Importing untrained model
2023-06-16 15:03:46,318:INFO:Logistic Regression Imported successfully
2023-06-16 15:03:46,332:INFO:Starting cross validation
2023-06-16 15:03:46,334:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:03:52,507:INFO:Calculating mean and std
2023-06-16 15:03:52,509:INFO:Creating metrics dataframe
2023-06-16 15:03:52,874:INFO:Uploading results into container
2023-06-16 15:03:52,875:INFO:Uploading model into container now
2023-06-16 15:03:52,875:INFO:_master_model_container: 4
2023-06-16 15:03:52,876:INFO:_display_container: 3
2023-06-16 15:03:52,876:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 15:03:52,876:INFO:create_model() successfully completed......................................
2023-06-16 15:03:52,948:INFO:SubProcess create_model() end ==================================
2023-06-16 15:03:52,948:INFO:Creating metrics dataframe
2023-06-16 15:03:52,963:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 15:03:52,963:INFO:Total runtime is 0.11190064748128255 minutes
2023-06-16 15:03:52,968:INFO:SubProcess create_model() called ==================================
2023-06-16 15:03:52,969:INFO:Initializing create_model()
2023-06-16 15:03:52,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3C2BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:52,969:INFO:Checking exceptions
2023-06-16 15:03:52,969:INFO:Importing libraries
2023-06-16 15:03:52,969:INFO:Copying training dataset
2023-06-16 15:03:52,984:INFO:Defining folds
2023-06-16 15:03:52,985:INFO:Declaring metric variables
2023-06-16 15:03:52,990:INFO:Importing untrained model
2023-06-16 15:03:52,995:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:03:53,004:INFO:Starting cross validation
2023-06-16 15:03:53,009:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:03:55,557:INFO:Calculating mean and std
2023-06-16 15:03:55,559:INFO:Creating metrics dataframe
2023-06-16 15:03:55,920:INFO:Uploading results into container
2023-06-16 15:03:55,921:INFO:Uploading model into container now
2023-06-16 15:03:55,922:INFO:_master_model_container: 5
2023-06-16 15:03:55,922:INFO:_display_container: 3
2023-06-16 15:03:55,923:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 15:03:55,923:INFO:create_model() successfully completed......................................
2023-06-16 15:03:55,988:INFO:SubProcess create_model() end ==================================
2023-06-16 15:03:55,988:INFO:Creating metrics dataframe
2023-06-16 15:03:56,006:INFO:Initializing SVM - Linear Kernel
2023-06-16 15:03:56,006:INFO:Total runtime is 0.16261679331461587 minutes
2023-06-16 15:03:56,012:INFO:SubProcess create_model() called ==================================
2023-06-16 15:03:56,012:INFO:Initializing create_model()
2023-06-16 15:03:56,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C02D3C2BE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:56,012:INFO:Checking exceptions
2023-06-16 15:03:56,012:INFO:Importing libraries
2023-06-16 15:03:56,012:INFO:Copying training dataset
2023-06-16 15:03:56,030:INFO:Defining folds
2023-06-16 15:03:56,030:INFO:Declaring metric variables
2023-06-16 15:03:56,035:INFO:Importing untrained model
2023-06-16 15:03:56,039:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 15:03:56,049:INFO:Starting cross validation
2023-06-16 15:03:56,052:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:03:57,309:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:57,323:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:57,335:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:57,368:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:58,700:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:03:58,712:INFO:Calculating mean and std
2023-06-16 15:03:58,715:INFO:Creating metrics dataframe
2023-06-16 15:03:59,081:INFO:Uploading results into container
2023-06-16 15:03:59,082:INFO:Uploading model into container now
2023-06-16 15:03:59,082:INFO:_master_model_container: 6
2023-06-16 15:03:59,082:INFO:_display_container: 3
2023-06-16 15:03:59,083:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 15:03:59,083:INFO:create_model() successfully completed......................................
2023-06-16 15:03:59,147:INFO:SubProcess create_model() end ==================================
2023-06-16 15:03:59,147:INFO:Creating metrics dataframe
2023-06-16 15:03:59,176:INFO:Initializing create_model()
2023-06-16 15:03:59,176:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:59,176:INFO:Checking exceptions
2023-06-16 15:03:59,178:INFO:Importing libraries
2023-06-16 15:03:59,178:INFO:Copying training dataset
2023-06-16 15:03:59,192:INFO:Defining folds
2023-06-16 15:03:59,192:INFO:Declaring metric variables
2023-06-16 15:03:59,193:INFO:Importing untrained model
2023-06-16 15:03:59,193:INFO:Declaring custom model
2023-06-16 15:03:59,193:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:03:59,196:INFO:Cross validation set to False
2023-06-16 15:03:59,196:INFO:Fitting Model
2023-06-16 15:03:59,889:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 15:03:59,889:INFO:create_model() successfully completed......................................
2023-06-16 15:03:59,959:INFO:Initializing create_model()
2023-06-16 15:03:59,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:03:59,960:INFO:Checking exceptions
2023-06-16 15:03:59,963:INFO:Importing libraries
2023-06-16 15:03:59,963:INFO:Copying training dataset
2023-06-16 15:03:59,977:INFO:Defining folds
2023-06-16 15:03:59,977:INFO:Declaring metric variables
2023-06-16 15:03:59,977:INFO:Importing untrained model
2023-06-16 15:03:59,977:INFO:Declaring custom model
2023-06-16 15:03:59,978:INFO:Logistic Regression Imported successfully
2023-06-16 15:03:59,980:INFO:Cross validation set to False
2023-06-16 15:03:59,980:INFO:Fitting Model
2023-06-16 15:04:00,683:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 15:04:00,683:INFO:create_model() successfully completed......................................
2023-06-16 15:04:00,754:INFO:Initializing create_model()
2023-06-16 15:04:00,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:04:00,755:INFO:Checking exceptions
2023-06-16 15:04:00,758:INFO:Importing libraries
2023-06-16 15:04:00,758:INFO:Copying training dataset
2023-06-16 15:04:00,773:INFO:Defining folds
2023-06-16 15:04:00,773:INFO:Declaring metric variables
2023-06-16 15:04:00,774:INFO:Importing untrained model
2023-06-16 15:04:00,774:INFO:Declaring custom model
2023-06-16 15:04:00,775:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 15:04:00,777:INFO:Cross validation set to False
2023-06-16 15:04:00,777:INFO:Fitting Model
2023-06-16 15:04:01,847:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 15:04:01,847:INFO:create_model() successfully completed......................................
2023-06-16 15:04:01,980:INFO:_master_model_container: 6
2023-06-16 15:04:01,981:INFO:_display_container: 3
2023-06-16 15:04:01,983:INFO:[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 15:04:01,983:INFO:compare_models() successfully completed......................................
2023-06-16 15:04:03,276:INFO:Initializing evaluate_model()
2023-06-16 15:04:03,276:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:04:03,312:INFO:Initializing plot_model()
2023-06-16 15:04:03,315:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:03,316:INFO:Checking exceptions
2023-06-16 15:04:03,322:INFO:Preloading libraries
2023-06-16 15:04:03,323:INFO:Copying training dataset
2023-06-16 15:04:03,323:INFO:Plot type: pipeline
2023-06-16 15:04:03,630:INFO:Visual Rendered Successfully
2023-06-16 15:04:03,698:INFO:plot_model() successfully completed......................................
2023-06-16 15:04:07,350:INFO:Initializing evaluate_model()
2023-06-16 15:04:07,350:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:04:07,382:INFO:Initializing plot_model()
2023-06-16 15:04:07,382:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:07,383:INFO:Checking exceptions
2023-06-16 15:04:07,389:INFO:Preloading libraries
2023-06-16 15:04:07,389:INFO:Copying training dataset
2023-06-16 15:04:07,389:INFO:Plot type: pipeline
2023-06-16 15:04:07,590:INFO:Visual Rendered Successfully
2023-06-16 15:04:07,705:INFO:plot_model() successfully completed......................................
2023-06-16 15:04:10,234:INFO:Initializing plot_model()
2023-06-16 15:04:10,234:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:10,234:INFO:Checking exceptions
2023-06-16 15:04:16,495:INFO:Initializing plot_model()
2023-06-16 15:04:16,495:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:16,495:INFO:Checking exceptions
2023-06-16 15:04:16,502:INFO:Preloading libraries
2023-06-16 15:04:16,502:INFO:Copying training dataset
2023-06-16 15:04:16,502:INFO:Plot type: feature
2023-06-16 15:04:16,727:INFO:Visual Rendered Successfully
2023-06-16 15:04:16,788:INFO:plot_model() successfully completed......................................
2023-06-16 15:04:21,825:INFO:Initializing evaluate_model()
2023-06-16 15:04:21,825:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:04:21,858:INFO:Initializing plot_model()
2023-06-16 15:04:21,860:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:21,861:INFO:Checking exceptions
2023-06-16 15:04:21,867:INFO:Preloading libraries
2023-06-16 15:04:21,910:INFO:Copying training dataset
2023-06-16 15:04:21,911:INFO:Plot type: pipeline
2023-06-16 15:04:22,214:INFO:Visual Rendered Successfully
2023-06-16 15:04:22,278:INFO:plot_model() successfully completed......................................
2023-06-16 15:04:24,045:INFO:Initializing plot_model()
2023-06-16 15:04:24,046:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:04:24,046:INFO:Checking exceptions
2023-06-16 15:04:24,053:INFO:Preloading libraries
2023-06-16 15:04:24,063:INFO:Copying training dataset
2023-06-16 15:04:24,063:INFO:Plot type: auc
2023-06-16 15:04:24,297:INFO:Fitting Model
2023-06-16 15:04:24,299:INFO:Scoring test/hold-out set
2023-06-16 15:04:24,610:INFO:Visual Rendered Successfully
2023-06-16 15:04:24,673:INFO:plot_model() successfully completed......................................
2023-06-16 15:17:38,987:INFO:Initializing plot_model()
2023-06-16 15:17:38,988:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:17:38,988:INFO:Checking exceptions
2023-06-16 15:17:38,995:INFO:Preloading libraries
2023-06-16 15:17:39,036:INFO:Copying training dataset
2023-06-16 15:17:39,037:INFO:Plot type: feature
2023-06-16 15:17:39,037:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 15:17:39,291:INFO:Visual Rendered Successfully
2023-06-16 15:17:39,434:INFO:plot_model() successfully completed......................................
2023-06-16 15:17:58,451:INFO:Initializing evaluate_model()
2023-06-16 15:17:58,451:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:17:58,482:INFO:Initializing plot_model()
2023-06-16 15:17:58,483:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:17:58,483:INFO:Checking exceptions
2023-06-16 15:17:58,491:INFO:Preloading libraries
2023-06-16 15:17:58,491:INFO:Copying training dataset
2023-06-16 15:17:58,491:INFO:Plot type: pipeline
2023-06-16 15:17:58,681:INFO:Visual Rendered Successfully
2023-06-16 15:17:58,752:INFO:plot_model() successfully completed......................................
2023-06-16 15:18:00,713:INFO:Initializing plot_model()
2023-06-16 15:18:00,713:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:18:00,713:INFO:Checking exceptions
2023-06-16 15:18:00,719:INFO:Preloading libraries
2023-06-16 15:18:00,719:INFO:Copying training dataset
2023-06-16 15:18:00,719:INFO:Plot type: feature
2023-06-16 15:18:00,936:INFO:Visual Rendered Successfully
2023-06-16 15:18:00,998:INFO:plot_model() successfully completed......................................
2023-06-16 15:18:14,168:INFO:Initializing plot_model()
2023-06-16 15:18:14,168:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:18:14,168:INFO:Checking exceptions
2023-06-16 15:18:14,174:INFO:Preloading libraries
2023-06-16 15:18:14,175:INFO:Copying training dataset
2023-06-16 15:18:14,175:INFO:Plot type: feature_all
2023-06-16 15:18:14,447:INFO:Visual Rendered Successfully
2023-06-16 15:18:14,511:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:23,681:INFO:Initializing plot_model()
2023-06-16 15:42:23,682:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:23,682:INFO:Checking exceptions
2023-06-16 15:42:23,689:INFO:Preloading libraries
2023-06-16 15:42:23,689:INFO:Copying training dataset
2023-06-16 15:42:23,689:INFO:Plot type: confusion_matrix
2023-06-16 15:42:23,938:INFO:Fitting Model
2023-06-16 15:42:23,939:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:23,940:INFO:Scoring test/hold-out set
2023-06-16 15:42:24,057:INFO:Visual Rendered Successfully
2023-06-16 15:42:24,166:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:25,438:INFO:Initializing plot_model()
2023-06-16 15:42:25,438:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:25,438:INFO:Checking exceptions
2023-06-16 15:42:25,445:INFO:Preloading libraries
2023-06-16 15:42:25,445:INFO:Copying training dataset
2023-06-16 15:42:25,445:INFO:Plot type: auc
2023-06-16 15:42:25,577:INFO:Fitting Model
2023-06-16 15:42:25,578:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:25,579:INFO:Scoring test/hold-out set
2023-06-16 15:42:25,761:INFO:Visual Rendered Successfully
2023-06-16 15:42:25,850:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:26,407:INFO:Initializing plot_model()
2023-06-16 15:42:26,407:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:26,407:INFO:Checking exceptions
2023-06-16 15:42:26,413:INFO:Preloading libraries
2023-06-16 15:42:26,413:INFO:Copying training dataset
2023-06-16 15:42:26,413:INFO:Plot type: parameter
2023-06-16 15:42:26,418:INFO:Visual Rendered Successfully
2023-06-16 15:42:26,497:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:41,126:INFO:Initializing plot_model()
2023-06-16 15:42:41,127:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:41,127:INFO:Checking exceptions
2023-06-16 15:42:41,134:INFO:Preloading libraries
2023-06-16 15:42:41,134:INFO:Copying training dataset
2023-06-16 15:42:41,134:INFO:Plot type: pr
2023-06-16 15:42:41,264:INFO:Fitting Model
2023-06-16 15:42:41,266:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:41,267:INFO:Scoring test/hold-out set
2023-06-16 15:42:41,410:INFO:Visual Rendered Successfully
2023-06-16 15:42:41,489:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:47,374:INFO:Initializing plot_model()
2023-06-16 15:42:47,374:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:47,374:INFO:Checking exceptions
2023-06-16 15:42:47,381:INFO:Preloading libraries
2023-06-16 15:42:47,382:INFO:Copying training dataset
2023-06-16 15:42:47,382:INFO:Plot type: error
2023-06-16 15:42:47,515:INFO:Fitting Model
2023-06-16 15:42:47,515:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:47,516:INFO:Scoring test/hold-out set
2023-06-16 15:42:47,665:INFO:Visual Rendered Successfully
2023-06-16 15:42:47,742:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:53,007:INFO:Initializing plot_model()
2023-06-16 15:42:53,007:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:53,007:INFO:Checking exceptions
2023-06-16 15:42:53,014:INFO:Preloading libraries
2023-06-16 15:42:53,014:INFO:Copying training dataset
2023-06-16 15:42:53,014:INFO:Plot type: class_report
2023-06-16 15:42:53,147:INFO:Fitting Model
2023-06-16 15:42:53,147:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 15:42:53,148:INFO:Scoring test/hold-out set
2023-06-16 15:42:53,408:INFO:Visual Rendered Successfully
2023-06-16 15:42:53,574:INFO:plot_model() successfully completed......................................
2023-06-16 15:42:57,950:INFO:Initializing plot_model()
2023-06-16 15:42:57,950:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:42:57,951:INFO:Checking exceptions
2023-06-16 15:42:57,958:INFO:Preloading libraries
2023-06-16 15:42:57,958:INFO:Copying training dataset
2023-06-16 15:42:57,958:INFO:Plot type: learning
2023-06-16 15:42:58,104:INFO:Fitting Model
2023-06-16 15:43:04,170:INFO:Visual Rendered Successfully
2023-06-16 15:43:04,249:INFO:plot_model() successfully completed......................................
2023-06-16 15:43:09,967:INFO:Initializing plot_model()
2023-06-16 15:43:09,967:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:43:09,967:INFO:Checking exceptions
2023-06-16 15:43:09,974:INFO:Preloading libraries
2023-06-16 15:43:09,974:INFO:Copying training dataset
2023-06-16 15:43:09,974:INFO:Plot type: pipeline
2023-06-16 15:43:10,141:INFO:Visual Rendered Successfully
2023-06-16 15:43:10,204:INFO:plot_model() successfully completed......................................
2023-06-16 15:44:50,608:INFO:Initializing evaluate_model()
2023-06-16 15:44:50,608:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 15:44:50,641:INFO:Initializing plot_model()
2023-06-16 15:44:50,641:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:44:50,642:INFO:Checking exceptions
2023-06-16 15:44:50,647:INFO:Preloading libraries
2023-06-16 15:44:50,667:INFO:Copying training dataset
2023-06-16 15:44:50,667:INFO:Plot type: pipeline
2023-06-16 15:44:50,881:INFO:Visual Rendered Successfully
2023-06-16 15:44:50,970:INFO:plot_model() successfully completed......................................
2023-06-16 15:44:51,915:INFO:Initializing plot_model()
2023-06-16 15:44:51,915:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 15:44:51,915:INFO:Checking exceptions
2023-06-16 15:44:51,921:INFO:Preloading libraries
2023-06-16 15:44:51,930:INFO:Copying training dataset
2023-06-16 15:44:51,930:INFO:Plot type: parameter
2023-06-16 15:44:51,936:INFO:Visual Rendered Successfully
2023-06-16 15:44:52,016:INFO:plot_model() successfully completed......................................
2023-06-16 15:48:30,454:INFO:Initializing stack_models()
2023-06-16 15:48:30,454:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator_list=[LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-06-16 15:48:30,454:INFO:Checking exceptions
2023-06-16 15:48:30,461:INFO:Defining meta model
2023-06-16 15:48:30,511:INFO:Getting model names
2023-06-16 15:48:30,512:INFO:[('Light Gradient Boosting Machine', LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)), ('Logistic Regression', LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)), ('SVM - Linear Kernel', SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False))]
2023-06-16 15:48:30,518:INFO:SubProcess create_model() called ==================================
2023-06-16 15:48:30,557:INFO:Initializing create_model()
2023-06-16 15:48:30,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=StackingClassifier(cv=5,
                   estimators=[('Light Gradient Boosting Machine',
                                LGBMClassifier(boosting_type='gbdt',
                                               class_weight=None,
                                               colsample_bytree=1.0,
                                               importance_type='split',
                                               learning_rate=0.1, max_depth=-1,
                                               min_child_samples=20,
                                               min_child_weight=0.001,
                                               min_split_gain=0.0,
                                               n_estimators=100, n_jobs=-1,
                                               num_leaves=31, objective=None,
                                               random_state=420, reg_alpha=0.0,
                                               re...
                                              validation_fraction=0.1,
                                              verbose=0, warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=420,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03B31BDF0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:48:30,557:INFO:Checking exceptions
2023-06-16 15:48:30,557:INFO:Importing libraries
2023-06-16 15:48:30,557:INFO:Copying training dataset
2023-06-16 15:48:30,594:INFO:Defining folds
2023-06-16 15:48:30,594:INFO:Declaring metric variables
2023-06-16 15:48:30,599:INFO:Importing untrained model
2023-06-16 15:48:30,599:INFO:Declaring custom model
2023-06-16 15:48:30,606:INFO:Stacking Classifier Imported successfully
2023-06-16 15:48:30,638:INFO:Starting cross validation
2023-06-16 15:48:30,640:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:48:53,957:INFO:Calculating mean and std
2023-06-16 15:48:53,958:INFO:Creating metrics dataframe
2023-06-16 15:48:53,968:INFO:Finalizing model
2023-06-16 15:48:58,928:INFO:Uploading results into container
2023-06-16 15:48:58,929:INFO:Uploading model into container now
2023-06-16 15:48:58,930:INFO:_master_model_container: 7
2023-06-16 15:48:58,930:INFO:_display_container: 4
2023-06-16 15:48:58,938:INFO:StackingClassifier(cv=5,
                   estimators=[('Light Gradient Boosting Machine',
                                LGBMClassifier(boosting_type='gbdt',
                                               class_weight=None,
                                               colsample_bytree=1.0,
                                               importance_type='split',
                                               learning_rate=0.1, max_depth=-1,
                                               min_child_samples=20,
                                               min_child_weight=0.001,
                                               min_split_gain=0.0,
                                               n_estimators=100, n_jobs=-1,
                                               num_leaves=31, objective=None,
                                               random_state=420, reg_alpha=0.0,
                                               re...
                                              validation_fraction=0.1,
                                              verbose=0, warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=420,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-06-16 15:48:58,938:INFO:create_model() successfully completed......................................
2023-06-16 15:48:59,032:INFO:SubProcess create_model() end ==================================
2023-06-16 15:48:59,047:INFO:_master_model_container: 7
2023-06-16 15:48:59,047:INFO:_display_container: 4
2023-06-16 15:48:59,052:INFO:StackingClassifier(cv=5,
                   estimators=[('Light Gradient Boosting Machine',
                                LGBMClassifier(boosting_type='gbdt',
                                               class_weight=None,
                                               colsample_bytree=1.0,
                                               importance_type='split',
                                               learning_rate=0.1, max_depth=-1,
                                               min_child_samples=20,
                                               min_child_weight=0.001,
                                               min_split_gain=0.0,
                                               n_estimators=100, n_jobs=-1,
                                               num_leaves=31, objective=None,
                                               random_state=420, reg_alpha=0.0,
                                               re...
                                              validation_fraction=0.1,
                                              verbose=0, warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=420,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-06-16 15:48:59,052:INFO:stack_models() successfully completed......................................
2023-06-16 15:51:46,106:ERROR:
'explainerdashboard' is a soft dependency and not included in the pycaret installation. Please run: `pip install explainerdashboard` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2023-06-16 15:54:35,296:INFO:Initializing create_model()
2023-06-16 15:54:35,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:35,297:INFO:Checking exceptions
2023-06-16 15:54:35,299:INFO:Importing libraries
2023-06-16 15:54:35,300:INFO:Copying training dataset
2023-06-16 15:54:35,319:INFO:Defining folds
2023-06-16 15:54:35,320:INFO:Declaring metric variables
2023-06-16 15:54:35,320:INFO:Importing untrained model
2023-06-16 15:54:35,320:INFO:Declaring custom model
2023-06-16 15:54:35,321:INFO:Logistic Regression Imported successfully
2023-06-16 15:54:35,322:INFO:Starting cross validation
2023-06-16 15:54:35,324:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:43,962:INFO:Calculating mean and std
2023-06-16 15:54:43,963:INFO:Creating metrics dataframe
2023-06-16 15:54:43,966:INFO:Finalizing model
2023-06-16 15:54:44,786:INFO:Uploading results into container
2023-06-16 15:54:44,787:INFO:_master_model_container: 7
2023-06-16 15:54:44,787:INFO:_display_container: 5
2023-06-16 15:54:44,787:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 15:54:44,787:INFO:create_model() successfully completed......................................
2023-06-16 15:54:44,874:INFO:Initializing create_model()
2023-06-16 15:54:44,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:44,875:INFO:Checking exceptions
2023-06-16 15:54:44,878:INFO:Importing libraries
2023-06-16 15:54:44,878:INFO:Copying training dataset
2023-06-16 15:54:44,893:INFO:Defining folds
2023-06-16 15:54:44,894:INFO:Declaring metric variables
2023-06-16 15:54:44,894:INFO:Importing untrained model
2023-06-16 15:54:44,894:INFO:Declaring custom model
2023-06-16 15:54:44,895:INFO:Random Forest Classifier Imported successfully
2023-06-16 15:54:44,896:INFO:Starting cross validation
2023-06-16 15:54:44,898:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:48,077:INFO:Calculating mean and std
2023-06-16 15:54:48,078:INFO:Creating metrics dataframe
2023-06-16 15:54:48,080:INFO:Finalizing model
2023-06-16 15:54:49,015:INFO:Uploading results into container
2023-06-16 15:54:49,016:INFO:_master_model_container: 7
2023-06-16 15:54:49,016:INFO:_display_container: 6
2023-06-16 15:54:49,016:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 15:54:49,016:INFO:create_model() successfully completed......................................
2023-06-16 15:54:49,095:INFO:Initializing create_model()
2023-06-16 15:54:49,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:49,096:INFO:Checking exceptions
2023-06-16 15:54:49,099:INFO:Importing libraries
2023-06-16 15:54:49,099:INFO:Copying training dataset
2023-06-16 15:54:49,115:INFO:Defining folds
2023-06-16 15:54:49,115:INFO:Declaring metric variables
2023-06-16 15:54:49,116:INFO:Importing untrained model
2023-06-16 15:54:49,116:INFO:Declaring custom model
2023-06-16 15:54:49,117:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:54:49,117:INFO:Starting cross validation
2023-06-16 15:54:49,119:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:51,449:INFO:Calculating mean and std
2023-06-16 15:54:51,450:INFO:Creating metrics dataframe
2023-06-16 15:54:51,452:INFO:Finalizing model
2023-06-16 15:54:52,219:INFO:Uploading results into container
2023-06-16 15:54:52,220:INFO:_master_model_container: 7
2023-06-16 15:54:52,221:INFO:_display_container: 7
2023-06-16 15:54:52,221:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 15:54:52,222:INFO:create_model() successfully completed......................................
2023-06-16 15:54:52,297:INFO:Initializing create_model()
2023-06-16 15:54:52,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:52,298:INFO:Checking exceptions
2023-06-16 15:54:52,303:INFO:Importing libraries
2023-06-16 15:54:52,303:INFO:Copying training dataset
2023-06-16 15:54:52,319:INFO:Defining folds
2023-06-16 15:54:52,319:INFO:Declaring metric variables
2023-06-16 15:54:52,320:INFO:Importing untrained model
2023-06-16 15:54:52,320:INFO:Declaring custom model
2023-06-16 15:54:52,320:INFO:Logistic Regression Imported successfully
2023-06-16 15:54:52,321:INFO:Starting cross validation
2023-06-16 15:54:52,323:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:54,937:INFO:Calculating mean and std
2023-06-16 15:54:54,937:INFO:Creating metrics dataframe
2023-06-16 15:54:54,940:INFO:Finalizing model
2023-06-16 15:54:55,718:INFO:Uploading results into container
2023-06-16 15:54:55,719:INFO:_master_model_container: 7
2023-06-16 15:54:55,719:INFO:_display_container: 8
2023-06-16 15:54:55,720:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 15:54:55,720:INFO:create_model() successfully completed......................................
2023-06-16 15:54:55,798:INFO:Initializing create_model()
2023-06-16 15:54:55,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:55,798:INFO:Checking exceptions
2023-06-16 15:54:55,801:INFO:Importing libraries
2023-06-16 15:54:55,801:INFO:Copying training dataset
2023-06-16 15:54:55,819:INFO:Defining folds
2023-06-16 15:54:55,819:INFO:Declaring metric variables
2023-06-16 15:54:55,819:INFO:Importing untrained model
2023-06-16 15:54:55,820:INFO:Declaring custom model
2023-06-16 15:54:55,822:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:54:55,823:INFO:Starting cross validation
2023-06-16 15:54:55,825:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:58,095:INFO:Calculating mean and std
2023-06-16 15:54:58,096:INFO:Creating metrics dataframe
2023-06-16 15:54:58,098:INFO:Finalizing model
2023-06-16 15:54:58,894:INFO:Uploading results into container
2023-06-16 15:54:58,895:INFO:_master_model_container: 7
2023-06-16 15:54:58,895:INFO:_display_container: 9
2023-06-16 15:54:58,896:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-16 15:54:58,896:INFO:create_model() successfully completed......................................
2023-06-16 15:54:58,977:INFO:Initializing create_model()
2023-06-16 15:54:58,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:54:58,977:INFO:Checking exceptions
2023-06-16 15:54:58,983:INFO:Importing libraries
2023-06-16 15:54:58,983:INFO:Copying training dataset
2023-06-16 15:54:58,998:INFO:Defining folds
2023-06-16 15:54:58,999:INFO:Declaring metric variables
2023-06-16 15:54:58,999:INFO:Importing untrained model
2023-06-16 15:54:58,999:INFO:Declaring custom model
2023-06-16 15:54:59,001:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 15:54:59,001:INFO:Starting cross validation
2023-06-16 15:54:59,004:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 15:54:59,574:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:54:59,583:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:54:59,589:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:54:59,598:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:55:00,578:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 15:55:00,973:INFO:Calculating mean and std
2023-06-16 15:55:00,974:INFO:Creating metrics dataframe
2023-06-16 15:55:00,976:INFO:Finalizing model
2023-06-16 15:55:01,737:INFO:Uploading results into container
2023-06-16 15:55:01,738:INFO:_master_model_container: 7
2023-06-16 15:55:01,738:INFO:_display_container: 10
2023-06-16 15:55:01,739:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 15:55:01,739:INFO:create_model() successfully completed......................................
2023-06-16 15:55:01,846:WARNING:c:\Program Files\Python39\lib\site-packages\pandas\core\internals\blocks.py:937: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr_value = np.asarray(value)

2023-06-16 16:45:31,945:INFO:Initializing evaluate_model()
2023-06-16 16:45:31,945:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 16:45:31,976:INFO:Initializing plot_model()
2023-06-16 16:45:31,976:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 16:45:31,976:INFO:Checking exceptions
2023-06-16 16:45:31,982:INFO:Preloading libraries
2023-06-16 16:45:32,053:INFO:Copying training dataset
2023-06-16 16:45:32,053:INFO:Plot type: pipeline
2023-06-16 16:45:32,286:INFO:Visual Rendered Successfully
2023-06-16 16:45:32,383:INFO:plot_model() successfully completed......................................
2023-06-16 16:45:51,710:INFO:Initializing plot_model()
2023-06-16 16:45:51,711:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 16:45:51,711:INFO:Checking exceptions
2023-06-16 16:45:51,718:INFO:Preloading libraries
2023-06-16 16:45:51,731:INFO:Copying training dataset
2023-06-16 16:45:51,731:INFO:Plot type: auc
2023-06-16 16:45:51,871:INFO:Fitting Model
2023-06-16 16:45:51,873:INFO:Scoring test/hold-out set
2023-06-16 16:45:52,110:INFO:Visual Rendered Successfully
2023-06-16 16:45:52,189:INFO:plot_model() successfully completed......................................
2023-06-16 16:52:04,288:INFO:Initializing plot_model()
2023-06-16 16:52:04,289:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 16:52:04,289:INFO:Checking exceptions
2023-06-16 16:52:04,296:INFO:Preloading libraries
2023-06-16 16:52:04,313:INFO:Copying training dataset
2023-06-16 16:52:04,313:INFO:Plot type: pr
2023-06-16 16:52:04,452:INFO:Fitting Model
2023-06-16 16:52:04,454:INFO:Scoring test/hold-out set
2023-06-16 16:52:04,646:INFO:Visual Rendered Successfully
2023-06-16 16:52:04,718:INFO:plot_model() successfully completed......................................
2023-06-16 16:52:41,865:INFO:Initializing plot_model()
2023-06-16 16:52:41,865:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 16:52:41,866:INFO:Checking exceptions
2023-06-16 16:52:41,871:INFO:Preloading libraries
2023-06-16 16:52:41,896:INFO:Copying training dataset
2023-06-16 16:52:41,896:INFO:Plot type: auc
2023-06-16 16:52:42,035:INFO:Fitting Model
2023-06-16 16:52:42,037:INFO:Scoring test/hold-out set
2023-06-16 16:52:42,255:INFO:Visual Rendered Successfully
2023-06-16 16:52:42,352:INFO:plot_model() successfully completed......................................
2023-06-16 17:06:25,006:INFO:Initializing plot_model()
2023-06-16 17:06:25,007:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:06:25,007:INFO:Checking exceptions
2023-06-16 17:06:25,014:INFO:Preloading libraries
2023-06-16 17:06:25,025:INFO:Copying training dataset
2023-06-16 17:06:25,025:INFO:Plot type: confusion_matrix
2023-06-16 17:06:29,995:INFO:Fitting Model
2023-06-16 17:06:29,996:INFO:Scoring test/hold-out set
2023-06-16 17:06:30,187:INFO:Visual Rendered Successfully
2023-06-16 17:06:30,300:INFO:plot_model() successfully completed......................................
2023-06-16 17:06:42,554:INFO:Initializing plot_model()
2023-06-16 17:06:42,554:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:06:42,554:INFO:Checking exceptions
2023-06-16 17:06:42,560:INFO:Preloading libraries
2023-06-16 17:06:42,574:INFO:Copying training dataset
2023-06-16 17:06:42,574:INFO:Plot type: threshold
2023-06-16 17:06:42,732:INFO:Fitting Model
2023-06-16 17:07:41,943:INFO:Scoring test/hold-out set
2023-06-16 17:07:42,559:INFO:Visual Rendered Successfully
2023-06-16 17:07:42,660:INFO:plot_model() successfully completed......................................
2023-06-16 17:07:42,670:INFO:Initializing optimize_threshold()
2023-06-16 17:07:42,671:INFO:optimize_threshold(return_data=False, plot_kwargs=None, shgo_kwargs={}, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), optimize=Accuracy, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>)
2023-06-16 17:07:42,671:INFO:Importing libraries
2023-06-16 17:07:42,671:INFO:Checking exceptions
2023-06-16 17:07:42,671:INFO:defining variables
2023-06-16 17:07:42,671:INFO:starting optimization
2023-06-16 17:07:42,768:INFO:Initializing create_model()
2023-06-16 17:07:42,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:07:42,769:INFO:Checking exceptions
2023-06-16 17:07:42,771:INFO:Importing libraries
2023-06-16 17:07:42,771:INFO:Copying training dataset
2023-06-16 17:07:42,819:INFO:Defining folds
2023-06-16 17:07:42,819:INFO:Declaring metric variables
2023-06-16 17:07:42,819:INFO:Importing untrained model
2023-06-16 17:07:42,819:INFO:Declaring custom model
2023-06-16 17:07:42,820:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:07:42,821:INFO:Starting cross validation
2023-06-16 17:07:42,823:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:07:54,595:INFO:Calculating mean and std
2023-06-16 17:07:54,595:INFO:Creating metrics dataframe
2023-06-16 17:07:54,598:INFO:Finalizing model
2023-06-16 17:07:56,048:INFO:Uploading results into container
2023-06-16 17:07:56,048:INFO:Uploading model into container now
2023-06-16 17:07:56,049:INFO:_master_model_container: 8
2023-06-16 17:07:56,049:INFO:_display_container: 11
2023-06-16 17:07:56,051:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.0,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:07:56,051:INFO:create_model() successfully completed......................................
2023-06-16 17:07:56,135:INFO:Initializing create_model()
2023-06-16 17:07:56,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:07:56,136:INFO:Checking exceptions
2023-06-16 17:07:56,138:INFO:Importing libraries
2023-06-16 17:07:56,139:INFO:Copying training dataset
2023-06-16 17:07:56,155:INFO:Defining folds
2023-06-16 17:07:56,155:INFO:Declaring metric variables
2023-06-16 17:07:56,155:INFO:Importing untrained model
2023-06-16 17:07:56,155:INFO:Declaring custom model
2023-06-16 17:07:56,158:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:07:56,158:INFO:Starting cross validation
2023-06-16 17:07:56,160:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:00,645:INFO:Calculating mean and std
2023-06-16 17:08:00,646:INFO:Creating metrics dataframe
2023-06-16 17:08:00,649:INFO:Finalizing model
2023-06-16 17:08:02,154:INFO:Uploading results into container
2023-06-16 17:08:02,155:INFO:Uploading model into container now
2023-06-16 17:08:02,155:INFO:_master_model_container: 9
2023-06-16 17:08:02,155:INFO:_display_container: 11
2023-06-16 17:08:02,157:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.5,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:02,157:INFO:create_model() successfully completed......................................
2023-06-16 17:08:02,239:INFO:Initializing create_model()
2023-06-16 17:08:02,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.75, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:02,240:INFO:Checking exceptions
2023-06-16 17:08:02,242:INFO:Importing libraries
2023-06-16 17:08:02,242:INFO:Copying training dataset
2023-06-16 17:08:02,262:INFO:Defining folds
2023-06-16 17:08:02,262:INFO:Declaring metric variables
2023-06-16 17:08:02,263:INFO:Importing untrained model
2023-06-16 17:08:02,263:INFO:Declaring custom model
2023-06-16 17:08:02,264:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:02,264:INFO:Starting cross validation
2023-06-16 17:08:02,266:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:06,578:INFO:Calculating mean and std
2023-06-16 17:08:06,579:INFO:Creating metrics dataframe
2023-06-16 17:08:06,582:INFO:Finalizing model
2023-06-16 17:08:07,987:INFO:Uploading results into container
2023-06-16 17:08:07,987:INFO:Uploading model into container now
2023-06-16 17:08:07,988:INFO:_master_model_container: 10
2023-06-16 17:08:07,988:INFO:_display_container: 11
2023-06-16 17:08:07,992:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.75,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:07,992:INFO:create_model() successfully completed......................................
2023-06-16 17:08:08,069:INFO:Initializing create_model()
2023-06-16 17:08:08,069:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:08,069:INFO:Checking exceptions
2023-06-16 17:08:08,072:INFO:Importing libraries
2023-06-16 17:08:08,072:INFO:Copying training dataset
2023-06-16 17:08:08,088:INFO:Defining folds
2023-06-16 17:08:08,088:INFO:Declaring metric variables
2023-06-16 17:08:08,089:INFO:Importing untrained model
2023-06-16 17:08:08,089:INFO:Declaring custom model
2023-06-16 17:08:08,090:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:08,090:INFO:Starting cross validation
2023-06-16 17:08:08,092:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:13,031:INFO:Calculating mean and std
2023-06-16 17:08:13,032:INFO:Creating metrics dataframe
2023-06-16 17:08:13,035:INFO:Finalizing model
2023-06-16 17:08:15,731:INFO:Uploading results into container
2023-06-16 17:08:15,732:INFO:Uploading model into container now
2023-06-16 17:08:15,732:INFO:_master_model_container: 11
2023-06-16 17:08:15,732:INFO:_display_container: 11
2023-06-16 17:08:15,734:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.25,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:15,734:INFO:create_model() successfully completed......................................
2023-06-16 17:08:15,876:INFO:Initializing create_model()
2023-06-16 17:08:15,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:15,876:INFO:Checking exceptions
2023-06-16 17:08:15,885:INFO:Importing libraries
2023-06-16 17:08:15,885:INFO:Copying training dataset
2023-06-16 17:08:15,917:INFO:Defining folds
2023-06-16 17:08:15,917:INFO:Declaring metric variables
2023-06-16 17:08:15,918:INFO:Importing untrained model
2023-06-16 17:08:15,918:INFO:Declaring custom model
2023-06-16 17:08:15,921:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:15,922:INFO:Starting cross validation
2023-06-16 17:08:15,924:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:21,805:INFO:Calculating mean and std
2023-06-16 17:08:21,805:INFO:Creating metrics dataframe
2023-06-16 17:08:21,808:INFO:Finalizing model
2023-06-16 17:08:23,066:INFO:Uploading results into container
2023-06-16 17:08:23,067:INFO:Uploading model into container now
2023-06-16 17:08:23,067:INFO:_master_model_container: 12
2023-06-16 17:08:23,067:INFO:_display_container: 11
2023-06-16 17:08:23,069:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:23,069:INFO:create_model() successfully completed......................................
2023-06-16 17:08:23,137:INFO:Initializing create_model()
2023-06-16 17:08:23,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:23,137:INFO:Checking exceptions
2023-06-16 17:08:23,139:INFO:Importing libraries
2023-06-16 17:08:23,139:INFO:Copying training dataset
2023-06-16 17:08:23,156:INFO:Defining folds
2023-06-16 17:08:23,156:INFO:Declaring metric variables
2023-06-16 17:08:23,156:INFO:Importing untrained model
2023-06-16 17:08:23,156:INFO:Declaring custom model
2023-06-16 17:08:23,157:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:23,158:INFO:Starting cross validation
2023-06-16 17:08:23,160:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:27,276:INFO:Calculating mean and std
2023-06-16 17:08:27,277:INFO:Creating metrics dataframe
2023-06-16 17:08:27,279:INFO:Finalizing model
2023-06-16 17:08:28,456:INFO:Uploading results into container
2023-06-16 17:08:28,457:INFO:Uploading model into container now
2023-06-16 17:08:28,457:INFO:_master_model_container: 13
2023-06-16 17:08:28,457:INFO:_display_container: 11
2023-06-16 17:08:28,459:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:28,459:INFO:create_model() successfully completed......................................
2023-06-16 17:08:28,531:INFO:Initializing create_model()
2023-06-16 17:08:28,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:28,532:INFO:Checking exceptions
2023-06-16 17:08:28,533:INFO:Importing libraries
2023-06-16 17:08:28,533:INFO:Copying training dataset
2023-06-16 17:08:28,547:INFO:Defining folds
2023-06-16 17:08:28,547:INFO:Declaring metric variables
2023-06-16 17:08:28,548:INFO:Importing untrained model
2023-06-16 17:08:28,548:INFO:Declaring custom model
2023-06-16 17:08:28,549:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:28,549:INFO:Starting cross validation
2023-06-16 17:08:28,551:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:32,529:INFO:Calculating mean and std
2023-06-16 17:08:32,529:INFO:Creating metrics dataframe
2023-06-16 17:08:32,532:INFO:Finalizing model
2023-06-16 17:08:33,696:INFO:Uploading results into container
2023-06-16 17:08:33,697:INFO:Uploading model into container now
2023-06-16 17:08:33,697:INFO:_master_model_container: 14
2023-06-16 17:08:33,697:INFO:_display_container: 11
2023-06-16 17:08:33,699:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:33,699:INFO:create_model() successfully completed......................................
2023-06-16 17:08:33,769:INFO:Initializing create_model()
2023-06-16 17:08:33,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:33,769:INFO:Checking exceptions
2023-06-16 17:08:33,771:INFO:Importing libraries
2023-06-16 17:08:33,772:INFO:Copying training dataset
2023-06-16 17:08:33,786:INFO:Defining folds
2023-06-16 17:08:33,786:INFO:Declaring metric variables
2023-06-16 17:08:33,786:INFO:Importing untrained model
2023-06-16 17:08:33,787:INFO:Declaring custom model
2023-06-16 17:08:33,787:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:33,788:INFO:Starting cross validation
2023-06-16 17:08:33,790:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:37,574:INFO:Calculating mean and std
2023-06-16 17:08:37,575:INFO:Creating metrics dataframe
2023-06-16 17:08:37,578:INFO:Finalizing model
2023-06-16 17:08:40,644:INFO:Uploading results into container
2023-06-16 17:08:40,645:INFO:Uploading model into container now
2023-06-16 17:08:40,645:INFO:_master_model_container: 15
2023-06-16 17:08:40,645:INFO:_display_container: 11
2023-06-16 17:08:40,647:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:40,647:INFO:create_model() successfully completed......................................
2023-06-16 17:08:40,722:INFO:Initializing create_model()
2023-06-16 17:08:40,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.1875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:40,722:INFO:Checking exceptions
2023-06-16 17:08:40,724:INFO:Importing libraries
2023-06-16 17:08:40,724:INFO:Copying training dataset
2023-06-16 17:08:40,740:INFO:Defining folds
2023-06-16 17:08:40,740:INFO:Declaring metric variables
2023-06-16 17:08:40,740:INFO:Importing untrained model
2023-06-16 17:08:40,740:INFO:Declaring custom model
2023-06-16 17:08:40,741:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:40,742:INFO:Starting cross validation
2023-06-16 17:08:40,744:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:45,508:INFO:Calculating mean and std
2023-06-16 17:08:45,508:INFO:Creating metrics dataframe
2023-06-16 17:08:45,512:INFO:Finalizing model
2023-06-16 17:08:47,977:INFO:Uploading results into container
2023-06-16 17:08:47,978:INFO:Uploading model into container now
2023-06-16 17:08:47,978:INFO:_master_model_container: 16
2023-06-16 17:08:47,978:INFO:_display_container: 11
2023-06-16 17:08:47,980:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.1875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:47,980:INFO:create_model() successfully completed......................................
2023-06-16 17:08:48,051:INFO:Initializing create_model()
2023-06-16 17:08:48,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.6875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:48,051:INFO:Checking exceptions
2023-06-16 17:08:48,053:INFO:Importing libraries
2023-06-16 17:08:48,054:INFO:Copying training dataset
2023-06-16 17:08:48,070:INFO:Defining folds
2023-06-16 17:08:48,070:INFO:Declaring metric variables
2023-06-16 17:08:48,070:INFO:Importing untrained model
2023-06-16 17:08:48,070:INFO:Declaring custom model
2023-06-16 17:08:48,071:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:48,072:INFO:Starting cross validation
2023-06-16 17:08:48,074:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:51,587:INFO:Calculating mean and std
2023-06-16 17:08:51,588:INFO:Creating metrics dataframe
2023-06-16 17:08:51,590:INFO:Finalizing model
2023-06-16 17:08:52,751:INFO:Uploading results into container
2023-06-16 17:08:52,751:INFO:Uploading model into container now
2023-06-16 17:08:52,752:INFO:_master_model_container: 17
2023-06-16 17:08:52,752:INFO:_display_container: 11
2023-06-16 17:08:52,753:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.6875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:52,753:INFO:create_model() successfully completed......................................
2023-06-16 17:08:52,824:INFO:Initializing create_model()
2023-06-16 17:08:52,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.9375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:52,824:INFO:Checking exceptions
2023-06-16 17:08:52,825:INFO:Importing libraries
2023-06-16 17:08:52,826:INFO:Copying training dataset
2023-06-16 17:08:52,839:INFO:Defining folds
2023-06-16 17:08:52,839:INFO:Declaring metric variables
2023-06-16 17:08:52,840:INFO:Importing untrained model
2023-06-16 17:08:52,840:INFO:Declaring custom model
2023-06-16 17:08:52,841:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:52,842:INFO:Starting cross validation
2023-06-16 17:08:52,844:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:08:56,933:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:08:56,942:INFO:Calculating mean and std
2023-06-16 17:08:56,942:INFO:Creating metrics dataframe
2023-06-16 17:08:56,945:INFO:Finalizing model
2023-06-16 17:08:58,126:INFO:Uploading results into container
2023-06-16 17:08:58,127:INFO:Uploading model into container now
2023-06-16 17:08:58,127:INFO:_master_model_container: 18
2023-06-16 17:08:58,127:INFO:_display_container: 11
2023-06-16 17:08:58,129:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.9375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:08:58,129:INFO:create_model() successfully completed......................................
2023-06-16 17:08:58,198:INFO:Initializing create_model()
2023-06-16 17:08:58,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.4375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:08:58,198:INFO:Checking exceptions
2023-06-16 17:08:58,200:INFO:Importing libraries
2023-06-16 17:08:58,200:INFO:Copying training dataset
2023-06-16 17:08:58,214:INFO:Defining folds
2023-06-16 17:08:58,214:INFO:Declaring metric variables
2023-06-16 17:08:58,215:INFO:Importing untrained model
2023-06-16 17:08:58,215:INFO:Declaring custom model
2023-06-16 17:08:58,216:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:08:58,217:INFO:Starting cross validation
2023-06-16 17:08:58,218:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:01,957:INFO:Calculating mean and std
2023-06-16 17:09:01,957:INFO:Creating metrics dataframe
2023-06-16 17:09:01,960:INFO:Finalizing model
2023-06-16 17:09:03,226:INFO:Uploading results into container
2023-06-16 17:09:03,227:INFO:Uploading model into container now
2023-06-16 17:09:03,227:INFO:_master_model_container: 19
2023-06-16 17:09:03,227:INFO:_display_container: 11
2023-06-16 17:09:03,229:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.4375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:03,230:INFO:create_model() successfully completed......................................
2023-06-16 17:09:03,298:INFO:Initializing create_model()
2023-06-16 17:09:03,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.3125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:03,298:INFO:Checking exceptions
2023-06-16 17:09:03,300:INFO:Importing libraries
2023-06-16 17:09:03,300:INFO:Copying training dataset
2023-06-16 17:09:03,316:INFO:Defining folds
2023-06-16 17:09:03,316:INFO:Declaring metric variables
2023-06-16 17:09:03,316:INFO:Importing untrained model
2023-06-16 17:09:03,316:INFO:Declaring custom model
2023-06-16 17:09:03,317:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:03,317:INFO:Starting cross validation
2023-06-16 17:09:03,319:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:07,222:INFO:Calculating mean and std
2023-06-16 17:09:07,222:INFO:Creating metrics dataframe
2023-06-16 17:09:07,225:INFO:Finalizing model
2023-06-16 17:09:08,513:INFO:Uploading results into container
2023-06-16 17:09:08,514:INFO:Uploading model into container now
2023-06-16 17:09:08,514:INFO:_master_model_container: 20
2023-06-16 17:09:08,514:INFO:_display_container: 11
2023-06-16 17:09:08,516:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.3125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:08,516:INFO:create_model() successfully completed......................................
2023-06-16 17:09:08,611:INFO:Initializing create_model()
2023-06-16 17:09:08,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.8125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:08,611:INFO:Checking exceptions
2023-06-16 17:09:08,614:INFO:Importing libraries
2023-06-16 17:09:08,614:INFO:Copying training dataset
2023-06-16 17:09:08,639:INFO:Defining folds
2023-06-16 17:09:08,639:INFO:Declaring metric variables
2023-06-16 17:09:08,640:INFO:Importing untrained model
2023-06-16 17:09:08,640:INFO:Declaring custom model
2023-06-16 17:09:08,641:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:08,644:INFO:Starting cross validation
2023-06-16 17:09:08,646:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:12,676:INFO:Calculating mean and std
2023-06-16 17:09:12,677:INFO:Creating metrics dataframe
2023-06-16 17:09:12,680:INFO:Finalizing model
2023-06-16 17:09:14,315:INFO:Uploading results into container
2023-06-16 17:09:14,315:INFO:Uploading model into container now
2023-06-16 17:09:14,316:INFO:_master_model_container: 21
2023-06-16 17:09:14,316:INFO:_display_container: 11
2023-06-16 17:09:14,317:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.8125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:14,317:INFO:create_model() successfully completed......................................
2023-06-16 17:09:14,398:INFO:Initializing create_model()
2023-06-16 17:09:14,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:14,398:INFO:Checking exceptions
2023-06-16 17:09:14,401:INFO:Importing libraries
2023-06-16 17:09:14,401:INFO:Copying training dataset
2023-06-16 17:09:14,415:INFO:Defining folds
2023-06-16 17:09:14,416:INFO:Declaring metric variables
2023-06-16 17:09:14,416:INFO:Importing untrained model
2023-06-16 17:09:14,416:INFO:Declaring custom model
2023-06-16 17:09:14,418:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:14,418:INFO:Starting cross validation
2023-06-16 17:09:14,421:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:18,661:INFO:Calculating mean and std
2023-06-16 17:09:18,662:INFO:Creating metrics dataframe
2023-06-16 17:09:18,664:INFO:Finalizing model
2023-06-16 17:09:20,141:INFO:Uploading results into container
2023-06-16 17:09:20,141:INFO:Uploading model into container now
2023-06-16 17:09:20,142:INFO:_master_model_container: 22
2023-06-16 17:09:20,142:INFO:_display_container: 11
2023-06-16 17:09:20,143:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.5625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:20,143:INFO:create_model() successfully completed......................................
2023-06-16 17:09:20,226:INFO:Initializing create_model()
2023-06-16 17:09:20,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:20,226:INFO:Checking exceptions
2023-06-16 17:09:20,228:INFO:Importing libraries
2023-06-16 17:09:20,228:INFO:Copying training dataset
2023-06-16 17:09:20,247:INFO:Defining folds
2023-06-16 17:09:20,248:INFO:Declaring metric variables
2023-06-16 17:09:20,248:INFO:Importing untrained model
2023-06-16 17:09:20,248:INFO:Declaring custom model
2023-06-16 17:09:20,249:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:20,250:INFO:Starting cross validation
2023-06-16 17:09:20,252:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:24,995:INFO:Calculating mean and std
2023-06-16 17:09:24,996:INFO:Creating metrics dataframe
2023-06-16 17:09:24,999:INFO:Finalizing model
2023-06-16 17:09:26,502:INFO:Uploading results into container
2023-06-16 17:09:26,503:INFO:Uploading model into container now
2023-06-16 17:09:26,503:INFO:_master_model_container: 23
2023-06-16 17:09:26,503:INFO:_display_container: 11
2023-06-16 17:09:26,505:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.0625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:26,505:INFO:create_model() successfully completed......................................
2023-06-16 17:09:26,582:INFO:Initializing create_model()
2023-06-16 17:09:26,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.09375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:26,582:INFO:Checking exceptions
2023-06-16 17:09:26,584:INFO:Importing libraries
2023-06-16 17:09:26,585:INFO:Copying training dataset
2023-06-16 17:09:26,598:INFO:Defining folds
2023-06-16 17:09:26,598:INFO:Declaring metric variables
2023-06-16 17:09:26,599:INFO:Importing untrained model
2023-06-16 17:09:26,599:INFO:Declaring custom model
2023-06-16 17:09:26,600:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:26,600:INFO:Starting cross validation
2023-06-16 17:09:26,602:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:30,815:INFO:Calculating mean and std
2023-06-16 17:09:30,815:INFO:Creating metrics dataframe
2023-06-16 17:09:30,818:INFO:Finalizing model
2023-06-16 17:09:32,357:INFO:Uploading results into container
2023-06-16 17:09:32,357:INFO:Uploading model into container now
2023-06-16 17:09:32,358:INFO:_master_model_container: 24
2023-06-16 17:09:32,358:INFO:_display_container: 11
2023-06-16 17:09:32,360:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.09375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:32,360:INFO:create_model() successfully completed......................................
2023-06-16 17:09:32,448:INFO:Initializing create_model()
2023-06-16 17:09:32,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.59375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:32,449:INFO:Checking exceptions
2023-06-16 17:09:32,451:INFO:Importing libraries
2023-06-16 17:09:32,451:INFO:Copying training dataset
2023-06-16 17:09:32,467:INFO:Defining folds
2023-06-16 17:09:32,467:INFO:Declaring metric variables
2023-06-16 17:09:32,467:INFO:Importing untrained model
2023-06-16 17:09:32,467:INFO:Declaring custom model
2023-06-16 17:09:32,468:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:32,469:INFO:Starting cross validation
2023-06-16 17:09:32,471:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:36,520:INFO:Calculating mean and std
2023-06-16 17:09:36,520:INFO:Creating metrics dataframe
2023-06-16 17:09:36,523:INFO:Finalizing model
2023-06-16 17:09:38,216:INFO:Uploading results into container
2023-06-16 17:09:38,216:INFO:Uploading model into container now
2023-06-16 17:09:38,216:INFO:_master_model_container: 25
2023-06-16 17:09:38,217:INFO:_display_container: 11
2023-06-16 17:09:38,218:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.59375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:38,218:INFO:create_model() successfully completed......................................
2023-06-16 17:09:38,326:INFO:Initializing create_model()
2023-06-16 17:09:38,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.84375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:38,326:INFO:Checking exceptions
2023-06-16 17:09:38,331:INFO:Importing libraries
2023-06-16 17:09:38,332:INFO:Copying training dataset
2023-06-16 17:09:38,371:INFO:Defining folds
2023-06-16 17:09:38,372:INFO:Declaring metric variables
2023-06-16 17:09:38,374:INFO:Importing untrained model
2023-06-16 17:09:38,374:INFO:Declaring custom model
2023-06-16 17:09:38,376:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:38,378:INFO:Starting cross validation
2023-06-16 17:09:38,386:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:44,018:INFO:Calculating mean and std
2023-06-16 17:09:44,018:INFO:Creating metrics dataframe
2023-06-16 17:09:44,021:INFO:Finalizing model
2023-06-16 17:09:46,101:INFO:Uploading results into container
2023-06-16 17:09:46,101:INFO:Uploading model into container now
2023-06-16 17:09:46,102:INFO:_master_model_container: 26
2023-06-16 17:09:46,102:INFO:_display_container: 11
2023-06-16 17:09:46,104:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.84375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:46,104:INFO:create_model() successfully completed......................................
2023-06-16 17:09:46,188:INFO:Initializing create_model()
2023-06-16 17:09:46,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.34375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:46,188:INFO:Checking exceptions
2023-06-16 17:09:46,191:INFO:Importing libraries
2023-06-16 17:09:46,191:INFO:Copying training dataset
2023-06-16 17:09:46,207:INFO:Defining folds
2023-06-16 17:09:46,208:INFO:Declaring metric variables
2023-06-16 17:09:46,208:INFO:Importing untrained model
2023-06-16 17:09:46,208:INFO:Declaring custom model
2023-06-16 17:09:46,210:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:46,212:INFO:Starting cross validation
2023-06-16 17:09:46,214:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:50,913:INFO:Calculating mean and std
2023-06-16 17:09:50,913:INFO:Creating metrics dataframe
2023-06-16 17:09:50,916:INFO:Finalizing model
2023-06-16 17:09:52,314:INFO:Uploading results into container
2023-06-16 17:09:52,314:INFO:Uploading model into container now
2023-06-16 17:09:52,315:INFO:_master_model_container: 27
2023-06-16 17:09:52,315:INFO:_display_container: 11
2023-06-16 17:09:52,317:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.34375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:52,317:INFO:create_model() successfully completed......................................
2023-06-16 17:09:52,389:INFO:Initializing create_model()
2023-06-16 17:09:52,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.46875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:52,390:INFO:Checking exceptions
2023-06-16 17:09:52,391:INFO:Importing libraries
2023-06-16 17:09:52,391:INFO:Copying training dataset
2023-06-16 17:09:52,407:INFO:Defining folds
2023-06-16 17:09:52,407:INFO:Declaring metric variables
2023-06-16 17:09:52,407:INFO:Importing untrained model
2023-06-16 17:09:52,407:INFO:Declaring custom model
2023-06-16 17:09:52,408:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:52,409:INFO:Starting cross validation
2023-06-16 17:09:52,412:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:09:56,800:INFO:Calculating mean and std
2023-06-16 17:09:56,801:INFO:Creating metrics dataframe
2023-06-16 17:09:56,804:INFO:Finalizing model
2023-06-16 17:09:58,233:INFO:Uploading results into container
2023-06-16 17:09:58,234:INFO:Uploading model into container now
2023-06-16 17:09:58,234:INFO:_master_model_container: 28
2023-06-16 17:09:58,234:INFO:_display_container: 11
2023-06-16 17:09:58,236:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.46875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:09:58,236:INFO:create_model() successfully completed......................................
2023-06-16 17:09:58,329:INFO:Initializing create_model()
2023-06-16 17:09:58,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.96875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:09:58,329:INFO:Checking exceptions
2023-06-16 17:09:58,332:INFO:Importing libraries
2023-06-16 17:09:58,333:INFO:Copying training dataset
2023-06-16 17:09:58,350:INFO:Defining folds
2023-06-16 17:09:58,350:INFO:Declaring metric variables
2023-06-16 17:09:58,351:INFO:Importing untrained model
2023-06-16 17:09:58,351:INFO:Declaring custom model
2023-06-16 17:09:58,351:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:09:58,352:INFO:Starting cross validation
2023-06-16 17:09:58,354:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:00,843:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:00,844:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:00,917:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:01,036:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:03,266:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:10:03,273:INFO:Calculating mean and std
2023-06-16 17:10:03,274:INFO:Creating metrics dataframe
2023-06-16 17:10:03,277:INFO:Finalizing model
2023-06-16 17:10:04,694:INFO:Uploading results into container
2023-06-16 17:10:04,695:INFO:Uploading model into container now
2023-06-16 17:10:04,695:INFO:_master_model_container: 29
2023-06-16 17:10:04,695:INFO:_display_container: 11
2023-06-16 17:10:04,697:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.96875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:04,697:INFO:create_model() successfully completed......................................
2023-06-16 17:10:04,813:INFO:Initializing create_model()
2023-06-16 17:10:04,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.71875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:04,813:INFO:Checking exceptions
2023-06-16 17:10:04,815:INFO:Importing libraries
2023-06-16 17:10:04,815:INFO:Copying training dataset
2023-06-16 17:10:04,830:INFO:Defining folds
2023-06-16 17:10:04,830:INFO:Declaring metric variables
2023-06-16 17:10:04,831:INFO:Importing untrained model
2023-06-16 17:10:04,831:INFO:Declaring custom model
2023-06-16 17:10:04,832:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:04,832:INFO:Starting cross validation
2023-06-16 17:10:04,834:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:08,783:INFO:Calculating mean and std
2023-06-16 17:10:08,783:INFO:Creating metrics dataframe
2023-06-16 17:10:08,794:INFO:Finalizing model
2023-06-16 17:10:10,543:INFO:Uploading results into container
2023-06-16 17:10:10,543:INFO:Uploading model into container now
2023-06-16 17:10:10,544:INFO:_master_model_container: 30
2023-06-16 17:10:10,544:INFO:_display_container: 11
2023-06-16 17:10:10,547:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.71875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:10,547:INFO:create_model() successfully completed......................................
2023-06-16 17:10:10,628:INFO:Initializing create_model()
2023-06-16 17:10:10,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.21875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:10,629:INFO:Checking exceptions
2023-06-16 17:10:10,631:INFO:Importing libraries
2023-06-16 17:10:10,631:INFO:Copying training dataset
2023-06-16 17:10:10,648:INFO:Defining folds
2023-06-16 17:10:10,648:INFO:Declaring metric variables
2023-06-16 17:10:10,648:INFO:Importing untrained model
2023-06-16 17:10:10,648:INFO:Declaring custom model
2023-06-16 17:10:10,649:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:10,650:INFO:Starting cross validation
2023-06-16 17:10:10,652:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:14,469:INFO:Calculating mean and std
2023-06-16 17:10:14,469:INFO:Creating metrics dataframe
2023-06-16 17:10:14,473:INFO:Finalizing model
2023-06-16 17:10:15,953:INFO:Uploading results into container
2023-06-16 17:10:15,953:INFO:Uploading model into container now
2023-06-16 17:10:15,954:INFO:_master_model_container: 31
2023-06-16 17:10:15,954:INFO:_display_container: 11
2023-06-16 17:10:15,955:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.21875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:15,955:INFO:create_model() successfully completed......................................
2023-06-16 17:10:16,034:INFO:Initializing create_model()
2023-06-16 17:10:16,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.15625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:16,035:INFO:Checking exceptions
2023-06-16 17:10:16,036:INFO:Importing libraries
2023-06-16 17:10:16,036:INFO:Copying training dataset
2023-06-16 17:10:16,051:INFO:Defining folds
2023-06-16 17:10:16,051:INFO:Declaring metric variables
2023-06-16 17:10:16,052:INFO:Importing untrained model
2023-06-16 17:10:16,052:INFO:Declaring custom model
2023-06-16 17:10:16,052:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:16,054:INFO:Starting cross validation
2023-06-16 17:10:16,055:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:19,792:INFO:Calculating mean and std
2023-06-16 17:10:19,792:INFO:Creating metrics dataframe
2023-06-16 17:10:19,795:INFO:Finalizing model
2023-06-16 17:10:21,067:INFO:Uploading results into container
2023-06-16 17:10:21,068:INFO:Uploading model into container now
2023-06-16 17:10:21,069:INFO:_master_model_container: 32
2023-06-16 17:10:21,069:INFO:_display_container: 11
2023-06-16 17:10:21,070:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.15625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:21,071:INFO:create_model() successfully completed......................................
2023-06-16 17:10:21,142:INFO:Initializing create_model()
2023-06-16 17:10:21,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.65625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:21,142:INFO:Checking exceptions
2023-06-16 17:10:21,145:INFO:Importing libraries
2023-06-16 17:10:21,145:INFO:Copying training dataset
2023-06-16 17:10:21,158:INFO:Defining folds
2023-06-16 17:10:21,158:INFO:Declaring metric variables
2023-06-16 17:10:21,159:INFO:Importing untrained model
2023-06-16 17:10:21,159:INFO:Declaring custom model
2023-06-16 17:10:21,159:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:21,159:INFO:Starting cross validation
2023-06-16 17:10:21,162:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:25,346:INFO:Calculating mean and std
2023-06-16 17:10:25,346:INFO:Creating metrics dataframe
2023-06-16 17:10:25,350:INFO:Finalizing model
2023-06-16 17:10:26,721:INFO:Uploading results into container
2023-06-16 17:10:26,722:INFO:Uploading model into container now
2023-06-16 17:10:26,722:INFO:_master_model_container: 33
2023-06-16 17:10:26,722:INFO:_display_container: 11
2023-06-16 17:10:26,725:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.65625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:26,725:INFO:create_model() successfully completed......................................
2023-06-16 17:10:26,796:INFO:Initializing create_model()
2023-06-16 17:10:26,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.90625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:26,796:INFO:Checking exceptions
2023-06-16 17:10:26,798:INFO:Importing libraries
2023-06-16 17:10:26,798:INFO:Copying training dataset
2023-06-16 17:10:26,813:INFO:Defining folds
2023-06-16 17:10:26,813:INFO:Declaring metric variables
2023-06-16 17:10:26,813:INFO:Importing untrained model
2023-06-16 17:10:26,814:INFO:Declaring custom model
2023-06-16 17:10:26,814:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:26,815:INFO:Starting cross validation
2023-06-16 17:10:26,817:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:30,680:INFO:Calculating mean and std
2023-06-16 17:10:30,681:INFO:Creating metrics dataframe
2023-06-16 17:10:30,685:INFO:Finalizing model
2023-06-16 17:10:32,143:INFO:Uploading results into container
2023-06-16 17:10:32,143:INFO:Uploading model into container now
2023-06-16 17:10:32,144:INFO:_master_model_container: 34
2023-06-16 17:10:32,144:INFO:_display_container: 11
2023-06-16 17:10:32,146:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.90625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:32,146:INFO:create_model() successfully completed......................................
2023-06-16 17:10:32,229:INFO:Initializing create_model()
2023-06-16 17:10:32,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.40625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:32,229:INFO:Checking exceptions
2023-06-16 17:10:32,233:INFO:Importing libraries
2023-06-16 17:10:32,233:INFO:Copying training dataset
2023-06-16 17:10:32,247:INFO:Defining folds
2023-06-16 17:10:32,247:INFO:Declaring metric variables
2023-06-16 17:10:32,248:INFO:Importing untrained model
2023-06-16 17:10:32,248:INFO:Declaring custom model
2023-06-16 17:10:32,250:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:32,251:INFO:Starting cross validation
2023-06-16 17:10:32,254:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:36,039:INFO:Calculating mean and std
2023-06-16 17:10:36,039:INFO:Creating metrics dataframe
2023-06-16 17:10:36,042:INFO:Finalizing model
2023-06-16 17:10:37,482:INFO:Uploading results into container
2023-06-16 17:10:37,482:INFO:Uploading model into container now
2023-06-16 17:10:37,482:INFO:_master_model_container: 35
2023-06-16 17:10:37,483:INFO:_display_container: 11
2023-06-16 17:10:37,484:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.40625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:37,484:INFO:create_model() successfully completed......................................
2023-06-16 17:10:37,560:INFO:Initializing create_model()
2023-06-16 17:10:37,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.28125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:37,560:INFO:Checking exceptions
2023-06-16 17:10:37,563:INFO:Importing libraries
2023-06-16 17:10:37,563:INFO:Copying training dataset
2023-06-16 17:10:37,577:INFO:Defining folds
2023-06-16 17:10:37,577:INFO:Declaring metric variables
2023-06-16 17:10:37,579:INFO:Importing untrained model
2023-06-16 17:10:37,579:INFO:Declaring custom model
2023-06-16 17:10:37,579:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:37,581:INFO:Starting cross validation
2023-06-16 17:10:37,582:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:42,757:INFO:Calculating mean and std
2023-06-16 17:10:42,758:INFO:Creating metrics dataframe
2023-06-16 17:10:42,762:INFO:Finalizing model
2023-06-16 17:10:44,290:INFO:Uploading results into container
2023-06-16 17:10:44,291:INFO:Uploading model into container now
2023-06-16 17:10:44,291:INFO:_master_model_container: 36
2023-06-16 17:10:44,291:INFO:_display_container: 11
2023-06-16 17:10:44,293:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.28125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:44,293:INFO:create_model() successfully completed......................................
2023-06-16 17:10:44,368:INFO:Initializing create_model()
2023-06-16 17:10:44,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.78125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:44,368:INFO:Checking exceptions
2023-06-16 17:10:44,370:INFO:Importing libraries
2023-06-16 17:10:44,370:INFO:Copying training dataset
2023-06-16 17:10:44,386:INFO:Defining folds
2023-06-16 17:10:44,387:INFO:Declaring metric variables
2023-06-16 17:10:44,387:INFO:Importing untrained model
2023-06-16 17:10:44,387:INFO:Declaring custom model
2023-06-16 17:10:44,388:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:44,388:INFO:Starting cross validation
2023-06-16 17:10:44,390:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:48,447:INFO:Calculating mean and std
2023-06-16 17:10:48,447:INFO:Creating metrics dataframe
2023-06-16 17:10:48,450:INFO:Finalizing model
2023-06-16 17:10:49,833:INFO:Uploading results into container
2023-06-16 17:10:49,834:INFO:Uploading model into container now
2023-06-16 17:10:49,834:INFO:_master_model_container: 37
2023-06-16 17:10:49,834:INFO:_display_container: 11
2023-06-16 17:10:49,836:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.78125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:49,836:INFO:create_model() successfully completed......................................
2023-06-16 17:10:49,910:INFO:Initializing create_model()
2023-06-16 17:10:49,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.53125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:49,910:INFO:Checking exceptions
2023-06-16 17:10:49,912:INFO:Importing libraries
2023-06-16 17:10:49,913:INFO:Copying training dataset
2023-06-16 17:10:49,937:INFO:Defining folds
2023-06-16 17:10:49,937:INFO:Declaring metric variables
2023-06-16 17:10:49,937:INFO:Importing untrained model
2023-06-16 17:10:49,937:INFO:Declaring custom model
2023-06-16 17:10:49,940:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:49,941:INFO:Starting cross validation
2023-06-16 17:10:49,943:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:10:55,090:INFO:Calculating mean and std
2023-06-16 17:10:55,090:INFO:Creating metrics dataframe
2023-06-16 17:10:55,093:INFO:Finalizing model
2023-06-16 17:10:56,602:INFO:Uploading results into container
2023-06-16 17:10:56,603:INFO:Uploading model into container now
2023-06-16 17:10:56,603:INFO:_master_model_container: 38
2023-06-16 17:10:56,603:INFO:_display_container: 11
2023-06-16 17:10:56,605:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.53125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:10:56,605:INFO:create_model() successfully completed......................................
2023-06-16 17:10:56,677:INFO:Initializing create_model()
2023-06-16 17:10:56,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.03125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:10:56,677:INFO:Checking exceptions
2023-06-16 17:10:56,679:INFO:Importing libraries
2023-06-16 17:10:56,679:INFO:Copying training dataset
2023-06-16 17:10:56,692:INFO:Defining folds
2023-06-16 17:10:56,692:INFO:Declaring metric variables
2023-06-16 17:10:56,693:INFO:Importing untrained model
2023-06-16 17:10:56,693:INFO:Declaring custom model
2023-06-16 17:10:56,694:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:10:56,694:INFO:Starting cross validation
2023-06-16 17:10:56,696:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:00,870:INFO:Calculating mean and std
2023-06-16 17:11:00,870:INFO:Creating metrics dataframe
2023-06-16 17:11:00,873:INFO:Finalizing model
2023-06-16 17:11:02,280:INFO:Uploading results into container
2023-06-16 17:11:02,280:INFO:Uploading model into container now
2023-06-16 17:11:02,281:INFO:_master_model_container: 39
2023-06-16 17:11:02,281:INFO:_display_container: 11
2023-06-16 17:11:02,282:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.03125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:02,283:INFO:create_model() successfully completed......................................
2023-06-16 17:11:02,378:INFO:Initializing create_model()
2023-06-16 17:11:02,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.046875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:02,379:INFO:Checking exceptions
2023-06-16 17:11:02,384:INFO:Importing libraries
2023-06-16 17:11:02,384:INFO:Copying training dataset
2023-06-16 17:11:02,406:INFO:Defining folds
2023-06-16 17:11:02,406:INFO:Declaring metric variables
2023-06-16 17:11:02,407:INFO:Importing untrained model
2023-06-16 17:11:02,407:INFO:Declaring custom model
2023-06-16 17:11:02,409:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:02,410:INFO:Starting cross validation
2023-06-16 17:11:02,412:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:06,177:INFO:Calculating mean and std
2023-06-16 17:11:06,177:INFO:Creating metrics dataframe
2023-06-16 17:11:06,180:INFO:Finalizing model
2023-06-16 17:11:07,519:INFO:Uploading results into container
2023-06-16 17:11:07,519:INFO:Uploading model into container now
2023-06-16 17:11:07,520:INFO:_master_model_container: 40
2023-06-16 17:11:07,520:INFO:_display_container: 11
2023-06-16 17:11:07,521:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.046875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:07,521:INFO:create_model() successfully completed......................................
2023-06-16 17:11:07,592:INFO:Initializing create_model()
2023-06-16 17:11:07,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.546875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:07,592:INFO:Checking exceptions
2023-06-16 17:11:07,594:INFO:Importing libraries
2023-06-16 17:11:07,594:INFO:Copying training dataset
2023-06-16 17:11:07,608:INFO:Defining folds
2023-06-16 17:11:07,608:INFO:Declaring metric variables
2023-06-16 17:11:07,608:INFO:Importing untrained model
2023-06-16 17:11:07,608:INFO:Declaring custom model
2023-06-16 17:11:07,609:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:07,610:INFO:Starting cross validation
2023-06-16 17:11:07,612:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:11,273:INFO:Calculating mean and std
2023-06-16 17:11:11,273:INFO:Creating metrics dataframe
2023-06-16 17:11:11,277:INFO:Finalizing model
2023-06-16 17:11:12,555:INFO:Uploading results into container
2023-06-16 17:11:12,556:INFO:Uploading model into container now
2023-06-16 17:11:12,557:INFO:_master_model_container: 41
2023-06-16 17:11:12,557:INFO:_display_container: 11
2023-06-16 17:11:12,558:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.546875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:12,558:INFO:create_model() successfully completed......................................
2023-06-16 17:11:12,627:INFO:Initializing create_model()
2023-06-16 17:11:12,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.796875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:12,627:INFO:Checking exceptions
2023-06-16 17:11:12,629:INFO:Importing libraries
2023-06-16 17:11:12,629:INFO:Copying training dataset
2023-06-16 17:11:12,642:INFO:Defining folds
2023-06-16 17:11:12,642:INFO:Declaring metric variables
2023-06-16 17:11:12,642:INFO:Importing untrained model
2023-06-16 17:11:12,642:INFO:Declaring custom model
2023-06-16 17:11:12,643:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:12,644:INFO:Starting cross validation
2023-06-16 17:11:12,645:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:16,509:INFO:Calculating mean and std
2023-06-16 17:11:16,510:INFO:Creating metrics dataframe
2023-06-16 17:11:16,513:INFO:Finalizing model
2023-06-16 17:11:17,952:INFO:Uploading results into container
2023-06-16 17:11:17,952:INFO:Uploading model into container now
2023-06-16 17:11:17,952:INFO:_master_model_container: 42
2023-06-16 17:11:17,953:INFO:_display_container: 11
2023-06-16 17:11:17,954:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.796875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:17,954:INFO:create_model() successfully completed......................................
2023-06-16 17:11:18,023:INFO:Initializing create_model()
2023-06-16 17:11:18,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.296875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:18,023:INFO:Checking exceptions
2023-06-16 17:11:18,026:INFO:Importing libraries
2023-06-16 17:11:18,026:INFO:Copying training dataset
2023-06-16 17:11:18,041:INFO:Defining folds
2023-06-16 17:11:18,041:INFO:Declaring metric variables
2023-06-16 17:11:18,042:INFO:Importing untrained model
2023-06-16 17:11:18,042:INFO:Declaring custom model
2023-06-16 17:11:18,042:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:18,043:INFO:Starting cross validation
2023-06-16 17:11:18,045:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:21,670:INFO:Calculating mean and std
2023-06-16 17:11:21,670:INFO:Creating metrics dataframe
2023-06-16 17:11:21,673:INFO:Finalizing model
2023-06-16 17:11:23,033:INFO:Uploading results into container
2023-06-16 17:11:23,033:INFO:Uploading model into container now
2023-06-16 17:11:23,034:INFO:_master_model_container: 43
2023-06-16 17:11:23,034:INFO:_display_container: 11
2023-06-16 17:11:23,036:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.296875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:23,036:INFO:create_model() successfully completed......................................
2023-06-16 17:11:23,113:INFO:Initializing create_model()
2023-06-16 17:11:23,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.421875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:23,113:INFO:Checking exceptions
2023-06-16 17:11:23,115:INFO:Importing libraries
2023-06-16 17:11:23,115:INFO:Copying training dataset
2023-06-16 17:11:23,130:INFO:Defining folds
2023-06-16 17:11:23,130:INFO:Declaring metric variables
2023-06-16 17:11:23,130:INFO:Importing untrained model
2023-06-16 17:11:23,130:INFO:Declaring custom model
2023-06-16 17:11:23,132:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:23,133:INFO:Starting cross validation
2023-06-16 17:11:23,135:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:27,135:INFO:Calculating mean and std
2023-06-16 17:11:27,136:INFO:Creating metrics dataframe
2023-06-16 17:11:27,138:INFO:Finalizing model
2023-06-16 17:11:28,401:INFO:Uploading results into container
2023-06-16 17:11:28,402:INFO:Uploading model into container now
2023-06-16 17:11:28,402:INFO:_master_model_container: 44
2023-06-16 17:11:28,402:INFO:_display_container: 11
2023-06-16 17:11:28,404:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.421875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:28,404:INFO:create_model() successfully completed......................................
2023-06-16 17:11:28,476:INFO:Initializing create_model()
2023-06-16 17:11:28,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.921875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:28,476:INFO:Checking exceptions
2023-06-16 17:11:28,478:INFO:Importing libraries
2023-06-16 17:11:28,478:INFO:Copying training dataset
2023-06-16 17:11:28,490:INFO:Defining folds
2023-06-16 17:11:28,491:INFO:Declaring metric variables
2023-06-16 17:11:28,491:INFO:Importing untrained model
2023-06-16 17:11:28,491:INFO:Declaring custom model
2023-06-16 17:11:28,493:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:28,493:INFO:Starting cross validation
2023-06-16 17:11:28,495:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:32,567:INFO:Calculating mean and std
2023-06-16 17:11:32,568:INFO:Creating metrics dataframe
2023-06-16 17:11:32,570:INFO:Finalizing model
2023-06-16 17:11:34,106:INFO:Uploading results into container
2023-06-16 17:11:34,107:INFO:Uploading model into container now
2023-06-16 17:11:34,107:INFO:_master_model_container: 45
2023-06-16 17:11:34,107:INFO:_display_container: 11
2023-06-16 17:11:34,109:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.921875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:34,109:INFO:create_model() successfully completed......................................
2023-06-16 17:11:34,180:INFO:Initializing create_model()
2023-06-16 17:11:34,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.671875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:34,180:INFO:Checking exceptions
2023-06-16 17:11:34,182:INFO:Importing libraries
2023-06-16 17:11:34,182:INFO:Copying training dataset
2023-06-16 17:11:34,196:INFO:Defining folds
2023-06-16 17:11:34,196:INFO:Declaring metric variables
2023-06-16 17:11:34,196:INFO:Importing untrained model
2023-06-16 17:11:34,196:INFO:Declaring custom model
2023-06-16 17:11:34,197:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:34,198:INFO:Starting cross validation
2023-06-16 17:11:34,200:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:38,563:INFO:Calculating mean and std
2023-06-16 17:11:38,564:INFO:Creating metrics dataframe
2023-06-16 17:11:38,567:INFO:Finalizing model
2023-06-16 17:11:40,098:INFO:Uploading results into container
2023-06-16 17:11:40,099:INFO:Uploading model into container now
2023-06-16 17:11:40,099:INFO:_master_model_container: 46
2023-06-16 17:11:40,100:INFO:_display_container: 11
2023-06-16 17:11:40,101:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.671875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:40,101:INFO:create_model() successfully completed......................................
2023-06-16 17:11:40,192:INFO:Initializing create_model()
2023-06-16 17:11:40,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.171875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:40,192:INFO:Checking exceptions
2023-06-16 17:11:40,195:INFO:Importing libraries
2023-06-16 17:11:40,195:INFO:Copying training dataset
2023-06-16 17:11:40,212:INFO:Defining folds
2023-06-16 17:11:40,213:INFO:Declaring metric variables
2023-06-16 17:11:40,213:INFO:Importing untrained model
2023-06-16 17:11:40,213:INFO:Declaring custom model
2023-06-16 17:11:40,216:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:40,217:INFO:Starting cross validation
2023-06-16 17:11:40,219:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:45,014:INFO:Calculating mean and std
2023-06-16 17:11:45,015:INFO:Creating metrics dataframe
2023-06-16 17:11:45,018:INFO:Finalizing model
2023-06-16 17:11:46,557:INFO:Uploading results into container
2023-06-16 17:11:46,558:INFO:Uploading model into container now
2023-06-16 17:11:46,558:INFO:_master_model_container: 47
2023-06-16 17:11:46,558:INFO:_display_container: 11
2023-06-16 17:11:46,560:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.171875,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:46,560:INFO:create_model() successfully completed......................................
2023-06-16 17:11:46,644:INFO:Initializing create_model()
2023-06-16 17:11:46,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:46,644:INFO:Checking exceptions
2023-06-16 17:11:46,646:INFO:Importing libraries
2023-06-16 17:11:46,646:INFO:Copying training dataset
2023-06-16 17:11:46,661:INFO:Defining folds
2023-06-16 17:11:46,661:INFO:Declaring metric variables
2023-06-16 17:11:46,661:INFO:Importing untrained model
2023-06-16 17:11:46,661:INFO:Declaring custom model
2023-06-16 17:11:46,662:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:46,663:INFO:Starting cross validation
2023-06-16 17:11:46,665:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:50,819:INFO:Calculating mean and std
2023-06-16 17:11:50,819:INFO:Creating metrics dataframe
2023-06-16 17:11:50,822:INFO:Finalizing model
2023-06-16 17:11:52,225:INFO:Uploading results into container
2023-06-16 17:11:52,225:INFO:Uploading model into container now
2023-06-16 17:11:52,225:INFO:_master_model_container: 48
2023-06-16 17:11:52,226:INFO:_display_container: 11
2023-06-16 17:11:52,227:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.234375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:52,227:INFO:create_model() successfully completed......................................
2023-06-16 17:11:52,304:INFO:Initializing create_model()
2023-06-16 17:11:52,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:52,304:INFO:Checking exceptions
2023-06-16 17:11:52,306:INFO:Importing libraries
2023-06-16 17:11:52,306:INFO:Copying training dataset
2023-06-16 17:11:52,321:INFO:Defining folds
2023-06-16 17:11:52,321:INFO:Declaring metric variables
2023-06-16 17:11:52,321:INFO:Importing untrained model
2023-06-16 17:11:52,322:INFO:Declaring custom model
2023-06-16 17:11:52,322:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:52,325:INFO:Starting cross validation
2023-06-16 17:11:52,326:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:56,758:INFO:Calculating mean and std
2023-06-16 17:11:56,759:INFO:Creating metrics dataframe
2023-06-16 17:11:56,761:INFO:Finalizing model
2023-06-16 17:11:58,130:INFO:Uploading results into container
2023-06-16 17:11:58,130:INFO:Uploading model into container now
2023-06-16 17:11:58,131:INFO:_master_model_container: 49
2023-06-16 17:11:58,131:INFO:_display_container: 11
2023-06-16 17:11:58,132:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.734375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:11:58,132:INFO:create_model() successfully completed......................................
2023-06-16 17:11:58,205:INFO:Initializing create_model()
2023-06-16 17:11:58,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.984375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:11:58,205:INFO:Checking exceptions
2023-06-16 17:11:58,207:INFO:Importing libraries
2023-06-16 17:11:58,207:INFO:Copying training dataset
2023-06-16 17:11:58,221:INFO:Defining folds
2023-06-16 17:11:58,221:INFO:Declaring metric variables
2023-06-16 17:11:58,222:INFO:Importing untrained model
2023-06-16 17:11:58,222:INFO:Declaring custom model
2023-06-16 17:11:58,222:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:11:58,223:INFO:Starting cross validation
2023-06-16 17:11:58,225:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:11:59,883:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:11:59,913:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:11:59,932:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:11:59,968:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:12:02,253:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:12:02,299:INFO:Calculating mean and std
2023-06-16 17:12:02,299:INFO:Creating metrics dataframe
2023-06-16 17:12:02,302:INFO:Finalizing model
2023-06-16 17:12:03,961:INFO:Uploading results into container
2023-06-16 17:12:03,962:INFO:Uploading model into container now
2023-06-16 17:12:03,962:INFO:_master_model_container: 50
2023-06-16 17:12:03,962:INFO:_display_container: 11
2023-06-16 17:12:03,963:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.984375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:03,964:INFO:create_model() successfully completed......................................
2023-06-16 17:12:04,037:INFO:Initializing create_model()
2023-06-16 17:12:04,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.484375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:04,037:INFO:Checking exceptions
2023-06-16 17:12:04,038:INFO:Importing libraries
2023-06-16 17:12:04,038:INFO:Copying training dataset
2023-06-16 17:12:04,052:INFO:Defining folds
2023-06-16 17:12:04,052:INFO:Declaring metric variables
2023-06-16 17:12:04,053:INFO:Importing untrained model
2023-06-16 17:12:04,053:INFO:Declaring custom model
2023-06-16 17:12:04,054:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:04,054:INFO:Starting cross validation
2023-06-16 17:12:04,056:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:08,080:INFO:Calculating mean and std
2023-06-16 17:12:08,081:INFO:Creating metrics dataframe
2023-06-16 17:12:08,083:INFO:Finalizing model
2023-06-16 17:12:09,757:INFO:Uploading results into container
2023-06-16 17:12:09,757:INFO:Uploading model into container now
2023-06-16 17:12:09,758:INFO:_master_model_container: 51
2023-06-16 17:12:09,758:INFO:_display_container: 11
2023-06-16 17:12:09,759:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.484375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:09,759:INFO:create_model() successfully completed......................................
2023-06-16 17:12:09,831:INFO:Initializing create_model()
2023-06-16 17:12:09,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.359375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:09,831:INFO:Checking exceptions
2023-06-16 17:12:09,834:INFO:Importing libraries
2023-06-16 17:12:09,834:INFO:Copying training dataset
2023-06-16 17:12:09,848:INFO:Defining folds
2023-06-16 17:12:09,848:INFO:Declaring metric variables
2023-06-16 17:12:09,849:INFO:Importing untrained model
2023-06-16 17:12:09,849:INFO:Declaring custom model
2023-06-16 17:12:09,850:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:09,850:INFO:Starting cross validation
2023-06-16 17:12:09,852:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:14,122:INFO:Calculating mean and std
2023-06-16 17:12:14,123:INFO:Creating metrics dataframe
2023-06-16 17:12:14,126:INFO:Finalizing model
2023-06-16 17:12:15,563:INFO:Uploading results into container
2023-06-16 17:12:15,564:INFO:Uploading model into container now
2023-06-16 17:12:15,564:INFO:_master_model_container: 52
2023-06-16 17:12:15,564:INFO:_display_container: 11
2023-06-16 17:12:15,566:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.359375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:15,566:INFO:create_model() successfully completed......................................
2023-06-16 17:12:15,647:INFO:Initializing create_model()
2023-06-16 17:12:15,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.859375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:15,648:INFO:Checking exceptions
2023-06-16 17:12:15,650:INFO:Importing libraries
2023-06-16 17:12:15,651:INFO:Copying training dataset
2023-06-16 17:12:15,665:INFO:Defining folds
2023-06-16 17:12:15,665:INFO:Declaring metric variables
2023-06-16 17:12:15,666:INFO:Importing untrained model
2023-06-16 17:12:15,666:INFO:Declaring custom model
2023-06-16 17:12:15,667:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:15,667:INFO:Starting cross validation
2023-06-16 17:12:15,669:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:19,840:INFO:Calculating mean and std
2023-06-16 17:12:19,840:INFO:Creating metrics dataframe
2023-06-16 17:12:19,843:INFO:Finalizing model
2023-06-16 17:12:21,257:INFO:Uploading results into container
2023-06-16 17:12:21,257:INFO:Uploading model into container now
2023-06-16 17:12:21,258:INFO:_master_model_container: 53
2023-06-16 17:12:21,258:INFO:_display_container: 11
2023-06-16 17:12:21,259:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.859375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:21,259:INFO:create_model() successfully completed......................................
2023-06-16 17:12:21,332:INFO:Initializing create_model()
2023-06-16 17:12:21,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.609375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:21,332:INFO:Checking exceptions
2023-06-16 17:12:21,334:INFO:Importing libraries
2023-06-16 17:12:21,334:INFO:Copying training dataset
2023-06-16 17:12:21,348:INFO:Defining folds
2023-06-16 17:12:21,348:INFO:Declaring metric variables
2023-06-16 17:12:21,348:INFO:Importing untrained model
2023-06-16 17:12:21,349:INFO:Declaring custom model
2023-06-16 17:12:21,349:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:21,350:INFO:Starting cross validation
2023-06-16 17:12:21,352:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:25,753:INFO:Calculating mean and std
2023-06-16 17:12:25,754:INFO:Creating metrics dataframe
2023-06-16 17:12:25,757:INFO:Finalizing model
2023-06-16 17:12:27,186:INFO:Uploading results into container
2023-06-16 17:12:27,186:INFO:Uploading model into container now
2023-06-16 17:12:27,187:INFO:_master_model_container: 54
2023-06-16 17:12:27,187:INFO:_display_container: 11
2023-06-16 17:12:27,188:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.609375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:27,188:INFO:create_model() successfully completed......................................
2023-06-16 17:12:27,260:INFO:Initializing create_model()
2023-06-16 17:12:27,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.109375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:27,260:INFO:Checking exceptions
2023-06-16 17:12:27,262:INFO:Importing libraries
2023-06-16 17:12:27,262:INFO:Copying training dataset
2023-06-16 17:12:27,277:INFO:Defining folds
2023-06-16 17:12:27,278:INFO:Declaring metric variables
2023-06-16 17:12:27,278:INFO:Importing untrained model
2023-06-16 17:12:27,278:INFO:Declaring custom model
2023-06-16 17:12:27,279:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:27,279:INFO:Starting cross validation
2023-06-16 17:12:27,281:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:31,759:INFO:Calculating mean and std
2023-06-16 17:12:31,760:INFO:Creating metrics dataframe
2023-06-16 17:12:31,762:INFO:Finalizing model
2023-06-16 17:12:33,353:INFO:Uploading results into container
2023-06-16 17:12:33,353:INFO:Uploading model into container now
2023-06-16 17:12:33,354:INFO:_master_model_container: 55
2023-06-16 17:12:33,354:INFO:_display_container: 11
2023-06-16 17:12:33,356:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.109375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:33,356:INFO:create_model() successfully completed......................................
2023-06-16 17:12:33,433:INFO:Initializing create_model()
2023-06-16 17:12:33,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.078125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:33,434:INFO:Checking exceptions
2023-06-16 17:12:33,435:INFO:Importing libraries
2023-06-16 17:12:33,435:INFO:Copying training dataset
2023-06-16 17:12:33,449:INFO:Defining folds
2023-06-16 17:12:33,449:INFO:Declaring metric variables
2023-06-16 17:12:33,450:INFO:Importing untrained model
2023-06-16 17:12:33,450:INFO:Declaring custom model
2023-06-16 17:12:33,452:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:33,452:INFO:Starting cross validation
2023-06-16 17:12:33,454:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:37,753:INFO:Calculating mean and std
2023-06-16 17:12:37,754:INFO:Creating metrics dataframe
2023-06-16 17:12:37,757:INFO:Finalizing model
2023-06-16 17:12:39,726:INFO:Uploading results into container
2023-06-16 17:12:39,727:INFO:Uploading model into container now
2023-06-16 17:12:39,727:INFO:_master_model_container: 56
2023-06-16 17:12:39,728:INFO:_display_container: 11
2023-06-16 17:12:39,730:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.078125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:39,730:INFO:create_model() successfully completed......................................
2023-06-16 17:12:39,821:INFO:Initializing create_model()
2023-06-16 17:12:39,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.578125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:39,821:INFO:Checking exceptions
2023-06-16 17:12:39,826:INFO:Importing libraries
2023-06-16 17:12:39,826:INFO:Copying training dataset
2023-06-16 17:12:39,843:INFO:Defining folds
2023-06-16 17:12:39,843:INFO:Declaring metric variables
2023-06-16 17:12:39,843:INFO:Importing untrained model
2023-06-16 17:12:39,843:INFO:Declaring custom model
2023-06-16 17:12:39,845:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:39,845:INFO:Starting cross validation
2023-06-16 17:12:39,847:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:44,440:INFO:Calculating mean and std
2023-06-16 17:12:44,441:INFO:Creating metrics dataframe
2023-06-16 17:12:44,444:INFO:Finalizing model
2023-06-16 17:12:46,232:INFO:Uploading results into container
2023-06-16 17:12:46,232:INFO:Uploading model into container now
2023-06-16 17:12:46,233:INFO:_master_model_container: 57
2023-06-16 17:12:46,233:INFO:_display_container: 11
2023-06-16 17:12:46,234:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.578125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:46,234:INFO:create_model() successfully completed......................................
2023-06-16 17:12:46,315:INFO:Initializing create_model()
2023-06-16 17:12:46,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.828125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:46,316:INFO:Checking exceptions
2023-06-16 17:12:46,318:INFO:Importing libraries
2023-06-16 17:12:46,318:INFO:Copying training dataset
2023-06-16 17:12:46,332:INFO:Defining folds
2023-06-16 17:12:46,332:INFO:Declaring metric variables
2023-06-16 17:12:46,333:INFO:Importing untrained model
2023-06-16 17:12:46,333:INFO:Declaring custom model
2023-06-16 17:12:46,334:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:46,335:INFO:Starting cross validation
2023-06-16 17:12:46,336:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:51,265:INFO:Calculating mean and std
2023-06-16 17:12:51,266:INFO:Creating metrics dataframe
2023-06-16 17:12:51,270:INFO:Finalizing model
2023-06-16 17:12:52,815:INFO:Uploading results into container
2023-06-16 17:12:52,815:INFO:Uploading model into container now
2023-06-16 17:12:52,816:INFO:_master_model_container: 58
2023-06-16 17:12:52,816:INFO:_display_container: 11
2023-06-16 17:12:52,818:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.828125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:52,818:INFO:create_model() successfully completed......................................
2023-06-16 17:12:52,926:INFO:Initializing create_model()
2023-06-16 17:12:52,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.328125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:52,927:INFO:Checking exceptions
2023-06-16 17:12:52,931:INFO:Importing libraries
2023-06-16 17:12:52,931:INFO:Copying training dataset
2023-06-16 17:12:52,979:INFO:Defining folds
2023-06-16 17:12:52,980:INFO:Declaring metric variables
2023-06-16 17:12:52,980:INFO:Importing untrained model
2023-06-16 17:12:52,981:INFO:Declaring custom model
2023-06-16 17:12:52,982:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:52,982:INFO:Starting cross validation
2023-06-16 17:12:52,985:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:12:57,488:INFO:Calculating mean and std
2023-06-16 17:12:57,488:INFO:Creating metrics dataframe
2023-06-16 17:12:57,491:INFO:Finalizing model
2023-06-16 17:12:58,883:INFO:Uploading results into container
2023-06-16 17:12:58,883:INFO:Uploading model into container now
2023-06-16 17:12:58,884:INFO:_master_model_container: 59
2023-06-16 17:12:58,884:INFO:_display_container: 11
2023-06-16 17:12:58,885:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.328125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:12:58,885:INFO:create_model() successfully completed......................................
2023-06-16 17:12:58,959:INFO:Initializing create_model()
2023-06-16 17:12:58,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.453125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:12:58,959:INFO:Checking exceptions
2023-06-16 17:12:58,961:INFO:Importing libraries
2023-06-16 17:12:58,961:INFO:Copying training dataset
2023-06-16 17:12:58,977:INFO:Defining folds
2023-06-16 17:12:58,977:INFO:Declaring metric variables
2023-06-16 17:12:58,978:INFO:Importing untrained model
2023-06-16 17:12:58,978:INFO:Declaring custom model
2023-06-16 17:12:58,978:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:12:58,979:INFO:Starting cross validation
2023-06-16 17:12:58,981:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:03,948:INFO:Calculating mean and std
2023-06-16 17:13:03,950:INFO:Creating metrics dataframe
2023-06-16 17:13:03,954:INFO:Finalizing model
2023-06-16 17:13:05,551:INFO:Uploading results into container
2023-06-16 17:13:05,551:INFO:Uploading model into container now
2023-06-16 17:13:05,552:INFO:_master_model_container: 60
2023-06-16 17:13:05,552:INFO:_display_container: 11
2023-06-16 17:13:05,553:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.453125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:05,553:INFO:create_model() successfully completed......................................
2023-06-16 17:13:05,621:INFO:Initializing create_model()
2023-06-16 17:13:05,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.953125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:05,622:INFO:Checking exceptions
2023-06-16 17:13:05,623:INFO:Importing libraries
2023-06-16 17:13:05,623:INFO:Copying training dataset
2023-06-16 17:13:05,636:INFO:Defining folds
2023-06-16 17:13:05,637:INFO:Declaring metric variables
2023-06-16 17:13:05,637:INFO:Importing untrained model
2023-06-16 17:13:05,637:INFO:Declaring custom model
2023-06-16 17:13:05,638:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:05,638:INFO:Starting cross validation
2023-06-16 17:13:05,640:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:07,515:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:07,533:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:07,538:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:07,678:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:10,407:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1327: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-16 17:13:10,617:INFO:Calculating mean and std
2023-06-16 17:13:10,618:INFO:Creating metrics dataframe
2023-06-16 17:13:10,620:INFO:Finalizing model
2023-06-16 17:13:12,073:INFO:Uploading results into container
2023-06-16 17:13:12,074:INFO:Uploading model into container now
2023-06-16 17:13:12,074:INFO:_master_model_container: 61
2023-06-16 17:13:12,074:INFO:_display_container: 11
2023-06-16 17:13:12,077:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.953125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:12,077:INFO:create_model() successfully completed......................................
2023-06-16 17:13:12,157:INFO:Initializing create_model()
2023-06-16 17:13:12,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.703125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:12,157:INFO:Checking exceptions
2023-06-16 17:13:12,159:INFO:Importing libraries
2023-06-16 17:13:12,159:INFO:Copying training dataset
2023-06-16 17:13:12,174:INFO:Defining folds
2023-06-16 17:13:12,174:INFO:Declaring metric variables
2023-06-16 17:13:12,174:INFO:Importing untrained model
2023-06-16 17:13:12,174:INFO:Declaring custom model
2023-06-16 17:13:12,175:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:12,176:INFO:Starting cross validation
2023-06-16 17:13:12,179:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:16,643:INFO:Calculating mean and std
2023-06-16 17:13:16,643:INFO:Creating metrics dataframe
2023-06-16 17:13:16,646:INFO:Finalizing model
2023-06-16 17:13:18,269:INFO:Uploading results into container
2023-06-16 17:13:18,269:INFO:Uploading model into container now
2023-06-16 17:13:18,270:INFO:_master_model_container: 62
2023-06-16 17:13:18,270:INFO:_display_container: 11
2023-06-16 17:13:18,272:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.703125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:18,272:INFO:create_model() successfully completed......................................
2023-06-16 17:13:18,340:INFO:Initializing create_model()
2023-06-16 17:13:18,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.203125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:18,341:INFO:Checking exceptions
2023-06-16 17:13:18,343:INFO:Importing libraries
2023-06-16 17:13:18,343:INFO:Copying training dataset
2023-06-16 17:13:18,356:INFO:Defining folds
2023-06-16 17:13:18,356:INFO:Declaring metric variables
2023-06-16 17:13:18,356:INFO:Importing untrained model
2023-06-16 17:13:18,357:INFO:Declaring custom model
2023-06-16 17:13:18,357:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:18,358:INFO:Starting cross validation
2023-06-16 17:13:18,360:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:22,068:INFO:Calculating mean and std
2023-06-16 17:13:22,068:INFO:Creating metrics dataframe
2023-06-16 17:13:22,071:INFO:Finalizing model
2023-06-16 17:13:23,482:INFO:Uploading results into container
2023-06-16 17:13:23,483:INFO:Uploading model into container now
2023-06-16 17:13:23,483:INFO:_master_model_container: 63
2023-06-16 17:13:23,483:INFO:_display_container: 11
2023-06-16 17:13:23,485:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.203125,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:23,486:INFO:create_model() successfully completed......................................
2023-06-16 17:13:23,575:INFO:Initializing create_model()
2023-06-16 17:13:23,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.140625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:23,575:INFO:Checking exceptions
2023-06-16 17:13:23,577:INFO:Importing libraries
2023-06-16 17:13:23,577:INFO:Copying training dataset
2023-06-16 17:13:23,595:INFO:Defining folds
2023-06-16 17:13:23,596:INFO:Declaring metric variables
2023-06-16 17:13:23,596:INFO:Importing untrained model
2023-06-16 17:13:23,596:INFO:Declaring custom model
2023-06-16 17:13:23,597:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:23,597:INFO:Starting cross validation
2023-06-16 17:13:23,600:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:27,692:INFO:Calculating mean and std
2023-06-16 17:13:27,693:INFO:Creating metrics dataframe
2023-06-16 17:13:27,695:INFO:Finalizing model
2023-06-16 17:13:29,141:INFO:Uploading results into container
2023-06-16 17:13:29,142:INFO:Uploading model into container now
2023-06-16 17:13:29,142:INFO:_master_model_container: 64
2023-06-16 17:13:29,142:INFO:_display_container: 11
2023-06-16 17:13:29,144:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.140625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:29,144:INFO:create_model() successfully completed......................................
2023-06-16 17:13:29,213:INFO:Initializing create_model()
2023-06-16 17:13:29,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.640625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:29,214:INFO:Checking exceptions
2023-06-16 17:13:29,215:INFO:Importing libraries
2023-06-16 17:13:29,215:INFO:Copying training dataset
2023-06-16 17:13:29,228:INFO:Defining folds
2023-06-16 17:13:29,229:INFO:Declaring metric variables
2023-06-16 17:13:29,229:INFO:Importing untrained model
2023-06-16 17:13:29,229:INFO:Declaring custom model
2023-06-16 17:13:29,230:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:29,231:INFO:Starting cross validation
2023-06-16 17:13:29,233:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:33,325:INFO:Calculating mean and std
2023-06-16 17:13:33,326:INFO:Creating metrics dataframe
2023-06-16 17:13:33,329:INFO:Finalizing model
2023-06-16 17:13:34,691:INFO:Uploading results into container
2023-06-16 17:13:34,692:INFO:Uploading model into container now
2023-06-16 17:13:34,692:INFO:_master_model_container: 65
2023-06-16 17:13:34,692:INFO:_display_container: 11
2023-06-16 17:13:34,694:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.640625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:34,694:INFO:create_model() successfully completed......................................
2023-06-16 17:13:34,765:INFO:Initializing create_model()
2023-06-16 17:13:34,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.890625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:34,765:INFO:Checking exceptions
2023-06-16 17:13:34,767:INFO:Importing libraries
2023-06-16 17:13:34,767:INFO:Copying training dataset
2023-06-16 17:13:34,781:INFO:Defining folds
2023-06-16 17:13:34,781:INFO:Declaring metric variables
2023-06-16 17:13:34,782:INFO:Importing untrained model
2023-06-16 17:13:34,782:INFO:Declaring custom model
2023-06-16 17:13:34,783:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:34,783:INFO:Starting cross validation
2023-06-16 17:13:34,785:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:38,730:INFO:Calculating mean and std
2023-06-16 17:13:38,731:INFO:Creating metrics dataframe
2023-06-16 17:13:38,734:INFO:Finalizing model
2023-06-16 17:13:40,388:INFO:Uploading results into container
2023-06-16 17:13:40,388:INFO:Uploading model into container now
2023-06-16 17:13:40,389:INFO:_master_model_container: 66
2023-06-16 17:13:40,389:INFO:_display_container: 11
2023-06-16 17:13:40,390:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.890625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:40,391:INFO:create_model() successfully completed......................................
2023-06-16 17:13:40,460:INFO:Initializing create_model()
2023-06-16 17:13:40,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.390625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:40,460:INFO:Checking exceptions
2023-06-16 17:13:40,462:INFO:Importing libraries
2023-06-16 17:13:40,462:INFO:Copying training dataset
2023-06-16 17:13:40,475:INFO:Defining folds
2023-06-16 17:13:40,475:INFO:Declaring metric variables
2023-06-16 17:13:40,475:INFO:Importing untrained model
2023-06-16 17:13:40,475:INFO:Declaring custom model
2023-06-16 17:13:40,476:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:40,477:INFO:Starting cross validation
2023-06-16 17:13:40,479:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:44,339:INFO:Calculating mean and std
2023-06-16 17:13:44,340:INFO:Creating metrics dataframe
2023-06-16 17:13:44,343:INFO:Finalizing model
2023-06-16 17:13:45,788:INFO:Uploading results into container
2023-06-16 17:13:45,788:INFO:Uploading model into container now
2023-06-16 17:13:45,789:INFO:_master_model_container: 67
2023-06-16 17:13:45,789:INFO:_display_container: 11
2023-06-16 17:13:45,790:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.390625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:45,791:INFO:create_model() successfully completed......................................
2023-06-16 17:13:45,867:INFO:Initializing create_model()
2023-06-16 17:13:45,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.265625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:45,867:INFO:Checking exceptions
2023-06-16 17:13:45,869:INFO:Importing libraries
2023-06-16 17:13:45,869:INFO:Copying training dataset
2023-06-16 17:13:45,884:INFO:Defining folds
2023-06-16 17:13:45,884:INFO:Declaring metric variables
2023-06-16 17:13:45,885:INFO:Importing untrained model
2023-06-16 17:13:45,885:INFO:Declaring custom model
2023-06-16 17:13:45,886:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:45,886:INFO:Starting cross validation
2023-06-16 17:13:45,888:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:51,055:INFO:Calculating mean and std
2023-06-16 17:13:51,056:INFO:Creating metrics dataframe
2023-06-16 17:13:51,059:INFO:Finalizing model
2023-06-16 17:13:52,805:INFO:Uploading results into container
2023-06-16 17:13:52,806:INFO:Uploading model into container now
2023-06-16 17:13:52,806:INFO:_master_model_container: 68
2023-06-16 17:13:52,806:INFO:_display_container: 11
2023-06-16 17:13:52,808:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.265625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:13:52,808:INFO:create_model() successfully completed......................................
2023-06-16 17:13:52,893:INFO:Initializing create_model()
2023-06-16 17:13:52,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.765625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:13:52,893:INFO:Checking exceptions
2023-06-16 17:13:52,895:INFO:Importing libraries
2023-06-16 17:13:52,895:INFO:Copying training dataset
2023-06-16 17:13:52,912:INFO:Defining folds
2023-06-16 17:13:52,912:INFO:Declaring metric variables
2023-06-16 17:13:52,912:INFO:Importing untrained model
2023-06-16 17:13:52,912:INFO:Declaring custom model
2023-06-16 17:13:52,913:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:13:52,914:INFO:Starting cross validation
2023-06-16 17:13:52,915:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:13:58,954:INFO:Calculating mean and std
2023-06-16 17:13:58,954:INFO:Creating metrics dataframe
2023-06-16 17:13:58,957:INFO:Finalizing model
2023-06-16 17:14:00,752:INFO:Uploading results into container
2023-06-16 17:14:00,753:INFO:Uploading model into container now
2023-06-16 17:14:00,753:INFO:_master_model_container: 69
2023-06-16 17:14:00,753:INFO:_display_container: 11
2023-06-16 17:14:00,755:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.765625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:00,755:INFO:create_model() successfully completed......................................
2023-06-16 17:14:00,834:INFO:Initializing create_model()
2023-06-16 17:14:00,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.515625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:00,834:INFO:Checking exceptions
2023-06-16 17:14:00,836:INFO:Importing libraries
2023-06-16 17:14:00,836:INFO:Copying training dataset
2023-06-16 17:14:00,853:INFO:Defining folds
2023-06-16 17:14:00,853:INFO:Declaring metric variables
2023-06-16 17:14:00,853:INFO:Importing untrained model
2023-06-16 17:14:00,853:INFO:Declaring custom model
2023-06-16 17:14:00,854:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:00,855:INFO:Starting cross validation
2023-06-16 17:14:00,857:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:05,411:INFO:Calculating mean and std
2023-06-16 17:14:05,411:INFO:Creating metrics dataframe
2023-06-16 17:14:05,415:INFO:Finalizing model
2023-06-16 17:14:06,926:INFO:Uploading results into container
2023-06-16 17:14:06,927:INFO:Uploading model into container now
2023-06-16 17:14:06,927:INFO:_master_model_container: 70
2023-06-16 17:14:06,927:INFO:_display_container: 11
2023-06-16 17:14:06,928:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.515625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:06,929:INFO:create_model() successfully completed......................................
2023-06-16 17:14:07,002:INFO:Initializing create_model()
2023-06-16 17:14:07,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.015625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:07,002:INFO:Checking exceptions
2023-06-16 17:14:07,004:INFO:Importing libraries
2023-06-16 17:14:07,004:INFO:Copying training dataset
2023-06-16 17:14:07,019:INFO:Defining folds
2023-06-16 17:14:07,019:INFO:Declaring metric variables
2023-06-16 17:14:07,019:INFO:Importing untrained model
2023-06-16 17:14:07,019:INFO:Declaring custom model
2023-06-16 17:14:07,020:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:07,021:INFO:Starting cross validation
2023-06-16 17:14:07,023:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:11,890:INFO:Calculating mean and std
2023-06-16 17:14:11,891:INFO:Creating metrics dataframe
2023-06-16 17:14:11,894:INFO:Finalizing model
2023-06-16 17:14:13,399:INFO:Uploading results into container
2023-06-16 17:14:13,399:INFO:Uploading model into container now
2023-06-16 17:14:13,400:INFO:_master_model_container: 71
2023-06-16 17:14:13,400:INFO:_display_container: 11
2023-06-16 17:14:13,402:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.015625,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:13,402:INFO:create_model() successfully completed......................................
2023-06-16 17:14:13,478:INFO:Initializing create_model()
2023-06-16 17:14:13,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:13,479:INFO:Checking exceptions
2023-06-16 17:14:13,481:INFO:Importing libraries
2023-06-16 17:14:13,481:INFO:Copying training dataset
2023-06-16 17:14:13,495:INFO:Defining folds
2023-06-16 17:14:13,496:INFO:Declaring metric variables
2023-06-16 17:14:13,496:INFO:Importing untrained model
2023-06-16 17:14:13,496:INFO:Declaring custom model
2023-06-16 17:14:13,497:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:13,497:INFO:Starting cross validation
2023-06-16 17:14:13,499:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:18,043:INFO:Calculating mean and std
2023-06-16 17:14:18,044:INFO:Creating metrics dataframe
2023-06-16 17:14:18,047:INFO:Finalizing model
2023-06-16 17:14:19,579:INFO:Uploading results into container
2023-06-16 17:14:19,580:INFO:Uploading model into container now
2023-06-16 17:14:19,580:INFO:_master_model_container: 72
2023-06-16 17:14:19,580:INFO:_display_container: 11
2023-06-16 17:14:19,582:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.0234375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:19,582:INFO:create_model() successfully completed......................................
2023-06-16 17:14:19,657:INFO:Initializing create_model()
2023-06-16 17:14:19,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5234375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:19,658:INFO:Checking exceptions
2023-06-16 17:14:19,659:INFO:Importing libraries
2023-06-16 17:14:19,659:INFO:Copying training dataset
2023-06-16 17:14:19,674:INFO:Defining folds
2023-06-16 17:14:19,674:INFO:Declaring metric variables
2023-06-16 17:14:19,675:INFO:Importing untrained model
2023-06-16 17:14:19,675:INFO:Declaring custom model
2023-06-16 17:14:19,676:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:19,676:INFO:Starting cross validation
2023-06-16 17:14:19,680:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:24,791:INFO:Calculating mean and std
2023-06-16 17:14:24,792:INFO:Creating metrics dataframe
2023-06-16 17:14:24,794:INFO:Finalizing model
2023-06-16 17:14:26,313:INFO:Uploading results into container
2023-06-16 17:14:26,313:INFO:Uploading model into container now
2023-06-16 17:14:26,314:INFO:_master_model_container: 73
2023-06-16 17:14:26,314:INFO:_display_container: 11
2023-06-16 17:14:26,315:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.5234375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:26,315:INFO:create_model() successfully completed......................................
2023-06-16 17:14:26,390:INFO:Initializing create_model()
2023-06-16 17:14:26,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.7734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:26,390:INFO:Checking exceptions
2023-06-16 17:14:26,392:INFO:Importing libraries
2023-06-16 17:14:26,392:INFO:Copying training dataset
2023-06-16 17:14:26,406:INFO:Defining folds
2023-06-16 17:14:26,406:INFO:Declaring metric variables
2023-06-16 17:14:26,407:INFO:Importing untrained model
2023-06-16 17:14:26,407:INFO:Declaring custom model
2023-06-16 17:14:26,408:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:26,408:INFO:Starting cross validation
2023-06-16 17:14:26,410:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:31,007:INFO:Calculating mean and std
2023-06-16 17:14:31,007:INFO:Creating metrics dataframe
2023-06-16 17:14:31,010:INFO:Finalizing model
2023-06-16 17:14:32,639:INFO:Uploading results into container
2023-06-16 17:14:32,640:INFO:Uploading model into container now
2023-06-16 17:14:32,640:INFO:_master_model_container: 74
2023-06-16 17:14:32,640:INFO:_display_container: 11
2023-06-16 17:14:32,642:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=4...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.7734375,
                                     random_state=420, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-06-16 17:14:32,642:INFO:create_model() successfully completed......................................
2023-06-16 17:14:32,722:INFO:Initializing create_model()
2023-06-16 17:14:32,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.2734375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:14:32,723:INFO:Checking exceptions
2023-06-16 17:14:32,727:INFO:Importing libraries
2023-06-16 17:14:32,727:INFO:Copying training dataset
2023-06-16 17:14:32,743:INFO:Defining folds
2023-06-16 17:14:32,743:INFO:Declaring metric variables
2023-06-16 17:14:32,743:INFO:Importing untrained model
2023-06-16 17:14:32,743:INFO:Declaring custom model
2023-06-16 17:14:32,744:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 17:14:32,745:INFO:Starting cross validation
2023-06-16 17:14:32,746:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:14:37,423:INFO:Calculating mean and std
2023-06-16 17:14:37,424:INFO:Creating metrics dataframe
2023-06-16 17:14:37,426:INFO:Finalizing model
2023-06-16 17:18:29,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:18:29,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:18:29,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:18:29,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:18:31,745:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 17:18:46,129:INFO:PyCaret ClassificationExperiment
2023-06-16 17:18:46,130:INFO:Logging name: clf-default-name
2023-06-16 17:18:46,130:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 17:18:46,130:INFO:version 3.0.2
2023-06-16 17:18:46,130:INFO:Initializing setup()
2023-06-16 17:18:46,130:INFO:self.USI: cbf7
2023-06-16 17:18:46,130:INFO:self._variable_keys: {'log_plots_param', 'X', 'memory', '_ml_usecase', 'fold_groups_param', 'fix_imbalance', 'n_jobs_param', 'gpu_param', '_available_plots', 'html_param', 'USI', 'target_param', 'y', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'is_multiclass', 'X_test', 'X_train', 'idx', 'data', 'logging_param', 'y_test', 'fold_shuffle_param', 'y_train', 'seed', 'pipeline', 'fold_generator'}
2023-06-16 17:18:46,130:INFO:Checking environment
2023-06-16 17:18:46,130:INFO:python_version: 3.9.7
2023-06-16 17:18:46,130:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 17:18:46,130:INFO:machine: AMD64
2023-06-16 17:18:46,131:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 17:18:46,131:INFO:Memory: svmem(total=17120436224, available=3071438848, percent=82.1, used=14048997376, free=3071438848)
2023-06-16 17:18:46,131:INFO:Physical Core: 4
2023-06-16 17:18:46,131:INFO:Logical Core: 4
2023-06-16 17:18:46,131:INFO:Checking libraries
2023-06-16 17:18:46,131:INFO:System:
2023-06-16 17:18:46,131:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 17:18:46,131:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 17:18:46,131:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 17:18:46,131:INFO:PyCaret required dependencies:
2023-06-16 17:18:46,131:INFO:                 pip: 21.2.3
2023-06-16 17:18:46,131:INFO:          setuptools: 57.4.0
2023-06-16 17:18:46,131:INFO:             pycaret: 3.0.2
2023-06-16 17:18:46,131:INFO:             IPython: 7.28.0
2023-06-16 17:18:46,131:INFO:          ipywidgets: 8.0.6
2023-06-16 17:18:46,131:INFO:                tqdm: 4.64.0
2023-06-16 17:18:46,132:INFO:               numpy: 1.21.2
2023-06-16 17:18:46,132:INFO:              pandas: 1.3.5
2023-06-16 17:18:46,132:INFO:              jinja2: 3.1.2
2023-06-16 17:18:46,132:INFO:               scipy: 1.7.1
2023-06-16 17:18:46,132:INFO:              joblib: 1.2.0
2023-06-16 17:18:46,132:INFO:             sklearn: 1.1.0
2023-06-16 17:18:46,132:INFO:                pyod: 1.0.9
2023-06-16 17:18:46,132:INFO:            imblearn: 0.9.1
2023-06-16 17:18:46,132:INFO:   category_encoders: 2.6.1
2023-06-16 17:18:46,132:INFO:            lightgbm: 3.3.5
2023-06-16 17:18:46,132:INFO:               numba: 0.57.0
2023-06-16 17:18:46,132:INFO:            requests: 2.31.0
2023-06-16 17:18:46,132:INFO:          matplotlib: 3.4.3
2023-06-16 17:18:46,132:INFO:          scikitplot: 0.3.7
2023-06-16 17:18:46,132:INFO:         yellowbrick: 1.5
2023-06-16 17:18:46,132:INFO:              plotly: 5.8.0
2023-06-16 17:18:46,132:INFO:             kaleido: 0.2.1
2023-06-16 17:18:46,132:INFO:         statsmodels: 0.14.0
2023-06-16 17:18:46,132:INFO:              sktime: 0.17.0
2023-06-16 17:18:46,132:INFO:               tbats: 1.1.3
2023-06-16 17:18:46,132:INFO:            pmdarima: 2.0.3
2023-06-16 17:18:46,132:INFO:              psutil: 5.9.0
2023-06-16 17:18:46,133:INFO:PyCaret optional dependencies:
2023-06-16 17:18:46,157:INFO:                shap: Not installed
2023-06-16 17:18:46,157:INFO:           interpret: Not installed
2023-06-16 17:18:46,157:INFO:                umap: Not installed
2023-06-16 17:18:46,157:INFO:    pandas_profiling: Not installed
2023-06-16 17:18:46,157:INFO:  explainerdashboard: Not installed
2023-06-16 17:18:46,157:INFO:             autoviz: Not installed
2023-06-16 17:18:46,157:INFO:           fairlearn: Not installed
2023-06-16 17:18:46,157:INFO:             xgboost: Not installed
2023-06-16 17:18:46,157:INFO:            catboost: Not installed
2023-06-16 17:18:46,157:INFO:              kmodes: Not installed
2023-06-16 17:18:46,157:INFO:             mlxtend: Not installed
2023-06-16 17:18:46,158:INFO:       statsforecast: Not installed
2023-06-16 17:18:46,158:INFO:        tune_sklearn: Not installed
2023-06-16 17:18:46,158:INFO:                 ray: Not installed
2023-06-16 17:18:46,158:INFO:            hyperopt: Not installed
2023-06-16 17:18:46,158:INFO:              optuna: Not installed
2023-06-16 17:18:46,158:INFO:               skopt: Not installed
2023-06-16 17:18:46,158:INFO:              mlflow: Not installed
2023-06-16 17:18:46,158:INFO:              gradio: Not installed
2023-06-16 17:18:46,158:INFO:             fastapi: Not installed
2023-06-16 17:18:46,158:INFO:             uvicorn: Not installed
2023-06-16 17:18:46,158:INFO:              m2cgen: Not installed
2023-06-16 17:18:46,158:INFO:           evidently: Not installed
2023-06-16 17:18:46,158:INFO:               fugue: Not installed
2023-06-16 17:18:46,158:INFO:           streamlit: Not installed
2023-06-16 17:18:46,158:INFO:             prophet: Not installed
2023-06-16 17:18:46,158:INFO:None
2023-06-16 17:18:46,158:INFO:Set up data.
2023-06-16 17:18:46,225:INFO:Set up train/test split.
2023-06-16 17:18:46,252:INFO:Set up index.
2023-06-16 17:18:46,253:INFO:Set up folding strategy.
2023-06-16 17:18:46,253:INFO:Assigning column types.
2023-06-16 17:18:46,268:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 17:18:46,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,490:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,524:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 17:18:46,579:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,682:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:18:46,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,718:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 17:18:46,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:46,902:INFO:Preparing preprocessing pipeline...
2023-06-16 17:18:46,904:INFO:Set up simple imputation.
2023-06-16 17:18:46,920:INFO:Set up encoding of ordinal features.
2023-06-16 17:18:46,930:INFO:Set up encoding of categorical features.
2023-06-16 17:18:46,930:INFO:Set up removing multicollinearity.
2023-06-16 17:18:46,931:INFO:Set up imbalanced handling.
2023-06-16 17:18:46,931:INFO:Set up feature selection.
2023-06-16 17:18:47,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:47,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:47,026:INFO:Set up column name cleaning.
2023-06-16 17:18:47,592:INFO:Finished creating preprocessing pipeline.
2023-06-16 17:18:47,658:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001FAB1EEB1F0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 17:18:47,658:INFO:Creating final display dataframe.
2023-06-16 17:18:47,842:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              cbf7
2023-06-16 17:18:47,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:47,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:48,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:48,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:18:48,051:INFO:setup() successfully completed in 2.7s...............
2023-06-16 17:19:08,833:INFO:Initializing create_model()
2023-06-16 17:19:08,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FAB42D2FD0>, estimator=Pipeline(memory=None,
         steps=[('transform',
                 DataFrameTransformer(float_dtype=<class 'numpy.float32'>,
                                      int_dtype=<class 'numpy.int64'>,
                                      treat_int_as_categorical=False)),
                ('net',
                 <class 'skorch.classifier.NeuralNetClassifier'>[uninitialized](
  module=<class '__main__.Net'>,
))],
         verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:19:08,834:INFO:Checking exceptions
2023-06-16 17:19:08,894:INFO:Importing libraries
2023-06-16 17:19:08,894:INFO:Copying training dataset
2023-06-16 17:19:08,910:INFO:Defining folds
2023-06-16 17:19:08,910:INFO:Declaring metric variables
2023-06-16 17:19:08,917:INFO:Importing untrained model
2023-06-16 17:19:08,918:INFO:Declaring custom model
2023-06-16 17:19:08,923:INFO:NeuralNetClassifier Imported successfully
2023-06-16 17:19:08,933:INFO:Starting cross validation
2023-06-16 17:19:08,935:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:19:50,399:INFO:PyCaret ClassificationExperiment
2023-06-16 17:19:50,399:INFO:Logging name: clf-default-name
2023-06-16 17:19:50,399:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 17:19:50,399:INFO:version 3.0.2
2023-06-16 17:19:50,399:INFO:Initializing setup()
2023-06-16 17:19:50,399:INFO:self.USI: 1027
2023-06-16 17:19:50,399:INFO:self._variable_keys: {'log_plots_param', 'X', 'memory', '_ml_usecase', 'fold_groups_param', 'fix_imbalance', 'n_jobs_param', 'gpu_param', '_available_plots', 'html_param', 'USI', 'target_param', 'y', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'is_multiclass', 'X_test', 'X_train', 'idx', 'data', 'logging_param', 'y_test', 'fold_shuffle_param', 'y_train', 'seed', 'pipeline', 'fold_generator'}
2023-06-16 17:19:50,399:INFO:Checking environment
2023-06-16 17:19:50,399:INFO:python_version: 3.9.7
2023-06-16 17:19:50,399:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 17:19:50,399:INFO:machine: AMD64
2023-06-16 17:19:50,400:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 17:19:50,400:INFO:Memory: svmem(total=17120436224, available=2492178432, percent=85.4, used=14628257792, free=2492178432)
2023-06-16 17:19:50,400:INFO:Physical Core: 4
2023-06-16 17:19:50,400:INFO:Logical Core: 4
2023-06-16 17:19:50,400:INFO:Checking libraries
2023-06-16 17:19:50,400:INFO:System:
2023-06-16 17:19:50,400:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 17:19:50,400:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 17:19:50,400:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 17:19:50,400:INFO:PyCaret required dependencies:
2023-06-16 17:19:50,400:INFO:                 pip: 21.2.3
2023-06-16 17:19:50,400:INFO:          setuptools: 57.4.0
2023-06-16 17:19:50,400:INFO:             pycaret: 3.0.2
2023-06-16 17:19:50,400:INFO:             IPython: 7.28.0
2023-06-16 17:19:50,400:INFO:          ipywidgets: 8.0.6
2023-06-16 17:19:50,400:INFO:                tqdm: 4.64.0
2023-06-16 17:19:50,400:INFO:               numpy: 1.21.2
2023-06-16 17:19:50,400:INFO:              pandas: 1.3.5
2023-06-16 17:19:50,400:INFO:              jinja2: 3.1.2
2023-06-16 17:19:50,401:INFO:               scipy: 1.7.1
2023-06-16 17:19:50,401:INFO:              joblib: 1.2.0
2023-06-16 17:19:50,401:INFO:             sklearn: 1.1.0
2023-06-16 17:19:50,401:INFO:                pyod: 1.0.9
2023-06-16 17:19:50,401:INFO:            imblearn: 0.9.1
2023-06-16 17:19:50,401:INFO:   category_encoders: 2.6.1
2023-06-16 17:19:50,401:INFO:            lightgbm: 3.3.5
2023-06-16 17:19:50,401:INFO:               numba: 0.57.0
2023-06-16 17:19:50,401:INFO:            requests: 2.31.0
2023-06-16 17:19:50,401:INFO:          matplotlib: 3.4.3
2023-06-16 17:19:50,401:INFO:          scikitplot: 0.3.7
2023-06-16 17:19:50,401:INFO:         yellowbrick: 1.5
2023-06-16 17:19:50,401:INFO:              plotly: 5.8.0
2023-06-16 17:19:50,401:INFO:             kaleido: 0.2.1
2023-06-16 17:19:50,401:INFO:         statsmodels: 0.14.0
2023-06-16 17:19:50,401:INFO:              sktime: 0.17.0
2023-06-16 17:19:50,401:INFO:               tbats: 1.1.3
2023-06-16 17:19:50,402:INFO:            pmdarima: 2.0.3
2023-06-16 17:19:50,402:INFO:              psutil: 5.9.0
2023-06-16 17:19:50,402:INFO:PyCaret optional dependencies:
2023-06-16 17:19:50,402:INFO:                shap: Not installed
2023-06-16 17:19:50,402:INFO:           interpret: Not installed
2023-06-16 17:19:50,402:INFO:                umap: Not installed
2023-06-16 17:19:50,402:INFO:    pandas_profiling: Not installed
2023-06-16 17:19:50,402:INFO:  explainerdashboard: Not installed
2023-06-16 17:19:50,402:INFO:             autoviz: Not installed
2023-06-16 17:19:50,402:INFO:           fairlearn: Not installed
2023-06-16 17:19:50,402:INFO:             xgboost: Not installed
2023-06-16 17:19:50,402:INFO:            catboost: Not installed
2023-06-16 17:19:50,402:INFO:              kmodes: Not installed
2023-06-16 17:19:50,402:INFO:             mlxtend: Not installed
2023-06-16 17:19:50,402:INFO:       statsforecast: Not installed
2023-06-16 17:19:50,402:INFO:        tune_sklearn: Not installed
2023-06-16 17:19:50,402:INFO:                 ray: Not installed
2023-06-16 17:19:50,402:INFO:            hyperopt: Not installed
2023-06-16 17:19:50,403:INFO:              optuna: Not installed
2023-06-16 17:19:50,403:INFO:               skopt: Not installed
2023-06-16 17:19:50,403:INFO:              mlflow: Not installed
2023-06-16 17:19:50,403:INFO:              gradio: Not installed
2023-06-16 17:19:50,403:INFO:             fastapi: Not installed
2023-06-16 17:19:50,403:INFO:             uvicorn: Not installed
2023-06-16 17:19:50,403:INFO:              m2cgen: Not installed
2023-06-16 17:19:50,403:INFO:           evidently: Not installed
2023-06-16 17:19:50,403:INFO:               fugue: Not installed
2023-06-16 17:19:50,403:INFO:           streamlit: Not installed
2023-06-16 17:19:50,403:INFO:             prophet: Not installed
2023-06-16 17:19:50,403:INFO:None
2023-06-16 17:19:50,403:INFO:Set up data.
2023-06-16 17:19:50,465:INFO:Set up train/test split.
2023-06-16 17:19:50,493:INFO:Set up index.
2023-06-16 17:19:50,494:INFO:Set up folding strategy.
2023-06-16 17:19:50,494:INFO:Assigning column types.
2023-06-16 17:19:50,507:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 17:19:50,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,567:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,706:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 17:19:50,772:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,811:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,908:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:19:50,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:50,963:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 17:19:51,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,253:INFO:Preparing preprocessing pipeline...
2023-06-16 17:19:51,256:INFO:Set up simple imputation.
2023-06-16 17:19:51,277:INFO:Set up encoding of ordinal features.
2023-06-16 17:19:51,290:INFO:Set up encoding of categorical features.
2023-06-16 17:19:51,290:INFO:Set up removing multicollinearity.
2023-06-16 17:19:51,290:INFO:Set up imbalanced handling.
2023-06-16 17:19:51,290:INFO:Set up feature selection.
2023-06-16 17:19:51,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:51,407:INFO:Set up column name cleaning.
2023-06-16 17:19:51,813:INFO:Finished creating preprocessing pipeline.
2023-06-16 17:19:51,866:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001FAB1EEB1F0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 17:19:51,866:INFO:Creating final display dataframe.
2023-06-16 17:19:52,075:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              1027
2023-06-16 17:19:52,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:52,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:52,300:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:52,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:19:52,301:INFO:setup() successfully completed in 2.6s...............
2023-06-16 17:19:55,015:INFO:Initializing create_model()
2023-06-16 17:19:55,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FAA9D30490>, estimator=Pipeline(memory=None,
         steps=[('transform',
                 DataFrameTransformer(float_dtype=<class 'numpy.float32'>,
                                      int_dtype=<class 'numpy.int64'>,
                                      treat_int_as_categorical=False)),
                ('net',
                 <class 'skorch.classifier.NeuralNetClassifier'>[uninitialized](
  module=<class '__main__.Net'>,
))],
         verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:19:55,015:INFO:Checking exceptions
2023-06-16 17:19:55,061:INFO:Importing libraries
2023-06-16 17:19:55,061:INFO:Copying training dataset
2023-06-16 17:19:55,077:INFO:Defining folds
2023-06-16 17:19:55,077:INFO:Declaring metric variables
2023-06-16 17:19:55,081:INFO:Importing untrained model
2023-06-16 17:19:55,081:INFO:Declaring custom model
2023-06-16 17:19:55,098:INFO:NeuralNetClassifier Imported successfully
2023-06-16 17:19:55,108:INFO:Starting cross validation
2023-06-16 17:19:55,111:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:21:51,547:INFO:Initializing create_model()
2023-06-16 17:21:51,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FAA9D30490>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:21:51,548:INFO:Checking exceptions
2023-06-16 17:21:51,597:INFO:Importing libraries
2023-06-16 17:21:51,597:INFO:Copying training dataset
2023-06-16 17:21:51,616:INFO:Defining folds
2023-06-16 17:21:51,616:INFO:Declaring metric variables
2023-06-16 17:21:51,623:INFO:Importing untrained model
2023-06-16 17:21:51,629:INFO:Logistic Regression Imported successfully
2023-06-16 17:21:51,639:INFO:Starting cross validation
2023-06-16 17:21:51,643:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:21:55,564:INFO:Calculating mean and std
2023-06-16 17:21:55,566:INFO:Creating metrics dataframe
2023-06-16 17:21:55,574:INFO:Finalizing model
2023-06-16 17:21:56,795:INFO:Uploading results into container
2023-06-16 17:21:56,797:INFO:Uploading model into container now
2023-06-16 17:21:56,815:INFO:_master_model_container: 1
2023-06-16 17:21:56,815:INFO:_display_container: 2
2023-06-16 17:21:56,816:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:21:56,816:INFO:create_model() successfully completed......................................
2023-06-16 17:22:14,070:INFO:Initializing create_model()
2023-06-16 17:22:14,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FAA9D30490>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:22:14,071:INFO:Checking exceptions
2023-06-16 17:22:14,117:INFO:Importing libraries
2023-06-16 17:22:14,117:INFO:Copying training dataset
2023-06-16 17:22:14,133:INFO:Defining folds
2023-06-16 17:22:14,133:INFO:Declaring metric variables
2023-06-16 17:22:14,141:INFO:Importing untrained model
2023-06-16 17:22:14,148:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:22:14,157:INFO:Starting cross validation
2023-06-16 17:22:14,160:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:22:14,708:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:14,775:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:14,783:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:14,806:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:16,228:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:22:17,769:INFO:Calculating mean and std
2023-06-16 17:22:17,771:INFO:Creating metrics dataframe
2023-06-16 17:22:17,779:INFO:Finalizing model
2023-06-16 17:22:18,971:INFO:Uploading results into container
2023-06-16 17:22:18,972:INFO:Uploading model into container now
2023-06-16 17:22:18,988:INFO:_master_model_container: 2
2023-06-16 17:22:18,989:INFO:_display_container: 3
2023-06-16 17:22:18,990:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:22:18,990:INFO:create_model() successfully completed......................................
2023-06-16 17:26:39,445:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:27:32,811:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:28:10,538:INFO:Initializing plot_model()
2023-06-16 17:28:10,539:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:28:10,539:INFO:Checking exceptions
2023-06-16 17:28:10,546:INFO:Preloading libraries
2023-06-16 17:28:10,555:INFO:Copying training dataset
2023-06-16 17:28:10,556:INFO:Plot type: auc
2023-06-16 17:28:10,695:INFO:Fitting Model
2023-06-16 17:28:10,696:INFO:Scoring test/hold-out set
2023-06-16 17:28:10,929:INFO:Visual Rendered Successfully
2023-06-16 17:28:11,074:INFO:plot_model() successfully completed......................................
2023-06-16 17:28:34,794:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:29:09,499:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:36:10,606:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:36:45,975:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:38:04,663:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:38:37,884:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:38:37,919:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:39:24,534:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:39:59,280:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:39:59,317:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:40:52,665:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:42:02,669:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:42:02,718:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:42:43,508:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:46:05,691:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:48:24,989:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:1118: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)

2023-06-16 17:49:03,384:INFO:Initializing plot_model()
2023-06-16 17:49:03,385:INFO:plot_model(plot=ks, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:03,385:INFO:Checking exceptions
2023-06-16 17:49:03,392:INFO:Preloading libraries
2023-06-16 17:49:03,402:INFO:Copying training dataset
2023-06-16 17:49:03,402:INFO:Plot type: ks
2023-06-16 17:49:03,435:INFO:Generating predictions / predict_proba on X_test
2023-06-16 17:49:03,983:INFO:Visual Rendered Successfully
2023-06-16 17:49:04,114:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:12,941:INFO:Initializing plot_model()
2023-06-16 17:49:12,941:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:12,941:INFO:Checking exceptions
2023-06-16 17:49:18,677:INFO:Initializing plot_model()
2023-06-16 17:49:18,677:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:18,677:INFO:Checking exceptions
2023-06-16 17:49:18,684:INFO:Preloading libraries
2023-06-16 17:49:18,696:INFO:Copying training dataset
2023-06-16 17:49:18,696:INFO:Plot type: gain
2023-06-16 17:49:18,697:INFO:Generating predictions / predict_proba on X_test
2023-06-16 17:49:18,972:INFO:Visual Rendered Successfully
2023-06-16 17:49:19,048:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:24,509:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\neural_network\_multilayer_perceptron.py:702: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (300) reached and the optimization hasn't converged yet.
  warnings.warn(

2023-06-16 17:49:24,561:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; This will be removed in v0.5.0. Please use scikitplot.metrics.plot_roc instead.
  warnings.warn(msg, category=FutureWarning)

2023-06-16 17:49:25,694:INFO:Initializing plot_model()
2023-06-16 17:49:25,694:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:25,695:INFO:Checking exceptions
2023-06-16 17:49:25,701:INFO:Preloading libraries
2023-06-16 17:49:25,712:INFO:Copying training dataset
2023-06-16 17:49:25,712:INFO:Plot type: lift
2023-06-16 17:49:25,713:INFO:Generating predictions / predict_proba on X_test
2023-06-16 17:49:25,960:INFO:Visual Rendered Successfully
2023-06-16 17:49:26,028:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:28,614:INFO:Initializing plot_model()
2023-06-16 17:49:28,615:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:28,615:INFO:Checking exceptions
2023-06-16 17:49:28,622:INFO:Preloading libraries
2023-06-16 17:49:28,635:INFO:Copying training dataset
2023-06-16 17:49:28,635:INFO:Plot type: boundary
2023-06-16 17:49:28,779:INFO:Fitting StandardScaler()
2023-06-16 17:49:28,799:INFO:Fitting PCA()
2023-06-16 17:49:29,003:INFO:Fitting Model
2023-06-16 17:49:29,383:WARNING:c:\Program Files\Python39\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2023-06-16 17:49:30,793:INFO:Visual Rendered Successfully
2023-06-16 17:49:31,007:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:31,028:INFO:Initializing plot_model()
2023-06-16 17:49:31,028:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:31,029:INFO:Checking exceptions
2023-06-16 17:49:31,035:INFO:Preloading libraries
2023-06-16 17:49:31,042:INFO:Copying training dataset
2023-06-16 17:49:31,043:INFO:Plot type: feature_all
2023-06-16 17:49:31,084:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 17:49:31,294:INFO:Visual Rendered Successfully
2023-06-16 17:49:31,366:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:33,230:INFO:Initializing plot_model()
2023-06-16 17:49:33,231:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:33,231:INFO:Checking exceptions
2023-06-16 17:49:33,237:INFO:Preloading libraries
2023-06-16 17:49:33,248:INFO:Copying training dataset
2023-06-16 17:49:33,249:INFO:Plot type: boundary
2023-06-16 17:49:33,324:INFO:Fitting StandardScaler()
2023-06-16 17:49:33,344:INFO:Fitting PCA()
2023-06-16 17:49:33,518:INFO:Fitting Model
2023-06-16 17:49:33,918:WARNING:c:\Program Files\Python39\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2023-06-16 17:49:35,240:INFO:Visual Rendered Successfully
2023-06-16 17:49:35,445:INFO:plot_model() successfully completed......................................
2023-06-16 17:49:51,430:INFO:Initializing plot_model()
2023-06-16 17:49:51,431:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=420, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:49:51,431:INFO:Checking exceptions
2023-06-16 17:49:51,439:INFO:Preloading libraries
2023-06-16 17:49:51,450:INFO:Copying training dataset
2023-06-16 17:49:51,451:INFO:Plot type: feature_all
2023-06-16 17:49:51,491:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 17:49:51,688:INFO:Visual Rendered Successfully
2023-06-16 17:49:51,756:INFO:plot_model() successfully completed......................................
2023-06-16 17:52:04,852:INFO:Initializing compare_models()
2023-06-16 17:52:04,852:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'svm', 'knn'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'svm', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:52:04,852:INFO:Checking exceptions
2023-06-16 17:52:04,859:INFO:Preparing display monitor
2023-06-16 17:52:04,918:INFO:Initializing Logistic Regression
2023-06-16 17:52:04,918:INFO:Total runtime is 0.0 minutes
2023-06-16 17:52:04,924:INFO:SubProcess create_model() called ==================================
2023-06-16 17:52:04,924:INFO:Initializing create_model()
2023-06-16 17:52:04,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F3C0F40>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:04,924:INFO:Checking exceptions
2023-06-16 17:52:04,924:INFO:Importing libraries
2023-06-16 17:52:04,924:INFO:Copying training dataset
2023-06-16 17:52:04,940:INFO:Defining folds
2023-06-16 17:52:04,940:INFO:Declaring metric variables
2023-06-16 17:52:04,945:INFO:Importing untrained model
2023-06-16 17:52:04,955:INFO:Logistic Regression Imported successfully
2023-06-16 17:52:04,978:INFO:Starting cross validation
2023-06-16 17:52:04,982:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:52:09,901:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:09,907:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:09,985:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:09,997:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:11,570:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:13,503:INFO:Calculating mean and std
2023-06-16 17:52:13,505:INFO:Creating metrics dataframe
2023-06-16 17:52:14,314:INFO:Uploading results into container
2023-06-16 17:52:14,314:INFO:Uploading model into container now
2023-06-16 17:52:14,315:INFO:_master_model_container: 75
2023-06-16 17:52:14,315:INFO:_display_container: 11
2023-06-16 17:52:14,315:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:52:14,315:INFO:create_model() successfully completed......................................
2023-06-16 17:52:14,391:INFO:SubProcess create_model() end ==================================
2023-06-16 17:52:14,391:INFO:Creating metrics dataframe
2023-06-16 17:52:14,407:INFO:Initializing SVM - Linear Kernel
2023-06-16 17:52:14,407:INFO:Total runtime is 0.15815068085988362 minutes
2023-06-16 17:52:14,411:INFO:SubProcess create_model() called ==================================
2023-06-16 17:52:14,412:INFO:Initializing create_model()
2023-06-16 17:52:14,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F3C0F40>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:14,412:INFO:Checking exceptions
2023-06-16 17:52:14,412:INFO:Importing libraries
2023-06-16 17:52:14,412:INFO:Copying training dataset
2023-06-16 17:52:14,427:INFO:Defining folds
2023-06-16 17:52:14,427:INFO:Declaring metric variables
2023-06-16 17:52:14,433:INFO:Importing untrained model
2023-06-16 17:52:14,438:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:52:14,448:INFO:Starting cross validation
2023-06-16 17:52:14,450:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:52:14,479:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:14,488:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:14,497:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:14,512:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:15,473:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:15,474:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:15,489:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:15,543:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:16,754:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:17,434:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:52:18,738:INFO:Calculating mean and std
2023-06-16 17:52:18,740:INFO:Creating metrics dataframe
2023-06-16 17:52:19,499:INFO:Uploading results into container
2023-06-16 17:52:19,499:INFO:Uploading model into container now
2023-06-16 17:52:19,500:INFO:_master_model_container: 76
2023-06-16 17:52:19,500:INFO:_display_container: 11
2023-06-16 17:52:19,500:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:52:19,501:INFO:create_model() successfully completed......................................
2023-06-16 17:52:19,573:INFO:SubProcess create_model() end ==================================
2023-06-16 17:52:19,573:INFO:Creating metrics dataframe
2023-06-16 17:52:19,590:INFO:Initializing K Neighbors Classifier
2023-06-16 17:52:19,590:INFO:Total runtime is 0.2445409417152405 minutes
2023-06-16 17:52:19,596:INFO:SubProcess create_model() called ==================================
2023-06-16 17:52:19,596:INFO:Initializing create_model()
2023-06-16 17:52:19,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F3C0F40>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:19,596:INFO:Checking exceptions
2023-06-16 17:52:19,596:INFO:Importing libraries
2023-06-16 17:52:19,597:INFO:Copying training dataset
2023-06-16 17:52:19,614:INFO:Defining folds
2023-06-16 17:52:19,614:INFO:Declaring metric variables
2023-06-16 17:52:19,620:INFO:Importing untrained model
2023-06-16 17:52:19,624:INFO:K Neighbors Classifier Imported successfully
2023-06-16 17:52:19,634:INFO:Starting cross validation
2023-06-16 17:52:19,638:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:52:19,664:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:19,672:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:19,681:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:19,698:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:23,998:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:52:26,166:INFO:Calculating mean and std
2023-06-16 17:52:26,168:INFO:Creating metrics dataframe
2023-06-16 17:52:26,918:INFO:Uploading results into container
2023-06-16 17:52:26,919:INFO:Uploading model into container now
2023-06-16 17:52:26,919:INFO:_master_model_container: 77
2023-06-16 17:52:26,920:INFO:_display_container: 11
2023-06-16 17:52:26,920:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 17:52:26,921:INFO:create_model() successfully completed......................................
2023-06-16 17:52:26,993:INFO:SubProcess create_model() end ==================================
2023-06-16 17:52:26,993:INFO:Creating metrics dataframe
2023-06-16 17:52:27,021:INFO:Initializing create_model()
2023-06-16 17:52:27,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:27,021:INFO:Checking exceptions
2023-06-16 17:52:27,024:INFO:Importing libraries
2023-06-16 17:52:27,024:INFO:Copying training dataset
2023-06-16 17:52:27,038:INFO:Defining folds
2023-06-16 17:52:27,038:INFO:Declaring metric variables
2023-06-16 17:52:27,039:INFO:Importing untrained model
2023-06-16 17:52:27,039:INFO:Declaring custom model
2023-06-16 17:52:27,040:INFO:K Neighbors Classifier Imported successfully
2023-06-16 17:52:27,042:INFO:Cross validation set to False
2023-06-16 17:52:27,042:INFO:Fitting Model
2023-06-16 17:52:28,353:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-16 17:52:28,353:INFO:create_model() successfully completed......................................
2023-06-16 17:52:28,430:INFO:Initializing create_model()
2023-06-16 17:52:28,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:28,433:INFO:Checking exceptions
2023-06-16 17:52:28,436:INFO:Importing libraries
2023-06-16 17:52:28,436:INFO:Copying training dataset
2023-06-16 17:52:28,454:INFO:Defining folds
2023-06-16 17:52:28,454:INFO:Declaring metric variables
2023-06-16 17:52:28,455:INFO:Importing untrained model
2023-06-16 17:52:28,455:INFO:Declaring custom model
2023-06-16 17:52:28,456:INFO:Logistic Regression Imported successfully
2023-06-16 17:52:28,458:INFO:Cross validation set to False
2023-06-16 17:52:28,459:INFO:Fitting Model
2023-06-16 17:52:29,510:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:52:29,511:INFO:create_model() successfully completed......................................
2023-06-16 17:52:29,659:INFO:Initializing create_model()
2023-06-16 17:52:29,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:52:29,660:INFO:Checking exceptions
2023-06-16 17:52:29,663:INFO:Importing libraries
2023-06-16 17:52:29,663:INFO:Copying training dataset
2023-06-16 17:52:29,679:INFO:Defining folds
2023-06-16 17:52:29,679:INFO:Declaring metric variables
2023-06-16 17:52:29,680:INFO:Importing untrained model
2023-06-16 17:52:29,681:INFO:Declaring custom model
2023-06-16 17:52:29,681:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:52:29,683:INFO:Cross validation set to False
2023-06-16 17:52:29,684:INFO:Fitting Model
2023-06-16 17:52:30,633:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:52:30,633:INFO:create_model() successfully completed......................................
2023-06-16 17:52:30,750:INFO:_master_model_container: 77
2023-06-16 17:52:30,750:INFO:_display_container: 11
2023-06-16 17:52:30,751:INFO:[KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 17:52:30,752:INFO:compare_models() successfully completed......................................
2023-06-16 17:52:34,840:INFO:Initializing evaluate_model()
2023-06-16 17:52:34,841:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:52:34,874:INFO:Initializing plot_model()
2023-06-16 17:52:34,874:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:52:34,874:INFO:Checking exceptions
2023-06-16 17:52:34,880:INFO:Preloading libraries
2023-06-16 17:52:34,883:INFO:Copying training dataset
2023-06-16 17:52:34,883:INFO:Plot type: pipeline
2023-06-16 17:52:35,142:INFO:Visual Rendered Successfully
2023-06-16 17:52:35,803:INFO:plot_model() successfully completed......................................
2023-06-16 17:52:39,254:INFO:Initializing plot_model()
2023-06-16 17:52:39,254:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:52:39,254:INFO:Checking exceptions
2023-06-16 17:52:39,262:INFO:Preloading libraries
2023-06-16 17:52:39,264:INFO:Copying training dataset
2023-06-16 17:52:39,265:INFO:Plot type: auc
2023-06-16 17:52:39,407:INFO:Fitting Model
2023-06-16 17:52:39,408:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2023-06-16 17:52:39,410:INFO:Scoring test/hold-out set
2023-06-16 17:52:41,505:INFO:Visual Rendered Successfully
2023-06-16 17:52:41,586:INFO:plot_model() successfully completed......................................
2023-06-16 17:52:56,120:INFO:Initializing evaluate_model()
2023-06-16 17:52:56,120:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:52:56,151:INFO:Initializing plot_model()
2023-06-16 17:52:56,151:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:52:56,152:INFO:Checking exceptions
2023-06-16 17:52:56,159:INFO:Preloading libraries
2023-06-16 17:52:56,159:INFO:Copying training dataset
2023-06-16 17:52:56,159:INFO:Plot type: pipeline
2023-06-16 17:52:56,344:INFO:Visual Rendered Successfully
2023-06-16 17:52:56,420:INFO:plot_model() successfully completed......................................
2023-06-16 17:52:58,982:INFO:Initializing plot_model()
2023-06-16 17:52:58,982:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:52:58,982:INFO:Checking exceptions
2023-06-16 17:52:58,988:INFO:Preloading libraries
2023-06-16 17:52:58,989:INFO:Copying training dataset
2023-06-16 17:52:58,989:INFO:Plot type: auc
2023-06-16 17:52:59,128:INFO:Fitting Model
2023-06-16 17:52:59,129:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 17:52:59,130:INFO:Scoring test/hold-out set
2023-06-16 17:52:59,309:INFO:Visual Rendered Successfully
2023-06-16 17:52:59,389:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:11,745:INFO:Initializing evaluate_model()
2023-06-16 17:53:11,745:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:53:11,778:INFO:Initializing plot_model()
2023-06-16 17:53:11,778:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:11,778:INFO:Checking exceptions
2023-06-16 17:53:11,784:INFO:Preloading libraries
2023-06-16 17:53:11,785:INFO:Copying training dataset
2023-06-16 17:53:11,785:INFO:Plot type: pipeline
2023-06-16 17:53:11,967:INFO:Visual Rendered Successfully
2023-06-16 17:53:12,041:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:14,006:INFO:Initializing plot_model()
2023-06-16 17:53:14,006:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:14,006:INFO:Checking exceptions
2023-06-16 17:53:17,671:INFO:Initializing plot_model()
2023-06-16 17:53:17,672:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:17,672:INFO:Checking exceptions
2023-06-16 17:53:17,679:INFO:Preloading libraries
2023-06-16 17:53:17,679:INFO:Copying training dataset
2023-06-16 17:53:17,679:INFO:Plot type: parameter
2023-06-16 17:53:17,684:INFO:Visual Rendered Successfully
2023-06-16 17:53:17,754:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:18,373:INFO:Initializing plot_model()
2023-06-16 17:53:18,374:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:18,374:INFO:Checking exceptions
2023-06-16 17:53:21,080:INFO:Initializing evaluate_model()
2023-06-16 17:53:21,080:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:53:21,113:INFO:Initializing plot_model()
2023-06-16 17:53:21,113:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:21,113:INFO:Checking exceptions
2023-06-16 17:53:21,119:INFO:Preloading libraries
2023-06-16 17:53:21,119:INFO:Copying training dataset
2023-06-16 17:53:21,120:INFO:Plot type: pipeline
2023-06-16 17:53:21,303:INFO:Visual Rendered Successfully
2023-06-16 17:53:21,380:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:34,128:INFO:Initializing plot_model()
2023-06-16 17:53:34,128:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:34,128:INFO:Checking exceptions
2023-06-16 17:53:34,134:INFO:Preloading libraries
2023-06-16 17:53:34,134:INFO:Copying training dataset
2023-06-16 17:53:34,134:INFO:Plot type: feature
2023-06-16 17:53:34,408:INFO:Visual Rendered Successfully
2023-06-16 17:53:34,476:INFO:plot_model() successfully completed......................................
2023-06-16 17:53:36,464:INFO:Initializing plot_model()
2023-06-16 17:53:36,464:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:53:36,465:INFO:Checking exceptions
2023-06-16 17:53:48,387:INFO:Initializing compare_models()
2023-06-16 17:53:48,387:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'svm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:53:48,387:INFO:Checking exceptions
2023-06-16 17:53:48,394:INFO:Preparing display monitor
2023-06-16 17:53:48,451:INFO:Initializing Logistic Regression
2023-06-16 17:53:48,451:INFO:Total runtime is 0.0 minutes
2023-06-16 17:53:48,455:INFO:SubProcess create_model() called ==================================
2023-06-16 17:53:48,456:INFO:Initializing create_model()
2023-06-16 17:53:48,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F815970>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:53:48,456:INFO:Checking exceptions
2023-06-16 17:53:48,456:INFO:Importing libraries
2023-06-16 17:53:48,456:INFO:Copying training dataset
2023-06-16 17:53:48,478:INFO:Defining folds
2023-06-16 17:53:48,478:INFO:Declaring metric variables
2023-06-16 17:53:48,483:INFO:Importing untrained model
2023-06-16 17:53:48,489:INFO:Logistic Regression Imported successfully
2023-06-16 17:53:48,504:INFO:Starting cross validation
2023-06-16 17:53:48,507:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:53:48,543:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:48,554:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:48,568:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:48,579:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:50,367:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:52,160:INFO:Calculating mean and std
2023-06-16 17:53:52,161:INFO:Creating metrics dataframe
2023-06-16 17:53:52,983:INFO:Uploading results into container
2023-06-16 17:53:52,983:INFO:Uploading model into container now
2023-06-16 17:53:52,984:INFO:_master_model_container: 78
2023-06-16 17:53:52,984:INFO:_display_container: 12
2023-06-16 17:53:52,985:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:53:52,985:INFO:create_model() successfully completed......................................
2023-06-16 17:53:53,058:INFO:SubProcess create_model() end ==================================
2023-06-16 17:53:53,058:INFO:Creating metrics dataframe
2023-06-16 17:53:53,074:INFO:Initializing SVM - Linear Kernel
2023-06-16 17:53:53,074:INFO:Total runtime is 0.0770500143369039 minutes
2023-06-16 17:53:53,078:INFO:SubProcess create_model() called ==================================
2023-06-16 17:53:53,078:INFO:Initializing create_model()
2023-06-16 17:53:53,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F815970>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:53:53,078:INFO:Checking exceptions
2023-06-16 17:53:53,079:INFO:Importing libraries
2023-06-16 17:53:53,079:INFO:Copying training dataset
2023-06-16 17:53:53,095:INFO:Defining folds
2023-06-16 17:53:53,095:INFO:Declaring metric variables
2023-06-16 17:53:53,099:INFO:Importing untrained model
2023-06-16 17:53:53,105:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:53:53,113:INFO:Starting cross validation
2023-06-16 17:53:53,115:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:53:53,144:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:53,151:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:53,159:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:53,174:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:53,516:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:53,560:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:53,602:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:53,632:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:54,427:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:53:54,970:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:53:56,386:INFO:Calculating mean and std
2023-06-16 17:53:56,388:INFO:Creating metrics dataframe
2023-06-16 17:53:57,197:INFO:Uploading results into container
2023-06-16 17:53:57,197:INFO:Uploading model into container now
2023-06-16 17:53:57,198:INFO:_master_model_container: 79
2023-06-16 17:53:57,198:INFO:_display_container: 12
2023-06-16 17:53:57,199:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:53:57,199:INFO:create_model() successfully completed......................................
2023-06-16 17:53:57,270:INFO:SubProcess create_model() end ==================================
2023-06-16 17:53:57,270:INFO:Creating metrics dataframe
2023-06-16 17:53:57,307:INFO:Initializing create_model()
2023-06-16 17:53:57,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:53:57,307:INFO:Checking exceptions
2023-06-16 17:53:57,309:INFO:Importing libraries
2023-06-16 17:53:57,309:INFO:Copying training dataset
2023-06-16 17:53:57,324:INFO:Defining folds
2023-06-16 17:53:57,325:INFO:Declaring metric variables
2023-06-16 17:53:57,325:INFO:Importing untrained model
2023-06-16 17:53:57,325:INFO:Declaring custom model
2023-06-16 17:53:57,326:INFO:Logistic Regression Imported successfully
2023-06-16 17:53:57,329:INFO:Cross validation set to False
2023-06-16 17:53:57,329:INFO:Fitting Model
2023-06-16 17:53:58,374:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:53:58,374:INFO:create_model() successfully completed......................................
2023-06-16 17:53:58,470:INFO:Initializing create_model()
2023-06-16 17:53:58,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:53:58,470:INFO:Checking exceptions
2023-06-16 17:53:58,472:INFO:Importing libraries
2023-06-16 17:53:58,473:INFO:Copying training dataset
2023-06-16 17:53:58,488:INFO:Defining folds
2023-06-16 17:53:58,488:INFO:Declaring metric variables
2023-06-16 17:53:58,489:INFO:Importing untrained model
2023-06-16 17:53:58,489:INFO:Declaring custom model
2023-06-16 17:53:58,489:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:53:58,491:INFO:Cross validation set to False
2023-06-16 17:53:58,491:INFO:Fitting Model
2023-06-16 17:53:59,500:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:53:59,500:INFO:create_model() successfully completed......................................
2023-06-16 17:53:59,613:INFO:_master_model_container: 79
2023-06-16 17:53:59,614:INFO:_display_container: 12
2023-06-16 17:53:59,615:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 17:53:59,615:INFO:compare_models() successfully completed......................................
2023-06-16 17:54:05,622:INFO:Initializing evaluate_model()
2023-06-16 17:54:05,623:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:54:05,656:INFO:Initializing plot_model()
2023-06-16 17:54:05,656:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:54:05,657:INFO:Checking exceptions
2023-06-16 17:54:05,663:INFO:Preloading libraries
2023-06-16 17:54:05,663:INFO:Copying training dataset
2023-06-16 17:54:05,663:INFO:Plot type: pipeline
2023-06-16 17:54:05,973:INFO:Visual Rendered Successfully
2023-06-16 17:54:06,061:INFO:plot_model() successfully completed......................................
2023-06-16 17:54:07,333:INFO:Initializing plot_model()
2023-06-16 17:54:07,333:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:54:07,334:INFO:Checking exceptions
2023-06-16 17:54:37,079:INFO:Initializing compare_models()
2023-06-16 17:54:37,079:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'svm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:54:37,079:INFO:Checking exceptions
2023-06-16 17:54:37,086:INFO:Preparing display monitor
2023-06-16 17:54:37,139:INFO:Initializing Logistic Regression
2023-06-16 17:54:37,139:INFO:Total runtime is 0.0 minutes
2023-06-16 17:54:37,144:INFO:SubProcess create_model() called ==================================
2023-06-16 17:54:37,144:INFO:Initializing create_model()
2023-06-16 17:54:37,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03B520910>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:54:37,145:INFO:Checking exceptions
2023-06-16 17:54:37,145:INFO:Importing libraries
2023-06-16 17:54:37,145:INFO:Copying training dataset
2023-06-16 17:54:37,173:INFO:Defining folds
2023-06-16 17:54:37,173:INFO:Declaring metric variables
2023-06-16 17:54:37,178:INFO:Importing untrained model
2023-06-16 17:54:37,183:INFO:Logistic Regression Imported successfully
2023-06-16 17:54:37,197:INFO:Starting cross validation
2023-06-16 17:54:37,200:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:54:37,234:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:37,243:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:37,260:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:37,271:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:39,208:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:41,686:INFO:Calculating mean and std
2023-06-16 17:54:41,688:INFO:Creating metrics dataframe
2023-06-16 17:54:42,485:INFO:Uploading results into container
2023-06-16 17:54:42,486:INFO:Uploading model into container now
2023-06-16 17:54:42,486:INFO:_master_model_container: 80
2023-06-16 17:54:42,487:INFO:_display_container: 13
2023-06-16 17:54:42,487:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:54:42,487:INFO:create_model() successfully completed......................................
2023-06-16 17:54:42,574:INFO:SubProcess create_model() end ==================================
2023-06-16 17:54:42,575:INFO:Creating metrics dataframe
2023-06-16 17:54:42,592:INFO:Initializing SVM - Linear Kernel
2023-06-16 17:54:42,592:INFO:Total runtime is 0.09088394641876221 minutes
2023-06-16 17:54:42,596:INFO:SubProcess create_model() called ==================================
2023-06-16 17:54:42,597:INFO:Initializing create_model()
2023-06-16 17:54:42,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03B520910>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:54:42,597:INFO:Checking exceptions
2023-06-16 17:54:42,597:INFO:Importing libraries
2023-06-16 17:54:42,597:INFO:Copying training dataset
2023-06-16 17:54:42,612:INFO:Defining folds
2023-06-16 17:54:42,613:INFO:Declaring metric variables
2023-06-16 17:54:42,618:INFO:Importing untrained model
2023-06-16 17:54:42,622:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:54:42,632:INFO:Starting cross validation
2023-06-16 17:54:42,635:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:54:42,663:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:42,672:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:42,679:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:42,696:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:43,138:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:43,140:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:43,151:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:43,191:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:44,264:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:54:45,137:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-16 17:54:46,911:INFO:Calculating mean and std
2023-06-16 17:54:46,913:INFO:Creating metrics dataframe
2023-06-16 17:54:47,877:INFO:Uploading results into container
2023-06-16 17:54:47,878:INFO:Uploading model into container now
2023-06-16 17:54:47,878:INFO:_master_model_container: 81
2023-06-16 17:54:47,879:INFO:_display_container: 13
2023-06-16 17:54:47,879:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:54:47,880:INFO:create_model() successfully completed......................................
2023-06-16 17:54:47,975:INFO:SubProcess create_model() end ==================================
2023-06-16 17:54:47,975:INFO:Creating metrics dataframe
2023-06-16 17:54:48,010:INFO:Initializing create_model()
2023-06-16 17:54:48,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:54:48,011:INFO:Checking exceptions
2023-06-16 17:54:48,013:INFO:Importing libraries
2023-06-16 17:54:48,014:INFO:Copying training dataset
2023-06-16 17:54:48,029:INFO:Defining folds
2023-06-16 17:54:48,029:INFO:Declaring metric variables
2023-06-16 17:54:48,029:INFO:Importing untrained model
2023-06-16 17:54:48,029:INFO:Declaring custom model
2023-06-16 17:54:48,030:INFO:Logistic Regression Imported successfully
2023-06-16 17:54:48,032:INFO:Cross validation set to False
2023-06-16 17:54:48,032:INFO:Fitting Model
2023-06-16 17:54:49,144:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:54:49,144:INFO:create_model() successfully completed......................................
2023-06-16 17:54:49,244:INFO:Initializing create_model()
2023-06-16 17:54:49,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:54:49,245:INFO:Checking exceptions
2023-06-16 17:54:49,249:INFO:Importing libraries
2023-06-16 17:54:49,249:INFO:Copying training dataset
2023-06-16 17:54:49,267:INFO:Defining folds
2023-06-16 17:54:49,267:INFO:Declaring metric variables
2023-06-16 17:54:49,268:INFO:Importing untrained model
2023-06-16 17:54:49,268:INFO:Declaring custom model
2023-06-16 17:54:49,269:INFO:SVM - Linear Kernel Imported successfully
2023-06-16 17:54:49,272:INFO:Cross validation set to False
2023-06-16 17:54:49,272:INFO:Fitting Model
2023-06-16 17:54:50,472:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-16 17:54:50,472:INFO:create_model() successfully completed......................................
2023-06-16 17:54:50,581:INFO:_master_model_container: 81
2023-06-16 17:54:50,581:INFO:_display_container: 13
2023-06-16 17:54:50,582:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)]
2023-06-16 17:54:50,582:INFO:compare_models() successfully completed......................................
2023-06-16 17:54:54,729:INFO:Initializing evaluate_model()
2023-06-16 17:54:54,730:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 17:54:54,762:INFO:Initializing plot_model()
2023-06-16 17:54:54,762:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:54:54,762:INFO:Checking exceptions
2023-06-16 17:54:54,769:INFO:Preloading libraries
2023-06-16 17:54:54,769:INFO:Copying training dataset
2023-06-16 17:54:54,769:INFO:Plot type: pipeline
2023-06-16 17:54:55,165:INFO:Visual Rendered Successfully
2023-06-16 17:54:55,242:INFO:plot_model() successfully completed......................................
2023-06-16 17:54:56,973:INFO:Initializing plot_model()
2023-06-16 17:54:56,973:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:54:56,974:INFO:Checking exceptions
2023-06-16 17:54:56,981:INFO:Preloading libraries
2023-06-16 17:54:56,981:INFO:Copying training dataset
2023-06-16 17:54:56,981:INFO:Plot type: auc
2023-06-16 17:54:57,123:INFO:Fitting Model
2023-06-16 17:54:57,132:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 17:54:57,132:INFO:Scoring test/hold-out set
2023-06-16 17:54:57,313:INFO:Visual Rendered Successfully
2023-06-16 17:54:57,426:INFO:plot_model() successfully completed......................................
2023-06-16 17:55:21,382:INFO:Initializing evaluate_model()
2023-06-16 17:55:21,382:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-06-16 17:55:21,415:INFO:Initializing plot_model()
2023-06-16 17:55:21,416:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:21,416:INFO:Checking exceptions
2023-06-16 17:55:21,422:INFO:Preloading libraries
2023-06-16 17:55:21,422:INFO:Copying training dataset
2023-06-16 17:55:21,422:INFO:Plot type: pipeline
2023-06-16 17:55:21,629:INFO:Visual Rendered Successfully
2023-06-16 17:55:21,712:INFO:plot_model() successfully completed......................................
2023-06-16 17:55:22,979:INFO:Initializing plot_model()
2023-06-16 17:55:22,980:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:22,980:INFO:Checking exceptions
2023-06-16 17:55:22,986:INFO:Preloading libraries
2023-06-16 17:55:22,987:INFO:Copying training dataset
2023-06-16 17:55:22,987:INFO:Plot type: auc
2023-06-16 17:55:23,125:INFO:Fitting Model
2023-06-16 17:55:23,126:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 17:55:23,127:INFO:Scoring test/hold-out set
2023-06-16 17:55:23,305:INFO:Visual Rendered Successfully
2023-06-16 17:55:23,392:INFO:plot_model() successfully completed......................................
2023-06-16 17:55:31,489:INFO:Initializing evaluate_model()
2023-06-16 17:55:31,489:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=True)
2023-06-16 17:55:31,521:INFO:Initializing plot_model()
2023-06-16 17:55:31,521:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:31,521:INFO:Checking exceptions
2023-06-16 17:55:31,527:INFO:Preloading libraries
2023-06-16 17:55:31,527:INFO:Copying training dataset
2023-06-16 17:55:31,527:INFO:Plot type: pipeline
2023-06-16 17:55:31,806:INFO:Visual Rendered Successfully
2023-06-16 17:55:31,884:INFO:plot_model() successfully completed......................................
2023-06-16 17:55:32,835:INFO:Initializing plot_model()
2023-06-16 17:55:32,835:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:32,835:INFO:Checking exceptions
2023-06-16 17:55:36,894:INFO:Initializing plot_model()
2023-06-16 17:55:36,894:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=True, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, system=True)
2023-06-16 17:55:36,894:INFO:Checking exceptions
2023-06-16 17:55:45,034:INFO:Initializing compare_models()
2023-06-16 17:55:45,035:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'dc'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'dc'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:55:45,035:INFO:Checking exceptions
2023-06-16 17:56:52,817:INFO:Initializing compare_models()
2023-06-16 17:56:52,817:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:56:52,817:INFO:Checking exceptions
2023-06-16 17:56:52,823:INFO:Preparing display monitor
2023-06-16 17:56:52,881:INFO:Initializing Logistic Regression
2023-06-16 17:56:52,881:INFO:Total runtime is 0.0 minutes
2023-06-16 17:56:52,886:INFO:SubProcess create_model() called ==================================
2023-06-16 17:56:52,887:INFO:Initializing create_model()
2023-06-16 17:56:52,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F81D940>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:56:52,887:INFO:Checking exceptions
2023-06-16 17:56:52,887:INFO:Importing libraries
2023-06-16 17:56:52,887:INFO:Copying training dataset
2023-06-16 17:56:52,916:INFO:Defining folds
2023-06-16 17:56:52,919:INFO:Declaring metric variables
2023-06-16 17:56:52,925:INFO:Importing untrained model
2023-06-16 17:56:52,931:INFO:Logistic Regression Imported successfully
2023-06-16 17:56:52,943:INFO:Starting cross validation
2023-06-16 17:56:52,946:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:56:52,982:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:52,991:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:53,000:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:53,009:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:54,609:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:56:56,675:INFO:Calculating mean and std
2023-06-16 17:56:56,676:INFO:Creating metrics dataframe
2023-06-16 17:56:57,484:INFO:Uploading results into container
2023-06-16 17:56:57,485:INFO:Uploading model into container now
2023-06-16 17:56:57,486:INFO:_master_model_container: 82
2023-06-16 17:56:57,486:INFO:_display_container: 14
2023-06-16 17:56:57,487:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:56:57,487:INFO:create_model() successfully completed......................................
2023-06-16 17:56:57,562:INFO:SubProcess create_model() end ==================================
2023-06-16 17:56:57,562:INFO:Creating metrics dataframe
2023-06-16 17:56:57,589:INFO:Initializing create_model()
2023-06-16 17:56:57,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:56:57,590:INFO:Checking exceptions
2023-06-16 17:56:57,592:INFO:Importing libraries
2023-06-16 17:56:57,592:INFO:Copying training dataset
2023-06-16 17:56:57,606:INFO:Defining folds
2023-06-16 17:56:57,606:INFO:Declaring metric variables
2023-06-16 17:56:57,607:INFO:Importing untrained model
2023-06-16 17:56:57,607:INFO:Declaring custom model
2023-06-16 17:56:57,607:INFO:Logistic Regression Imported successfully
2023-06-16 17:56:57,609:INFO:Cross validation set to False
2023-06-16 17:56:57,609:INFO:Fitting Model
2023-06-16 17:56:59,088:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:56:59,088:INFO:create_model() successfully completed......................................
2023-06-16 17:56:59,207:INFO:_master_model_container: 82
2023-06-16 17:56:59,207:INFO:_display_container: 14
2023-06-16 17:56:59,208:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:56:59,208:INFO:compare_models() successfully completed......................................
2023-06-16 17:58:06,173:INFO:Initializing compare_models()
2023-06-16 17:58:06,173:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:58:06,173:INFO:Checking exceptions
2023-06-16 17:58:06,179:INFO:Preparing display monitor
2023-06-16 17:58:06,242:INFO:Initializing Logistic Regression
2023-06-16 17:58:06,242:INFO:Total runtime is 0.0 minutes
2023-06-16 17:58:06,246:INFO:SubProcess create_model() called ==================================
2023-06-16 17:58:06,247:INFO:Initializing create_model()
2023-06-16 17:58:06,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F835E20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:58:06,247:INFO:Checking exceptions
2023-06-16 17:58:06,247:INFO:Importing libraries
2023-06-16 17:58:06,247:INFO:Copying training dataset
2023-06-16 17:58:06,264:INFO:Defining folds
2023-06-16 17:58:06,264:INFO:Declaring metric variables
2023-06-16 17:58:06,269:INFO:Importing untrained model
2023-06-16 17:58:06,273:INFO:Logistic Regression Imported successfully
2023-06-16 17:58:06,284:INFO:Starting cross validation
2023-06-16 17:58:06,287:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:58:06,316:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:06,324:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:06,333:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:06,346:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:08,012:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:09,999:INFO:Calculating mean and std
2023-06-16 17:58:10,001:INFO:Creating metrics dataframe
2023-06-16 17:58:10,867:INFO:Uploading results into container
2023-06-16 17:58:10,868:INFO:Uploading model into container now
2023-06-16 17:58:10,868:INFO:_master_model_container: 83
2023-06-16 17:58:10,869:INFO:_display_container: 15
2023-06-16 17:58:10,869:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:58:10,869:INFO:create_model() successfully completed......................................
2023-06-16 17:58:10,944:INFO:SubProcess create_model() end ==================================
2023-06-16 17:58:10,945:INFO:Creating metrics dataframe
2023-06-16 17:58:10,968:INFO:Initializing Decision Tree Classifier
2023-06-16 17:58:10,968:INFO:Total runtime is 0.07876664797465006 minutes
2023-06-16 17:58:10,974:INFO:SubProcess create_model() called ==================================
2023-06-16 17:58:10,974:INFO:Initializing create_model()
2023-06-16 17:58:10,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C03F835E20>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:58:10,974:INFO:Checking exceptions
2023-06-16 17:58:10,975:INFO:Importing libraries
2023-06-16 17:58:10,975:INFO:Copying training dataset
2023-06-16 17:58:10,990:INFO:Defining folds
2023-06-16 17:58:10,991:INFO:Declaring metric variables
2023-06-16 17:58:10,995:INFO:Importing untrained model
2023-06-16 17:58:11,000:INFO:Decision Tree Classifier Imported successfully
2023-06-16 17:58:11,010:INFO:Starting cross validation
2023-06-16 17:58:11,013:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:58:11,047:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:11,055:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:11,063:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:11,079:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:32,745:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '21.2.3', 'setuptools': '57.4.0', 'pycaret': '3.0.2', 'IPython': '7.28.0', 'ipywidgets': '8.0.6', 'tqdm': '4.64.0', 'numpy': '1.21.2', 'pandas': '1.3.5', 'jinja2': '3.1.2', 'scipy': '1.7.1', 'joblib': '1.2.0', 'sklearn': '1.1.0', 'pyod': '1.0.9', 'imblearn': '0.9.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.4.3', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.9.7', 'machine': 'AMD64'}}
  warnings.warn(

2023-06-16 17:58:49,995:INFO:Calculating mean and std
2023-06-16 17:58:49,997:INFO:Creating metrics dataframe
2023-06-16 17:58:50,778:INFO:Uploading results into container
2023-06-16 17:58:50,779:INFO:Uploading model into container now
2023-06-16 17:58:50,780:INFO:_master_model_container: 84
2023-06-16 17:58:50,780:INFO:_display_container: 15
2023-06-16 17:58:50,780:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best')
2023-06-16 17:58:50,781:INFO:create_model() successfully completed......................................
2023-06-16 17:58:50,853:INFO:SubProcess create_model() end ==================================
2023-06-16 17:58:50,853:INFO:Creating metrics dataframe
2023-06-16 17:58:50,880:INFO:Initializing create_model()
2023-06-16 17:58:50,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C039F3FAC0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:58:50,880:INFO:Checking exceptions
2023-06-16 17:58:50,883:INFO:Importing libraries
2023-06-16 17:58:50,883:INFO:Copying training dataset
2023-06-16 17:58:50,907:INFO:Defining folds
2023-06-16 17:58:50,907:INFO:Declaring metric variables
2023-06-16 17:58:50,908:INFO:Importing untrained model
2023-06-16 17:58:50,908:INFO:Declaring custom model
2023-06-16 17:58:50,909:INFO:Decision Tree Classifier Imported successfully
2023-06-16 17:58:50,912:INFO:Cross validation set to False
2023-06-16 17:58:50,912:INFO:Fitting Model
2023-06-16 17:59:12,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:59:12,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:59:12,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:59:12,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 17:59:14,254:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 17:59:15,192:INFO:PyCaret ClassificationExperiment
2023-06-16 17:59:15,193:INFO:Logging name: clf-default-name
2023-06-16 17:59:15,193:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 17:59:15,193:INFO:version 3.0.2
2023-06-16 17:59:15,193:INFO:Initializing setup()
2023-06-16 17:59:15,193:INFO:self.USI: 99b9
2023-06-16 17:59:15,193:INFO:self._variable_keys: {'seed', 'is_multiclass', '_ml_usecase', 'y', 'fix_imbalance', 'exp_id', 'target_param', 'logging_param', 'memory', 'USI', 'fold_shuffle_param', '_available_plots', 'data', 'exp_name_log', 'idx', 'html_param', 'n_jobs_param', 'pipeline', 'fold_generator', 'log_plots_param', 'y_train', 'gpu_param', 'X', 'X_test', 'X_train', 'y_test', 'gpu_n_jobs_param', 'fold_groups_param'}
2023-06-16 17:59:15,193:INFO:Checking environment
2023-06-16 17:59:15,193:INFO:python_version: 3.9.7
2023-06-16 17:59:15,193:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 17:59:15,193:INFO:machine: AMD64
2023-06-16 17:59:15,193:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 17:59:15,193:INFO:Memory: svmem(total=17120436224, available=3108737024, percent=81.8, used=14011699200, free=3108737024)
2023-06-16 17:59:15,193:INFO:Physical Core: 4
2023-06-16 17:59:15,193:INFO:Logical Core: 4
2023-06-16 17:59:15,194:INFO:Checking libraries
2023-06-16 17:59:15,194:INFO:System:
2023-06-16 17:59:15,194:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 17:59:15,194:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 17:59:15,194:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 17:59:15,194:INFO:PyCaret required dependencies:
2023-06-16 17:59:15,194:INFO:                 pip: 21.2.3
2023-06-16 17:59:15,194:INFO:          setuptools: 57.4.0
2023-06-16 17:59:15,195:INFO:             pycaret: 3.0.2
2023-06-16 17:59:15,195:INFO:             IPython: 7.28.0
2023-06-16 17:59:15,195:INFO:          ipywidgets: 8.0.6
2023-06-16 17:59:15,195:INFO:                tqdm: 4.64.0
2023-06-16 17:59:15,195:INFO:               numpy: 1.22.4
2023-06-16 17:59:15,195:INFO:              pandas: 1.3.5
2023-06-16 17:59:15,195:INFO:              jinja2: 3.1.2
2023-06-16 17:59:15,195:INFO:               scipy: 1.7.1
2023-06-16 17:59:15,195:INFO:              joblib: 1.2.0
2023-06-16 17:59:15,195:INFO:             sklearn: 1.1.0
2023-06-16 17:59:15,195:INFO:                pyod: 1.0.9
2023-06-16 17:59:15,195:INFO:            imblearn: 0.9.1
2023-06-16 17:59:15,195:INFO:   category_encoders: 2.6.1
2023-06-16 17:59:15,195:INFO:            lightgbm: 3.3.5
2023-06-16 17:59:15,195:INFO:               numba: 0.57.0
2023-06-16 17:59:15,195:INFO:            requests: 2.31.0
2023-06-16 17:59:15,196:INFO:          matplotlib: 3.4.3
2023-06-16 17:59:15,196:INFO:          scikitplot: 0.3.7
2023-06-16 17:59:15,196:INFO:         yellowbrick: 1.5
2023-06-16 17:59:15,196:INFO:              plotly: 5.8.0
2023-06-16 17:59:15,196:INFO:             kaleido: 0.2.1
2023-06-16 17:59:15,196:INFO:         statsmodels: 0.14.0
2023-06-16 17:59:15,196:INFO:              sktime: 0.17.0
2023-06-16 17:59:15,196:INFO:               tbats: 1.1.3
2023-06-16 17:59:15,196:INFO:            pmdarima: 2.0.3
2023-06-16 17:59:15,196:INFO:              psutil: 5.9.0
2023-06-16 17:59:15,196:INFO:PyCaret optional dependencies:
2023-06-16 17:59:15,230:INFO:                shap: Not installed
2023-06-16 17:59:15,231:INFO:           interpret: Not installed
2023-06-16 17:59:15,231:INFO:                umap: Not installed
2023-06-16 17:59:15,231:INFO:    pandas_profiling: Not installed
2023-06-16 17:59:15,231:INFO:  explainerdashboard: Not installed
2023-06-16 17:59:15,231:INFO:             autoviz: Not installed
2023-06-16 17:59:15,231:INFO:           fairlearn: Not installed
2023-06-16 17:59:15,231:INFO:             xgboost: Not installed
2023-06-16 17:59:15,231:INFO:            catboost: Not installed
2023-06-16 17:59:15,231:INFO:              kmodes: Not installed
2023-06-16 17:59:15,231:INFO:             mlxtend: Not installed
2023-06-16 17:59:15,231:INFO:       statsforecast: Not installed
2023-06-16 17:59:15,231:INFO:        tune_sklearn: Not installed
2023-06-16 17:59:15,231:INFO:                 ray: Not installed
2023-06-16 17:59:15,231:INFO:            hyperopt: Not installed
2023-06-16 17:59:15,231:INFO:              optuna: Not installed
2023-06-16 17:59:15,231:INFO:               skopt: Not installed
2023-06-16 17:59:15,231:INFO:              mlflow: Not installed
2023-06-16 17:59:15,231:INFO:              gradio: Not installed
2023-06-16 17:59:15,231:INFO:             fastapi: Not installed
2023-06-16 17:59:15,231:INFO:             uvicorn: Not installed
2023-06-16 17:59:15,232:INFO:              m2cgen: Not installed
2023-06-16 17:59:15,232:INFO:           evidently: Not installed
2023-06-16 17:59:15,232:INFO:               fugue: Not installed
2023-06-16 17:59:15,232:INFO:           streamlit: Not installed
2023-06-16 17:59:15,232:INFO:             prophet: Not installed
2023-06-16 17:59:15,232:INFO:None
2023-06-16 17:59:15,232:INFO:Set up data.
2023-06-16 17:59:15,312:INFO:Set up train/test split.
2023-06-16 17:59:15,348:INFO:Set up index.
2023-06-16 17:59:15,349:INFO:Set up folding strategy.
2023-06-16 17:59:15,349:INFO:Assigning column types.
2023-06-16 17:59:15,365:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 17:59:15,428:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,430:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,652:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 17:59:15,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,756:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,815:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 17:59:15,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,852:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 17:59:15,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:15,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,065:INFO:Preparing preprocessing pipeline...
2023-06-16 17:59:16,068:INFO:Set up simple imputation.
2023-06-16 17:59:16,086:INFO:Set up encoding of ordinal features.
2023-06-16 17:59:16,104:INFO:Set up encoding of categorical features.
2023-06-16 17:59:16,104:INFO:Set up removing multicollinearity.
2023-06-16 17:59:16,104:INFO:Set up imbalanced handling.
2023-06-16 17:59:16,104:INFO:Set up feature selection.
2023-06-16 17:59:16,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:16,204:INFO:Set up column name cleaning.
2023-06-16 17:59:16,657:INFO:Finished creating preprocessing pipeline.
2023-06-16 17:59:16,738:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x0000017FF894BA60>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 17:59:16,738:INFO:Creating final display dataframe.
2023-06-16 17:59:17,598:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              99b9
2023-06-16 17:59:17,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:17,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:17,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:17,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 17:59:17,811:INFO:setup() successfully completed in 3.35s...............
2023-06-16 17:59:23,648:INFO:Initializing compare_models()
2023-06-16 17:59:23,648:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 17:59:23,648:INFO:Checking exceptions
2023-06-16 17:59:23,657:INFO:Preparing display monitor
2023-06-16 17:59:23,706:INFO:Initializing Logistic Regression
2023-06-16 17:59:23,707:INFO:Total runtime is 1.6681353251139323e-05 minutes
2023-06-16 17:59:23,711:INFO:SubProcess create_model() called ==================================
2023-06-16 17:59:23,711:INFO:Initializing create_model()
2023-06-16 17:59:23,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FE63520A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:59:23,711:INFO:Checking exceptions
2023-06-16 17:59:23,711:INFO:Importing libraries
2023-06-16 17:59:23,711:INFO:Copying training dataset
2023-06-16 17:59:23,728:INFO:Defining folds
2023-06-16 17:59:23,729:INFO:Declaring metric variables
2023-06-16 17:59:23,750:INFO:Importing untrained model
2023-06-16 17:59:23,757:INFO:Logistic Regression Imported successfully
2023-06-16 17:59:23,768:INFO:Starting cross validation
2023-06-16 17:59:23,771:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:59:31,732:INFO:Calculating mean and std
2023-06-16 17:59:31,733:INFO:Creating metrics dataframe
2023-06-16 17:59:32,559:INFO:Uploading results into container
2023-06-16 17:59:32,560:INFO:Uploading model into container now
2023-06-16 17:59:32,561:INFO:_master_model_container: 1
2023-06-16 17:59:32,561:INFO:_display_container: 2
2023-06-16 17:59:32,562:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 17:59:32,562:INFO:create_model() successfully completed......................................
2023-06-16 17:59:32,631:INFO:SubProcess create_model() end ==================================
2023-06-16 17:59:32,632:INFO:Creating metrics dataframe
2023-06-16 17:59:32,648:INFO:Initializing Decision Tree Classifier
2023-06-16 17:59:32,648:INFO:Total runtime is 0.14902259906133017 minutes
2023-06-16 17:59:32,653:INFO:SubProcess create_model() called ==================================
2023-06-16 17:59:32,654:INFO:Initializing create_model()
2023-06-16 17:59:32,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017FE63520A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:59:32,654:INFO:Checking exceptions
2023-06-16 17:59:32,654:INFO:Importing libraries
2023-06-16 17:59:32,654:INFO:Copying training dataset
2023-06-16 17:59:32,671:INFO:Defining folds
2023-06-16 17:59:32,671:INFO:Declaring metric variables
2023-06-16 17:59:32,676:INFO:Importing untrained model
2023-06-16 17:59:32,682:INFO:Decision Tree Classifier Imported successfully
2023-06-16 17:59:32,696:INFO:Starting cross validation
2023-06-16 17:59:32,698:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 17:59:36,030:INFO:Calculating mean and std
2023-06-16 17:59:36,031:INFO:Creating metrics dataframe
2023-06-16 17:59:36,834:INFO:Uploading results into container
2023-06-16 17:59:36,834:INFO:Uploading model into container now
2023-06-16 17:59:36,835:INFO:_master_model_container: 2
2023-06-16 17:59:36,835:INFO:_display_container: 2
2023-06-16 17:59:36,835:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best')
2023-06-16 17:59:36,835:INFO:create_model() successfully completed......................................
2023-06-16 17:59:36,903:INFO:SubProcess create_model() end ==================================
2023-06-16 17:59:36,903:INFO:Creating metrics dataframe
2023-06-16 17:59:36,931:INFO:Initializing create_model()
2023-06-16 17:59:36,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017FE63528B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 17:59:36,932:INFO:Checking exceptions
2023-06-16 17:59:36,935:INFO:Importing libraries
2023-06-16 17:59:36,936:INFO:Copying training dataset
2023-06-16 17:59:36,952:INFO:Defining folds
2023-06-16 17:59:36,952:INFO:Declaring metric variables
2023-06-16 17:59:36,953:INFO:Importing untrained model
2023-06-16 17:59:36,953:INFO:Declaring custom model
2023-06-16 17:59:36,953:INFO:Decision Tree Classifier Imported successfully
2023-06-16 17:59:36,956:INFO:Cross validation set to False
2023-06-16 17:59:36,956:INFO:Fitting Model
2023-06-16 18:00:09,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:09,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:09,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:09,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:10,141:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 18:00:10,962:INFO:PyCaret ClassificationExperiment
2023-06-16 18:00:10,962:INFO:Logging name: clf-default-name
2023-06-16 18:00:10,962:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 18:00:10,962:INFO:version 3.0.2
2023-06-16 18:00:10,962:INFO:Initializing setup()
2023-06-16 18:00:10,962:INFO:self.USI: 2d2c
2023-06-16 18:00:10,962:INFO:self._variable_keys: {'memory', 'gpu_n_jobs_param', 'fix_imbalance', 'log_plots_param', 'y_train', 'is_multiclass', 'X_test', 'USI', 'y_test', 'logging_param', 'exp_id', 'X_train', 'fold_shuffle_param', 'exp_name_log', 'pipeline', '_available_plots', 'y', '_ml_usecase', 'fold_groups_param', 'data', 'fold_generator', 'idx', 'gpu_param', 'html_param', 'seed', 'n_jobs_param', 'X', 'target_param'}
2023-06-16 18:00:10,962:INFO:Checking environment
2023-06-16 18:00:10,962:INFO:python_version: 3.9.7
2023-06-16 18:00:10,962:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 18:00:10,962:INFO:machine: AMD64
2023-06-16 18:00:10,962:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 18:00:10,962:INFO:Memory: svmem(total=17120436224, available=2701078528, percent=84.2, used=14419357696, free=2701078528)
2023-06-16 18:00:10,962:INFO:Physical Core: 4
2023-06-16 18:00:10,962:INFO:Logical Core: 4
2023-06-16 18:00:10,963:INFO:Checking libraries
2023-06-16 18:00:10,963:INFO:System:
2023-06-16 18:00:10,963:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 18:00:10,963:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 18:00:10,963:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 18:00:10,963:INFO:PyCaret required dependencies:
2023-06-16 18:00:10,963:INFO:                 pip: 21.2.3
2023-06-16 18:00:10,963:INFO:          setuptools: 57.4.0
2023-06-16 18:00:10,963:INFO:             pycaret: 3.0.2
2023-06-16 18:00:10,964:INFO:             IPython: 7.28.0
2023-06-16 18:00:10,964:INFO:          ipywidgets: 8.0.6
2023-06-16 18:00:10,964:INFO:                tqdm: 4.64.0
2023-06-16 18:00:10,964:INFO:               numpy: 1.22.4
2023-06-16 18:00:10,964:INFO:              pandas: 1.3.5
2023-06-16 18:00:10,964:INFO:              jinja2: 3.1.2
2023-06-16 18:00:10,965:INFO:               scipy: 1.7.1
2023-06-16 18:00:10,965:INFO:              joblib: 1.2.0
2023-06-16 18:00:10,965:INFO:             sklearn: 1.1.0
2023-06-16 18:00:10,965:INFO:                pyod: 1.0.9
2023-06-16 18:00:10,965:INFO:            imblearn: 0.9.1
2023-06-16 18:00:10,965:INFO:   category_encoders: 2.6.1
2023-06-16 18:00:10,965:INFO:            lightgbm: 3.3.5
2023-06-16 18:00:10,965:INFO:               numba: 0.57.0
2023-06-16 18:00:10,965:INFO:            requests: 2.31.0
2023-06-16 18:00:10,965:INFO:          matplotlib: 3.4.3
2023-06-16 18:00:10,965:INFO:          scikitplot: 0.3.7
2023-06-16 18:00:10,966:INFO:         yellowbrick: 1.5
2023-06-16 18:00:10,966:INFO:              plotly: 5.8.0
2023-06-16 18:00:10,966:INFO:             kaleido: 0.2.1
2023-06-16 18:00:10,966:INFO:         statsmodels: 0.14.0
2023-06-16 18:00:10,966:INFO:              sktime: 0.17.0
2023-06-16 18:00:10,966:INFO:               tbats: 1.1.3
2023-06-16 18:00:10,966:INFO:            pmdarima: 2.0.3
2023-06-16 18:00:10,966:INFO:              psutil: 5.9.0
2023-06-16 18:00:10,966:INFO:PyCaret optional dependencies:
2023-06-16 18:00:10,987:INFO:                shap: Not installed
2023-06-16 18:00:10,987:INFO:           interpret: Not installed
2023-06-16 18:00:10,987:INFO:                umap: Not installed
2023-06-16 18:00:10,987:INFO:    pandas_profiling: Not installed
2023-06-16 18:00:10,987:INFO:  explainerdashboard: Not installed
2023-06-16 18:00:10,987:INFO:             autoviz: Not installed
2023-06-16 18:00:10,987:INFO:           fairlearn: Not installed
2023-06-16 18:00:10,987:INFO:             xgboost: Not installed
2023-06-16 18:00:10,987:INFO:            catboost: Not installed
2023-06-16 18:00:10,987:INFO:              kmodes: Not installed
2023-06-16 18:00:10,988:INFO:             mlxtend: Not installed
2023-06-16 18:00:10,988:INFO:       statsforecast: Not installed
2023-06-16 18:00:10,988:INFO:        tune_sklearn: Not installed
2023-06-16 18:00:10,988:INFO:                 ray: Not installed
2023-06-16 18:00:10,988:INFO:            hyperopt: Not installed
2023-06-16 18:00:10,988:INFO:              optuna: Not installed
2023-06-16 18:00:10,988:INFO:               skopt: Not installed
2023-06-16 18:00:10,988:INFO:              mlflow: Not installed
2023-06-16 18:00:10,988:INFO:              gradio: Not installed
2023-06-16 18:00:10,988:INFO:             fastapi: Not installed
2023-06-16 18:00:10,988:INFO:             uvicorn: Not installed
2023-06-16 18:00:10,988:INFO:              m2cgen: Not installed
2023-06-16 18:00:10,988:INFO:           evidently: Not installed
2023-06-16 18:00:10,988:INFO:               fugue: Not installed
2023-06-16 18:00:10,988:INFO:           streamlit: Not installed
2023-06-16 18:00:10,988:INFO:             prophet: Not installed
2023-06-16 18:00:10,988:INFO:None
2023-06-16 18:00:10,988:INFO:Set up data.
2023-06-16 18:00:11,051:INFO:Set up train/test split.
2023-06-16 18:00:11,076:INFO:Set up index.
2023-06-16 18:00:11,078:INFO:Set up folding strategy.
2023-06-16 18:00:11,078:INFO:Assigning column types.
2023-06-16 18:00:11,089:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 18:00:11,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,323:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 18:00:11,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,470:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:11,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,502:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 18:00:11,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,678:INFO:Preparing preprocessing pipeline...
2023-06-16 18:00:11,680:INFO:Set up simple imputation.
2023-06-16 18:00:11,692:INFO:Set up encoding of ordinal features.
2023-06-16 18:00:11,702:INFO:Set up encoding of categorical features.
2023-06-16 18:00:11,702:INFO:Set up removing multicollinearity.
2023-06-16 18:00:11,702:INFO:Set up imbalanced handling.
2023-06-16 18:00:11,702:INFO:Set up feature selection.
2023-06-16 18:00:11,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:11,791:INFO:Set up column name cleaning.
2023-06-16 18:00:12,172:INFO:Finished creating preprocessing pipeline.
2023-06-16 18:00:12,237:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002198AAB28B0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 18:00:12,237:INFO:Creating final display dataframe.
2023-06-16 18:00:12,397:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              2d2c
2023-06-16 18:00:12,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:12,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:12,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:12,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:12,626:INFO:setup() successfully completed in 2.29s...............
2023-06-16 18:00:13,512:INFO:Initializing compare_models()
2023-06-16 18:00:13,512:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 18:00:13,512:INFO:Checking exceptions
2023-06-16 18:00:13,522:INFO:Preparing display monitor
2023-06-16 18:00:13,572:INFO:Initializing Logistic Regression
2023-06-16 18:00:13,572:INFO:Total runtime is 0.0 minutes
2023-06-16 18:00:13,577:INFO:SubProcess create_model() called ==================================
2023-06-16 18:00:13,578:INFO:Initializing create_model()
2023-06-16 18:00:13,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002198D64CFA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:00:13,578:INFO:Checking exceptions
2023-06-16 18:00:13,579:INFO:Importing libraries
2023-06-16 18:00:13,579:INFO:Copying training dataset
2023-06-16 18:00:13,597:INFO:Defining folds
2023-06-16 18:00:13,597:INFO:Declaring metric variables
2023-06-16 18:00:13,601:INFO:Importing untrained model
2023-06-16 18:00:13,609:INFO:Logistic Regression Imported successfully
2023-06-16 18:00:13,623:INFO:Starting cross validation
2023-06-16 18:00:13,625:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:00:22,876:INFO:Calculating mean and std
2023-06-16 18:00:22,877:INFO:Creating metrics dataframe
2023-06-16 18:00:23,738:INFO:Uploading results into container
2023-06-16 18:00:23,738:INFO:Uploading model into container now
2023-06-16 18:00:23,739:INFO:_master_model_container: 1
2023-06-16 18:00:23,739:INFO:_display_container: 2
2023-06-16 18:00:23,740:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:00:23,740:INFO:create_model() successfully completed......................................
2023-06-16 18:00:23,808:INFO:SubProcess create_model() end ==================================
2023-06-16 18:00:23,808:INFO:Creating metrics dataframe
2023-06-16 18:00:23,825:INFO:Initializing Decision Tree Classifier
2023-06-16 18:00:23,826:INFO:Total runtime is 0.17090052366256714 minutes
2023-06-16 18:00:23,829:INFO:SubProcess create_model() called ==================================
2023-06-16 18:00:23,830:INFO:Initializing create_model()
2023-06-16 18:00:23,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002198D64CFA0>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:00:23,830:INFO:Checking exceptions
2023-06-16 18:00:23,830:INFO:Importing libraries
2023-06-16 18:00:23,830:INFO:Copying training dataset
2023-06-16 18:00:23,850:INFO:Defining folds
2023-06-16 18:00:23,851:INFO:Declaring metric variables
2023-06-16 18:00:23,855:INFO:Importing untrained model
2023-06-16 18:00:23,862:INFO:Decision Tree Classifier Imported successfully
2023-06-16 18:00:23,870:INFO:Starting cross validation
2023-06-16 18:00:23,873:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:00:27,254:INFO:Calculating mean and std
2023-06-16 18:00:27,255:INFO:Creating metrics dataframe
2023-06-16 18:00:28,053:INFO:Uploading results into container
2023-06-16 18:00:28,054:INFO:Uploading model into container now
2023-06-16 18:00:28,054:INFO:_master_model_container: 2
2023-06-16 18:00:28,054:INFO:_display_container: 2
2023-06-16 18:00:28,055:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best')
2023-06-16 18:00:28,055:INFO:create_model() successfully completed......................................
2023-06-16 18:00:28,117:INFO:SubProcess create_model() end ==================================
2023-06-16 18:00:28,117:INFO:Creating metrics dataframe
2023-06-16 18:00:28,147:INFO:Initializing create_model()
2023-06-16 18:00:28,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000219F8547B20>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=420, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:00:28,147:INFO:Checking exceptions
2023-06-16 18:00:28,150:INFO:Importing libraries
2023-06-16 18:00:28,150:INFO:Copying training dataset
2023-06-16 18:00:28,169:INFO:Defining folds
2023-06-16 18:00:28,169:INFO:Declaring metric variables
2023-06-16 18:00:28,169:INFO:Importing untrained model
2023-06-16 18:00:28,169:INFO:Declaring custom model
2023-06-16 18:00:28,170:INFO:Decision Tree Classifier Imported successfully
2023-06-16 18:00:28,174:INFO:Cross validation set to False
2023-06-16 18:00:28,174:INFO:Fitting Model
2023-06-16 18:00:48,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:48,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:48,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:48,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:00:49,208:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 18:00:50,181:INFO:PyCaret ClassificationExperiment
2023-06-16 18:00:50,181:INFO:Logging name: clf-default-name
2023-06-16 18:00:50,181:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 18:00:50,181:INFO:version 3.0.2
2023-06-16 18:00:50,181:INFO:Initializing setup()
2023-06-16 18:00:50,181:INFO:self.USI: d317
2023-06-16 18:00:50,181:INFO:self._variable_keys: {'gpu_param', 'USI', 'X', 'X_test', 'y_train', 'fold_generator', 'is_multiclass', 'html_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'y', 'target_param', 'X_train', 'idx', 'logging_param', 'log_plots_param', 'n_jobs_param', 'exp_id', 'pipeline', 'y_test', 'fix_imbalance', 'memory', 'data', 'seed', 'fold_groups_param', 'exp_name_log', '_ml_usecase', '_available_plots'}
2023-06-16 18:00:50,181:INFO:Checking environment
2023-06-16 18:00:50,181:INFO:python_version: 3.9.7
2023-06-16 18:00:50,181:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 18:00:50,181:INFO:machine: AMD64
2023-06-16 18:00:50,181:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 18:00:50,181:INFO:Memory: svmem(total=17120436224, available=2110099456, percent=87.7, used=15010336768, free=2110099456)
2023-06-16 18:00:50,181:INFO:Physical Core: 4
2023-06-16 18:00:50,181:INFO:Logical Core: 4
2023-06-16 18:00:50,182:INFO:Checking libraries
2023-06-16 18:00:50,182:INFO:System:
2023-06-16 18:00:50,182:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 18:00:50,182:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 18:00:50,182:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 18:00:50,182:INFO:PyCaret required dependencies:
2023-06-16 18:00:50,182:INFO:                 pip: 21.2.3
2023-06-16 18:00:50,182:INFO:          setuptools: 57.4.0
2023-06-16 18:00:50,182:INFO:             pycaret: 3.0.2
2023-06-16 18:00:50,182:INFO:             IPython: 7.28.0
2023-06-16 18:00:50,182:INFO:          ipywidgets: 8.0.6
2023-06-16 18:00:50,182:INFO:                tqdm: 4.64.0
2023-06-16 18:00:50,182:INFO:               numpy: 1.22.4
2023-06-16 18:00:50,182:INFO:              pandas: 1.3.5
2023-06-16 18:00:50,182:INFO:              jinja2: 3.1.2
2023-06-16 18:00:50,182:INFO:               scipy: 1.7.1
2023-06-16 18:00:50,182:INFO:              joblib: 1.2.0
2023-06-16 18:00:50,182:INFO:             sklearn: 1.1.0
2023-06-16 18:00:50,182:INFO:                pyod: 1.0.9
2023-06-16 18:00:50,182:INFO:            imblearn: 0.9.1
2023-06-16 18:00:50,183:INFO:   category_encoders: 2.6.1
2023-06-16 18:00:50,183:INFO:            lightgbm: 3.3.5
2023-06-16 18:00:50,183:INFO:               numba: 0.57.0
2023-06-16 18:00:50,183:INFO:            requests: 2.31.0
2023-06-16 18:00:50,183:INFO:          matplotlib: 3.4.3
2023-06-16 18:00:50,183:INFO:          scikitplot: 0.3.7
2023-06-16 18:00:50,183:INFO:         yellowbrick: 1.5
2023-06-16 18:00:50,183:INFO:              plotly: 5.8.0
2023-06-16 18:00:50,183:INFO:             kaleido: 0.2.1
2023-06-16 18:00:50,183:INFO:         statsmodels: 0.14.0
2023-06-16 18:00:50,183:INFO:              sktime: 0.17.0
2023-06-16 18:00:50,183:INFO:               tbats: 1.1.3
2023-06-16 18:00:50,183:INFO:            pmdarima: 2.0.3
2023-06-16 18:00:50,183:INFO:              psutil: 5.9.0
2023-06-16 18:00:50,183:INFO:PyCaret optional dependencies:
2023-06-16 18:00:50,207:INFO:                shap: Not installed
2023-06-16 18:00:50,207:INFO:           interpret: Not installed
2023-06-16 18:00:50,207:INFO:                umap: Not installed
2023-06-16 18:00:50,207:INFO:    pandas_profiling: Not installed
2023-06-16 18:00:50,207:INFO:  explainerdashboard: Not installed
2023-06-16 18:00:50,207:INFO:             autoviz: Not installed
2023-06-16 18:00:50,207:INFO:           fairlearn: Not installed
2023-06-16 18:00:50,207:INFO:             xgboost: Not installed
2023-06-16 18:00:50,207:INFO:            catboost: Not installed
2023-06-16 18:00:50,207:INFO:              kmodes: Not installed
2023-06-16 18:00:50,207:INFO:             mlxtend: Not installed
2023-06-16 18:00:50,207:INFO:       statsforecast: Not installed
2023-06-16 18:00:50,207:INFO:        tune_sklearn: Not installed
2023-06-16 18:00:50,207:INFO:                 ray: Not installed
2023-06-16 18:00:50,207:INFO:            hyperopt: Not installed
2023-06-16 18:00:50,207:INFO:              optuna: Not installed
2023-06-16 18:00:50,207:INFO:               skopt: Not installed
2023-06-16 18:00:50,208:INFO:              mlflow: Not installed
2023-06-16 18:00:50,208:INFO:              gradio: Not installed
2023-06-16 18:00:50,208:INFO:             fastapi: Not installed
2023-06-16 18:00:50,208:INFO:             uvicorn: Not installed
2023-06-16 18:00:50,208:INFO:              m2cgen: Not installed
2023-06-16 18:00:50,208:INFO:           evidently: Not installed
2023-06-16 18:00:50,208:INFO:               fugue: Not installed
2023-06-16 18:00:50,208:INFO:           streamlit: Not installed
2023-06-16 18:00:50,208:INFO:             prophet: Not installed
2023-06-16 18:00:50,208:INFO:None
2023-06-16 18:00:50,208:INFO:Set up data.
2023-06-16 18:00:50,275:INFO:Set up train/test split.
2023-06-16 18:00:50,300:INFO:Set up index.
2023-06-16 18:00:50,301:INFO:Set up folding strategy.
2023-06-16 18:00:50,301:INFO:Assigning column types.
2023-06-16 18:00:50,314:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 18:00:50,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,378:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,522:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,523:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,555:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 18:00:50,613:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,700:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:00:50,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,735:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 18:00:50,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,827:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:50,912:INFO:Preparing preprocessing pipeline...
2023-06-16 18:00:50,914:INFO:Set up simple imputation.
2023-06-16 18:00:50,925:INFO:Set up encoding of ordinal features.
2023-06-16 18:00:50,936:INFO:Set up encoding of categorical features.
2023-06-16 18:00:50,936:INFO:Set up removing multicollinearity.
2023-06-16 18:00:50,937:INFO:Set up imbalanced handling.
2023-06-16 18:00:50,937:INFO:Set up feature selection.
2023-06-16 18:00:51,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,023:INFO:Set up column name cleaning.
2023-06-16 18:00:51,413:INFO:Finished creating preprocessing pipeline.
2023-06-16 18:00:51,467:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002AB8E608A60>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 18:00:51,467:INFO:Creating final display dataframe.
2023-06-16 18:00:51,636:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              d317
2023-06-16 18:00:51,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:00:51,842:INFO:setup() successfully completed in 2.45s...............
2023-06-16 18:00:52,696:INFO:Initializing compare_models()
2023-06-16 18:00:52,696:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, include=['lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, 'include': ['lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 18:00:52,696:INFO:Checking exceptions
2023-06-16 18:00:52,706:INFO:Preparing display monitor
2023-06-16 18:00:52,757:INFO:Initializing Logistic Regression
2023-06-16 18:00:52,759:INFO:Total runtime is 1.6609827677408855e-05 minutes
2023-06-16 18:00:52,763:INFO:SubProcess create_model() called ==================================
2023-06-16 18:00:52,764:INFO:Initializing create_model()
2023-06-16 18:00:52,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AB8DD56430>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:00:52,764:INFO:Checking exceptions
2023-06-16 18:00:52,764:INFO:Importing libraries
2023-06-16 18:00:52,764:INFO:Copying training dataset
2023-06-16 18:00:52,788:INFO:Defining folds
2023-06-16 18:00:52,788:INFO:Declaring metric variables
2023-06-16 18:00:52,795:INFO:Importing untrained model
2023-06-16 18:00:52,802:INFO:Logistic Regression Imported successfully
2023-06-16 18:00:52,814:INFO:Starting cross validation
2023-06-16 18:00:52,817:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:01:00,684:INFO:Calculating mean and std
2023-06-16 18:01:00,686:INFO:Creating metrics dataframe
2023-06-16 18:01:01,521:INFO:Uploading results into container
2023-06-16 18:01:01,522:INFO:Uploading model into container now
2023-06-16 18:01:01,522:INFO:_master_model_container: 1
2023-06-16 18:01:01,522:INFO:_display_container: 2
2023-06-16 18:01:01,523:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:01:01,523:INFO:create_model() successfully completed......................................
2023-06-16 18:01:01,594:INFO:SubProcess create_model() end ==================================
2023-06-16 18:01:01,594:INFO:Creating metrics dataframe
2023-06-16 18:01:01,631:INFO:Initializing create_model()
2023-06-16 18:01:01,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:01:01,631:INFO:Checking exceptions
2023-06-16 18:01:01,634:INFO:Importing libraries
2023-06-16 18:01:01,634:INFO:Copying training dataset
2023-06-16 18:01:01,651:INFO:Defining folds
2023-06-16 18:01:01,651:INFO:Declaring metric variables
2023-06-16 18:01:01,651:INFO:Importing untrained model
2023-06-16 18:01:01,651:INFO:Declaring custom model
2023-06-16 18:01:01,652:INFO:Logistic Regression Imported successfully
2023-06-16 18:01:01,656:INFO:Cross validation set to False
2023-06-16 18:01:01,656:INFO:Fitting Model
2023-06-16 18:01:02,691:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:01:02,691:INFO:create_model() successfully completed......................................
2023-06-16 18:01:02,801:INFO:_master_model_container: 1
2023-06-16 18:01:02,801:INFO:_display_container: 2
2023-06-16 18:01:02,802:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:01:02,802:INFO:compare_models() successfully completed......................................
2023-06-16 18:01:57,133:INFO:Initializing create_model()
2023-06-16 18:01:57,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:01:57,133:INFO:Checking exceptions
2023-06-16 18:01:57,168:INFO:Importing libraries
2023-06-16 18:01:57,168:INFO:Copying training dataset
2023-06-16 18:01:57,186:INFO:Defining folds
2023-06-16 18:01:57,186:INFO:Declaring metric variables
2023-06-16 18:01:57,190:INFO:Importing untrained model
2023-06-16 18:01:57,195:INFO:Logistic Regression Imported successfully
2023-06-16 18:01:57,208:INFO:Starting cross validation
2023-06-16 18:01:57,211:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:02:00,848:INFO:Calculating mean and std
2023-06-16 18:02:00,851:INFO:Creating metrics dataframe
2023-06-16 18:02:00,859:INFO:Finalizing model
2023-06-16 18:02:02,019:INFO:Uploading results into container
2023-06-16 18:02:02,021:INFO:Uploading model into container now
2023-06-16 18:02:02,040:INFO:_master_model_container: 2
2023-06-16 18:02:02,040:INFO:_display_container: 3
2023-06-16 18:02:02,041:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:02:02,041:INFO:create_model() successfully completed......................................
2023-06-16 18:02:11,865:INFO:Initializing create_model()
2023-06-16 18:02:11,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:02:11,866:INFO:Checking exceptions
2023-06-16 18:02:11,900:INFO:Importing libraries
2023-06-16 18:02:11,901:INFO:Copying training dataset
2023-06-16 18:02:11,920:INFO:Defining folds
2023-06-16 18:02:11,920:INFO:Declaring metric variables
2023-06-16 18:02:11,924:INFO:Importing untrained model
2023-06-16 18:02:11,928:INFO:Logistic Regression Imported successfully
2023-06-16 18:02:11,940:INFO:Starting cross validation
2023-06-16 18:02:11,942:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:02:15,622:INFO:Calculating mean and std
2023-06-16 18:02:15,624:INFO:Creating metrics dataframe
2023-06-16 18:02:15,632:INFO:Finalizing model
2023-06-16 18:02:16,884:INFO:Uploading results into container
2023-06-16 18:02:16,885:INFO:Uploading model into container now
2023-06-16 18:02:16,902:INFO:_master_model_container: 3
2023-06-16 18:02:16,902:INFO:_display_container: 4
2023-06-16 18:02:16,902:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:02:16,902:INFO:create_model() successfully completed......................................
2023-06-16 18:02:17,071:INFO:Initializing evaluate_model()
2023-06-16 18:02:17,071:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:02:17,123:INFO:Initializing plot_model()
2023-06-16 18:02:17,123:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, system=True)
2023-06-16 18:02:17,123:INFO:Checking exceptions
2023-06-16 18:02:17,129:INFO:Preloading libraries
2023-06-16 18:02:17,129:INFO:Copying training dataset
2023-06-16 18:02:17,129:INFO:Plot type: pipeline
2023-06-16 18:02:17,717:INFO:Visual Rendered Successfully
2023-06-16 18:02:17,802:INFO:plot_model() successfully completed......................................
2023-06-16 18:02:20,494:INFO:Initializing plot_model()
2023-06-16 18:02:20,494:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, system=True)
2023-06-16 18:02:20,494:INFO:Checking exceptions
2023-06-16 18:02:20,500:INFO:Preloading libraries
2023-06-16 18:02:20,501:INFO:Copying training dataset
2023-06-16 18:02:20,501:INFO:Plot type: auc
2023-06-16 18:02:20,643:INFO:Fitting Model
2023-06-16 18:02:20,645:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:02:20,646:INFO:Scoring test/hold-out set
2023-06-16 18:02:20,843:INFO:Visual Rendered Successfully
2023-06-16 18:02:20,958:INFO:plot_model() successfully completed......................................
2023-06-16 18:02:23,134:INFO:Initializing plot_model()
2023-06-16 18:02:23,134:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, system=True)
2023-06-16 18:02:23,134:INFO:Checking exceptions
2023-06-16 18:02:23,141:INFO:Preloading libraries
2023-06-16 18:02:23,141:INFO:Copying training dataset
2023-06-16 18:02:23,141:INFO:Plot type: confusion_matrix
2023-06-16 18:02:23,275:INFO:Fitting Model
2023-06-16 18:02:23,275:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:02:23,276:INFO:Scoring test/hold-out set
2023-06-16 18:02:23,387:INFO:Visual Rendered Successfully
2023-06-16 18:02:23,463:INFO:plot_model() successfully completed......................................
2023-06-16 18:02:38,870:INFO:Initializing create_model()
2023-06-16 18:02:38,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002ABFC02CF40>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:02:38,870:INFO:Checking exceptions
2023-06-16 18:02:38,905:INFO:Importing libraries
2023-06-16 18:02:38,905:INFO:Copying training dataset
2023-06-16 18:02:38,922:INFO:Defining folds
2023-06-16 18:02:38,922:INFO:Declaring metric variables
2023-06-16 18:02:38,930:INFO:Importing untrained model
2023-06-16 18:02:38,936:INFO:Decision Tree Classifier Imported successfully
2023-06-16 18:02:38,948:INFO:Starting cross validation
2023-06-16 18:02:38,951:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:02:42,410:INFO:Calculating mean and std
2023-06-16 18:02:42,411:INFO:Creating metrics dataframe
2023-06-16 18:02:42,419:INFO:Finalizing model
2023-06-16 18:05:32,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:05:32,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:05:32,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:05:32,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:05:33,421:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 18:05:34,187:INFO:PyCaret ClassificationExperiment
2023-06-16 18:05:34,187:INFO:Logging name: clf-default-name
2023-06-16 18:05:34,187:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 18:05:34,187:INFO:version 3.0.2
2023-06-16 18:05:34,188:INFO:Initializing setup()
2023-06-16 18:05:34,188:INFO:self.USI: 9f99
2023-06-16 18:05:34,188:INFO:self._variable_keys: {'is_multiclass', '_available_plots', 'gpu_param', 'y_test', 'fold_groups_param', 'fold_generator', 'X_test', 'fold_shuffle_param', 'X_train', 'html_param', 'USI', 'logging_param', '_ml_usecase', 'y', 'X', 'memory', 'fix_imbalance', 'y_train', 'data', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'seed', 'exp_id', 'n_jobs_param', 'idx', 'target_param', 'exp_name_log'}
2023-06-16 18:05:34,188:INFO:Checking environment
2023-06-16 18:05:34,188:INFO:python_version: 3.9.7
2023-06-16 18:05:34,188:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 18:05:34,188:INFO:machine: AMD64
2023-06-16 18:05:34,188:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 18:05:34,188:INFO:Memory: svmem(total=17120436224, available=3637477376, percent=78.8, used=13482958848, free=3637477376)
2023-06-16 18:05:34,188:INFO:Physical Core: 4
2023-06-16 18:05:34,188:INFO:Logical Core: 4
2023-06-16 18:05:34,188:INFO:Checking libraries
2023-06-16 18:05:34,188:INFO:System:
2023-06-16 18:05:34,188:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 18:05:34,188:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 18:05:34,188:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 18:05:34,188:INFO:PyCaret required dependencies:
2023-06-16 18:05:34,189:INFO:                 pip: 21.2.3
2023-06-16 18:05:34,189:INFO:          setuptools: 57.4.0
2023-06-16 18:05:34,189:INFO:             pycaret: 3.0.2
2023-06-16 18:05:34,189:INFO:             IPython: 7.28.0
2023-06-16 18:05:34,189:INFO:          ipywidgets: 8.0.6
2023-06-16 18:05:34,189:INFO:                tqdm: 4.64.0
2023-06-16 18:05:34,189:INFO:               numpy: 1.22.4
2023-06-16 18:05:34,189:INFO:              pandas: 1.3.5
2023-06-16 18:05:34,189:INFO:              jinja2: 3.1.2
2023-06-16 18:05:34,189:INFO:               scipy: 1.7.1
2023-06-16 18:05:34,189:INFO:              joblib: 1.2.0
2023-06-16 18:05:34,189:INFO:             sklearn: 1.1.0
2023-06-16 18:05:34,189:INFO:                pyod: 1.0.9
2023-06-16 18:05:34,189:INFO:            imblearn: 0.9.1
2023-06-16 18:05:34,189:INFO:   category_encoders: 2.6.1
2023-06-16 18:05:34,189:INFO:            lightgbm: 3.3.5
2023-06-16 18:05:34,189:INFO:               numba: 0.57.0
2023-06-16 18:05:34,189:INFO:            requests: 2.31.0
2023-06-16 18:05:34,189:INFO:          matplotlib: 3.4.3
2023-06-16 18:05:34,189:INFO:          scikitplot: 0.3.7
2023-06-16 18:05:34,190:INFO:         yellowbrick: 1.5
2023-06-16 18:05:34,190:INFO:              plotly: 5.8.0
2023-06-16 18:05:34,190:INFO:             kaleido: 0.2.1
2023-06-16 18:05:34,190:INFO:         statsmodels: 0.14.0
2023-06-16 18:05:34,190:INFO:              sktime: 0.17.0
2023-06-16 18:05:34,190:INFO:               tbats: 1.1.3
2023-06-16 18:05:34,190:INFO:            pmdarima: 2.0.3
2023-06-16 18:05:34,190:INFO:              psutil: 5.9.0
2023-06-16 18:05:34,190:INFO:PyCaret optional dependencies:
2023-06-16 18:05:34,213:INFO:                shap: Not installed
2023-06-16 18:05:34,213:INFO:           interpret: Not installed
2023-06-16 18:05:34,213:INFO:                umap: Not installed
2023-06-16 18:05:34,213:INFO:    pandas_profiling: Not installed
2023-06-16 18:05:34,213:INFO:  explainerdashboard: Not installed
2023-06-16 18:05:34,213:INFO:             autoviz: Not installed
2023-06-16 18:05:34,213:INFO:           fairlearn: Not installed
2023-06-16 18:05:34,213:INFO:             xgboost: Not installed
2023-06-16 18:05:34,213:INFO:            catboost: Not installed
2023-06-16 18:05:34,213:INFO:              kmodes: Not installed
2023-06-16 18:05:34,213:INFO:             mlxtend: Not installed
2023-06-16 18:05:34,213:INFO:       statsforecast: Not installed
2023-06-16 18:05:34,213:INFO:        tune_sklearn: Not installed
2023-06-16 18:05:34,213:INFO:                 ray: Not installed
2023-06-16 18:05:34,214:INFO:            hyperopt: Not installed
2023-06-16 18:05:34,214:INFO:              optuna: Not installed
2023-06-16 18:05:34,214:INFO:               skopt: Not installed
2023-06-16 18:05:34,214:INFO:              mlflow: Not installed
2023-06-16 18:05:34,214:INFO:              gradio: Not installed
2023-06-16 18:05:34,214:INFO:             fastapi: Not installed
2023-06-16 18:05:34,214:INFO:             uvicorn: Not installed
2023-06-16 18:05:34,214:INFO:              m2cgen: Not installed
2023-06-16 18:05:34,214:INFO:           evidently: Not installed
2023-06-16 18:05:34,214:INFO:               fugue: Not installed
2023-06-16 18:05:34,214:INFO:           streamlit: Not installed
2023-06-16 18:05:34,214:INFO:             prophet: Not installed
2023-06-16 18:05:34,214:INFO:None
2023-06-16 18:05:34,214:INFO:Set up data.
2023-06-16 18:05:34,272:INFO:Set up train/test split.
2023-06-16 18:05:34,296:INFO:Set up index.
2023-06-16 18:05:34,297:INFO:Set up folding strategy.
2023-06-16 18:05:34,297:INFO:Assigning column types.
2023-06-16 18:05:34,308:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 18:05:34,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,498:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,500:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,532:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 18:05:34,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:05:34,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,700:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 18:05:34,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,866:INFO:Preparing preprocessing pipeline...
2023-06-16 18:05:34,868:INFO:Set up simple imputation.
2023-06-16 18:05:34,880:INFO:Set up encoding of ordinal features.
2023-06-16 18:05:34,889:INFO:Set up encoding of categorical features.
2023-06-16 18:05:34,889:INFO:Set up removing multicollinearity.
2023-06-16 18:05:34,889:INFO:Set up imbalanced handling.
2023-06-16 18:05:34,889:INFO:Set up feature selection.
2023-06-16 18:05:34,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:34,976:INFO:Set up column name cleaning.
2023-06-16 18:05:35,328:INFO:Finished creating preprocessing pipeline.
2023-06-16 18:05:35,379:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002087307BA60>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 18:05:35,380:INFO:Creating final display dataframe.
2023-06-16 18:05:35,527:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              9f99
2023-06-16 18:05:35,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:35,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:35,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:35,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:05:35,709:INFO:setup() successfully completed in 2.11s...............
2023-06-16 18:05:36,597:INFO:Initializing compare_models()
2023-06-16 18:05:36,597:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, include=['lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, 'include': ['lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-16 18:05:36,597:INFO:Checking exceptions
2023-06-16 18:05:36,607:INFO:Preparing display monitor
2023-06-16 18:05:36,655:INFO:Initializing Logistic Regression
2023-06-16 18:05:36,656:INFO:Total runtime is 1.6677379608154298e-05 minutes
2023-06-16 18:05:36,661:INFO:SubProcess create_model() called ==================================
2023-06-16 18:05:36,662:INFO:Initializing create_model()
2023-06-16 18:05:36,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020860A72160>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:05:36,662:INFO:Checking exceptions
2023-06-16 18:05:36,662:INFO:Importing libraries
2023-06-16 18:05:36,662:INFO:Copying training dataset
2023-06-16 18:05:36,686:INFO:Defining folds
2023-06-16 18:05:36,686:INFO:Declaring metric variables
2023-06-16 18:05:36,693:INFO:Importing untrained model
2023-06-16 18:05:36,698:INFO:Logistic Regression Imported successfully
2023-06-16 18:05:36,709:INFO:Starting cross validation
2023-06-16 18:05:36,715:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:05:43,735:INFO:Calculating mean and std
2023-06-16 18:05:43,736:INFO:Creating metrics dataframe
2023-06-16 18:05:44,505:INFO:Uploading results into container
2023-06-16 18:05:44,505:INFO:Uploading model into container now
2023-06-16 18:05:44,506:INFO:_master_model_container: 1
2023-06-16 18:05:44,506:INFO:_display_container: 2
2023-06-16 18:05:44,506:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:05:44,507:INFO:create_model() successfully completed......................................
2023-06-16 18:05:44,572:INFO:SubProcess create_model() end ==================================
2023-06-16 18:05:44,572:INFO:Creating metrics dataframe
2023-06-16 18:05:44,601:INFO:Initializing create_model()
2023-06-16 18:05:44,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:05:44,602:INFO:Checking exceptions
2023-06-16 18:05:44,604:INFO:Importing libraries
2023-06-16 18:05:44,605:INFO:Copying training dataset
2023-06-16 18:05:44,624:INFO:Defining folds
2023-06-16 18:05:44,624:INFO:Declaring metric variables
2023-06-16 18:05:44,625:INFO:Importing untrained model
2023-06-16 18:05:44,625:INFO:Declaring custom model
2023-06-16 18:05:44,626:INFO:Logistic Regression Imported successfully
2023-06-16 18:05:44,627:INFO:Cross validation set to False
2023-06-16 18:05:44,628:INFO:Fitting Model
2023-06-16 18:05:45,682:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:05:45,682:INFO:create_model() successfully completed......................................
2023-06-16 18:05:45,805:INFO:_master_model_container: 1
2023-06-16 18:05:45,805:INFO:_display_container: 2
2023-06-16 18:05:45,805:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:05:45,805:INFO:compare_models() successfully completed......................................
2023-06-16 18:06:02,827:INFO:Initializing create_model()
2023-06-16 18:06:02,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:06:02,828:INFO:Checking exceptions
2023-06-16 18:06:02,860:INFO:Importing libraries
2023-06-16 18:06:02,860:INFO:Copying training dataset
2023-06-16 18:06:02,875:INFO:Defining folds
2023-06-16 18:06:02,876:INFO:Declaring metric variables
2023-06-16 18:06:02,879:INFO:Importing untrained model
2023-06-16 18:06:02,884:INFO:Random Forest Classifier Imported successfully
2023-06-16 18:06:02,894:INFO:Starting cross validation
2023-06-16 18:06:02,896:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:06:07,529:INFO:Calculating mean and std
2023-06-16 18:06:07,530:INFO:Creating metrics dataframe
2023-06-16 18:06:07,539:INFO:Finalizing model
2023-06-16 18:06:09,013:INFO:Uploading results into container
2023-06-16 18:06:09,015:INFO:Uploading model into container now
2023-06-16 18:06:09,031:INFO:_master_model_container: 2
2023-06-16 18:06:09,031:INFO:_display_container: 3
2023-06-16 18:06:09,032:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 18:06:09,032:INFO:create_model() successfully completed......................................
2023-06-16 18:06:09,106:INFO:Initializing evaluate_model()
2023-06-16 18:06:09,106:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:06:09,136:INFO:Initializing plot_model()
2023-06-16 18:06:09,136:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020868E74DF0>, system=True)
2023-06-16 18:06:09,136:INFO:Checking exceptions
2023-06-16 18:06:09,165:INFO:Preloading libraries
2023-06-16 18:06:09,223:INFO:Copying training dataset
2023-06-16 18:06:09,223:INFO:Plot type: pipeline
2023-06-16 18:06:09,445:INFO:Visual Rendered Successfully
2023-06-16 18:06:09,511:INFO:plot_model() successfully completed......................................
2023-06-16 18:06:27,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:06:27,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:06:27,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:06:27,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 18:06:28,918:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 18:06:29,712:INFO:PyCaret ClassificationExperiment
2023-06-16 18:06:29,712:INFO:Logging name: clf-default-name
2023-06-16 18:06:29,712:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-16 18:06:29,712:INFO:version 3.0.2
2023-06-16 18:06:29,712:INFO:Initializing setup()
2023-06-16 18:06:29,712:INFO:self.USI: 5ee9
2023-06-16 18:06:29,712:INFO:self._variable_keys: {'logging_param', 'memory', 'fix_imbalance', 'exp_id', 'idx', 'USI', 'gpu_n_jobs_param', 'exp_name_log', 'y', 'is_multiclass', 'fold_shuffle_param', '_available_plots', 'html_param', 'n_jobs_param', 'X_test', 'y_test', 'X_train', 'X', 'pipeline', 'fold_generator', 'gpu_param', 'target_param', 'log_plots_param', '_ml_usecase', 'y_train', 'seed', 'fold_groups_param', 'data'}
2023-06-16 18:06:29,712:INFO:Checking environment
2023-06-16 18:06:29,712:INFO:python_version: 3.9.7
2023-06-16 18:06:29,712:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-16 18:06:29,712:INFO:machine: AMD64
2023-06-16 18:06:29,712:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 18:06:29,713:INFO:Memory: svmem(total=17120436224, available=4698177536, percent=72.6, used=12422258688, free=4698177536)
2023-06-16 18:06:29,713:INFO:Physical Core: 4
2023-06-16 18:06:29,713:INFO:Logical Core: 4
2023-06-16 18:06:29,713:INFO:Checking libraries
2023-06-16 18:06:29,713:INFO:System:
2023-06-16 18:06:29,713:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-16 18:06:29,713:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-16 18:06:29,713:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 18:06:29,713:INFO:PyCaret required dependencies:
2023-06-16 18:06:29,713:INFO:                 pip: 21.2.3
2023-06-16 18:06:29,713:INFO:          setuptools: 57.4.0
2023-06-16 18:06:29,713:INFO:             pycaret: 3.0.2
2023-06-16 18:06:29,713:INFO:             IPython: 7.28.0
2023-06-16 18:06:29,713:INFO:          ipywidgets: 8.0.6
2023-06-16 18:06:29,713:INFO:                tqdm: 4.64.0
2023-06-16 18:06:29,713:INFO:               numpy: 1.22.4
2023-06-16 18:06:29,713:INFO:              pandas: 1.3.5
2023-06-16 18:06:29,713:INFO:              jinja2: 3.1.2
2023-06-16 18:06:29,713:INFO:               scipy: 1.7.1
2023-06-16 18:06:29,714:INFO:              joblib: 1.2.0
2023-06-16 18:06:29,714:INFO:             sklearn: 1.1.0
2023-06-16 18:06:29,714:INFO:                pyod: 1.0.9
2023-06-16 18:06:29,714:INFO:            imblearn: 0.9.1
2023-06-16 18:06:29,714:INFO:   category_encoders: 2.6.1
2023-06-16 18:06:29,714:INFO:            lightgbm: 3.3.5
2023-06-16 18:06:29,714:INFO:               numba: 0.57.0
2023-06-16 18:06:29,714:INFO:            requests: 2.31.0
2023-06-16 18:06:29,714:INFO:          matplotlib: 3.4.3
2023-06-16 18:06:29,714:INFO:          scikitplot: 0.3.7
2023-06-16 18:06:29,714:INFO:         yellowbrick: 1.5
2023-06-16 18:06:29,714:INFO:              plotly: 5.8.0
2023-06-16 18:06:29,714:INFO:             kaleido: 0.2.1
2023-06-16 18:06:29,714:INFO:         statsmodels: 0.14.0
2023-06-16 18:06:29,714:INFO:              sktime: 0.17.0
2023-06-16 18:06:29,714:INFO:               tbats: 1.1.3
2023-06-16 18:06:29,714:INFO:            pmdarima: 2.0.3
2023-06-16 18:06:29,714:INFO:              psutil: 5.9.0
2023-06-16 18:06:29,714:INFO:PyCaret optional dependencies:
2023-06-16 18:06:29,735:INFO:                shap: Not installed
2023-06-16 18:06:29,735:INFO:           interpret: Not installed
2023-06-16 18:06:29,735:INFO:                umap: Not installed
2023-06-16 18:06:29,735:INFO:    pandas_profiling: Not installed
2023-06-16 18:06:29,735:INFO:  explainerdashboard: Not installed
2023-06-16 18:06:29,735:INFO:             autoviz: Not installed
2023-06-16 18:06:29,735:INFO:           fairlearn: Not installed
2023-06-16 18:06:29,735:INFO:             xgboost: Not installed
2023-06-16 18:06:29,735:INFO:            catboost: Not installed
2023-06-16 18:06:29,736:INFO:              kmodes: Not installed
2023-06-16 18:06:29,736:INFO:             mlxtend: Not installed
2023-06-16 18:06:29,736:INFO:       statsforecast: Not installed
2023-06-16 18:06:29,736:INFO:        tune_sklearn: Not installed
2023-06-16 18:06:29,736:INFO:                 ray: Not installed
2023-06-16 18:06:29,736:INFO:            hyperopt: Not installed
2023-06-16 18:06:29,736:INFO:              optuna: Not installed
2023-06-16 18:06:29,736:INFO:               skopt: Not installed
2023-06-16 18:06:29,736:INFO:              mlflow: Not installed
2023-06-16 18:06:29,736:INFO:              gradio: Not installed
2023-06-16 18:06:29,736:INFO:             fastapi: Not installed
2023-06-16 18:06:29,736:INFO:             uvicorn: Not installed
2023-06-16 18:06:29,736:INFO:              m2cgen: Not installed
2023-06-16 18:06:29,736:INFO:           evidently: Not installed
2023-06-16 18:06:29,736:INFO:               fugue: Not installed
2023-06-16 18:06:29,737:INFO:           streamlit: Not installed
2023-06-16 18:06:29,737:INFO:             prophet: Not installed
2023-06-16 18:06:29,737:INFO:None
2023-06-16 18:06:29,737:INFO:Set up data.
2023-06-16 18:06:29,795:INFO:Set up train/test split.
2023-06-16 18:06:29,819:INFO:Set up index.
2023-06-16 18:06:29,820:INFO:Set up folding strategy.
2023-06-16 18:06:29,821:INFO:Assigning column types.
2023-06-16 18:06:29,832:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 18:06:29,886:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:06:29,889:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:06:29,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 18:06:30,085:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:06:30,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,128:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 18:06:30,183:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:06:30,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-16 18:06:30,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,303:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-16 18:06:30,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,472:INFO:Preparing preprocessing pipeline...
2023-06-16 18:06:30,474:INFO:Set up simple imputation.
2023-06-16 18:06:30,485:INFO:Set up encoding of ordinal features.
2023-06-16 18:06:30,494:INFO:Set up encoding of categorical features.
2023-06-16 18:06:30,494:INFO:Set up removing multicollinearity.
2023-06-16 18:06:30,494:INFO:Set up imbalanced handling.
2023-06-16 18:06:30,494:INFO:Set up feature selection.
2023-06-16 18:06:30,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:30,584:INFO:Set up column name cleaning.
2023-06-16 18:06:30,932:INFO:Finished creating preprocessing pipeline.
2023-06-16 18:06:30,997:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000001D9727C9A60>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-16 18:06:30,998:INFO:Creating final display dataframe.
2023-06-16 18:06:31,159:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              5ee9
2023-06-16 18:06:31,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:31,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:31,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:31,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 18:06:31,364:INFO:setup() successfully completed in 2.27s...............
2023-06-16 18:06:32,329:INFO:Initializing create_model()
2023-06-16 18:06:32,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:06:32,330:INFO:Checking exceptions
2023-06-16 18:06:32,413:INFO:Importing libraries
2023-06-16 18:06:32,413:INFO:Copying training dataset
2023-06-16 18:06:32,428:INFO:Defining folds
2023-06-16 18:06:32,428:INFO:Declaring metric variables
2023-06-16 18:06:32,433:INFO:Importing untrained model
2023-06-16 18:06:32,438:INFO:Logistic Regression Imported successfully
2023-06-16 18:06:32,452:INFO:Starting cross validation
2023-06-16 18:06:32,454:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:06:40,419:INFO:Calculating mean and std
2023-06-16 18:06:40,420:INFO:Creating metrics dataframe
2023-06-16 18:06:40,427:INFO:Finalizing model
2023-06-16 18:06:41,575:INFO:Uploading results into container
2023-06-16 18:06:41,576:INFO:Uploading model into container now
2023-06-16 18:06:41,597:INFO:_master_model_container: 1
2023-06-16 18:06:41,597:INFO:_display_container: 2
2023-06-16 18:06:41,597:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-16 18:06:41,598:INFO:create_model() successfully completed......................................
2023-06-16 18:06:41,719:INFO:Initializing evaluate_model()
2023-06-16 18:06:41,719:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:06:41,746:INFO:Initializing plot_model()
2023-06-16 18:06:41,746:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:06:41,747:INFO:Checking exceptions
2023-06-16 18:06:41,757:INFO:Preloading libraries
2023-06-16 18:06:41,757:INFO:Copying training dataset
2023-06-16 18:06:41,757:INFO:Plot type: pipeline
2023-06-16 18:06:41,978:INFO:Visual Rendered Successfully
2023-06-16 18:06:42,046:INFO:plot_model() successfully completed......................................
2023-06-16 18:06:42,098:INFO:Initializing create_model()
2023-06-16 18:06:42,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:06:42,098:INFO:Checking exceptions
2023-06-16 18:06:42,132:INFO:Importing libraries
2023-06-16 18:06:42,133:INFO:Copying training dataset
2023-06-16 18:06:42,150:INFO:Defining folds
2023-06-16 18:06:42,150:INFO:Declaring metric variables
2023-06-16 18:06:42,155:INFO:Importing untrained model
2023-06-16 18:06:42,159:INFO:Random Forest Classifier Imported successfully
2023-06-16 18:06:42,176:INFO:Starting cross validation
2023-06-16 18:06:42,179:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:06:46,646:INFO:Calculating mean and std
2023-06-16 18:06:46,648:INFO:Creating metrics dataframe
2023-06-16 18:06:46,657:INFO:Finalizing model
2023-06-16 18:06:47,964:INFO:Uploading results into container
2023-06-16 18:06:47,966:INFO:Uploading model into container now
2023-06-16 18:06:47,982:INFO:_master_model_container: 2
2023-06-16 18:06:47,982:INFO:_display_container: 3
2023-06-16 18:06:47,982:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 18:06:47,983:INFO:create_model() successfully completed......................................
2023-06-16 18:06:48,062:INFO:Initializing evaluate_model()
2023-06-16 18:06:48,062:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:06:48,085:INFO:Initializing plot_model()
2023-06-16 18:06:48,086:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:06:48,086:INFO:Checking exceptions
2023-06-16 18:06:48,117:INFO:Preloading libraries
2023-06-16 18:06:48,182:INFO:Copying training dataset
2023-06-16 18:06:48,182:INFO:Plot type: pipeline
2023-06-16 18:06:48,384:INFO:Visual Rendered Successfully
2023-06-16 18:06:48,452:INFO:plot_model() successfully completed......................................
2023-06-16 18:06:52,294:INFO:Initializing plot_model()
2023-06-16 18:06:52,294:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:06:52,295:INFO:Checking exceptions
2023-06-16 18:06:52,327:INFO:Preloading libraries
2023-06-16 18:06:52,379:INFO:Copying training dataset
2023-06-16 18:06:52,379:INFO:Plot type: auc
2023-06-16 18:06:52,513:INFO:Fitting Model
2023-06-16 18:06:52,515:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:06:52,516:INFO:Scoring test/hold-out set
2023-06-16 18:06:52,918:INFO:Visual Rendered Successfully
2023-06-16 18:06:53,005:INFO:plot_model() successfully completed......................................
2023-06-16 18:07:05,342:INFO:Initializing plot_model()
2023-06-16 18:07:05,342:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:07:05,342:INFO:Checking exceptions
2023-06-16 18:07:05,375:INFO:Preloading libraries
2023-06-16 18:07:05,427:INFO:Copying training dataset
2023-06-16 18:07:05,427:INFO:Plot type: tree
2023-06-16 18:07:07,019:INFO:Plotting decision trees
2023-06-16 18:07:23,030:INFO:Initializing plot_model()
2023-06-16 18:07:23,030:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:07:23,030:INFO:Checking exceptions
2023-06-16 18:07:23,160:INFO:Preloading libraries
2023-06-16 18:07:23,228:INFO:Copying training dataset
2023-06-16 18:07:23,228:INFO:Plot type: pipeline
2023-06-16 18:07:23,415:INFO:Visual Rendered Successfully
2023-06-16 18:07:23,645:INFO:plot_model() successfully completed......................................
2023-06-16 18:07:42,281:INFO:Initializing plot_model()
2023-06-16 18:07:42,282:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:07:42,282:INFO:Checking exceptions
2023-06-16 18:07:42,313:INFO:Preloading libraries
2023-06-16 18:07:42,368:INFO:Copying training dataset
2023-06-16 18:07:42,368:INFO:Plot type: feature
2023-06-16 18:07:42,368:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 18:07:42,569:INFO:Visual Rendered Successfully
2023-06-16 18:07:42,742:INFO:plot_model() successfully completed......................................
2023-06-16 18:07:46,207:INFO:Initializing plot_model()
2023-06-16 18:07:46,208:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:07:46,208:INFO:Checking exceptions
2023-06-16 18:07:46,215:INFO:Preloading libraries
2023-06-16 18:07:46,215:INFO:Copying training dataset
2023-06-16 18:07:46,215:INFO:Plot type: feature
2023-06-16 18:07:46,479:INFO:Visual Rendered Successfully
2023-06-16 18:07:46,682:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:04,798:INFO:Initializing plot_model()
2023-06-16 18:08:04,798:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:04,798:INFO:Checking exceptions
2023-06-16 18:08:04,833:INFO:Preloading libraries
2023-06-16 18:08:04,888:INFO:Copying training dataset
2023-06-16 18:08:04,888:INFO:Plot type: feature_all
2023-06-16 18:08:04,931:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 18:08:05,164:INFO:Visual Rendered Successfully
2023-06-16 18:08:05,357:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:07,358:INFO:Initializing plot_model()
2023-06-16 18:08:07,358:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:07,358:INFO:Checking exceptions
2023-06-16 18:08:07,365:INFO:Preloading libraries
2023-06-16 18:08:07,365:INFO:Copying training dataset
2023-06-16 18:08:07,366:INFO:Plot type: feature_all
2023-06-16 18:08:07,652:INFO:Visual Rendered Successfully
2023-06-16 18:08:07,852:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:18,733:INFO:Initializing plot_model()
2023-06-16 18:08:18,734:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:18,734:INFO:Checking exceptions
2023-06-16 18:08:18,769:INFO:Preloading libraries
2023-06-16 18:08:18,821:INFO:Copying training dataset
2023-06-16 18:08:18,821:INFO:Plot type: pr
2023-06-16 18:08:18,956:INFO:Fitting Model
2023-06-16 18:08:18,958:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:08:18,959:INFO:Scoring test/hold-out set
2023-06-16 18:08:19,268:INFO:Visual Rendered Successfully
2023-06-16 18:08:19,453:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:21,694:INFO:Initializing plot_model()
2023-06-16 18:08:21,694:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:21,694:INFO:Checking exceptions
2023-06-16 18:08:21,701:INFO:Preloading libraries
2023-06-16 18:08:21,702:INFO:Copying training dataset
2023-06-16 18:08:21,702:INFO:Plot type: pr
2023-06-16 18:08:21,841:INFO:Fitting Model
2023-06-16 18:08:21,842:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:08:21,843:INFO:Scoring test/hold-out set
2023-06-16 18:08:22,024:INFO:Visual Rendered Successfully
2023-06-16 18:08:22,239:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:27,790:INFO:Initializing plot_model()
2023-06-16 18:08:27,790:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:27,790:INFO:Checking exceptions
2023-06-16 18:08:27,824:INFO:Preloading libraries
2023-06-16 18:08:27,876:INFO:Copying training dataset
2023-06-16 18:08:27,876:INFO:Plot type: auc
2023-06-16 18:08:28,013:INFO:Fitting Model
2023-06-16 18:08:28,014:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:08:28,015:INFO:Scoring test/hold-out set
2023-06-16 18:08:28,358:INFO:Visual Rendered Successfully
2023-06-16 18:08:28,621:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:28,742:INFO:Initializing plot_model()
2023-06-16 18:08:28,743:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:28,743:INFO:Checking exceptions
2023-06-16 18:08:28,775:INFO:Preloading libraries
2023-06-16 18:08:28,828:INFO:Copying training dataset
2023-06-16 18:08:28,828:INFO:Plot type: confusion_matrix
2023-06-16 18:08:28,966:INFO:Fitting Model
2023-06-16 18:08:28,966:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:08:28,967:INFO:Scoring test/hold-out set
2023-06-16 18:08:29,231:INFO:Visual Rendered Successfully
2023-06-16 18:08:29,432:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:31,310:INFO:Initializing plot_model()
2023-06-16 18:08:31,310:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:31,310:INFO:Checking exceptions
2023-06-16 18:08:31,318:INFO:Preloading libraries
2023-06-16 18:08:31,319:INFO:Copying training dataset
2023-06-16 18:08:31,319:INFO:Plot type: confusion_matrix
2023-06-16 18:08:31,455:INFO:Fitting Model
2023-06-16 18:08:31,455:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:08:31,456:INFO:Scoring test/hold-out set
2023-06-16 18:08:31,596:INFO:Visual Rendered Successfully
2023-06-16 18:08:31,803:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:42,598:INFO:Initializing plot_model()
2023-06-16 18:08:42,598:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:42,599:INFO:Checking exceptions
2023-06-16 18:08:42,605:INFO:Preloading libraries
2023-06-16 18:08:42,606:INFO:Copying training dataset
2023-06-16 18:08:42,606:INFO:Plot type: auc
2023-06-16 18:08:42,740:INFO:Fitting Model
2023-06-16 18:08:42,741:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:08:42,742:INFO:Scoring test/hold-out set
2023-06-16 18:08:42,916:INFO:Visual Rendered Successfully
2023-06-16 18:08:43,153:INFO:plot_model() successfully completed......................................
2023-06-16 18:08:43,790:INFO:Initializing plot_model()
2023-06-16 18:08:43,790:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:08:43,790:INFO:Checking exceptions
2023-06-16 18:08:43,824:INFO:Preloading libraries
2023-06-16 18:08:43,875:INFO:Copying training dataset
2023-06-16 18:08:43,875:INFO:Plot type: auc
2023-06-16 18:08:44,013:INFO:Fitting Model
2023-06-16 18:08:44,014:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:08:44,014:INFO:Scoring test/hold-out set
2023-06-16 18:08:44,348:INFO:Visual Rendered Successfully
2023-06-16 18:08:44,536:INFO:plot_model() successfully completed......................................
2023-06-16 18:09:30,089:INFO:Initializing create_model()
2023-06-16 18:09:30,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=rf, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:09:30,090:INFO:Checking exceptions
2023-06-16 18:09:30,126:INFO:Importing libraries
2023-06-16 18:09:30,126:INFO:Copying training dataset
2023-06-16 18:09:30,142:INFO:Defining folds
2023-06-16 18:09:30,142:INFO:Declaring metric variables
2023-06-16 18:09:30,146:INFO:Importing untrained model
2023-06-16 18:09:30,152:INFO:Random Forest Classifier Imported successfully
2023-06-16 18:09:30,161:INFO:Starting cross validation
2023-06-16 18:09:30,164:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:09:34,113:INFO:Calculating mean and std
2023-06-16 18:09:34,115:INFO:Creating metrics dataframe
2023-06-16 18:09:34,121:INFO:Finalizing model
2023-06-16 18:09:35,402:INFO:Uploading results into container
2023-06-16 18:09:35,403:INFO:Uploading model into container now
2023-06-16 18:09:35,419:INFO:_master_model_container: 3
2023-06-16 18:09:35,419:INFO:_display_container: 4
2023-06-16 18:09:35,419:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 18:09:35,419:INFO:create_model() successfully completed......................................
2023-06-16 18:09:35,612:INFO:Initializing evaluate_model()
2023-06-16 18:09:35,612:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:09:35,638:INFO:Initializing plot_model()
2023-06-16 18:09:35,638:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:09:35,639:INFO:Checking exceptions
2023-06-16 18:09:35,674:INFO:Preloading libraries
2023-06-16 18:09:35,732:INFO:Copying training dataset
2023-06-16 18:09:35,732:INFO:Plot type: pipeline
2023-06-16 18:09:35,894:INFO:Visual Rendered Successfully
2023-06-16 18:09:36,081:INFO:plot_model() successfully completed......................................
2023-06-16 18:11:49,122:INFO:Initializing plot_model()
2023-06-16 18:11:49,122:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:11:49,122:INFO:Checking exceptions
2023-06-16 18:11:49,155:INFO:Preloading libraries
2023-06-16 18:11:49,214:INFO:Copying training dataset
2023-06-16 18:11:49,214:INFO:Plot type: parameter
2023-06-16 18:11:49,218:INFO:Visual Rendered Successfully
2023-06-16 18:11:49,387:INFO:plot_model() successfully completed......................................
2023-06-16 18:12:13,893:INFO:Initializing plot_model()
2023-06-16 18:12:13,893:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:12:13,894:INFO:Checking exceptions
2023-06-16 18:12:13,901:INFO:Preloading libraries
2023-06-16 18:12:13,902:INFO:Copying training dataset
2023-06-16 18:12:13,902:INFO:Plot type: parameter
2023-06-16 18:12:13,907:INFO:Visual Rendered Successfully
2023-06-16 18:12:14,077:INFO:plot_model() successfully completed......................................
2023-06-16 18:12:35,982:INFO:Initializing plot_model()
2023-06-16 18:12:35,982:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:12:35,982:INFO:Checking exceptions
2023-06-16 18:12:35,990:INFO:Preloading libraries
2023-06-16 18:12:35,990:INFO:Copying training dataset
2023-06-16 18:12:35,990:INFO:Plot type: class_report
2023-06-16 18:12:36,127:INFO:Fitting Model
2023-06-16 18:12:36,127:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-16 18:12:36,128:INFO:Scoring test/hold-out set
2023-06-16 18:12:36,328:INFO:Visual Rendered Successfully
2023-06-16 18:12:36,523:INFO:plot_model() successfully completed......................................
2023-06-16 18:12:47,374:INFO:Initializing plot_model()
2023-06-16 18:12:47,374:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:12:47,375:INFO:Checking exceptions
2023-06-16 18:12:47,382:INFO:Preloading libraries
2023-06-16 18:12:47,382:INFO:Copying training dataset
2023-06-16 18:12:47,382:INFO:Plot type: rfe
2023-06-16 18:12:47,528:INFO:Fitting Model
2023-06-16 18:13:47,908:INFO:Visual Rendered Successfully
2023-06-16 18:13:48,130:INFO:plot_model() successfully completed......................................
2023-06-16 18:38:26,718:INFO:Initializing create_model()
2023-06-16 18:38:26,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 18:38:26,718:INFO:Checking exceptions
2023-06-16 18:38:26,753:INFO:Importing libraries
2023-06-16 18:38:26,753:INFO:Copying training dataset
2023-06-16 18:38:26,771:INFO:Defining folds
2023-06-16 18:38:26,772:INFO:Declaring metric variables
2023-06-16 18:38:26,776:INFO:Importing untrained model
2023-06-16 18:38:26,776:INFO:Declaring custom model
2023-06-16 18:38:26,781:INFO:Random Forest Classifier Imported successfully
2023-06-16 18:38:26,792:INFO:Starting cross validation
2023-06-16 18:38:26,794:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-16 18:39:56,136:INFO:Calculating mean and std
2023-06-16 18:39:56,137:INFO:Creating metrics dataframe
2023-06-16 18:39:56,148:INFO:Finalizing model
2023-06-16 18:40:56,623:INFO:Uploading results into container
2023-06-16 18:40:56,625:INFO:Uploading model into container now
2023-06-16 18:40:56,642:INFO:_master_model_container: 4
2023-06-16 18:40:56,642:INFO:_display_container: 5
2023-06-16 18:40:56,643:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-16 18:40:56,643:INFO:create_model() successfully completed......................................
2023-06-16 18:40:56,886:INFO:Initializing evaluate_model()
2023-06-16 18:40:56,886:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-16 18:40:56,911:INFO:Initializing plot_model()
2023-06-16 18:40:56,911:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:40:56,911:INFO:Checking exceptions
2023-06-16 18:40:56,923:INFO:Preloading libraries
2023-06-16 18:40:56,926:INFO:Copying training dataset
2023-06-16 18:40:56,926:INFO:Plot type: pipeline
2023-06-16 18:40:57,111:INFO:Visual Rendered Successfully
2023-06-16 18:40:57,312:INFO:plot_model() successfully completed......................................
2023-06-16 18:41:00,631:INFO:Initializing plot_model()
2023-06-16 18:41:00,632:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:00,632:INFO:Checking exceptions
2023-06-16 18:41:00,643:INFO:Preloading libraries
2023-06-16 18:41:00,647:INFO:Copying training dataset
2023-06-16 18:41:00,647:INFO:Plot type: parameter
2023-06-16 18:41:00,653:INFO:Visual Rendered Successfully
2023-06-16 18:41:00,880:INFO:plot_model() successfully completed......................................
2023-06-16 18:41:05,078:INFO:Initializing plot_model()
2023-06-16 18:41:05,079:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:05,079:INFO:Checking exceptions
2023-06-16 18:41:05,091:INFO:Preloading libraries
2023-06-16 18:41:05,094:INFO:Copying training dataset
2023-06-16 18:41:05,094:INFO:Plot type: auc
2023-06-16 18:41:05,234:INFO:Fitting Model
2023-06-16 18:41:05,235:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:41:05,236:INFO:Scoring test/hold-out set
2023-06-16 18:41:05,485:INFO:Visual Rendered Successfully
2023-06-16 18:41:05,790:INFO:plot_model() successfully completed......................................
2023-06-16 18:41:21,134:INFO:Initializing plot_model()
2023-06-16 18:41:21,134:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:21,134:INFO:Checking exceptions
2023-06-16 18:41:21,145:INFO:Preloading libraries
2023-06-16 18:41:21,149:INFO:Copying training dataset
2023-06-16 18:41:21,149:INFO:Plot type: feature
2023-06-16 18:41:21,149:WARNING:No coef_ found. Trying feature_importances_
2023-06-16 18:41:21,329:INFO:Visual Rendered Successfully
2023-06-16 18:41:21,509:INFO:plot_model() successfully completed......................................
2023-06-16 18:41:36,918:INFO:Initializing plot_model()
2023-06-16 18:41:36,918:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:36,919:INFO:Checking exceptions
2023-06-16 18:41:36,930:INFO:Preloading libraries
2023-06-16 18:41:36,934:INFO:Copying training dataset
2023-06-16 18:41:36,934:INFO:Plot type: tree
2023-06-16 18:41:37,613:INFO:Plotting decision trees
2023-06-16 18:41:45,200:INFO:Initializing plot_model()
2023-06-16 18:41:45,201:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=42, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D9601F54C0>, system=True)
2023-06-16 18:41:45,201:INFO:Checking exceptions
2023-06-16 18:41:45,213:INFO:Preloading libraries
2023-06-16 18:41:45,218:INFO:Copying training dataset
2023-06-16 18:41:45,218:INFO:Plot type: auc
2023-06-16 18:41:45,853:INFO:Fitting Model
2023-06-16 18:41:45,854:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-16 18:41:45,855:INFO:Scoring test/hold-out set
2023-06-16 18:41:46,114:INFO:Visual Rendered Successfully
2023-06-16 18:41:46,304:INFO:plot_model() successfully completed......................................
2023-06-17 16:33:00,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 16:33:00,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 16:33:00,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 16:33:00,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 16:33:04,194:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-17 16:33:09,893:INFO:PyCaret ClassificationExperiment
2023-06-17 16:33:09,893:INFO:Logging name: clf-default-name
2023-06-17 16:33:09,893:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 16:33:09,893:INFO:version 3.0.2
2023-06-17 16:33:09,893:INFO:Initializing setup()
2023-06-17 16:33:09,893:INFO:self.USI: d088
2023-06-17 16:33:09,893:INFO:self._variable_keys: {'fold_shuffle_param', 'fold_groups_param', 'exp_name_log', 'y_test', 'X_train', 'fix_imbalance', 'memory', 'log_plots_param', 'seed', 'X_test', 'USI', 'fold_generator', 'X', 'pipeline', 'exp_id', '_ml_usecase', 'data', 'html_param', 'n_jobs_param', 'y_train', 'gpu_n_jobs_param', 'gpu_param', 'is_multiclass', '_available_plots', 'target_param', 'idx', 'y', 'logging_param'}
2023-06-17 16:33:09,893:INFO:Checking environment
2023-06-17 16:33:09,893:INFO:python_version: 3.9.7
2023-06-17 16:33:09,894:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-17 16:33:09,894:INFO:machine: AMD64
2023-06-17 16:33:09,894:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-17 16:33:09,959:INFO:Memory: svmem(total=17120436224, available=6145613824, percent=64.1, used=10974822400, free=6145613824)
2023-06-17 16:33:09,959:INFO:Physical Core: 4
2023-06-17 16:33:09,959:INFO:Logical Core: 4
2023-06-17 16:33:09,959:INFO:Checking libraries
2023-06-17 16:33:09,959:INFO:System:
2023-06-17 16:33:09,959:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-17 16:33:09,959:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-17 16:33:09,959:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-17 16:33:09,959:INFO:PyCaret required dependencies:
2023-06-17 16:33:09,959:INFO:                 pip: 21.2.3
2023-06-17 16:33:09,959:INFO:          setuptools: 57.4.0
2023-06-17 16:33:09,960:INFO:             pycaret: 3.0.2
2023-06-17 16:33:09,960:INFO:             IPython: 7.28.0
2023-06-17 16:33:09,960:INFO:          ipywidgets: 8.0.6
2023-06-17 16:33:09,960:INFO:                tqdm: 4.64.0
2023-06-17 16:33:09,960:INFO:               numpy: 1.22.4
2023-06-17 16:33:09,960:INFO:              pandas: 1.3.5
2023-06-17 16:33:09,960:INFO:              jinja2: 3.1.2
2023-06-17 16:33:09,960:INFO:               scipy: 1.7.1
2023-06-17 16:33:09,960:INFO:              joblib: 1.2.0
2023-06-17 16:33:09,960:INFO:             sklearn: 1.1.0
2023-06-17 16:33:09,960:INFO:                pyod: 1.0.9
2023-06-17 16:33:09,960:INFO:            imblearn: 0.9.1
2023-06-17 16:33:09,960:INFO:   category_encoders: 2.6.1
2023-06-17 16:33:09,960:INFO:            lightgbm: 3.3.5
2023-06-17 16:33:09,960:INFO:               numba: 0.57.0
2023-06-17 16:33:09,960:INFO:            requests: 2.31.0
2023-06-17 16:33:09,960:INFO:          matplotlib: 3.4.3
2023-06-17 16:33:09,960:INFO:          scikitplot: 0.3.7
2023-06-17 16:33:09,960:INFO:         yellowbrick: 1.5
2023-06-17 16:33:09,960:INFO:              plotly: 5.8.0
2023-06-17 16:33:09,960:INFO:             kaleido: 0.2.1
2023-06-17 16:33:09,960:INFO:         statsmodels: 0.14.0
2023-06-17 16:33:09,961:INFO:              sktime: 0.17.0
2023-06-17 16:33:09,961:INFO:               tbats: 1.1.3
2023-06-17 16:33:09,961:INFO:            pmdarima: 2.0.3
2023-06-17 16:33:09,961:INFO:              psutil: 5.9.0
2023-06-17 16:33:09,961:INFO:PyCaret optional dependencies:
2023-06-17 16:33:09,983:INFO:                shap: Not installed
2023-06-17 16:33:09,983:INFO:           interpret: Not installed
2023-06-17 16:33:09,983:INFO:                umap: Not installed
2023-06-17 16:33:09,984:INFO:    pandas_profiling: Not installed
2023-06-17 16:33:09,984:INFO:  explainerdashboard: Not installed
2023-06-17 16:33:09,984:INFO:             autoviz: Not installed
2023-06-17 16:33:09,984:INFO:           fairlearn: Not installed
2023-06-17 16:33:09,984:INFO:             xgboost: Not installed
2023-06-17 16:33:09,984:INFO:            catboost: Not installed
2023-06-17 16:33:09,984:INFO:              kmodes: Not installed
2023-06-17 16:33:09,984:INFO:             mlxtend: Not installed
2023-06-17 16:33:09,984:INFO:       statsforecast: Not installed
2023-06-17 16:33:09,984:INFO:        tune_sklearn: Not installed
2023-06-17 16:33:09,984:INFO:                 ray: Not installed
2023-06-17 16:33:09,984:INFO:            hyperopt: Not installed
2023-06-17 16:33:09,984:INFO:              optuna: Not installed
2023-06-17 16:33:09,984:INFO:               skopt: Not installed
2023-06-17 16:33:09,984:INFO:              mlflow: Not installed
2023-06-17 16:33:09,984:INFO:              gradio: Not installed
2023-06-17 16:33:09,984:INFO:             fastapi: Not installed
2023-06-17 16:33:09,984:INFO:             uvicorn: Not installed
2023-06-17 16:33:09,984:INFO:              m2cgen: Not installed
2023-06-17 16:33:09,984:INFO:           evidently: Not installed
2023-06-17 16:33:09,985:INFO:               fugue: Not installed
2023-06-17 16:33:09,985:INFO:           streamlit: Not installed
2023-06-17 16:33:09,985:INFO:             prophet: Not installed
2023-06-17 16:33:09,985:INFO:None
2023-06-17 16:33:09,985:INFO:Set up data.
2023-06-17 16:33:10,404:INFO:Set up train/test split.
2023-06-17 16:33:10,434:INFO:Set up index.
2023-06-17 16:33:10,435:INFO:Set up folding strategy.
2023-06-17 16:33:10,435:INFO:Assigning column types.
2023-06-17 16:33:10,458:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 16:33:10,508:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,710:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,741:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 16:33:10,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,870:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 16:33:10,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,901:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 16:33:10,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:10,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,098:INFO:Preparing preprocessing pipeline...
2023-06-17 16:33:11,100:INFO:Set up simple imputation.
2023-06-17 16:33:11,157:INFO:Set up encoding of ordinal features.
2023-06-17 16:33:11,177:INFO:Set up encoding of categorical features.
2023-06-17 16:33:11,177:INFO:Set up removing multicollinearity.
2023-06-17 16:33:11,177:INFO:Set up imbalanced handling.
2023-06-17 16:33:11,177:INFO:Set up feature selection.
2023-06-17 16:33:11,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:11,277:INFO:Set up column name cleaning.
2023-06-17 16:33:11,938:INFO:Finished creating preprocessing pipeline.
2023-06-17 16:33:12,032:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x000002581755EAF0>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 16:33:12,033:INFO:Creating final display dataframe.
2023-06-17 16:33:12,237:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              d088
2023-06-17 16:33:12,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:12,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:12,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:12,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 16:33:12,463:INFO:setup() successfully completed in 6.89s...............
2023-06-17 16:33:18,477:INFO:Initializing create_model()
2023-06-17 16:33:18,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:33:18,478:INFO:Checking exceptions
2023-06-17 16:33:18,596:INFO:Importing libraries
2023-06-17 16:33:18,596:INFO:Copying training dataset
2023-06-17 16:33:18,641:INFO:Defining folds
2023-06-17 16:33:18,641:INFO:Declaring metric variables
2023-06-17 16:33:18,653:INFO:Importing untrained model
2023-06-17 16:33:18,653:INFO:Declaring custom model
2023-06-17 16:33:18,661:INFO:Random Forest Classifier Imported successfully
2023-06-17 16:33:18,673:INFO:Starting cross validation
2023-06-17 16:33:18,675:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:34:15,418:INFO:Calculating mean and std
2023-06-17 16:34:15,419:INFO:Creating metrics dataframe
2023-06-17 16:34:15,425:INFO:Finalizing model
2023-06-17 16:34:54,191:INFO:Uploading results into container
2023-06-17 16:34:54,192:INFO:Uploading model into container now
2023-06-17 16:34:54,210:INFO:_master_model_container: 1
2023-06-17 16:34:54,210:INFO:_display_container: 2
2023-06-17 16:34:54,211:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None)
2023-06-17 16:34:54,211:INFO:create_model() successfully completed......................................
2023-06-17 16:34:54,292:INFO:Initializing evaluate_model()
2023-06-17 16:34:54,293:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:34:54,323:INFO:Initializing plot_model()
2023-06-17 16:34:54,324:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:34:54,324:INFO:Checking exceptions
2023-06-17 16:34:54,335:INFO:Preloading libraries
2023-06-17 16:34:54,345:INFO:Copying training dataset
2023-06-17 16:34:54,345:INFO:Plot type: pipeline
2023-06-17 16:34:54,636:INFO:Visual Rendered Successfully
2023-06-17 16:34:54,704:INFO:plot_model() successfully completed......................................
2023-06-17 16:36:32,441:INFO:Initializing create_model()
2023-06-17 16:36:32,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:36:32,442:INFO:Checking exceptions
2023-06-17 16:36:32,475:INFO:Importing libraries
2023-06-17 16:36:32,475:INFO:Copying training dataset
2023-06-17 16:36:32,494:INFO:Defining folds
2023-06-17 16:36:32,494:INFO:Declaring metric variables
2023-06-17 16:36:32,498:INFO:Importing untrained model
2023-06-17 16:36:32,499:INFO:Declaring custom model
2023-06-17 16:36:32,504:INFO:Random Forest Classifier Imported successfully
2023-06-17 16:36:32,516:INFO:Starting cross validation
2023-06-17 16:36:32,519:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:37:33,229:INFO:Calculating mean and std
2023-06-17 16:37:33,230:INFO:Creating metrics dataframe
2023-06-17 16:37:33,241:INFO:Finalizing model
2023-06-17 16:38:10,688:INFO:Uploading results into container
2023-06-17 16:38:10,689:INFO:Uploading model into container now
2023-06-17 16:38:10,705:INFO:_master_model_container: 2
2023-06-17 16:38:10,706:INFO:_display_container: 3
2023-06-17 16:38:10,708:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None)
2023-06-17 16:38:10,708:INFO:create_model() successfully completed......................................
2023-06-17 16:38:10,789:INFO:Initializing evaluate_model()
2023-06-17 16:38:10,789:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:38:10,812:INFO:Initializing plot_model()
2023-06-17 16:38:10,812:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:10,812:INFO:Checking exceptions
2023-06-17 16:38:10,818:INFO:Preloading libraries
2023-06-17 16:38:10,824:INFO:Copying training dataset
2023-06-17 16:38:10,824:INFO:Plot type: pipeline
2023-06-17 16:38:10,993:INFO:Visual Rendered Successfully
2023-06-17 16:38:11,059:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:16,424:INFO:Initializing plot_model()
2023-06-17 16:38:16,425:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:16,425:INFO:Checking exceptions
2023-06-17 16:38:16,431:INFO:Preloading libraries
2023-06-17 16:38:16,436:INFO:Copying training dataset
2023-06-17 16:38:16,437:INFO:Plot type: auc
2023-06-17 16:38:16,570:INFO:Fitting Model
2023-06-17 16:38:16,571:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:38:16,572:INFO:Scoring test/hold-out set
2023-06-17 16:38:16,858:INFO:Visual Rendered Successfully
2023-06-17 16:38:16,933:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:20,330:INFO:Initializing plot_model()
2023-06-17 16:38:20,331:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:20,331:INFO:Checking exceptions
2023-06-17 16:38:20,338:INFO:Preloading libraries
2023-06-17 16:38:20,344:INFO:Copying training dataset
2023-06-17 16:38:20,344:INFO:Plot type: confusion_matrix
2023-06-17 16:38:20,474:INFO:Fitting Model
2023-06-17 16:38:20,474:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:38:20,475:INFO:Scoring test/hold-out set
2023-06-17 16:38:20,672:INFO:Visual Rendered Successfully
2023-06-17 16:38:20,773:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:32,244:INFO:Initializing plot_model()
2023-06-17 16:38:32,244:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:32,244:INFO:Checking exceptions
2023-06-17 16:38:36,619:INFO:Initializing plot_model()
2023-06-17 16:38:36,619:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:36,619:INFO:Checking exceptions
2023-06-17 16:38:41,530:INFO:Initializing plot_model()
2023-06-17 16:38:41,531:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:41,531:INFO:Checking exceptions
2023-06-17 16:38:41,537:INFO:Preloading libraries
2023-06-17 16:38:41,543:INFO:Copying training dataset
2023-06-17 16:38:41,543:INFO:Plot type: confusion_matrix
2023-06-17 16:38:41,669:INFO:Fitting Model
2023-06-17 16:38:41,670:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:38:41,671:INFO:Scoring test/hold-out set
2023-06-17 16:38:41,888:INFO:Visual Rendered Successfully
2023-06-17 16:38:41,997:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:42,746:INFO:Initializing plot_model()
2023-06-17 16:38:42,747:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:38:42,747:INFO:Checking exceptions
2023-06-17 16:38:42,753:INFO:Preloading libraries
2023-06-17 16:38:42,759:INFO:Copying training dataset
2023-06-17 16:38:42,759:INFO:Plot type: parameter
2023-06-17 16:38:42,763:INFO:Visual Rendered Successfully
2023-06-17 16:38:42,826:INFO:plot_model() successfully completed......................................
2023-06-17 16:38:59,754:INFO:Initializing create_model()
2023-06-17 16:38:59,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:38:59,755:INFO:Checking exceptions
2023-06-17 16:38:59,789:INFO:Importing libraries
2023-06-17 16:38:59,790:INFO:Copying training dataset
2023-06-17 16:38:59,806:INFO:Defining folds
2023-06-17 16:38:59,806:INFO:Declaring metric variables
2023-06-17 16:38:59,815:INFO:Importing untrained model
2023-06-17 16:38:59,816:INFO:Declaring custom model
2023-06-17 16:38:59,825:INFO:Random Forest Classifier Imported successfully
2023-06-17 16:38:59,837:INFO:Starting cross validation
2023-06-17 16:38:59,839:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:42:07,691:INFO:Calculating mean and std
2023-06-17 16:42:07,692:INFO:Creating metrics dataframe
2023-06-17 16:42:07,706:INFO:Finalizing model
2023-06-17 16:44:10,045:INFO:Uploading results into container
2023-06-17 16:44:10,046:INFO:Uploading model into container now
2023-06-17 16:44:10,073:INFO:_master_model_container: 3
2023-06-17 16:44:10,073:INFO:_display_container: 4
2023-06-17 16:44:10,074:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 16:44:10,076:INFO:create_model() successfully completed......................................
2023-06-17 16:44:10,245:INFO:Initializing evaluate_model()
2023-06-17 16:44:10,246:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:44:10,286:INFO:Initializing plot_model()
2023-06-17 16:44:10,286:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:44:10,286:INFO:Checking exceptions
2023-06-17 16:44:10,294:INFO:Preloading libraries
2023-06-17 16:44:10,307:INFO:Copying training dataset
2023-06-17 16:44:10,307:INFO:Plot type: pipeline
2023-06-17 16:44:10,553:INFO:Visual Rendered Successfully
2023-06-17 16:44:10,644:INFO:plot_model() successfully completed......................................
2023-06-17 16:44:22,958:INFO:Initializing plot_model()
2023-06-17 16:44:22,958:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:44:22,958:INFO:Checking exceptions
2023-06-17 16:44:22,965:INFO:Preloading libraries
2023-06-17 16:44:22,977:INFO:Copying training dataset
2023-06-17 16:44:22,977:INFO:Plot type: auc
2023-06-17 16:44:23,230:INFO:Fitting Model
2023-06-17 16:44:23,231:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:44:23,232:INFO:Scoring test/hold-out set
2023-06-17 16:44:23,733:INFO:Visual Rendered Successfully
2023-06-17 16:44:23,855:INFO:plot_model() successfully completed......................................
2023-06-17 16:44:27,100:INFO:Initializing plot_model()
2023-06-17 16:44:27,100:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight='balanced',
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=50,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:44:27,100:INFO:Checking exceptions
2023-06-17 16:44:27,107:INFO:Preloading libraries
2023-06-17 16:44:27,119:INFO:Copying training dataset
2023-06-17 16:44:27,119:INFO:Plot type: confusion_matrix
2023-06-17 16:44:27,290:INFO:Fitting Model
2023-06-17 16:44:27,290:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 16:44:27,292:INFO:Scoring test/hold-out set
2023-06-17 16:44:27,713:INFO:Visual Rendered Successfully
2023-06-17 16:44:27,872:INFO:plot_model() successfully completed......................................
2023-06-17 16:45:05,713:INFO:Initializing create_model()
2023-06-17 16:45:05,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:45:05,713:INFO:Checking exceptions
2023-06-17 16:45:05,747:INFO:Importing libraries
2023-06-17 16:45:05,748:INFO:Copying training dataset
2023-06-17 16:45:05,767:INFO:Defining folds
2023-06-17 16:45:05,768:INFO:Declaring metric variables
2023-06-17 16:45:05,772:INFO:Importing untrained model
2023-06-17 16:45:05,778:INFO:Logistic Regression Imported successfully
2023-06-17 16:45:05,793:INFO:Starting cross validation
2023-06-17 16:45:05,797:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:45:09,310:INFO:Calculating mean and std
2023-06-17 16:45:09,313:INFO:Creating metrics dataframe
2023-06-17 16:45:09,319:INFO:Finalizing model
2023-06-17 16:45:10,548:INFO:Uploading results into container
2023-06-17 16:45:10,549:INFO:Uploading model into container now
2023-06-17 16:45:10,567:INFO:_master_model_container: 4
2023-06-17 16:45:10,567:INFO:_display_container: 5
2023-06-17 16:45:10,567:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 16:45:10,568:INFO:create_model() successfully completed......................................
2023-06-17 16:45:10,652:INFO:Initializing evaluate_model()
2023-06-17 16:45:10,653:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:45:10,677:INFO:Initializing plot_model()
2023-06-17 16:45:10,677:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=3, ensemble=True, method='isotonic', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:45:10,677:INFO:Checking exceptions
2023-06-17 16:45:10,683:INFO:Preloading libraries
2023-06-17 16:45:10,683:INFO:Copying training dataset
2023-06-17 16:45:10,683:INFO:Plot type: pipeline
2023-06-17 16:45:10,863:INFO:Visual Rendered Successfully
2023-06-17 16:45:10,933:INFO:plot_model() successfully completed......................................
2023-06-17 16:45:18,763:INFO:Initializing create_model()
2023-06-17 16:45:18,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:45:18,764:INFO:Checking exceptions
2023-06-17 16:45:18,798:INFO:Importing libraries
2023-06-17 16:45:18,805:INFO:Copying training dataset
2023-06-17 16:45:18,820:INFO:Defining folds
2023-06-17 16:45:18,820:INFO:Declaring metric variables
2023-06-17 16:45:18,826:INFO:Importing untrained model
2023-06-17 16:45:18,831:INFO:Logistic Regression Imported successfully
2023-06-17 16:45:18,852:INFO:Starting cross validation
2023-06-17 16:45:18,855:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:45:22,333:INFO:Calculating mean and std
2023-06-17 16:45:22,335:INFO:Creating metrics dataframe
2023-06-17 16:45:22,342:INFO:Finalizing model
2023-06-17 16:45:23,595:INFO:Uploading results into container
2023-06-17 16:45:23,596:INFO:Uploading model into container now
2023-06-17 16:45:23,611:INFO:_master_model_container: 5
2023-06-17 16:45:23,612:INFO:_display_container: 6
2023-06-17 16:45:23,612:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 16:45:23,612:INFO:create_model() successfully completed......................................
2023-06-17 16:45:23,698:INFO:Initializing evaluate_model()
2023-06-17 16:45:23,698:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:45:23,723:INFO:Initializing plot_model()
2023-06-17 16:45:23,723:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=3, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:45:23,723:INFO:Checking exceptions
2023-06-17 16:45:23,730:INFO:Preloading libraries
2023-06-17 16:45:23,731:INFO:Copying training dataset
2023-06-17 16:45:23,731:INFO:Plot type: pipeline
2023-06-17 16:45:23,958:INFO:Visual Rendered Successfully
2023-06-17 16:45:24,031:INFO:plot_model() successfully completed......................................
2023-06-17 16:45:33,755:INFO:Initializing create_model()
2023-06-17 16:45:33,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:45:33,756:INFO:Checking exceptions
2023-06-17 16:45:33,791:INFO:Importing libraries
2023-06-17 16:45:33,791:INFO:Copying training dataset
2023-06-17 16:45:33,808:INFO:Defining folds
2023-06-17 16:45:33,808:INFO:Declaring metric variables
2023-06-17 16:45:33,814:INFO:Importing untrained model
2023-06-17 16:45:33,820:INFO:Logistic Regression Imported successfully
2023-06-17 16:45:33,852:INFO:Starting cross validation
2023-06-17 16:45:33,854:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:45:37,320:INFO:Calculating mean and std
2023-06-17 16:45:37,321:INFO:Creating metrics dataframe
2023-06-17 16:45:37,327:INFO:Finalizing model
2023-06-17 16:45:38,541:INFO:Uploading results into container
2023-06-17 16:45:38,542:INFO:Uploading model into container now
2023-06-17 16:45:38,560:INFO:_master_model_container: 6
2023-06-17 16:45:38,560:INFO:_display_container: 7
2023-06-17 16:45:38,560:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 16:45:38,561:INFO:create_model() successfully completed......................................
2023-06-17 16:45:38,719:INFO:Initializing evaluate_model()
2023-06-17 16:45:38,719:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:45:38,747:INFO:Initializing plot_model()
2023-06-17 16:45:38,747:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:45:38,748:INFO:Checking exceptions
2023-06-17 16:45:38,752:INFO:Preloading libraries
2023-06-17 16:45:38,753:INFO:Copying training dataset
2023-06-17 16:45:38,753:INFO:Plot type: pipeline
2023-06-17 16:45:38,936:INFO:Visual Rendered Successfully
2023-06-17 16:45:39,007:INFO:plot_model() successfully completed......................................
2023-06-17 16:45:40,797:INFO:Initializing plot_model()
2023-06-17 16:45:40,798:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:45:40,798:INFO:Checking exceptions
2023-06-17 16:45:40,804:INFO:Preloading libraries
2023-06-17 16:45:40,804:INFO:Copying training dataset
2023-06-17 16:45:40,804:INFO:Plot type: parameter
2023-06-17 16:45:40,808:INFO:Visual Rendered Successfully
2023-06-17 16:45:40,908:INFO:plot_model() successfully completed......................................
2023-06-17 16:57:08,138:INFO:Initializing plot_model()
2023-06-17 16:57:08,138:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:57:08,138:INFO:Checking exceptions
2023-06-17 16:57:08,145:INFO:Preloading libraries
2023-06-17 16:57:08,145:INFO:Copying training dataset
2023-06-17 16:57:08,145:INFO:Plot type: calibration
2023-06-17 16:57:08,166:INFO:Scoring test/hold-out set
2023-06-17 16:59:40,578:INFO:Initializing create_model()
2023-06-17 16:59:40,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:59:40,578:INFO:Checking exceptions
2023-06-17 16:59:40,614:INFO:Importing libraries
2023-06-17 16:59:40,614:INFO:Copying training dataset
2023-06-17 16:59:40,631:INFO:Defining folds
2023-06-17 16:59:40,631:INFO:Declaring metric variables
2023-06-17 16:59:40,645:INFO:Importing untrained model
2023-06-17 16:59:40,651:INFO:Logistic Regression Imported successfully
2023-06-17 16:59:40,678:INFO:Starting cross validation
2023-06-17 16:59:40,680:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:59:47,948:INFO:Calculating mean and std
2023-06-17 16:59:47,949:INFO:Creating metrics dataframe
2023-06-17 16:59:47,957:INFO:Finalizing model
2023-06-17 16:59:49,177:INFO:Uploading results into container
2023-06-17 16:59:49,179:INFO:Uploading model into container now
2023-06-17 16:59:49,198:INFO:_master_model_container: 7
2023-06-17 16:59:49,198:INFO:_display_container: 8
2023-06-17 16:59:49,199:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 16:59:49,199:INFO:create_model() successfully completed......................................
2023-06-17 16:59:49,298:INFO:Initializing calibrate_model()
2023-06-17 16:59:49,298:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 16:59:49,298:INFO:Checking exceptions
2023-06-17 16:59:49,304:INFO:Preloading libraries
2023-06-17 16:59:49,304:INFO:Preparing display monitor
2023-06-17 16:59:49,338:INFO:Getting model name
2023-06-17 16:59:49,338:INFO:Base model : Logistic Regression
2023-06-17 16:59:49,349:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 16:59:49,349:INFO:SubProcess create_model() called ==================================
2023-06-17 16:59:49,350:INFO:Initializing create_model()
2023-06-17 16:59:49,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025819F094F0>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 16:59:49,351:INFO:Checking exceptions
2023-06-17 16:59:49,351:INFO:Importing libraries
2023-06-17 16:59:49,351:INFO:Copying training dataset
2023-06-17 16:59:49,373:INFO:Defining folds
2023-06-17 16:59:49,373:INFO:Declaring metric variables
2023-06-17 16:59:49,380:INFO:Importing untrained model
2023-06-17 16:59:49,380:INFO:Declaring custom model
2023-06-17 16:59:49,386:INFO:Logistic Regression Imported successfully
2023-06-17 16:59:49,397:INFO:Starting cross validation
2023-06-17 16:59:49,399:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 16:59:54,568:INFO:Calculating mean and std
2023-06-17 16:59:54,571:INFO:Creating metrics dataframe
2023-06-17 16:59:54,578:INFO:Finalizing model
2023-06-17 16:59:56,749:INFO:Uploading results into container
2023-06-17 16:59:56,750:INFO:Uploading model into container now
2023-06-17 16:59:56,750:INFO:_master_model_container: 8
2023-06-17 16:59:56,750:INFO:_display_container: 9
2023-06-17 16:59:56,751:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 16:59:56,752:INFO:create_model() successfully completed......................................
2023-06-17 16:59:56,841:INFO:SubProcess create_model() end ==================================
2023-06-17 16:59:56,866:INFO:_master_model_container: 8
2023-06-17 16:59:56,866:INFO:_display_container: 9
2023-06-17 16:59:56,867:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 16:59:56,868:INFO:calibrate_model() successfully completed......................................
2023-06-17 16:59:56,958:INFO:Initializing evaluate_model()
2023-06-17 16:59:56,958:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 16:59:56,980:INFO:Initializing plot_model()
2023-06-17 16:59:56,981:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 16:59:56,981:INFO:Checking exceptions
2023-06-17 16:59:56,987:INFO:Preloading libraries
2023-06-17 16:59:56,988:INFO:Copying training dataset
2023-06-17 16:59:56,988:INFO:Plot type: pipeline
2023-06-17 16:59:57,192:INFO:Visual Rendered Successfully
2023-06-17 16:59:57,266:INFO:plot_model() successfully completed......................................
2023-06-17 17:00:09,498:INFO:Initializing plot_model()
2023-06-17 17:00:09,499:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:00:09,499:INFO:Checking exceptions
2023-06-17 17:00:09,506:INFO:Preloading libraries
2023-06-17 17:00:09,507:INFO:Copying training dataset
2023-06-17 17:00:09,507:INFO:Plot type: calibration
2023-06-17 17:00:09,524:INFO:Scoring test/hold-out set
2023-06-17 17:00:09,746:INFO:Visual Rendered Successfully
2023-06-17 17:00:09,810:INFO:plot_model() successfully completed......................................
2023-06-17 17:01:17,903:INFO:Initializing create_model()
2023-06-17 17:01:17,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:01:17,904:INFO:Checking exceptions
2023-06-17 17:01:17,939:INFO:Importing libraries
2023-06-17 17:01:17,940:INFO:Copying training dataset
2023-06-17 17:01:17,958:INFO:Defining folds
2023-06-17 17:01:17,958:INFO:Declaring metric variables
2023-06-17 17:01:17,968:INFO:Importing untrained model
2023-06-17 17:01:17,968:INFO:Declaring custom model
2023-06-17 17:01:17,974:INFO:Random Forest Classifier Imported successfully
2023-06-17 17:01:17,988:INFO:Starting cross validation
2023-06-17 17:01:17,992:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:01:58,419:INFO:Calculating mean and std
2023-06-17 17:01:58,420:INFO:Creating metrics dataframe
2023-06-17 17:01:58,427:INFO:Finalizing model
2023-06-17 17:02:26,239:INFO:Uploading results into container
2023-06-17 17:02:26,240:INFO:Uploading model into container now
2023-06-17 17:02:26,257:INFO:_master_model_container: 9
2023-06-17 17:02:26,257:INFO:_display_container: 10
2023-06-17 17:02:26,257:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-17 17:02:26,257:INFO:create_model() successfully completed......................................
2023-06-17 17:02:26,347:INFO:Initializing calibrate_model()
2023-06-17 17:02:26,348:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:02:26,348:INFO:Checking exceptions
2023-06-17 17:02:26,358:INFO:Preloading libraries
2023-06-17 17:02:26,358:INFO:Preparing display monitor
2023-06-17 17:02:26,401:INFO:Getting model name
2023-06-17 17:02:26,401:INFO:Base model : Random Forest Classifier
2023-06-17 17:02:26,415:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:02:26,415:INFO:SubProcess create_model() called ==================================
2023-06-17 17:02:26,417:INFO:Initializing create_model()
2023-06-17 17:02:26,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025819FAD820>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:02:26,417:INFO:Checking exceptions
2023-06-17 17:02:26,417:INFO:Importing libraries
2023-06-17 17:02:26,417:INFO:Copying training dataset
2023-06-17 17:02:26,468:INFO:Defining folds
2023-06-17 17:02:26,469:INFO:Declaring metric variables
2023-06-17 17:02:26,485:INFO:Importing untrained model
2023-06-17 17:02:26,485:INFO:Declaring custom model
2023-06-17 17:02:26,499:INFO:Random Forest Classifier Imported successfully
2023-06-17 17:02:26,518:INFO:Starting cross validation
2023-06-17 17:02:26,522:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:04:28,893:INFO:Calculating mean and std
2023-06-17 17:04:28,894:INFO:Creating metrics dataframe
2023-06-17 17:04:28,902:INFO:Finalizing model
2023-06-17 17:06:02,267:INFO:Uploading results into container
2023-06-17 17:06:02,268:INFO:Uploading model into container now
2023-06-17 17:06:02,268:INFO:_master_model_container: 10
2023-06-17 17:06:02,268:INFO:_display_container: 11
2023-06-17 17:06:02,270:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:06:02,271:INFO:create_model() successfully completed......................................
2023-06-17 17:06:02,351:INFO:SubProcess create_model() end ==================================
2023-06-17 17:06:02,374:INFO:_master_model_container: 10
2023-06-17 17:06:02,375:INFO:_display_container: 11
2023-06-17 17:06:02,381:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:06:02,382:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:06:02,483:INFO:Initializing evaluate_model()
2023-06-17 17:06:02,483:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:06:02,509:INFO:Initializing plot_model()
2023-06-17 17:06:02,510:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:06:02,510:INFO:Checking exceptions
2023-06-17 17:06:02,518:INFO:Preloading libraries
2023-06-17 17:06:02,527:INFO:Copying training dataset
2023-06-17 17:06:02,527:INFO:Plot type: pipeline
2023-06-17 17:06:02,718:INFO:Visual Rendered Successfully
2023-06-17 17:06:02,791:INFO:plot_model() successfully completed......................................
2023-06-17 17:06:02,815:INFO:Initializing plot_model()
2023-06-17 17:06:02,815:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:06:02,816:INFO:Checking exceptions
2023-06-17 17:06:02,823:INFO:Preloading libraries
2023-06-17 17:06:02,824:INFO:Copying training dataset
2023-06-17 17:06:02,824:INFO:Plot type: parameter
2023-06-17 17:06:02,828:INFO:Visual Rendered Successfully
2023-06-17 17:06:02,920:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:02,632:INFO:Initializing plot_model()
2023-06-17 17:08:02,632:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:02,632:INFO:Checking exceptions
2023-06-17 17:08:02,638:INFO:Preloading libraries
2023-06-17 17:08:02,647:INFO:Copying training dataset
2023-06-17 17:08:02,647:INFO:Plot type: calibration
2023-06-17 17:08:02,668:INFO:Scoring test/hold-out set
2023-06-17 17:08:02,968:INFO:Visual Rendered Successfully
2023-06-17 17:08:03,035:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:09,331:INFO:Initializing plot_model()
2023-06-17 17:08:09,331:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:09,332:INFO:Checking exceptions
2023-06-17 17:08:09,338:INFO:Preloading libraries
2023-06-17 17:08:09,339:INFO:Copying training dataset
2023-06-17 17:08:09,339:INFO:Plot type: calibration
2023-06-17 17:08:09,357:INFO:Scoring test/hold-out set
2023-06-17 17:08:09,548:INFO:Visual Rendered Successfully
2023-06-17 17:08:09,613:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:10,662:INFO:Initializing plot_model()
2023-06-17 17:08:10,662:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:10,662:INFO:Checking exceptions
2023-06-17 17:08:10,669:INFO:Preloading libraries
2023-06-17 17:08:10,670:INFO:Copying training dataset
2023-06-17 17:08:10,670:INFO:Plot type: vc
2023-06-17 17:08:10,670:INFO:Determining param_name
2023-06-17 17:08:13,188:INFO:Initializing plot_model()
2023-06-17 17:08:13,188:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:13,188:INFO:Checking exceptions
2023-06-17 17:08:13,195:INFO:Preloading libraries
2023-06-17 17:08:13,195:INFO:Copying training dataset
2023-06-17 17:08:13,196:INFO:Plot type: calibration
2023-06-17 17:08:13,212:INFO:Scoring test/hold-out set
2023-06-17 17:08:13,409:INFO:Visual Rendered Successfully
2023-06-17 17:08:13,472:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:14,956:INFO:Initializing plot_model()
2023-06-17 17:08:14,956:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:14,956:INFO:Checking exceptions
2023-06-17 17:08:14,963:INFO:Preloading libraries
2023-06-17 17:08:14,963:INFO:Copying training dataset
2023-06-17 17:08:14,963:INFO:Plot type: dimension
2023-06-17 17:08:15,050:INFO:Fitting StandardScaler()
2023-06-17 17:08:15,116:INFO:Fitting PCA()
2023-06-17 17:08:15,473:INFO:Fitting & Transforming Model
2023-06-17 17:08:17,243:INFO:Visual Rendered Successfully
2023-06-17 17:08:17,324:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:20,540:INFO:Initializing plot_model()
2023-06-17 17:08:20,540:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:20,540:INFO:Checking exceptions
2023-06-17 17:08:20,547:INFO:Preloading libraries
2023-06-17 17:08:20,548:INFO:Copying training dataset
2023-06-17 17:08:20,548:INFO:Plot type: calibration
2023-06-17 17:08:20,563:INFO:Scoring test/hold-out set
2023-06-17 17:08:20,750:INFO:Visual Rendered Successfully
2023-06-17 17:08:20,815:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:26,964:INFO:Initializing plot_model()
2023-06-17 17:08:26,964:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:26,965:INFO:Checking exceptions
2023-06-17 17:08:26,971:INFO:Preloading libraries
2023-06-17 17:08:26,980:INFO:Copying training dataset
2023-06-17 17:08:26,980:INFO:Plot type: parameter
2023-06-17 17:08:26,984:INFO:Visual Rendered Successfully
2023-06-17 17:08:27,049:INFO:plot_model() successfully completed......................................
2023-06-17 17:08:42,475:INFO:Initializing plot_model()
2023-06-17 17:08:42,476:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:08:42,476:INFO:Checking exceptions
2023-06-17 17:08:42,482:INFO:Preloading libraries
2023-06-17 17:08:42,491:INFO:Copying training dataset
2023-06-17 17:08:42,491:INFO:Plot type: calibration
2023-06-17 17:08:42,507:INFO:Scoring test/hold-out set
2023-06-17 17:08:42,769:INFO:Visual Rendered Successfully
2023-06-17 17:08:42,832:INFO:plot_model() successfully completed......................................
2023-06-17 17:09:10,717:INFO:Initializing create_model()
2023-06-17 17:09:10,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:09:10,717:INFO:Checking exceptions
2023-06-17 17:09:10,758:INFO:Importing libraries
2023-06-17 17:09:10,759:INFO:Copying training dataset
2023-06-17 17:09:10,778:INFO:Defining folds
2023-06-17 17:09:10,778:INFO:Declaring metric variables
2023-06-17 17:09:10,782:INFO:Importing untrained model
2023-06-17 17:09:10,791:INFO:Logistic Regression Imported successfully
2023-06-17 17:09:10,804:INFO:Starting cross validation
2023-06-17 17:09:10,806:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:09:16,766:INFO:Calculating mean and std
2023-06-17 17:09:16,767:INFO:Creating metrics dataframe
2023-06-17 17:09:16,775:INFO:Finalizing model
2023-06-17 17:09:17,965:INFO:Uploading results into container
2023-06-17 17:09:17,967:INFO:Uploading model into container now
2023-06-17 17:09:17,984:INFO:_master_model_container: 11
2023-06-17 17:09:17,984:INFO:_display_container: 12
2023-06-17 17:09:17,984:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 17:09:17,984:INFO:create_model() successfully completed......................................
2023-06-17 17:09:18,077:INFO:Initializing calibrate_model()
2023-06-17 17:09:18,077:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:09:18,077:INFO:Checking exceptions
2023-06-17 17:09:18,083:INFO:Preloading libraries
2023-06-17 17:09:18,084:INFO:Preparing display monitor
2023-06-17 17:09:18,121:INFO:Getting model name
2023-06-17 17:09:18,122:INFO:Base model : Logistic Regression
2023-06-17 17:09:18,132:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:09:18,132:INFO:SubProcess create_model() called ==================================
2023-06-17 17:09:18,134:INFO:Initializing create_model()
2023-06-17 17:09:18,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025819D2DB80>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:09:18,134:INFO:Checking exceptions
2023-06-17 17:09:18,134:INFO:Importing libraries
2023-06-17 17:09:18,135:INFO:Copying training dataset
2023-06-17 17:09:18,153:INFO:Defining folds
2023-06-17 17:09:18,153:INFO:Declaring metric variables
2023-06-17 17:09:18,157:INFO:Importing untrained model
2023-06-17 17:09:18,157:INFO:Declaring custom model
2023-06-17 17:09:18,165:INFO:Logistic Regression Imported successfully
2023-06-17 17:09:18,177:INFO:Starting cross validation
2023-06-17 17:09:18,179:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:09:24,803:INFO:Calculating mean and std
2023-06-17 17:09:24,804:INFO:Creating metrics dataframe
2023-06-17 17:09:24,811:INFO:Finalizing model
2023-06-17 17:09:27,605:INFO:Uploading results into container
2023-06-17 17:09:27,606:INFO:Uploading model into container now
2023-06-17 17:09:27,606:INFO:_master_model_container: 12
2023-06-17 17:09:27,606:INFO:_display_container: 13
2023-06-17 17:09:27,607:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:09:27,607:INFO:create_model() successfully completed......................................
2023-06-17 17:09:27,679:INFO:SubProcess create_model() end ==================================
2023-06-17 17:09:27,703:INFO:_master_model_container: 12
2023-06-17 17:09:27,703:INFO:_display_container: 13
2023-06-17 17:09:27,705:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:09:27,705:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:09:27,802:INFO:Initializing evaluate_model()
2023-06-17 17:09:27,802:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:09:27,824:INFO:Initializing plot_model()
2023-06-17 17:09:27,824:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:09:27,824:INFO:Checking exceptions
2023-06-17 17:09:27,833:INFO:Preloading libraries
2023-06-17 17:09:27,834:INFO:Copying training dataset
2023-06-17 17:09:27,834:INFO:Plot type: pipeline
2023-06-17 17:09:28,009:INFO:Visual Rendered Successfully
2023-06-17 17:09:28,081:INFO:plot_model() successfully completed......................................
2023-06-17 17:09:32,044:INFO:Initializing plot_model()
2023-06-17 17:09:32,044:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:09:32,044:INFO:Checking exceptions
2023-06-17 17:09:32,051:INFO:Preloading libraries
2023-06-17 17:09:32,052:INFO:Copying training dataset
2023-06-17 17:09:32,052:INFO:Plot type: parameter
2023-06-17 17:09:32,056:INFO:Visual Rendered Successfully
2023-06-17 17:09:32,138:INFO:plot_model() successfully completed......................................
2023-06-17 17:09:47,227:INFO:Initializing plot_model()
2023-06-17 17:09:47,227:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, system=True)
2023-06-17 17:09:47,227:INFO:Checking exceptions
2023-06-17 17:09:47,233:INFO:Preloading libraries
2023-06-17 17:09:47,234:INFO:Copying training dataset
2023-06-17 17:09:47,234:INFO:Plot type: calibration
2023-06-17 17:09:47,251:INFO:Scoring test/hold-out set
2023-06-17 17:09:47,450:INFO:Visual Rendered Successfully
2023-06-17 17:09:47,517:INFO:plot_model() successfully completed......................................
2023-06-17 17:10:29,010:INFO:Initializing create_model()
2023-06-17 17:10:29,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025813C10D60>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:10:29,010:INFO:Checking exceptions
2023-06-17 17:10:29,045:INFO:Importing libraries
2023-06-17 17:10:29,046:INFO:Copying training dataset
2023-06-17 17:10:29,062:INFO:Defining folds
2023-06-17 17:10:29,063:INFO:Declaring metric variables
2023-06-17 17:10:29,068:INFO:Importing untrained model
2023-06-17 17:10:29,073:INFO:Decision Tree Classifier Imported successfully
2023-06-17 17:10:29,084:INFO:Starting cross validation
2023-06-17 17:10:29,087:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:10:32,549:INFO:Calculating mean and std
2023-06-17 17:10:32,550:INFO:Creating metrics dataframe
2023-06-17 17:10:32,561:INFO:Finalizing model
2023-06-17 17:11:07,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 17:11:07,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 17:11:07,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 17:11:07,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 17:11:08,532:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-17 17:11:09,343:INFO:PyCaret ClassificationExperiment
2023-06-17 17:11:09,344:INFO:Logging name: clf-default-name
2023-06-17 17:11:09,344:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 17:11:09,344:INFO:version 3.0.2
2023-06-17 17:11:09,344:INFO:Initializing setup()
2023-06-17 17:11:09,344:INFO:self.USI: 4af8
2023-06-17 17:11:09,344:INFO:self._variable_keys: {'n_jobs_param', 'X_test', 'logging_param', 'data', 'fold_groups_param', 'log_plots_param', 'exp_name_log', 'pipeline', 'y_test', 'y_train', 'X_train', '_available_plots', 'fold_generator', 'target_param', 'html_param', 'X', 'idx', 'gpu_n_jobs_param', '_ml_usecase', 'fold_shuffle_param', 'seed', 'memory', 'exp_id', 'gpu_param', 'USI', 'y', 'is_multiclass', 'fix_imbalance'}
2023-06-17 17:11:09,344:INFO:Checking environment
2023-06-17 17:11:09,344:INFO:python_version: 3.9.7
2023-06-17 17:11:09,344:INFO:python_build: ('tags/v3.9.7:1016ef3', 'Aug 30 2021 20:19:38')
2023-06-17 17:11:09,344:INFO:machine: AMD64
2023-06-17 17:11:09,344:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-17 17:11:09,344:INFO:Memory: svmem(total=17120436224, available=5267828736, percent=69.2, used=11852607488, free=5267828736)
2023-06-17 17:11:09,344:INFO:Physical Core: 4
2023-06-17 17:11:09,344:INFO:Logical Core: 4
2023-06-17 17:11:09,344:INFO:Checking libraries
2023-06-17 17:11:09,344:INFO:System:
2023-06-17 17:11:09,345:INFO:    python: 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
2023-06-17 17:11:09,345:INFO:executable: c:\Program Files\Python39\python.exe
2023-06-17 17:11:09,345:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-17 17:11:09,345:INFO:PyCaret required dependencies:
2023-06-17 17:11:09,345:INFO:                 pip: 21.2.3
2023-06-17 17:11:09,345:INFO:          setuptools: 57.4.0
2023-06-17 17:11:09,345:INFO:             pycaret: 3.0.2
2023-06-17 17:11:09,345:INFO:             IPython: 7.28.0
2023-06-17 17:11:09,345:INFO:          ipywidgets: 8.0.6
2023-06-17 17:11:09,345:INFO:                tqdm: 4.64.0
2023-06-17 17:11:09,345:INFO:               numpy: 1.22.4
2023-06-17 17:11:09,345:INFO:              pandas: 1.3.5
2023-06-17 17:11:09,345:INFO:              jinja2: 3.1.2
2023-06-17 17:11:09,345:INFO:               scipy: 1.7.1
2023-06-17 17:11:09,345:INFO:              joblib: 1.2.0
2023-06-17 17:11:09,345:INFO:             sklearn: 1.1.0
2023-06-17 17:11:09,345:INFO:                pyod: 1.0.9
2023-06-17 17:11:09,345:INFO:            imblearn: 0.9.1
2023-06-17 17:11:09,345:INFO:   category_encoders: 2.6.1
2023-06-17 17:11:09,345:INFO:            lightgbm: 3.3.5
2023-06-17 17:11:09,345:INFO:               numba: 0.57.0
2023-06-17 17:11:09,346:INFO:            requests: 2.31.0
2023-06-17 17:11:09,346:INFO:          matplotlib: 3.4.3
2023-06-17 17:11:09,346:INFO:          scikitplot: 0.3.7
2023-06-17 17:11:09,346:INFO:         yellowbrick: 1.5
2023-06-17 17:11:09,346:INFO:              plotly: 5.8.0
2023-06-17 17:11:09,346:INFO:             kaleido: 0.2.1
2023-06-17 17:11:09,346:INFO:         statsmodels: 0.14.0
2023-06-17 17:11:09,346:INFO:              sktime: 0.17.0
2023-06-17 17:11:09,346:INFO:               tbats: 1.1.3
2023-06-17 17:11:09,346:INFO:            pmdarima: 2.0.3
2023-06-17 17:11:09,346:INFO:              psutil: 5.9.0
2023-06-17 17:11:09,346:INFO:PyCaret optional dependencies:
2023-06-17 17:11:09,368:INFO:                shap: Not installed
2023-06-17 17:11:09,368:INFO:           interpret: Not installed
2023-06-17 17:11:09,368:INFO:                umap: Not installed
2023-06-17 17:11:09,368:INFO:    pandas_profiling: Not installed
2023-06-17 17:11:09,368:INFO:  explainerdashboard: Not installed
2023-06-17 17:11:09,368:INFO:             autoviz: Not installed
2023-06-17 17:11:09,369:INFO:           fairlearn: Not installed
2023-06-17 17:11:09,369:INFO:             xgboost: Not installed
2023-06-17 17:11:09,369:INFO:            catboost: Not installed
2023-06-17 17:11:09,369:INFO:              kmodes: Not installed
2023-06-17 17:11:09,369:INFO:             mlxtend: Not installed
2023-06-17 17:11:09,369:INFO:       statsforecast: Not installed
2023-06-17 17:11:09,369:INFO:        tune_sklearn: Not installed
2023-06-17 17:11:09,369:INFO:                 ray: Not installed
2023-06-17 17:11:09,369:INFO:            hyperopt: Not installed
2023-06-17 17:11:09,369:INFO:              optuna: Not installed
2023-06-17 17:11:09,369:INFO:               skopt: Not installed
2023-06-17 17:11:09,369:INFO:              mlflow: Not installed
2023-06-17 17:11:09,369:INFO:              gradio: Not installed
2023-06-17 17:11:09,369:INFO:             fastapi: Not installed
2023-06-17 17:11:09,369:INFO:             uvicorn: Not installed
2023-06-17 17:11:09,369:INFO:              m2cgen: Not installed
2023-06-17 17:11:09,369:INFO:           evidently: Not installed
2023-06-17 17:11:09,369:INFO:               fugue: Not installed
2023-06-17 17:11:09,369:INFO:           streamlit: Not installed
2023-06-17 17:11:09,369:INFO:             prophet: Not installed
2023-06-17 17:11:09,370:INFO:None
2023-06-17 17:11:09,370:INFO:Set up data.
2023-06-17 17:11:09,440:INFO:Set up train/test split.
2023-06-17 17:11:09,476:INFO:Set up index.
2023-06-17 17:11:09,477:INFO:Set up folding strategy.
2023-06-17 17:11:09,477:INFO:Assigning column types.
2023-06-17 17:11:09,495:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 17:11:09,556:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,559:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,735:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 17:11:09,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,878:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 17:11:09,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:09,916:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 17:11:10,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,109:INFO:Preparing preprocessing pipeline...
2023-06-17 17:11:10,111:INFO:Set up simple imputation.
2023-06-17 17:11:10,122:INFO:Set up encoding of ordinal features.
2023-06-17 17:11:10,133:INFO:Set up encoding of categorical features.
2023-06-17 17:11:10,133:INFO:Set up removing multicollinearity.
2023-06-17 17:11:10,133:INFO:Set up imbalanced handling.
2023-06-17 17:11:10,133:INFO:Set up feature selection.
2023-06-17 17:11:10,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:10,225:INFO:Set up column name cleaning.
2023-06-17 17:11:10,615:INFO:Finished creating preprocessing pipeline.
2023-06-17 17:11:10,669:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wyver\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'campaign',
                                             'contacted_before', 'previous',
                                             'emp.var.rate', 'cons.price.idx',
                                             'cons.conf.idx', 'euribor3m',
                                             'nr.employed'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_v...
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('feature_selection',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=SelectKBest(k=15,
                                                            score_func=<function f_classif at 0x00000216109CAE50>))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 17:11:10,669:INFO:Creating final display dataframe.
2023-06-17 17:11:10,909:INFO:Setup _display_container:                     Description             Value
0                    Session id               420
1                        Target        subscribed
2                   Target type            Binary
3           Original data shape       (41185, 20)
4        Transformed data shape       (63518, 16)
5   Transformed train set shape       (51162, 16)
6    Transformed test set shape       (12356, 16)
7               Ignore features                 2
8              Ordinal features                 3
9              Numeric features                 9
10         Categorical features                 8
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.8
19                Fix imbalance              True
20         Fix imbalance method             SMOTE
21            Feature selection              True
22     Feature selection method        univariate
23  Feature selection estimator          lightgbm
24  Number of features selected                15
25               Fold Generator   StratifiedKFold
26                  Fold Number                 5
27                     CPU Jobs                -1
28                      Use GPU             False
29               Log Experiment             False
30              Experiment Name  clf-default-name
31                          USI              4af8
2023-06-17 17:11:11,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:11,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:11,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:11,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 17:11:11,109:INFO:setup() successfully completed in 2.41s...............
2023-06-17 17:11:13,057:INFO:Initializing create_model()
2023-06-17 17:11:13,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:11:13,057:INFO:Checking exceptions
2023-06-17 17:11:13,091:INFO:Importing libraries
2023-06-17 17:11:13,092:INFO:Copying training dataset
2023-06-17 17:11:13,109:INFO:Defining folds
2023-06-17 17:11:13,109:INFO:Declaring metric variables
2023-06-17 17:11:13,114:INFO:Importing untrained model
2023-06-17 17:11:13,121:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 17:11:13,135:INFO:Starting cross validation
2023-06-17 17:11:13,137:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:11:18,360:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 17:11:18,360:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 17:11:18,360:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 17:11:19,722:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 17:11:21,293:INFO:Calculating mean and std
2023-06-17 17:11:21,294:INFO:Creating metrics dataframe
2023-06-17 17:11:21,301:INFO:Finalizing model
2023-06-17 17:11:22,486:INFO:Uploading results into container
2023-06-17 17:11:22,487:INFO:Uploading model into container now
2023-06-17 17:11:22,503:INFO:_master_model_container: 1
2023-06-17 17:11:22,503:INFO:_display_container: 2
2023-06-17 17:11:22,504:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 17:11:22,504:INFO:create_model() successfully completed......................................
2023-06-17 17:11:22,592:INFO:Initializing calibrate_model()
2023-06-17 17:11:22,592:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:11:22,592:INFO:Checking exceptions
2023-06-17 17:11:22,600:INFO:Preloading libraries
2023-06-17 17:11:22,600:INFO:Preparing display monitor
2023-06-17 17:11:22,632:INFO:Getting model name
2023-06-17 17:11:22,632:INFO:Base model : SVM - Linear Kernel
2023-06-17 17:11:22,644:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:11:22,644:INFO:SubProcess create_model() called ==================================
2023-06-17 17:11:22,646:INFO:Initializing create_model()
2023-06-17 17:11:22,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002160FFFC760>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:11:22,646:INFO:Checking exceptions
2023-06-17 17:11:22,646:INFO:Importing libraries
2023-06-17 17:11:22,646:INFO:Copying training dataset
2023-06-17 17:11:22,665:INFO:Defining folds
2023-06-17 17:11:22,665:INFO:Declaring metric variables
2023-06-17 17:11:22,670:INFO:Importing untrained model
2023-06-17 17:11:22,671:INFO:Declaring custom model
2023-06-17 17:11:22,676:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 17:11:22,688:INFO:Starting cross validation
2023-06-17 17:11:22,691:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:11:28,305:INFO:Calculating mean and std
2023-06-17 17:11:28,306:INFO:Creating metrics dataframe
2023-06-17 17:11:28,313:INFO:Finalizing model
2023-06-17 17:11:30,856:INFO:Uploading results into container
2023-06-17 17:11:30,856:INFO:Uploading model into container now
2023-06-17 17:11:30,857:INFO:_master_model_container: 2
2023-06-17 17:11:30,857:INFO:_display_container: 3
2023-06-17 17:11:30,858:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:11:30,858:INFO:create_model() successfully completed......................................
2023-06-17 17:11:30,922:INFO:SubProcess create_model() end ==================================
2023-06-17 17:11:30,946:INFO:_master_model_container: 2
2023-06-17 17:11:30,946:INFO:_display_container: 3
2023-06-17 17:11:30,947:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:11:30,948:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:11:31,043:INFO:Initializing evaluate_model()
2023-06-17 17:11:31,043:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:11:31,073:INFO:Initializing plot_model()
2023-06-17 17:11:31,074:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:11:31,074:INFO:Checking exceptions
2023-06-17 17:11:31,085:INFO:Preloading libraries
2023-06-17 17:11:31,086:INFO:Copying training dataset
2023-06-17 17:11:31,086:INFO:Plot type: pipeline
2023-06-17 17:11:31,318:INFO:Visual Rendered Successfully
2023-06-17 17:11:31,384:INFO:plot_model() successfully completed......................................
2023-06-17 17:11:42,468:INFO:Initializing plot_model()
2023-06-17 17:11:42,468:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:11:42,468:INFO:Checking exceptions
2023-06-17 17:11:42,474:INFO:Preloading libraries
2023-06-17 17:11:42,475:INFO:Copying training dataset
2023-06-17 17:11:42,475:INFO:Plot type: auc
2023-06-17 17:11:42,615:INFO:Fitting Model
2023-06-17 17:11:42,616:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but SGDClassifier was fitted with feature names
  warnings.warn(

2023-06-17 17:11:42,617:INFO:Scoring test/hold-out set
2023-06-17 17:11:42,829:INFO:Visual Rendered Successfully
2023-06-17 17:11:42,908:INFO:plot_model() successfully completed......................................
2023-06-17 17:11:47,523:INFO:Initializing plot_model()
2023-06-17 17:11:47,524:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:11:47,524:INFO:Checking exceptions
2023-06-17 17:11:47,531:INFO:Preloading libraries
2023-06-17 17:11:47,531:INFO:Copying training dataset
2023-06-17 17:11:47,532:INFO:Plot type: parameter
2023-06-17 17:11:47,536:INFO:Visual Rendered Successfully
2023-06-17 17:11:47,597:INFO:plot_model() successfully completed......................................
2023-06-17 17:12:01,011:INFO:Initializing plot_model()
2023-06-17 17:12:01,011:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:12:01,012:INFO:Checking exceptions
2023-06-17 17:12:01,019:INFO:Preloading libraries
2023-06-17 17:12:01,019:INFO:Copying training dataset
2023-06-17 17:12:01,020:INFO:Plot type: auc
2023-06-17 17:12:01,151:INFO:Fitting Model
2023-06-17 17:12:01,152:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but SGDClassifier was fitted with feature names
  warnings.warn(

2023-06-17 17:12:01,153:INFO:Scoring test/hold-out set
2023-06-17 17:12:01,344:INFO:Visual Rendered Successfully
2023-06-17 17:12:01,425:INFO:plot_model() successfully completed......................................
2023-06-17 17:12:07,996:INFO:Initializing plot_model()
2023-06-17 17:12:07,997:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:12:07,997:INFO:Checking exceptions
2023-06-17 17:12:08,003:INFO:Preloading libraries
2023-06-17 17:12:08,004:INFO:Copying training dataset
2023-06-17 17:12:08,004:INFO:Plot type: calibration
2023-06-17 17:12:08,020:INFO:Scoring test/hold-out set
2023-06-17 17:12:08,207:INFO:Visual Rendered Successfully
2023-06-17 17:12:08,314:INFO:plot_model() successfully completed......................................
2023-06-17 17:39:28,983:INFO:Initializing create_model()
2023-06-17 17:39:28,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:39:28,984:INFO:Checking exceptions
2023-06-17 17:39:29,021:INFO:Importing libraries
2023-06-17 17:39:29,021:INFO:Copying training dataset
2023-06-17 17:39:29,038:INFO:Defining folds
2023-06-17 17:39:29,038:INFO:Declaring metric variables
2023-06-17 17:39:29,043:INFO:Importing untrained model
2023-06-17 17:39:29,048:INFO:Logistic Regression Imported successfully
2023-06-17 17:39:29,059:INFO:Starting cross validation
2023-06-17 17:39:29,061:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:39:37,383:INFO:Calculating mean and std
2023-06-17 17:39:37,384:INFO:Creating metrics dataframe
2023-06-17 17:39:37,392:INFO:Finalizing model
2023-06-17 17:39:38,580:INFO:Uploading results into container
2023-06-17 17:39:38,581:INFO:Uploading model into container now
2023-06-17 17:39:38,599:INFO:_master_model_container: 3
2023-06-17 17:39:38,599:INFO:_display_container: 4
2023-06-17 17:39:38,599:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 17:39:38,600:INFO:create_model() successfully completed......................................
2023-06-17 17:39:38,694:INFO:Initializing calibrate_model()
2023-06-17 17:39:38,694:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:39:38,694:INFO:Checking exceptions
2023-06-17 17:39:38,701:INFO:Preloading libraries
2023-06-17 17:39:38,701:INFO:Preparing display monitor
2023-06-17 17:39:38,738:INFO:Getting model name
2023-06-17 17:39:38,738:INFO:Base model : Logistic Regression
2023-06-17 17:39:38,747:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:39:38,747:INFO:SubProcess create_model() called ==================================
2023-06-17 17:39:38,748:INFO:Initializing create_model()
2023-06-17 17:39:38,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021613522B80>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:39:38,749:INFO:Checking exceptions
2023-06-17 17:39:38,749:INFO:Importing libraries
2023-06-17 17:39:38,749:INFO:Copying training dataset
2023-06-17 17:39:38,770:INFO:Defining folds
2023-06-17 17:39:38,770:INFO:Declaring metric variables
2023-06-17 17:39:38,777:INFO:Importing untrained model
2023-06-17 17:39:38,777:INFO:Declaring custom model
2023-06-17 17:39:38,785:INFO:Logistic Regression Imported successfully
2023-06-17 17:39:38,800:INFO:Starting cross validation
2023-06-17 17:39:38,805:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:39:42,783:INFO:Calculating mean and std
2023-06-17 17:39:42,784:INFO:Creating metrics dataframe
2023-06-17 17:39:42,792:INFO:Finalizing model
2023-06-17 17:39:43,992:INFO:Uploading results into container
2023-06-17 17:39:43,993:INFO:Uploading model into container now
2023-06-17 17:39:43,994:INFO:_master_model_container: 4
2023-06-17 17:39:43,994:INFO:_display_container: 5
2023-06-17 17:39:43,995:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:39:43,995:INFO:create_model() successfully completed......................................
2023-06-17 17:39:44,062:INFO:SubProcess create_model() end ==================================
2023-06-17 17:39:44,086:INFO:_master_model_container: 4
2023-06-17 17:39:44,086:INFO:_display_container: 5
2023-06-17 17:39:44,087:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:39:44,087:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:39:44,178:INFO:Initializing evaluate_model()
2023-06-17 17:39:44,178:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:39:44,202:INFO:Initializing plot_model()
2023-06-17 17:39:44,202:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:44,202:INFO:Checking exceptions
2023-06-17 17:39:44,209:INFO:Preloading libraries
2023-06-17 17:39:44,210:INFO:Copying training dataset
2023-06-17 17:39:44,210:INFO:Plot type: pipeline
2023-06-17 17:39:44,396:INFO:Visual Rendered Successfully
2023-06-17 17:39:44,465:INFO:plot_model() successfully completed......................................
2023-06-17 17:39:44,468:INFO:Initializing plot_model()
2023-06-17 17:39:44,468:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=<function calibrate_model at 0x000002161338B1F0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:44,468:INFO:Checking exceptions
2023-06-17 17:39:54,659:INFO:Initializing plot_model()
2023-06-17 17:39:54,660:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:54,660:INFO:Checking exceptions
2023-06-17 17:39:54,666:INFO:Preloading libraries
2023-06-17 17:39:54,667:INFO:Copying training dataset
2023-06-17 17:39:54,667:INFO:Plot type: calibration
2023-06-17 17:39:54,685:INFO:Scoring test/hold-out set
2023-06-17 17:39:54,884:INFO:Visual Rendered Successfully
2023-06-17 17:39:54,947:INFO:plot_model() successfully completed......................................
2023-06-17 17:39:57,492:INFO:Initializing plot_model()
2023-06-17 17:39:57,493:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:57,493:INFO:Checking exceptions
2023-06-17 17:39:57,499:INFO:Preloading libraries
2023-06-17 17:39:57,501:INFO:Copying training dataset
2023-06-17 17:39:57,501:INFO:Plot type: vc
2023-06-17 17:39:57,501:INFO:Determining param_name
2023-06-17 17:39:59,484:INFO:Initializing plot_model()
2023-06-17 17:39:59,484:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:39:59,484:INFO:Checking exceptions
2023-06-17 17:39:59,491:INFO:Preloading libraries
2023-06-17 17:39:59,492:INFO:Copying training dataset
2023-06-17 17:39:59,492:INFO:Plot type: calibration
2023-06-17 17:39:59,509:INFO:Scoring test/hold-out set
2023-06-17 17:39:59,704:INFO:Visual Rendered Successfully
2023-06-17 17:39:59,767:INFO:plot_model() successfully completed......................................
2023-06-17 17:57:14,500:INFO:Initializing create_model()
2023-06-17 17:57:14,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:57:14,501:INFO:Checking exceptions
2023-06-17 17:57:14,536:INFO:Importing libraries
2023-06-17 17:57:14,537:INFO:Copying training dataset
2023-06-17 17:57:14,556:INFO:Defining folds
2023-06-17 17:57:14,556:INFO:Declaring metric variables
2023-06-17 17:57:14,561:INFO:Importing untrained model
2023-06-17 17:57:14,566:INFO:Logistic Regression Imported successfully
2023-06-17 17:57:14,580:INFO:Starting cross validation
2023-06-17 17:57:14,582:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:57:22,146:INFO:Calculating mean and std
2023-06-17 17:57:22,148:INFO:Creating metrics dataframe
2023-06-17 17:57:22,154:INFO:Finalizing model
2023-06-17 17:57:23,428:INFO:Uploading results into container
2023-06-17 17:57:23,429:INFO:Uploading model into container now
2023-06-17 17:57:23,445:INFO:_master_model_container: 5
2023-06-17 17:57:23,445:INFO:_display_container: 6
2023-06-17 17:57:23,446:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 17:57:23,446:INFO:create_model() successfully completed......................................
2023-06-17 17:57:23,536:INFO:Initializing calibrate_model()
2023-06-17 17:57:23,536:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:57:23,536:INFO:Checking exceptions
2023-06-17 17:57:23,542:INFO:Preloading libraries
2023-06-17 17:57:23,542:INFO:Preparing display monitor
2023-06-17 17:57:23,579:INFO:Getting model name
2023-06-17 17:57:23,580:INFO:Base model : Logistic Regression
2023-06-17 17:57:23,592:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:57:23,593:INFO:SubProcess create_model() called ==================================
2023-06-17 17:57:23,594:INFO:Initializing create_model()
2023-06-17 17:57:23,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021613583400>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:57:23,594:INFO:Checking exceptions
2023-06-17 17:57:23,595:INFO:Importing libraries
2023-06-17 17:57:23,595:INFO:Copying training dataset
2023-06-17 17:57:23,626:INFO:Defining folds
2023-06-17 17:57:23,626:INFO:Declaring metric variables
2023-06-17 17:57:23,633:INFO:Importing untrained model
2023-06-17 17:57:23,634:INFO:Declaring custom model
2023-06-17 17:57:23,639:INFO:Logistic Regression Imported successfully
2023-06-17 17:57:23,656:INFO:Starting cross validation
2023-06-17 17:57:23,658:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:57:27,252:INFO:Calculating mean and std
2023-06-17 17:57:27,255:INFO:Creating metrics dataframe
2023-06-17 17:57:27,262:INFO:Finalizing model
2023-06-17 17:57:28,529:INFO:Uploading results into container
2023-06-17 17:57:28,530:INFO:Uploading model into container now
2023-06-17 17:57:28,530:INFO:_master_model_container: 6
2023-06-17 17:57:28,530:INFO:_display_container: 7
2023-06-17 17:57:28,531:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:57:28,531:INFO:create_model() successfully completed......................................
2023-06-17 17:57:28,602:INFO:SubProcess create_model() end ==================================
2023-06-17 17:57:28,624:INFO:_master_model_container: 6
2023-06-17 17:57:28,624:INFO:_display_container: 7
2023-06-17 17:57:28,625:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:57:28,625:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:57:28,711:INFO:Initializing evaluate_model()
2023-06-17 17:57:28,712:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:57:28,738:INFO:Initializing plot_model()
2023-06-17 17:57:28,738:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:57:28,738:INFO:Checking exceptions
2023-06-17 17:57:28,743:INFO:Preloading libraries
2023-06-17 17:57:28,744:INFO:Copying training dataset
2023-06-17 17:57:28,745:INFO:Plot type: pipeline
2023-06-17 17:57:28,932:INFO:Visual Rendered Successfully
2023-06-17 17:57:29,006:INFO:plot_model() successfully completed......................................
2023-06-17 17:57:29,009:INFO:Initializing predict_model()
2023-06-17 17:57:29,009:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021613849430>)
2023-06-17 17:57:29,010:INFO:Checking exceptions
2023-06-17 17:57:29,010:INFO:Preloading libraries
2023-06-17 17:58:56,177:INFO:Initializing create_model()
2023-06-17 17:58:56,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:58:56,177:INFO:Checking exceptions
2023-06-17 17:58:56,213:INFO:Importing libraries
2023-06-17 17:58:56,213:INFO:Copying training dataset
2023-06-17 17:58:56,232:INFO:Defining folds
2023-06-17 17:58:56,232:INFO:Declaring metric variables
2023-06-17 17:58:56,236:INFO:Importing untrained model
2023-06-17 17:58:56,244:INFO:Logistic Regression Imported successfully
2023-06-17 17:58:56,260:INFO:Starting cross validation
2023-06-17 17:58:56,263:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:58:59,703:INFO:Calculating mean and std
2023-06-17 17:58:59,705:INFO:Creating metrics dataframe
2023-06-17 17:58:59,715:INFO:Finalizing model
2023-06-17 17:59:00,994:INFO:Uploading results into container
2023-06-17 17:59:00,995:INFO:Uploading model into container now
2023-06-17 17:59:01,012:INFO:_master_model_container: 7
2023-06-17 17:59:01,012:INFO:_display_container: 9
2023-06-17 17:59:01,013:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 17:59:01,013:INFO:create_model() successfully completed......................................
2023-06-17 17:59:01,092:INFO:Initializing calibrate_model()
2023-06-17 17:59:01,092:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=sigmoid, calibrate_fold=10, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 17:59:01,092:INFO:Checking exceptions
2023-06-17 17:59:01,100:INFO:Preloading libraries
2023-06-17 17:59:01,100:INFO:Preparing display monitor
2023-06-17 17:59:01,133:INFO:Getting model name
2023-06-17 17:59:01,133:INFO:Base model : Logistic Regression
2023-06-17 17:59:01,144:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 17:59:01,145:INFO:SubProcess create_model() called ==================================
2023-06-17 17:59:01,146:INFO:Initializing create_model()
2023-06-17 17:59:01,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000216137908E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 17:59:01,146:INFO:Checking exceptions
2023-06-17 17:59:01,146:INFO:Importing libraries
2023-06-17 17:59:01,146:INFO:Copying training dataset
2023-06-17 17:59:01,172:INFO:Defining folds
2023-06-17 17:59:01,172:INFO:Declaring metric variables
2023-06-17 17:59:01,180:INFO:Importing untrained model
2023-06-17 17:59:01,180:INFO:Declaring custom model
2023-06-17 17:59:01,187:INFO:Logistic Regression Imported successfully
2023-06-17 17:59:01,198:INFO:Starting cross validation
2023-06-17 17:59:01,200:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 17:59:05,006:INFO:Calculating mean and std
2023-06-17 17:59:05,007:INFO:Creating metrics dataframe
2023-06-17 17:59:05,014:INFO:Finalizing model
2023-06-17 17:59:06,371:INFO:Uploading results into container
2023-06-17 17:59:06,372:INFO:Uploading model into container now
2023-06-17 17:59:06,373:INFO:_master_model_container: 8
2023-06-17 17:59:06,373:INFO:_display_container: 10
2023-06-17 17:59:06,374:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:59:06,375:INFO:create_model() successfully completed......................................
2023-06-17 17:59:06,467:INFO:SubProcess create_model() end ==================================
2023-06-17 17:59:06,492:INFO:_master_model_container: 8
2023-06-17 17:59:06,492:INFO:_display_container: 10
2023-06-17 17:59:06,493:INFO:CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 17:59:06,493:INFO:calibrate_model() successfully completed......................................
2023-06-17 17:59:06,585:INFO:Initializing evaluate_model()
2023-06-17 17:59:06,585:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 17:59:06,612:INFO:Initializing plot_model()
2023-06-17 17:59:06,612:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 17:59:06,612:INFO:Checking exceptions
2023-06-17 17:59:06,620:INFO:Preloading libraries
2023-06-17 17:59:06,621:INFO:Copying training dataset
2023-06-17 17:59:06,621:INFO:Plot type: pipeline
2023-06-17 17:59:06,803:INFO:Visual Rendered Successfully
2023-06-17 17:59:06,876:INFO:plot_model() successfully completed......................................
2023-06-17 17:59:06,880:INFO:Initializing predict_model()
2023-06-17 17:59:06,880:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615688B80>)
2023-06-17 17:59:06,881:INFO:Checking exceptions
2023-06-17 17:59:06,881:INFO:Preloading libraries
2023-06-17 17:59:38,492:INFO:Initializing predict_model()
2023-06-17 17:59:38,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E90D0>)
2023-06-17 17:59:38,493:INFO:Checking exceptions
2023-06-17 17:59:38,493:INFO:Preloading libraries
2023-06-17 17:59:56,102:INFO:Initializing predict_model()
2023-06-17 17:59:56,102:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E90D0>)
2023-06-17 17:59:56,102:INFO:Checking exceptions
2023-06-17 17:59:56,102:INFO:Preloading libraries
2023-06-17 18:00:24,161:INFO:Initializing predict_model()
2023-06-17 18:00:24,161:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E90D0>)
2023-06-17 18:00:24,161:INFO:Checking exceptions
2023-06-17 18:00:24,161:INFO:Preloading libraries
2023-06-17 18:02:15,797:INFO:Initializing plot_model()
2023-06-17 18:02:15,797:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:02:15,797:INFO:Checking exceptions
2023-06-17 18:02:15,803:INFO:Preloading libraries
2023-06-17 18:02:15,804:INFO:Copying training dataset
2023-06-17 18:02:15,804:INFO:Plot type: auc
2023-06-17 18:02:15,950:INFO:Fitting Model
2023-06-17 18:02:15,951:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but SGDClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:02:15,952:INFO:Scoring test/hold-out set
2023-06-17 18:02:16,157:INFO:Visual Rendered Successfully
2023-06-17 18:02:16,234:INFO:plot_model() successfully completed......................................
2023-06-17 18:02:30,465:INFO:Initializing create_model()
2023-06-17 18:02:30,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 18:02:30,465:INFO:Checking exceptions
2023-06-17 18:02:30,498:INFO:Importing libraries
2023-06-17 18:02:30,499:INFO:Copying training dataset
2023-06-17 18:02:30,515:INFO:Defining folds
2023-06-17 18:02:30,515:INFO:Declaring metric variables
2023-06-17 18:02:30,521:INFO:Importing untrained model
2023-06-17 18:02:30,528:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 18:02:30,543:INFO:Starting cross validation
2023-06-17 18:02:30,547:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 18:02:31,119:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:31,140:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:31,149:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:31,210:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:32,517:WARNING:c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Program Files\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 18:02:34,195:INFO:Calculating mean and std
2023-06-17 18:02:34,196:INFO:Creating metrics dataframe
2023-06-17 18:02:34,205:INFO:Finalizing model
2023-06-17 18:02:35,408:INFO:Uploading results into container
2023-06-17 18:02:35,409:INFO:Uploading model into container now
2023-06-17 18:02:35,425:INFO:_master_model_container: 9
2023-06-17 18:02:35,426:INFO:_display_container: 15
2023-06-17 18:02:35,427:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 18:02:35,427:INFO:create_model() successfully completed......................................
2023-06-17 18:02:35,514:INFO:Initializing calibrate_model()
2023-06-17 18:02:35,514:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 18:02:35,514:INFO:Checking exceptions
2023-06-17 18:02:35,520:INFO:Preloading libraries
2023-06-17 18:02:35,520:INFO:Preparing display monitor
2023-06-17 18:02:35,556:INFO:Getting model name
2023-06-17 18:02:35,556:INFO:Base model : SVM - Linear Kernel
2023-06-17 18:02:35,570:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 18:02:35,570:INFO:SubProcess create_model() called ==================================
2023-06-17 18:02:35,572:INFO:Initializing create_model()
2023-06-17 18:02:35,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000216137CFF40>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 18:02:35,573:INFO:Checking exceptions
2023-06-17 18:02:35,573:INFO:Importing libraries
2023-06-17 18:02:35,573:INFO:Copying training dataset
2023-06-17 18:02:35,595:INFO:Defining folds
2023-06-17 18:02:35,595:INFO:Declaring metric variables
2023-06-17 18:02:35,607:INFO:Importing untrained model
2023-06-17 18:02:35,608:INFO:Declaring custom model
2023-06-17 18:02:35,621:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 18:02:35,635:INFO:Starting cross validation
2023-06-17 18:02:35,637:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 18:02:39,384:INFO:Calculating mean and std
2023-06-17 18:02:39,385:INFO:Creating metrics dataframe
2023-06-17 18:02:39,394:INFO:Finalizing model
2023-06-17 18:02:40,603:INFO:Uploading results into container
2023-06-17 18:02:40,603:INFO:Uploading model into container now
2023-06-17 18:02:40,603:INFO:_master_model_container: 10
2023-06-17 18:02:40,604:INFO:_display_container: 16
2023-06-17 18:02:40,605:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 18:02:40,605:INFO:create_model() successfully completed......................................
2023-06-17 18:02:40,676:INFO:SubProcess create_model() end ==================================
2023-06-17 18:02:40,699:INFO:_master_model_container: 10
2023-06-17 18:02:40,699:INFO:_display_container: 16
2023-06-17 18:02:40,700:INFO:CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 18:02:40,700:INFO:calibrate_model() successfully completed......................................
2023-06-17 18:02:40,782:INFO:Initializing evaluate_model()
2023-06-17 18:02:40,782:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 18:02:40,809:INFO:Initializing plot_model()
2023-06-17 18:02:40,809:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:02:40,809:INFO:Checking exceptions
2023-06-17 18:02:40,816:INFO:Preloading libraries
2023-06-17 18:02:40,816:INFO:Copying training dataset
2023-06-17 18:02:40,816:INFO:Plot type: pipeline
2023-06-17 18:02:40,990:INFO:Visual Rendered Successfully
2023-06-17 18:02:41,061:INFO:plot_model() successfully completed......................................
2023-06-17 18:03:02,670:INFO:Initializing predict_model()
2023-06-17 18:03:02,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216157063A0>)
2023-06-17 18:03:02,670:INFO:Checking exceptions
2023-06-17 18:03:02,670:INFO:Preloading libraries
2023-06-17 18:03:06,465:INFO:Initializing predict_model()
2023-06-17 18:03:06,465:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706B80>)
2023-06-17 18:03:06,465:INFO:Checking exceptions
2023-06-17 18:03:06,466:INFO:Preloading libraries
2023-06-17 18:03:14,977:INFO:Initializing predict_model()
2023-06-17 18:03:14,977:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706CA0>)
2023-06-17 18:03:14,977:INFO:Checking exceptions
2023-06-17 18:03:14,977:INFO:Preloading libraries
2023-06-17 18:03:22,336:INFO:Initializing predict_model()
2023-06-17 18:03:22,337:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706310>)
2023-06-17 18:03:22,337:INFO:Checking exceptions
2023-06-17 18:03:22,337:INFO:Preloading libraries
2023-06-17 18:03:33,353:INFO:Initializing predict_model()
2023-06-17 18:03:33,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706DC0>)
2023-06-17 18:03:33,353:INFO:Checking exceptions
2023-06-17 18:03:33,354:INFO:Preloading libraries
2023-06-17 18:03:37,157:INFO:Initializing predict_model()
2023-06-17 18:03:37,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706550>)
2023-06-17 18:03:37,158:INFO:Checking exceptions
2023-06-17 18:03:37,158:INFO:Preloading libraries
2023-06-17 18:03:43,429:INFO:Initializing predict_model()
2023-06-17 18:03:43,429:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706040>)
2023-06-17 18:03:43,429:INFO:Checking exceptions
2023-06-17 18:03:43,429:INFO:Preloading libraries
2023-06-17 18:03:50,114:INFO:Initializing predict_model()
2023-06-17 18:03:50,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706310>)
2023-06-17 18:03:50,115:INFO:Checking exceptions
2023-06-17 18:03:50,115:INFO:Preloading libraries
2023-06-17 18:04:07,050:INFO:Initializing predict_model()
2023-06-17 18:04:07,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=420, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E9EE0>)
2023-06-17 18:04:07,050:INFO:Checking exceptions
2023-06-17 18:04:07,051:INFO:Preloading libraries
2023-06-17 18:04:07,287:INFO:Initializing predict_model()
2023-06-17 18:04:07,287:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=LogisticRegression(C=1.0,
                                                         class_weight=None,
                                                         dual=False,
                                                         fit_intercept=True,
                                                         intercept_scaling=1,
                                                         l1_ratio=None,
                                                         max_iter=1000,
                                                         multi_class='auto',
                                                         n_jobs=None,
                                                         penalty='l2',
                                                         random_state=420,
                                                         solver='lbfgs',
                                                         tol=0.0001, verbose=0,
                                                         warm_start=False),
                       cv=10, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156E9EE0>)
2023-06-17 18:04:07,287:INFO:Checking exceptions
2023-06-17 18:04:07,287:INFO:Preloading libraries
2023-06-17 18:04:21,607:INFO:Initializing predict_model()
2023-06-17 18:04:21,607:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706550>)
2023-06-17 18:04:21,607:INFO:Checking exceptions
2023-06-17 18:04:21,608:INFO:Preloading libraries
2023-06-17 18:04:21,927:INFO:Initializing predict_model()
2023-06-17 18:04:21,927:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002161379F820>)
2023-06-17 18:04:21,928:INFO:Checking exceptions
2023-06-17 18:04:21,928:INFO:Preloading libraries
2023-06-17 18:05:19,413:INFO:Initializing create_model()
2023-06-17 18:05:19,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 18:05:19,414:INFO:Checking exceptions
2023-06-17 18:05:19,448:INFO:Importing libraries
2023-06-17 18:05:19,448:INFO:Copying training dataset
2023-06-17 18:05:19,466:INFO:Defining folds
2023-06-17 18:05:19,467:INFO:Declaring metric variables
2023-06-17 18:05:19,472:INFO:Importing untrained model
2023-06-17 18:05:19,472:INFO:Declaring custom model
2023-06-17 18:05:19,481:INFO:Random Forest Classifier Imported successfully
2023-06-17 18:05:19,492:INFO:Starting cross validation
2023-06-17 18:05:19,496:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 18:05:23,278:INFO:Calculating mean and std
2023-06-17 18:05:23,279:INFO:Creating metrics dataframe
2023-06-17 18:05:23,288:INFO:Finalizing model
2023-06-17 18:05:24,502:INFO:Uploading results into container
2023-06-17 18:05:24,503:INFO:Uploading model into container now
2023-06-17 18:05:24,519:INFO:_master_model_container: 11
2023-06-17 18:05:24,519:INFO:_display_container: 29
2023-06-17 18:05:24,519:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False)
2023-06-17 18:05:24,520:INFO:create_model() successfully completed......................................
2023-06-17 18:05:24,600:INFO:Initializing calibrate_model()
2023-06-17 18:05:24,600:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2023-06-17 18:05:24,600:INFO:Checking exceptions
2023-06-17 18:05:24,607:INFO:Preloading libraries
2023-06-17 18:05:24,607:INFO:Preparing display monitor
2023-06-17 18:05:24,646:INFO:Getting model name
2023-06-17 18:05:24,647:INFO:Base model : Random Forest Classifier
2023-06-17 18:05:24,658:INFO:Importing untrained CalibratedClassifierCV
2023-06-17 18:05:24,658:INFO:SubProcess create_model() called ==================================
2023-06-17 18:05:24,660:INFO:Initializing create_model()
2023-06-17 18:05:24,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000216133F5220>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 18:05:24,661:INFO:Checking exceptions
2023-06-17 18:05:24,661:INFO:Importing libraries
2023-06-17 18:05:24,661:INFO:Copying training dataset
2023-06-17 18:05:24,680:INFO:Defining folds
2023-06-17 18:05:24,680:INFO:Declaring metric variables
2023-06-17 18:05:24,686:INFO:Importing untrained model
2023-06-17 18:05:24,686:INFO:Declaring custom model
2023-06-17 18:05:24,692:INFO:Random Forest Classifier Imported successfully
2023-06-17 18:05:24,707:INFO:Starting cross validation
2023-06-17 18:05:24,711:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 18:05:28,888:INFO:Calculating mean and std
2023-06-17 18:05:28,890:INFO:Creating metrics dataframe
2023-06-17 18:05:28,897:INFO:Finalizing model
2023-06-17 18:05:30,132:INFO:Uploading results into container
2023-06-17 18:05:30,132:INFO:Uploading model into container now
2023-06-17 18:05:30,133:INFO:_master_model_container: 12
2023-06-17 18:05:30,133:INFO:_display_container: 30
2023-06-17 18:05:30,134:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 18:05:30,134:INFO:create_model() successfully completed......................................
2023-06-17 18:05:30,201:INFO:SubProcess create_model() end ==================================
2023-06-17 18:05:30,227:INFO:_master_model_container: 12
2023-06-17 18:05:30,227:INFO:_display_container: 30
2023-06-17 18:05:30,229:INFO:CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None)
2023-06-17 18:05:30,229:INFO:calibrate_model() successfully completed......................................
2023-06-17 18:05:30,334:INFO:Initializing evaluate_model()
2023-06-17 18:05:30,334:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-17 18:05:30,359:INFO:Initializing plot_model()
2023-06-17 18:05:30,359:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:05:30,359:INFO:Checking exceptions
2023-06-17 18:05:30,366:INFO:Preloading libraries
2023-06-17 18:05:30,376:INFO:Copying training dataset
2023-06-17 18:05:30,376:INFO:Plot type: pipeline
2023-06-17 18:05:30,546:INFO:Visual Rendered Successfully
2023-06-17 18:05:30,617:INFO:plot_model() successfully completed......................................
2023-06-17 18:05:37,605:INFO:Initializing predict_model()
2023-06-17 18:05:37,605:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A5AF0>)
2023-06-17 18:05:37,605:INFO:Checking exceptions
2023-06-17 18:05:37,605:INFO:Preloading libraries
2023-06-17 18:05:37,837:INFO:Initializing predict_model()
2023-06-17 18:05:37,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002161567CF70>)
2023-06-17 18:05:37,838:INFO:Checking exceptions
2023-06-17 18:05:37,838:INFO:Preloading libraries
2023-06-17 18:07:10,659:INFO:Initializing predict_model()
2023-06-17 18:07:10,659:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A5A60>)
2023-06-17 18:07:10,659:INFO:Checking exceptions
2023-06-17 18:07:10,659:INFO:Preloading libraries
2023-06-17 18:07:10,990:INFO:Initializing predict_model()
2023-06-17 18:07:10,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021613799A60>)
2023-06-17 18:07:10,990:INFO:Checking exceptions
2023-06-17 18:07:10,991:INFO:Preloading libraries
2023-06-17 18:07:11,358:INFO:Initializing plot_model()
2023-06-17 18:07:11,358:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:07:11,358:INFO:Checking exceptions
2023-06-17 18:07:11,367:INFO:Preloading libraries
2023-06-17 18:07:11,369:INFO:Copying training dataset
2023-06-17 18:07:11,369:INFO:Plot type: calibration
2023-06-17 18:07:11,384:INFO:Scoring test/hold-out set
2023-06-17 18:07:11,599:INFO:Visual Rendered Successfully
2023-06-17 18:07:11,677:INFO:plot_model() successfully completed......................................
2023-06-17 18:07:22,420:INFO:Initializing predict_model()
2023-06-17 18:07:22,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A5940>)
2023-06-17 18:07:22,420:INFO:Checking exceptions
2023-06-17 18:07:22,421:INFO:Preloading libraries
2023-06-17 18:07:22,677:INFO:Initializing predict_model()
2023-06-17 18:07:22,677:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021614958820>)
2023-06-17 18:07:22,678:INFO:Checking exceptions
2023-06-17 18:07:22,678:INFO:Preloading libraries
2023-06-17 18:07:23,113:INFO:Initializing plot_model()
2023-06-17 18:07:23,113:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:07:23,114:INFO:Checking exceptions
2023-06-17 18:07:23,123:INFO:Preloading libraries
2023-06-17 18:07:23,126:INFO:Copying training dataset
2023-06-17 18:07:23,126:INFO:Plot type: calibration
2023-06-17 18:07:23,151:INFO:Scoring test/hold-out set
2023-06-17 18:07:23,368:INFO:Visual Rendered Successfully
2023-06-17 18:07:23,442:INFO:plot_model() successfully completed......................................
2023-06-17 18:07:23,443:INFO:Initializing plot_model()
2023-06-17 18:07:23,444:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:07:23,444:INFO:Checking exceptions
2023-06-17 18:07:23,451:INFO:Preloading libraries
2023-06-17 18:07:23,459:INFO:Copying training dataset
2023-06-17 18:07:23,459:INFO:Plot type: calibration
2023-06-17 18:07:23,476:INFO:Scoring test/hold-out set
2023-06-17 18:07:23,770:INFO:Visual Rendered Successfully
2023-06-17 18:07:23,837:INFO:plot_model() successfully completed......................................
2023-06-17 18:07:50,407:INFO:Initializing predict_model()
2023-06-17 18:07:50,408:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A53A0>)
2023-06-17 18:07:50,408:INFO:Checking exceptions
2023-06-17 18:07:50,408:INFO:Preloading libraries
2023-06-17 18:07:50,658:INFO:Initializing predict_model()
2023-06-17 18:07:50,658:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A53A0>)
2023-06-17 18:07:50,658:INFO:Checking exceptions
2023-06-17 18:07:50,658:INFO:Preloading libraries
2023-06-17 18:07:50,881:INFO:Initializing plot_model()
2023-06-17 18:07:50,881:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:07:50,882:INFO:Checking exceptions
2023-06-17 18:08:07,292:INFO:Initializing predict_model()
2023-06-17 18:08:07,292:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002161575A1F0>)
2023-06-17 18:08:07,292:INFO:Checking exceptions
2023-06-17 18:08:07,292:INFO:Preloading libraries
2023-06-17 18:08:07,489:INFO:Initializing predict_model()
2023-06-17 18:08:07,489:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216156A5B80>)
2023-06-17 18:08:07,489:INFO:Checking exceptions
2023-06-17 18:08:07,489:INFO:Preloading libraries
2023-06-17 18:08:41,875:INFO:Initializing plot_model()
2023-06-17 18:08:41,876:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:08:41,876:INFO:Checking exceptions
2023-06-17 18:08:41,881:INFO:Preloading libraries
2023-06-17 18:08:41,891:INFO:Copying training dataset
2023-06-17 18:08:41,891:INFO:Plot type: lift
2023-06-17 18:08:41,891:INFO:Generating predictions / predict_proba on X_test
2023-06-17 18:08:42,466:INFO:Visual Rendered Successfully
2023-06-17 18:08:42,561:INFO:plot_model() successfully completed......................................
2023-06-17 18:08:50,860:INFO:Initializing plot_model()
2023-06-17 18:08:50,860:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:08:50,860:INFO:Checking exceptions
2023-06-17 18:08:50,866:INFO:Preloading libraries
2023-06-17 18:08:50,875:INFO:Copying training dataset
2023-06-17 18:08:50,875:INFO:Plot type: boundary
2023-06-17 18:08:50,969:INFO:Fitting StandardScaler()
2023-06-17 18:08:50,989:INFO:Fitting PCA()
2023-06-17 18:08:51,174:INFO:Fitting Model
2023-06-17 18:08:55,531:WARNING:c:\Program Files\Python39\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2023-06-17 18:08:56,849:INFO:Visual Rendered Successfully
2023-06-17 18:08:56,969:INFO:plot_model() successfully completed......................................
2023-06-17 18:09:13,317:INFO:Initializing plot_model()
2023-06-17 18:09:13,317:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:13,317:INFO:Checking exceptions
2023-06-17 18:09:17,109:INFO:Initializing plot_model()
2023-06-17 18:09:17,110:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:17,110:INFO:Checking exceptions
2023-06-17 18:09:27,749:INFO:Initializing plot_model()
2023-06-17 18:09:27,749:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:27,750:INFO:Checking exceptions
2023-06-17 18:09:27,757:INFO:Preloading libraries
2023-06-17 18:09:27,767:INFO:Copying training dataset
2023-06-17 18:09:27,767:INFO:Plot type: calibration
2023-06-17 18:09:27,783:INFO:Scoring test/hold-out set
2023-06-17 18:09:28,037:INFO:Visual Rendered Successfully
2023-06-17 18:09:28,103:INFO:plot_model() successfully completed......................................
2023-06-17 18:09:31,582:INFO:Initializing plot_model()
2023-06-17 18:09:31,582:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:31,582:INFO:Checking exceptions
2023-06-17 18:09:31,589:INFO:Preloading libraries
2023-06-17 18:09:31,598:INFO:Copying training dataset
2023-06-17 18:09:31,598:INFO:Plot type: error
2023-06-17 18:09:31,740:INFO:Fitting Model
2023-06-17 18:09:31,740:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:09:31,741:INFO:Scoring test/hold-out set
2023-06-17 18:09:32,044:INFO:Visual Rendered Successfully
2023-06-17 18:09:32,170:INFO:plot_model() successfully completed......................................
2023-06-17 18:09:39,951:INFO:Initializing plot_model()
2023-06-17 18:09:39,951:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:39,951:INFO:Checking exceptions
2023-06-17 18:09:39,958:INFO:Preloading libraries
2023-06-17 18:09:39,967:INFO:Copying training dataset
2023-06-17 18:09:39,967:INFO:Plot type: pr
2023-06-17 18:09:40,100:INFO:Fitting Model
2023-06-17 18:09:40,101:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:09:40,102:INFO:Scoring test/hold-out set
2023-06-17 18:09:40,417:INFO:Visual Rendered Successfully
2023-06-17 18:09:40,502:INFO:plot_model() successfully completed......................................
2023-06-17 18:09:42,916:INFO:Initializing plot_model()
2023-06-17 18:09:42,916:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:09:42,917:INFO:Checking exceptions
2023-06-17 18:09:42,923:INFO:Preloading libraries
2023-06-17 18:09:42,932:INFO:Copying training dataset
2023-06-17 18:09:42,932:INFO:Plot type: auc
2023-06-17 18:09:43,063:INFO:Fitting Model
2023-06-17 18:09:43,064:WARNING:C:\Users\wyver\AppData\Roaming\Python\Python39\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-17 18:09:43,065:INFO:Scoring test/hold-out set
2023-06-17 18:09:43,394:INFO:Visual Rendered Successfully
2023-06-17 18:09:43,468:INFO:plot_model() successfully completed......................................
2023-06-17 18:38:11,345:INFO:Initializing predict_model()
2023-06-17 18:38:11,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=420, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002167E461F70>)
2023-06-17 18:38:11,346:INFO:Checking exceptions
2023-06-17 18:38:11,346:INFO:Preloading libraries
2023-06-17 18:38:11,557:INFO:Initializing predict_model()
2023-06-17 18:38:11,557:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=SGDClassifier(alpha=0.0001, average=False,
                                                    class_weight=None,
                                                    early_stopping=False,
                                                    epsilon=0.1, eta0=0.001,
                                                    fit_intercept=True,
                                                    l1_ratio=0.15,
                                                    learning_rate='optimal',
                                                    loss='hinge', max_iter=1000,
                                                    n_iter_no_change=5,
                                                    n_jobs=-1, penalty='l2',
                                                    power_t=0.5,
                                                    random_state=420,
                                                    shuffle=True, tol=0.001,
                                                    validation_fraction=0.1,
                                                    verbose=0,
                                                    warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002167E461F70>)
2023-06-17 18:38:11,557:INFO:Checking exceptions
2023-06-17 18:38:11,557:INFO:Preloading libraries
2023-06-17 18:38:44,514:INFO:Initializing predict_model()
2023-06-17 18:38:44,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CD430>)
2023-06-17 18:38:44,514:INFO:Checking exceptions
2023-06-17 18:38:44,514:INFO:Preloading libraries
2023-06-17 18:38:44,765:INFO:Initializing predict_model()
2023-06-17 18:38:44,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CA0D0>)
2023-06-17 18:38:44,765:INFO:Checking exceptions
2023-06-17 18:38:44,765:INFO:Preloading libraries
2023-06-17 18:38:57,823:INFO:Initializing predict_model()
2023-06-17 18:38:57,823:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216159CD9D0>)
2023-06-17 18:38:57,823:INFO:Checking exceptions
2023-06-17 18:38:57,823:INFO:Preloading libraries
2023-06-17 18:38:58,059:INFO:Initializing predict_model()
2023-06-17 18:38:58,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000216137AB310>)
2023-06-17 18:38:58,059:INFO:Checking exceptions
2023-06-17 18:38:58,059:INFO:Preloading libraries
2023-06-17 18:38:58,507:INFO:Initializing plot_model()
2023-06-17 18:38:58,507:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:38:58,508:INFO:Checking exceptions
2023-06-17 18:38:58,516:INFO:Preloading libraries
2023-06-17 18:38:58,519:INFO:Copying training dataset
2023-06-17 18:38:58,520:INFO:Plot type: calibration
2023-06-17 18:38:58,536:INFO:Scoring test/hold-out set
2023-06-17 18:38:58,758:INFO:Visual Rendered Successfully
2023-06-17 18:38:58,825:INFO:plot_model() successfully completed......................................
2023-06-17 18:38:58,827:INFO:Initializing plot_model()
2023-06-17 18:38:58,827:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:38:58,827:INFO:Checking exceptions
2023-06-17 18:38:58,835:INFO:Preloading libraries
2023-06-17 18:38:58,843:INFO:Copying training dataset
2023-06-17 18:38:58,843:INFO:Plot type: calibration
2023-06-17 18:38:58,864:INFO:Scoring test/hold-out set
2023-06-17 18:38:59,148:INFO:Visual Rendered Successfully
2023-06-17 18:38:59,215:INFO:plot_model() successfully completed......................................
2023-06-17 18:39:35,349:INFO:Initializing predict_model()
2023-06-17 18:39:35,349:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615A5EAF0>)
2023-06-17 18:39:35,349:INFO:Checking exceptions
2023-06-17 18:39:35,349:INFO:Preloading libraries
2023-06-17 18:39:35,662:INFO:Initializing predict_model()
2023-06-17 18:39:35,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021615706790>)
2023-06-17 18:39:35,662:INFO:Checking exceptions
2023-06-17 18:39:35,662:INFO:Preloading libraries
2023-06-17 18:39:36,189:INFO:Initializing plot_model()
2023-06-17 18:39:36,189:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=2, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=20, n_jobs=None, oob_score=False,
                       random_state=420, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:39:36,189:INFO:Checking exceptions
2023-06-17 18:39:36,199:INFO:Preloading libraries
2023-06-17 18:39:36,202:INFO:Copying training dataset
2023-06-17 18:39:36,202:INFO:Plot type: calibration
2023-06-17 18:39:36,219:INFO:Scoring test/hold-out set
2023-06-17 18:39:36,442:INFO:Visual Rendered Successfully
2023-06-17 18:39:36,518:INFO:plot_model() successfully completed......................................
2023-06-17 18:39:36,520:INFO:Initializing plot_model()
2023-06-17 18:39:36,520:INFO:plot_model(plot=calibration, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CalibratedClassifierCV(base_estimator=RandomForestClassifier(bootstrap=True,
                                                             ccp_alpha=0.0,
                                                             class_weight=None,
                                                             criterion='gini',
                                                             max_depth=2,
                                                             max_features='sqrt',
                                                             max_leaf_nodes=None,
                                                             max_samples=None,
                                                             min_impurity_decrease=0.0,
                                                             min_samples_leaf=1,
                                                             min_samples_split=2,
                                                             min_weight_fraction_leaf=0.0,
                                                             n_estimators=20,
                                                             n_jobs=None,
                                                             oob_score=False,
                                                             random_state=420,
                                                             verbose=0,
                                                             warm_start=False),
                       cv=5, ensemble=True, method='sigmoid', n_jobs=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002160ECE6910>, system=True)
2023-06-17 18:39:36,520:INFO:Checking exceptions
2023-06-17 18:39:36,528:INFO:Preloading libraries
2023-06-17 18:39:36,537:INFO:Copying training dataset
2023-06-17 18:39:36,537:INFO:Plot type: calibration
2023-06-17 18:39:36,559:INFO:Scoring test/hold-out set
2023-06-17 18:39:36,853:INFO:Visual Rendered Successfully
2023-06-17 18:39:36,922:INFO:plot_model() successfully completed......................................
